<!DOCTYPE html>
<html class="account-html-custom">
<head>
    <!-- Meta Tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>@ViewData["FullName"]</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Home-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_ManageHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Manage Settings
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <!-- Manage -->
            @Html.Partial("_ManageIndex")
            <!-- Footer -->
            @Html.Partial("_ManageFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <div class="modal fade" id="deleteAllTrasactionsModalConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete Trasactions</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete all Trasactions?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="confirmDeleteAllTrasactions" onclick="confirmDeleteAllTrasactionsOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button class="btn btn-primary" id="confirmDeleteAllTrasactionsClose" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteAllTrasactionsModalLoading" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Deleting Trasactions ...</h4>
                </div>
                <div class="modal-body">
                    <div class="progress">
                        <div class="bar progress-bar progress-bar-danger progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts JavaScripts -->
    @Scripts.Render("~/Scripts/Home-js")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var cboCompany = new wijmo.input.ComboBox('#defaultCompany');
        var cboBranch = new wijmo.input.ComboBox('#defaultBranch');
        var cboIncomeAccount = new wijmo.input.ComboBox('#defaultIncomeAccount');
        var cboSupplierAvancesAccount = new wijmo.input.ComboBox('#defaultSupplierAdvancesAccount');
        var cboCustomerAdvancesAccount = new wijmo.input.ComboBox('#defaultCustomerAdvancesAccount');
        var cboInventoryType = new wijmo.input.ComboBox('#cboInventoryType');
        var cboDiscounts = new wijmo.input.ComboBox('#cboDiscounts');

        var userForms;
        var userFormGrid;

        var isCompanyChanged = false;
        var branchSelectedValue = 0;

        var userDefaultBranchesCollectionView;
        var userDefaultBranchesFlexGrid;

        var cboUserFormShowNumberOfRows = new wijmo.input.ComboBox('#cboUserFormShowNumberOfRows');
        var btnMoveToFirstPageGridUserForm = document.getElementById('btnMoveToFirstPageGridUserForm');
        var btnMoveToPreviousPageGridUserForm = document.getElementById('btnMoveToPreviousPageGridUserForm');
        var btnMoveToNextPageGridUserForm = document.getElementById('btnMoveToNextPageGridUserForm');
        var btnMoveToLastPageGridUserForm = document.getElementById('btnMoveToLastPageGridUserForm');
        var btnCurrentPageGridUserForm = document.getElementById('btnCurrentPageGridUserForm');

        var cboUserDefaultBranchesShowNumberOfRows = new wijmo.input.ComboBox('#cboUserDefaultBranchesShowNumberOfRows');
        var btnMoveToFirstPageGridUserDefaultBranches = document.getElementById('btnMoveToFirstPageGridUserDefaultBranches');
        var btnMoveToPreviousPageGridUserDefaultBranches = document.getElementById('btnMoveToPreviousPageGridUserDefaultBranches');
        var btnMoveToNextPageGridUserDefaultBranches = document.getElementById('btnMoveToNextPageGridUserDefaultBranches');
        var btnMoveToLastPageGridUserDefaultBranches = document.getElementById('btnMoveToLastPageGridUserDefaultBranches');
        var btnCurrentPageGridUserDefaultBranches = document.getElementById('btnCurrentPageGridUserDefaultBranches');

        // ===============
        // Current Company
        // ===============
        function getCurrentCompany() {
            var companies = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/manage/current/user/dropdown/list/company',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            companies.push({
                                Id: results[i]["Id"],
                                Company: results[i]["Company"]
                            });
                        }
                    }

                    cboCompany.dispose();
                    cboCompany = new wijmo.input.ComboBox('#defaultCompany', {
                        isEditable: false,
                        placeholder: "Select Company",
                        itemsSource: companies,
                        displayMemberPath: "Company",
                        selectedValuePath: "Id",
                        onSelectedIndexChanged: function () {
                            isCompanyChanged = true;
                            getCurrentBranch();
                        }
                    });

                    getCurrentBranch();
                }
            });
        }

        // ==============
        // Current Branch
        // ==============
        function getCurrentBranch() {
            var branches = new wijmo.collections.ObservableArray;
            if (cboCompany.selectedValue != null) {
                $.ajax({
                    url: '/api/manage/current/user/dropdown/list/branch/' + cboCompany.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                branches.push({
                                    Id: results[i]["Id"],
                                    Branch: results[i]["Branch"]
                                });
                            }
                        }

                        cboBranch.dispose();
                        cboBranch = new wijmo.input.ComboBox('#defaultBranch', {
                            disabled: false,
                            isEditable: false,
                            itemsSource: branches,
                            displayMemberPath: "Branch",
                            selectedValuePath: "Id",
                            selectedValue: branchSelectedValue
                        });

                        if (!isCompanyChanged) {
                            getCurrentAccounts();
                        }
                    }
                });
            }
        }

        // ================
        // Current Accounts
        // ================
        function getCurrentAccounts() {
            var accounts = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/manage/current/user/dropdown/list/account',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accounts.push({
                                Id: results[i]["Id"],
                                Account: results[i]["Account"]
                            });
                        }
                    }

                    cboIncomeAccount.dispose();
                    cboIncomeAccount = new wijmo.input.ComboBox('#defaultIncomeAccount', {
                        isEditable: true,
                        placeholder: "Account",
                        itemsSource: accounts,
                        displayMemberPath: "Account",
                        selectedValuePath: "Id"
                    });

                    cboSupplierAvancesAccount.dispose();
                    cboSupplierAvancesAccount = new wijmo.input.ComboBox('#defaultSupplierAdvancesAccount', {
                        isEditable: true,
                        placeholder: "Account",
                        itemsSource: accounts,
                        displayMemberPath: "Account",
                        selectedValuePath: "Id"
                    });

                    cboCustomerAdvancesAccount.dispose();
                    cboCustomerAdvancesAccount = new wijmo.input.ComboBox('#defaultCustomerAdvancesAccount', {
                        isEditable: true,
                        placeholder: "Account",
                        itemsSource: accounts,
                        displayMemberPath: "Account",
                        selectedValuePath: "Id"
                    });

                    getCurrentInventoryType();
                }
            });
        }

        // ======================
        // Current Inventory Type
        // ======================
        function getCurrentInventoryType() {
            var inventoryTypesObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/manage/current/user/dropdown/list/inventoryType',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    var isInventoryDisabled = false;
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            isInventoryDisabled = results[i]["IsDisabled"];

                            inventoryTypesObservableArray.push({
                                InventoryType: results[i]["InventoryType"],
                                IsDisabled: results[i]["IsDisabled"]
                            });
                        }
                    }

                    var disabled = false;
                    if (isInventoryDisabled) {
                        disabled = true;
                    }

                    cboInventoryType.dispose();
                    cboInventoryType = new wijmo.input.ComboBox('#cboInventoryType', {
                        disabled: disabled,
                        itemsSource: inventoryTypesObservableArray,
                        displayMemberPath: "InventoryType",
                        selectedValuePath: "InventoryType",
                        placeholder: "Select Inventory Type"
                    });

                    getCurrentDiscount();
                }
            });
        }

        // ================
        // Current Discount
        // ================
        function getCurrentDiscount() {
            var discountsObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/manage/current/user/dropdown/list/discount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            discountsObservableArray.push({
                                Id: results[i]["Id"],
                                Discount: results[i]["Discount"]
                            });
                        }

                        cboDiscounts.dispose();
                        cboDiscounts = new wijmo.input.ComboBox('#cboDiscounts', {
                            isEditable: false,
                            placeholder: "Select Discount",
                            itemsSource: discountsObservableArray,
                            displayMemberPath: "Discount",
                            selectedValuePath: "Id"
                        });
                    }

                    getCurrentLoggedInUser();
                }
            });
        }

        // ================
        // Get Current User
        // ================
        function getCurrentLoggedInUser() {
            NProgress.start();
            $.ajax({
                url: '/api/manage/current/user/detail',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results != null) {
                        document.getElementById("userDetail_Username").value = results.UserName;
                        document.getElementById("userDetail_Fullname").value = results.FullName;
                        cboCompany.selectedValue = results.CompanyId;
                        cboBranch.selectedValue = results.BranchId;
                        branchSelectedValue = results.BranchId;
                        cboIncomeAccount.selectedValue = results.IncomeAccountId;
                        cboSupplierAvancesAccount.selectedValue = results.SupplierAdvancesAccountId;
                        cboCustomerAdvancesAccount.selectedValue = results.CustomerAdvancesAccountId;
                        cboInventoryType.selectedValue = results.InventoryType;
                        cboDiscounts.selectedValue = results.DefaultSalesInvoiceDiscountId;
                        document.getElementById("defaultOfficialReceiptName").value = results.OfficialReceiptName;
                        document.getElementById("defaultSalesInvoiceName").value = results.SalesInvoiceName;
                        document.getElementById("defaultIncludeCostInStockReport").checked = results.IsIncludeCostStockReports;

                        createCboShowRows();
                        createCurrentUserFormFlexGrid();
                        createCurrentUserBranchesFlexGrid();
                    } else {
                        confirm("No Data");
                        window.location = '/Software/Users';
                    }
                }
            });
        }

        // ===============
        // Show Rows Table
        // ===============
        function createCboShowRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboUserFormShowNumberOfRows.dispose();
            cboUserFormShowNumberOfRows = new wijmo.input.ComboBox('#cboUserFormShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboUserFormShowNumberOfRows.selectedValue;
                        userForms.pageSize = parseInt(numberOfRows);
                        userForms.refresh();
                        userFormGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });

            cboUserDefaultBranchesShowNumberOfRows.dispose();
            cboUserDefaultBranchesShowNumberOfRows = new wijmo.input.ComboBox('#cboUserDefaultBranchesShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboUserDefaultBranchesShowNumberOfRows.selectedValue;
                        userDefaultBranchesCollectionView.pageSize = parseInt(numberOfRows);
                        userDefaultBranchesCollectionView.refresh();
                        userDefaultBranchesFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });
        }

        // ===========
        // Lock button
        // ===========
        function btnUserDetailLock_OnClick() {
            var isValid = true;
            $('.requiredUser').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnUserDetailLock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $('#btnUserDetailLock').prop('disabled', true);
                $('#btnUserDetailUnLock').prop('disabled', true);
                $('#btnUserDetailClose').prop('disabled', true);

                var userObject = new Object();
                userObject.FullName = document.getElementById('userDetail_Fullname').value;
                userObject.CompanyId = cboCompany.selectedValue;
                userObject.BranchId = cboBranch.selectedValue;
                userObject.IncomeAccountId = cboIncomeAccount.selectedValue;
                userObject.SupplierAdvancesAccountId = cboSupplierAvancesAccount.selectedValue;
                userObject.CustomerAdvancesAccountId = cboCustomerAdvancesAccount.selectedValue;
                userObject.OfficialReceiptName = document.getElementById("defaultOfficialReceiptName").value;
                userObject.InventoryType = cboInventoryType.selectedValue;
                userObject.DefaultSalesInvoiceDiscountId = cboDiscounts.selectedValue;
                userObject.SalesInvoiceName = document.getElementById("defaultSalesInvoiceName").value;
                userObject.IsIncludeCostStockReports = document.getElementById("defaultIncludeCostInStockReport").checked;

                var data = JSON.stringify(userObject);

                $.ajax({
                    type: "PUT",
                    url: '/api/user/lock/' + userId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnUserDetailLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnUserDetailLock').prop('disabled', false);
                            $('#btnUserDetailClose').prop('disabled', false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnUserDetailLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnUserDetailLock').prop('disabled', false);
                            $('#btnUserDetailClose').prop('disabled', false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnUserDetailLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnUserDetailLock').prop('disabled', false);
                            $('#btnUserDetailClose').prop('disabled', false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =================
        // Current User Form
        // =================
        function getCurrentUserForm() {
            var userForms = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/manage/current/user/userForm/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            userForms.push({
                                Id: results[i]["Id"],
                                UserId: results[i]["UserId"],
                                User: results[i]["User"],
                                FormId: results[i]["FormId"],
                                Form: results[i]["Form"],
                                Particulars: results[i]["Particulars"],
                                CanAdd: results[i]["CanAdd"],
                                CanEdit: results[i]["CanEdit"],
                                CanDelete: results[i]["CanDelete"],
                                CanLock: results[i]["CanLock"],
                                CanUnlock: results[i]["CanUnlock"],
                                CanPrint: results[i]["CanPrint"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return userForms;
        }

        // ============================
        // User Form Navigation Buttons
        // ============================
        function updateNavigateButtonsCurrentUserForm() {
            if (userForms.pageSize <= 0) {
                document.getElementById('naviagtionPageGridUserForm').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridUserForm').style.display = 'block';
            if (userForms.pageIndex === 0) {
                btnMoveToFirstPageGridUserForm.setAttribute('disabled', 'disabled');
                btnMoveToPreviousPageGridUserForm.setAttribute('disabled', 'disabled');
                btnMoveToNextPageGridUserForm.removeAttribute('disabled');
                btnMoveToLastPageGridUserForm.removeAttribute('disabled');
            } else if (userForms.pageIndex === (userForms.pageCount - 1)) {
                btnMoveToFirstPageGridUserForm.removeAttribute('disabled');
                btnMoveToPreviousPageGridUserForm.removeAttribute('disabled');
                btnMoveToLastPageGridUserForm.setAttribute('disabled', 'disabled');
                btnMoveToNextPageGridUserForm.setAttribute('disabled', 'disabled');
            } else {
                btnMoveToFirstPageGridUserForm.removeAttribute('disabled');
                btnMoveToPreviousPageGridUserForm.removeAttribute('disabled');
                btnMoveToNextPageGridUserForm.removeAttribute('disabled');
                btnMoveToLastPageGridUserForm.removeAttribute('disabled');
            }
            btnCurrentPageGridUserForm.innerHTML = (userForms.pageIndex + 1) + ' / ' + userForms.pageCount;
        }

        // ===========================
        // Refresh User Form Flex Grid
        // ===========================
        function refreshUserFormFlexGrid() {
            userForms = new wijmo.collections.CollectionView(getCurrentUserForm());
            userForms.canFilter = true;
            userForms.pageSize = cboUserFormShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#UserFormInputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                userForms.refresh();
            });

            userForms.filter = function (item) {
                return !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1);
            }

            userForms.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCurrentUserForm();
            });

            userFormGrid.itemsSource = userForms;
            userFormGrid.trackChanges = true;
        }

        // ==========================
        // Create User Form Flex Grid
        // ==========================
        function createCurrentUserFormFlexGrid() {
            userForms = new wijmo.collections.CollectionView(getCurrentUserForm());
            userForms.canFilter = true;
            userForms.pageSize = cboUserFormShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#UserFormInputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                userForms.refresh();
            });

            userForms.filter = function (item) {
                return !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1);
            }

            userForms.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCurrentUserForm();
            });

            userFormGrid = new wijmo.grid.FlexGrid('#userDetailUserFormGrid');
            userFormGrid.initialize({
                columns: [
                            {
                                "header": "Form",
                                "binding": "Form",
                                "width": "3*",
                                "allowResizing": true,
                                "allowSorting": true
                            },
                            {
                                "header": "Add",
                                "binding": "CanAdd",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Edit",
                                "binding": "CanEdit",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Delete",
                                "binding": "CanDelete",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Lock",
                                "binding": "CanLock",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Unlock",
                                "binding": "CanUnlock",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Print",
                                "binding": "CanPrint",
                                "allowSorting": true,
                                "width": 80
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: userForms,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            userFormGrid.trackChanges = true;

            updateNavigateButtonsCurrentUserForm();

            btnMoveToFirstPageGridUserForm.addEventListener('click', function () {
                userForms.moveToFirstPage();
                updateNavigateButtonsCurrentUserForm();
            });

            btnMoveToPreviousPageGridUserForm.addEventListener('click', function () {
                userForms.moveToPreviousPage();
                updateNavigateButtonsCurrentUserForm();
            });

            btnMoveToNextPageGridUserForm.addEventListener('click', function () {
                userForms.moveToNextPage();
                updateNavigateButtonsCurrentUserForm();
            });

            btnMoveToLastPageGridUserForm.addEventListener('click', function () {
                userForms.moveToLastPage();
                updateNavigateButtonsCurrentUserForm();
            });
        }

        // ===================
        // Current User Branch
        // ===================
        function getCurrentUserBranches() {
            var userDefaultBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/manage/current/user/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            userDefaultBranchesObservableArray.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchId: results[i]["BranchId"],
                                Branch: results[i]["Branch"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return userDefaultBranchesObservableArray;
        }

        // ==============================
        // User Branch Navigation Buttons
        // ==============================
        function updateNavigateButtonsCurrentUserBranches() {
            if (userDefaultBranchesCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGridUserDefaultBranches').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridUserDefaultBranches').style.display = 'block';
            if (userDefaultBranchesCollectionView.pageIndex === 0) {
                btnMoveToFirstPageGridUserDefaultBranches.setAttribute('disabled', 'disabled');
                btnMoveToPreviousPageGridUserDefaultBranches.setAttribute('disabled', 'disabled');
                btnMoveToNextPageGridUserDefaultBranches.removeAttribute('disabled');
                btnMoveToLastPageGridUserDefaultBranches.removeAttribute('disabled');
            } else if (userDefaultBranchesCollectionView.pageIndex === (userDefaultBranchesCollectionView.pageCount - 1)) {
                btnMoveToFirstPageGridUserDefaultBranches.removeAttribute('disabled');
                btnMoveToPreviousPageGridUserDefaultBranches.removeAttribute('disabled');
                btnMoveToLastPageGridUserDefaultBranches.setAttribute('disabled', 'disabled');
                btnMoveToNextPageGridUserDefaultBranches.setAttribute('disabled', 'disabled');
            } else {
                btnMoveToFirstPageGridUserDefaultBranches.removeAttribute('disabled');
                btnMoveToPreviousPageGridUserDefaultBranches.removeAttribute('disabled');
                btnMoveToNextPageGridUserDefaultBranches.removeAttribute('disabled');
                btnMoveToLastPageGridUserDefaultBranches.removeAttribute('disabled');
            }
            btnCurrentPageGridUserDefaultBranches.innerHTML = (userDefaultBranchesCollectionView.pageIndex + 1) + ' / ' + userDefaultBranchesCollectionView.pageCount;
        }

        // ==============================
        // Refresh User Branches FlexGrid
        // ==============================
        function refreshCurrentUserBranchesFlexGrid() {
            userDefaultBranchesCollectionView = new wijmo.collections.CollectionView(getCurrentUserBranches());
            userDefaultBranchesCollectionView.canFilter = true;
            userDefaultBranchesCollectionView.pageSize = cboUserDefaultBranchesShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#UserDefaultBranchesInputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                userDefaultBranchesCollectionView.refresh();
            });

            userDefaultBranchesCollectionView.filter = function (item) {
                return !filterText || (item.Company.toLowerCase().indexOf(filterText) > -1)
                    || (item.Branch.toLowerCase().indexOf(filterText) > -1);
            }

            userDefaultBranchesCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCurrentUserBranches();
            });

            userDefaultBranchesFlexGrid.itemsSource = userDefaultBranchesCollectionView;
            userDefaultBranchesFlexGrid.trackChanges = true;
        }

        // =============================
        // Create User Branches FlexGrid
        // =============================
        function createCurrentUserBranchesFlexGrid() {
            userDefaultBranchesCollectionView = new wijmo.collections.CollectionView(getCurrentUserBranches());
            userDefaultBranchesCollectionView.canFilter = true;
            userDefaultBranchesCollectionView.pageSize = cboUserDefaultBranchesShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#UserDefaultBranchesInputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                userDefaultBranchesCollectionView.refresh();
            });

            userDefaultBranchesCollectionView.filter = function (item) {
                return !filterText || (item.Company.toLowerCase().indexOf(filterText) > -1)
                    || (item.Branch.toLowerCase().indexOf(filterText) > -1);
            }

            userDefaultBranchesCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCurrentUserBranches();
            });

            userDefaultBranchesFlexGrid = new wijmo.grid.FlexGrid('#userDefaultBranchesFlexGrid');
            userDefaultBranchesFlexGrid.initialize({
                columns: [
                    {
                        "header": "Company",
                        "binding": "Company",
                        "width": "3*",
                        "allowResizing": true,
                        "allowSorting": true
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "width": "3*",
                        "allowResizing": true,
                        "allowSorting": true
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: userDefaultBranchesCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            userDefaultBranchesFlexGrid.trackChanges = true;

            updateNavigateButtonsCurrentUserBranches();

            btnMoveToFirstPageGridUserDefaultBranches.addEventListener('click', function () {
                userDefaultBranchesCollectionView.moveToFirstPage();
                updateNavigateButtonsCurrentUserBranches();
            });

            btnMoveToPreviousPageGridUserDefaultBranches.addEventListener('click', function () {
                userDefaultBranchesCollectionView.moveToPreviousPage();
                updateNavigateButtonsCurrentUserBranches();
            });

            btnMoveToNextPageGridUserDefaultBranches.addEventListener('click', function () {
                userDefaultBranchesCollectionView.moveToNextPage();
                updateNavigateButtonsCurrentUserBranches();
            });

            btnMoveToLastPageGridUserDefaultBranches.addEventListener('click', function () {
                userDefaultBranchesCollectionView.moveToLastPage();
                updateNavigateButtonsCurrentUserBranches();
            });
        }

        $('#userForm').click(function () {
            $("#UserForm").show();
            $("#UserBranches").hide();
            NProgress.start();
            refreshUserFormFlexGrid();
        });

        $('#userBranches').click(function () {
            $("#UserForm").hide();
            $("#UserBranches").show();
            NProgress.start();
            refreshCurrentUserBranchesFlexGrid();
        });

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            getCurrentCompany();
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>