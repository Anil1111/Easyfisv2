<!DOCTYPE html>
<html class="account-html-custom">
<head>
    <!-- Meta Tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>@ViewData["FullName"]</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Home-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Manage Settings
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <!-- Manage -->
            @Html.Partial("_ManageIndex")
            <!-- Footer -->
            @Html.Partial("_ManageFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!-- User Edit Detail -->
    <div class="modal fade" id="userEdit" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">User</h4>
                </div>
                <div class="modal-body">
                    <form id="userDetailForm">
                        <dl class="dl-horizontal">
                            <dt>Full Name:</dt>
                            <dd><input type="text" class="form-control requiredUser" id="profileDetail_fullName" value="@ViewData["FullName"]"/></dd>
                            <dt>Username:</dt>
                            <dd><input type="text" class="form-control requiredUser" id="profileDetail_userName" value="@ViewData["UserName"]" disabled /></dd>
                        </dl>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary " id="cmdSaveUserButton" onclick="cmdUserSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdUserDetailCloseButton" class="btn btn-danger " data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteAllTrasactionsModalConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete Trasactions</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete all Trasactions?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="confirmDeleteAllTrasactions" onclick="confirmDeleteAllTrasactionsOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button class="btn btn-primary" id="confirmDeleteAllTrasactionsClose" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteAllTrasactionsModalLoading" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Deleting Trasactions ...</h4>
                </div>
                <div class="modal-body">
                    <div class="progress">
                        <div class="bar progress-bar progress-bar-danger progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts JavaScripts -->
    @Scripts.Render("~/Scripts/Home-js")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var branches;
        var cboBranch;
        var cboDefaultBranch;
        var cboDiscounts;
        var inventoryTypeSelectedValue = "@ViewData["InventoryType"]";

        // =================
        // Modal User Detail
        // =================
        function cmdEditProfileDetails_OnClickButton() {
            $('#userEdit').modal({
                show: true,
                backdrop: 'static'
            });
        }

        // =====================
        // User Entry Validation
        // =====================
        function userEntryValidation() {
            var isValid = true;
            $('.requiredUser').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "2px solid red",
                        "transition": "border 1s ease 0s"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // ==================
        // Update User Detail
        // ==================
        function cmdUserSaveButton_OnClick() {
            var userObject = new Object();
            var userId = "@ViewData["UserId"]";
            userObject.FullName = document.getElementById('profileDetail_fullName').value;
            var data = JSON.stringify(userObject);

            if (userEntryValidation() == false) {
                toastr.error("Invalid Entry");
            } else {
                document.getElementById('cmdSaveUserButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $('#cmdSaveUserButton').prop('disabled', true);
                $('#cmdUserDetailCloseButton').prop('disabled', true);

                $.ajax({
                    type: "PUT",
                    url: '/api/updateMstUser/' + userId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Update Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function () {
                            toastr.error("Update request not found");
                            document.getElementById('cmdSaveUserButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#cmdSaveUserButton').prop('disabled', false);
                            $('#cmdUserDetailCloseButton').prop('disabled', false);
                        },
                        400: function () {
                            toastr.error("Cannot update profile");
                            document.getElementById('cmdSaveUserButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#cmdSaveUserButton').prop('disabled', false);
                            $('#cmdUserDetailCloseButton').prop('disabled', false);
                        },
                        500: function () {
                            toastr.error("Internal Server Error");
                            document.getElementById('cmdSaveUserButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#cmdSaveUserButton').prop('disabled', false);
                            $('#cmdUserDetailCloseButton').prop('disabled', false);
                        }
                    }
                });
            }
        }

        // ===============
        // Launch Software
        // ===============
        function cmdLaunchSoftware_OnClick() {
            document.getElementById('LaunchSoftware').innerHTML = "<i class='fa fa-spinner fa-spin fa-fw'></i> Launching"
            document.getElementById('LaunchSoftware').disabled = true;
            window.location = '/Software';
        }

        function btnDeleteAllTransactionOnclick() {
            $('#deleteAllTrasactionsModalConfirm').modal({
                show: true,
                backdrop: 'static'
            });
        }

        function confirmDeleteAllTrasactionsOnclick() {
            $("#confirmDeleteAllTrasactions").prop("disabled", true);
            $("#confirmDeleteAllTrasactionsClose").prop("disabled", true);
            document.getElementById('confirmDeleteAllTrasactions').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";

            $('#deleteAllTrasactionsModalConfirm').modal('hide');
            $('#deleteAllTrasactionsModalLoading').modal({
                show: true,
                backdrop: 'static'
            });

            $.ajax({
                url: '/api/utilities/deleteAllTransactions',
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        document.getElementById('confirmDeleteAllTrasactions').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#confirmDeleteAllTrasactions").prop("disabled", false);
                        $("#confirmDeleteAllTrasactionsClose").prop("disabled", false);
                        toastr.success("Successfully deleted");
                        $('#deleteAllTrasactionsModalLoading').modal('hide');
                    },
                    404: function () {
                        document.getElementById('confirmDeleteAllTrasactions').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#confirmDeleteAllTrasactions").prop("disabled", false);
                        $("#confirmDeleteAllTrasactionsClose").prop("disabled", false);
                        $('#deleteAllTrasactionsModalLoading').modal('hide');
                        toastr.error("No Transactions");
                    },
                    400: function () {
                        document.getElementById('confirmDeleteAllTrasactions').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#confirmDeleteAllTrasactions").prop("disabled", false);
                        $("#confirmDeleteAllTrasactionsClose").prop("disabled", false);
                        $('#deleteAllTrasactionsModalLoading').modal('hide');
                        toastr.error("Cannot delete record");
                    }
                }
            });
        }

        function getBranch() {
            var branches = new Array();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (resultsBranch) {
                    if (resultsBranch.length > 0) {
                        for (i = 0; i < resultsBranch.length; i++) {
                            branches.push({
                                Id: resultsBranch[i]["Id"],
                                Branch: resultsBranch[i]["Branch"]
                            });
                        }

                        var disabled = false;
                        var userName = "@ViewData["UserName"]";
                        if (userName == "admin") {
                            disabled = false;
                        } else {
                            disabled = true;
                        }

                        var defaultBranch = "@ViewData["Branch"]";
                        cboDefaultBranch.dispose();
                        cboDefaultBranch = new wijmo.input.ComboBox('#defaultBranch', {
                            disabled: disabled,
                            placeholder: "Select Branch",
                            itemsSource: branches,
                            displayMemberPath: "Branch",
                            selectedValuePath: "Branch",
                            selectedValue: defaultBranch.toString()
                        });
                        document.getElementById("defaultOfficialReceiptName").value = "@ViewData["OfficialReceiptName"]";
                    }
                }
            });
        }

        function btnOnclickSaveDefaults() {
            document.getElementById('btnIdSaveDefaults').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
            $("#btnIdSaveDefaults").prop("disabled", true);

            var userDefaultObject = new Object();
            userDefaultObject.BranchId = cboDefaultBranch.selectedItem["Id"];
            userDefaultObject.OfficialReceiptName = document.getElementById("defaultOfficialReceiptName").value;
            userDefaultObject.InventoryType = cboInventoryType.selectedValue;
            userDefaultObject.DefaultSalesInvoiceDiscountId = cboDiscounts.selectedItem["Id"];
            var userDefaultData = JSON.stringify(userDefaultObject);

            var userId = "@ViewData["UserId"]";
            $.ajax({
                type: "PUT",
                url: '/api/user/updateUserDefaults/byUserId/' + userId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userDefaultData,
                statusCode: {
                    200: function () {
                        document.getElementById('btnIdSaveDefaults').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                        $("#btnIdSaveDefaults").prop("disabled", true);
                        toastr.success("Updated");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        document.getElementById('btnIdSaveDefaults').innerHTML = "<i class='fa fa-spinner fa-save'></i> Save";
                        toastr.error("Not found");
                    },
                    400: function () {
                        document.getElementById('btnIdSaveDefaults').innerHTML = "<i class='fa fa-spinner fa-save'></i> Save";
                        toastr.error("Bad Request");
                    }
                }
            });
        }

        function createCboInventoryType() {
            $.ajax({
                url: '/api/first/inventory',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (resultInventory) {

                    var disabled = false;
                    var userName = "@ViewData["UserName"]";
                    if (resultInventory != null) {
                        disabled = true;
                    } else {
                        if (userName == "admin") {
                            disabled = false;
                        } else {
                            disabled = true;
                        }
                    }

                    var InventoryTypes = new Array("Specific Identification", "Moving Average");
                    cboInventoryType.dispose();
                    cboInventoryType = new wijmo.input.ComboBox('#cboInventoryType', {
                        disabled: disabled,
                        placeholder: "Select Inventory Type",
                        itemsSource: InventoryTypes,
                        selectedValue: inventoryTypeSelectedValue
                    });
                }
            });
        }

        function getDiscount() {
            var discountsObservableArray = new wijmo.collections.ObservableArray;
             $.ajax({
                 url: '/api/listDiscount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (resultDiscounts) {
                    if (resultDiscounts.length > 0) {
                        for (i = 0; i < resultDiscounts.length; i++) {
                            discountsObservableArray.push({
                                Id: resultDiscounts[i]["Id"],
                                Discount: resultDiscounts[i]["Discount"]
                            });
                        }

                        var disabled = false;
                        var userName = "@ViewData["UserName"]";
                        if (userName == "admin") {
                            disabled = false;
                        } else {
                            disabled = true;
                        }

                        var defaultDiscount = "@ViewData["DefaultSalesInvoiceDiscount"]";
                        cboDiscounts.dispose();
                        cboDiscounts = new wijmo.input.ComboBox('#cboDiscounts', {
                            disabled: disabled,
                            placeholder: "Select Branch",
                            itemsSource: discountsObservableArray,
                            displayMemberPath: "Discount",
                            selectedValuePath: "Discount",
                            selectedValue: defaultDiscount.toString()
                        });
                        document.getElementById("defaultOfficialReceiptName").value = "@ViewData["OfficialReceiptName"]";
                    }
                }
            });
        }

        // =======
        // On Load
        // =======
        $(document).ready(function () {
            cboDefaultBranch = new wijmo.input.ComboBox('#defaultBranch');
            cboInventoryType = new wijmo.input.ComboBox('#cboInventoryType');
            cboDiscounts = new wijmo.input.ComboBox('#cboDiscounts');
            getDiscount();
            createCboInventoryType();

            getBranch();

            var userName = "@ViewData["UserName"]";
            if (userName == "admin") {
                document.getElementById("defaultOfficialReceiptName").disabled = false;
            } else {
                $('#btnDeleteAllTransaction').prop('disabled', true);
                $('#btnIdSaveDefaults').prop('disabled', true);
                document.getElementById("defaultOfficialReceiptName").disabled = true;
            }
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>

@*@model easyfis.Models.IndexViewModel
    @{
        ViewBag.Title = "Manage";
    }

    <h2>@ViewBag.Title.</h2>

    <p class="text-success">@ViewBag.StatusMessage</p>
    <div>
        <h4>Change your account settings</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>Password:</dt>
            <dd>
                [*@
@*<p class="text-success">@ViewBag.StatusMessage</p>
    @if (Model.HasPassword)
    {
        //Response.Redirect("~/Manage/AccountSettings");
        @Html.ActionLink("Change your password", "ChangePassword")
    }
    else
    {
        @Html.ActionLink("Create", "SetPassword")
    }*@
@*]*@
@*</dd>*@
@*<dt>External Logins:</dt>
    <dd>
        @Model.Logins.Count [
        @Html.ActionLink("Manage", "ManageLogins") ]
    </dd>*@
@*
    Phone Numbers can used as a second factor of verification in a two-factor authentication system.

     See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
        for details on setting up this ASP.NET application to support two-factor authentication using SMS.

     Uncomment the following block after you have set up two-factor authentication
*@
@*
    <dt>Phone Number:</dt>
    <dd>
        @(Model.PhoneNumber ?? "None") [
        @if (Model.PhoneNumber != null)
        {
            @Html.ActionLink("Change", "AddPhoneNumber")
            @: &nbsp;|&nbsp;
            @Html.ActionLink("Remove", "RemovePhoneNumber")
        }
        else
        {
            @Html.ActionLink("Add", "AddPhoneNumber")
        }
        ]
    </dd>
*@
@*<dt>Two-Factor Authentication:</dt>
    <dd>
        <p>
            There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
            for details on setting up this ASP.NET application to support two-factor authentication.
        </p>*@
@*@if (Model.TwoFactor)
    {
        using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <text>Enabled
            <input type="submit" value="Disable" class="btn btn-link" />
            </text>
        }
    }
    else
    {
        using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <text>Disabled
            <input type="submit" value="Enable" class="btn btn-link" />
            </text>
        }
    }*@
@*</dd>*@
@*</dl>
    </div>*@
