<!DOCTYPE html>
<html class="account-html-custom">
<head>
    <!-- Meta Tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>@ViewData["FullName"]</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Home-css")
</head>
<body data-spy="scroll" data-offset="100" id="home" class="account-body-custom secStyle">
    <!-- Header -->
    @Html.Partial("_ManageHeader")

    <!-- Manage -->
    @Html.Partial("_ManageIndex")

    <!-- Footer -->
    @Html.Partial("_ManageFooter")

    <!-- User Edit Detail -->
    <div class="modal fade" id="userEdit" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit Profile Detail</h4>
                </div>
                <div class="modal-body">
                    <form id="userDetailForm">
                        <input type="hidden" id="userId" value="@ViewData["UserId"]" />
                        <dl class="dl-horizontal">
                            <dt>Full Name:</dt>
                            <dd><input type="text" class="form-control input-sm requiredUser" id="profileDetail_fullName" value="@ViewData["FullName"]" /></dd>
                            <dt>Address:</dt>
                            <dd><input type="text" class="form-control input-sm " /></dd>
                            <dt>Email address:</dt>
                            <dd><input type="text" class="form-control input-sm " /></dd>
                            <dt>Username:</dt>
                            <dd><input type="text" class="form-control input-sm requiredUser" id="profileDetail_userName" value="@ViewData["UserName"]" readonly /></dd>
                        </dl>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary btn-sm" id="cmdSaveUserButton" onclick="cmdUserSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdUserDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteAllTrasactionsModalConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete All Trasactions <i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete all Trasactions?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" id="confirmDeleteAllTrasactions" onclick="confirmDeleteAllTrasactionsOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button class="btn btn-primary btn-sm" id="confirmDeleteAllTrasactionsClose" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteAllTrasactionsModalLoading" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Deleting Trasactions ...</h4>
                </div>
                <div class="modal-body">
                    <div class="progress">
                        <div class="bar progress-bar progress-bar-danger progress-bar-striped active" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts JavaScripts -->
    @Scripts.Render("~/Scripts/Home-js")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var branches;
        var cboBranch;
        var cboDefaultBranch;

        // =================
        // Modal User Detail
        // =================
        function cmdEditProfileDetails_OnClickButton() {
            $('#userEdit').modal({
                show: true,
                backdrop: 'static'
            });
        }

        // =====================
        // User Entry Validation
        // =====================
        function userEntryValidation() {
            var isValid = true;
            $('.requiredUser').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "2px solid red",
                        "transition": "border 1s ease 0s"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // ==================
        // Update User Detail
        // ==================
        function cmdUserSaveButton_OnClick() {
            var userObject = new Object();
            var id = document.getElementById('userId').value;

            userObject.FullName = document.getElementById('profileDetail_fullName').value;
            var data = JSON.stringify(userObject);

            if (userEntryValidation() == false) {
                toastr.error("Invalid Entry");
            } else {
                $('#cmdSaveUserButton').prop('disabled', true);
                $('#cmdUserDetailCloseButton').prop('disabled', true);

                $.ajax({
                    type: "PUT",
                    url: '/api/updateMstUser/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            $('#cmdSaveUserButton').prop('disabled', true);
                            $('#cmdUserDetailCloseButton').prop('disabled', true);
                            toastr.success("Successfully updated");

                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);

                        },
                        404: function () {
                            $('#cmdSaveUserButton').prop('disabled', false);
                            $('#cmdUserDetailCloseButton').prop('disabled', false);
                            toastr.error("Update request not found");
                        },
                        400: function () {
                            $('#cmdSaveUserButton').prop('disabled', false);
                            $('#cmdUserDetailCloseButton').prop('disabled', false);
                            toastr.error("Cannot update profile");
                        },
                        500: function () {
                            $('#cmdSaveUserButton').prop('disabled', false);
                            $('#cmdUserDetailCloseButton').prop('disabled', false);
                            toastr.error("Internal Server Error");
                        }
                    }
                });
            }
        }

        //// ========================
        //// GET Branch for Combo Box
        //// ========================
        //function getBranchesForComboBox() {
        //    NProgress.start();
        //    branches = new wijmo.collections.ObservableArray();
        //    $.ajax({
        //        url: '/api/listBranch',
        //        cache: false,
        //        type: 'GET',
        //        contentType: 'application/json; charset=utf-8',
        //        data: {},
        //        success: function (results) {
        //            if (results.length > 0) {
        //                for (i = 0; i < results.length; i++) {
        //                    branches.push({
        //                        BranchId: results[i]["Id"],
        //                        Branch: results[i]["Branch"],
        //                        CompanyId: results[i]["CompanyId"],
        //                        Company: results[i]["Company"]
        //                    });
        //                }
        //                createCboBranch(branches);
        //            } else {
        //                createCboBranch(branches);
        //            }
        //            NProgress.done();
        //        }
        //    }).fail(function (xhr, textStatus, err) {
        //        alert(err);
        //    });
        //}

        //// ======================
        //// Combo Box for Branches
        //// ======================
        //function createCboBranch(branches) {
        //    var disabled;
        //    if (branches == 0) {
        //        disabled = true;
        //    } else {
        //        disabled = false;
        //    }

        //    cboBranch = new wijmo.input.ComboBox('#branch_Id', {
        //        disabled: disabled,
        //        placeholder: "Select branch",
        //        itemsSource: branches,
        //        displayMemberPath: "Branch",
        //        isEditable: false,
        //        onSelectedIndexChanged: function () {
        //            $('#LaunchSoftware').prop('disabled', false);
        //        }
        //    });
        //}

        // ===============
        // Launch Software
        // ===============
        function cmdLaunchSoftware_OnClick() {
            document.getElementById('LaunchSoftware').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Launching Software..."
            document.getElementById('LaunchSoftware').disabled = true;
            window.location = '/Software';
        }

        function btnDeleteAllTransactionOnclick() {
            $('#deleteAllTrasactionsModalConfirm').modal({
                show: true,
                backdrop: 'static'
            });
        }

        function confirmDeleteAllTrasactionsOnclick() {
            $("#confirmDeleteAllTrasactions").prop("disabled", true);
            $("#confirmDeleteAllTrasactionsClose").prop("disabled", true);
            document.getElementById('confirmDeleteAllTrasactions').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";

            $('#deleteAllTrasactionsModalConfirm').modal('hide');
            $('#deleteAllTrasactionsModalLoading').modal({
                show: true,
                backdrop: 'static'
            });

            $.ajax({
                url: '/api/utilities/deleteAllTransactions',
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        document.getElementById('confirmDeleteAllTrasactions').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#confirmDeleteAllTrasactions").prop("disabled", false);
                        $("#confirmDeleteAllTrasactionsClose").prop("disabled", false);
                        toastr.success("Successfully deleted");
                        $('#deleteAllTrasactionsModalLoading').modal('hide');
                    },
                    404: function () {
                        document.getElementById('confirmDeleteAllTrasactions').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#confirmDeleteAllTrasactions").prop("disabled", false);
                        $("#confirmDeleteAllTrasactionsClose").prop("disabled", false);
                        $('#deleteAllTrasactionsModalLoading').modal('hide');
                        toastr.error("No Transactions");
                    },
                    400: function () {
                        document.getElementById('confirmDeleteAllTrasactions').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#confirmDeleteAllTrasactions").prop("disabled", false);
                        $("#confirmDeleteAllTrasactionsClose").prop("disabled", false);
                        $('#deleteAllTrasactionsModalLoading').modal('hide');
                        toastr.error("Cannot delete record");
                    }
                }
            });
        }

        function getBranch() {
            var branches = new Array();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (resultsBranch) {
                    if (resultsBranch.length > 0) {
                        for (i = 0; i < resultsBranch.length; i++) {
                            branches.push({
                                Id: resultsBranch[i]["Id"],
                                Branch: resultsBranch[i]["Branch"]
                            });
                        }

                        var defaultBranch = "@ViewData["Branch"]";
                        cboDefaultBranch.dispose();
                        cboDefaultBranch = new wijmo.input.ComboBox('#defaultBranch', {
                            placeholder: "Select Branch",
                            itemsSource: branches,
                            displayMemberPath: "Branch",
                            selectedValuePath: "Branch",
                            selectedValue: defaultBranch.toString()
                        });
                    }
                }
            });
        }

        function btnOnclickSaveDefaults() {
            document.getElementById('btnIdSaveDefaults').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
            $("#btnIdSaveDefaults").prop("disabled", true);
            
            var userDefaultObject = new Object();
            userDefaultObject.BranchId = cboDefaultBranch.selectedItem["Id"];
            var userDefaultData = JSON.stringify(userDefaultObject);

            var userId = "@ViewData["UserId"]";
            $.ajax({
                type: "PUT",
                url: '/api/user/updateUserDefaults/byUserId/' + userId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userDefaultData,
                statusCode: {
                    200: function () {
                        document.getElementById('btnIdSaveDefaults').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                        $("#btnIdSaveDefaults").prop("disabled", true);
                        toastr.success("Updated");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        document.getElementById('btnIdSaveDefaults').innerHTML = "<i class='fa fa-spinner fa-save'></i> Save";
                        toastr.error("Not found");
                    },
                    400: function () {
                        document.getElementById('btnIdSaveDefaults').innerHTML = "<i class='fa fa-spinner fa-save'></i> Save";
                        toastr.error("Bad Request");
                    }
                }
            });
        }

        // =======
        // On Load
        // =======
        $(document).ready(function () {
            cboDefaultBranch = new wijmo.input.ComboBox('#defaultBranch');
            getBranch();
            //getBranchesForComboBox();
        });
    </script>
</body>
</html>

@*@model easyfis.Models.IndexViewModel
    @{
        ViewBag.Title = "Manage";
    }

    <h2>@ViewBag.Title.</h2>

    <p class="text-success">@ViewBag.StatusMessage</p>
    <div>
        <h4>Change your account settings</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>Password:</dt>
            <dd>
                [*@
@*<p class="text-success">@ViewBag.StatusMessage</p>
    @if (Model.HasPassword)
    {
        //Response.Redirect("~/Manage/AccountSettings");
        @Html.ActionLink("Change your password", "ChangePassword")
    }
    else
    {
        @Html.ActionLink("Create", "SetPassword")
    }*@
@*]*@
@*</dd>*@
@*<dt>External Logins:</dt>
    <dd>
        @Model.Logins.Count [
        @Html.ActionLink("Manage", "ManageLogins") ]
    </dd>*@
@*
    Phone Numbers can used as a second factor of verification in a two-factor authentication system.

     See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
        for details on setting up this ASP.NET application to support two-factor authentication using SMS.

     Uncomment the following block after you have set up two-factor authentication
*@
@*
    <dt>Phone Number:</dt>
    <dd>
        @(Model.PhoneNumber ?? "None") [
        @if (Model.PhoneNumber != null)
        {
            @Html.ActionLink("Change", "AddPhoneNumber")
            @: &nbsp;|&nbsp;
            @Html.ActionLink("Remove", "RemovePhoneNumber")
        }
        else
        {
            @Html.ActionLink("Add", "AddPhoneNumber")
        }
        ]
    </dd>
*@
@*<dt>Two-Factor Authentication:</dt>
    <dd>
        <p>
            There are no two-factor authentication providers configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
            for details on setting up this ASP.NET application to support two-factor authentication.
        </p>*@
@*@if (Model.TwoFactor)
    {
        using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <text>Enabled
            <input type="submit" value="Disable" class="btn btn-link" />
            </text>
        }
    }
    else
    {
        using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            <text>Disabled
            <input type="submit" value="Enable" class="btn btn-link" />
            </text>
        }
    }*@
@*</dd>*@
@*</dl>
    </div>*@
