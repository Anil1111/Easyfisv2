<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>BIR CAS - Inventory Journal</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        BIR CAS - Inventory Journal
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        ===============
                        Search / Filter
                        ===============
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 49.5%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control" id="inpBIRCASInventoryJournalSeacrhFilter" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                        <div class="comboBox-wide" id="cboBIRCASInventoryJournalDisplayNumberOfRows"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24.5%" align="right">
                                    <button class="btn btn-success" onclick="btnBIRCASInventoryJournalDownloadCSVOnclick()" id="btnBIRCASInventoryJournalDownloadCSV"><i class="fa fa-file-excel-o" aria-hidden="true"></i> CSV</button>
                                    <button class="btn btn-primary" onclick="btnBIRCASInventoryJournalPrintPDFOnclick()" id="btnBIRCASInventoryJournalPrintPDF"><i class="fa fa-file-pdf-o" aria-hidden="true"></i> PDF</button>
                                    <a href="/Software/BIRCASReports" class="btn btn-danger"><i class="fa fa-close"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        ======================================
                        Date Range, Company and Branch Filters
                        ======================================
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 24%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b>Start Date</b></span>
                                        <div class="comboBox-wide" id="cboBIRCASInventoryJournalStartDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%" align="right">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b>End Date</b></span>
                                        <div class="comboBox-wide" id="cboBIRCASInventoryJournalEndDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b>Company</b></span>
                                        <div class="comboBox-wide" id="cboBIRCASInventoryJournalCompanyFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b>Branch</b></span>
                                        <div class="comboBox-wide" id="cboBIRCASInventoryJournalBranchFilter"></div>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        =========
                        Flex Grid
                        =========
                    -->
                    <div class="panel-body">
                        <div id="BIRCASInventoryJournalFlexGrid" class="grid"></div>
                    </div>

                    <!--
                        ==================
                        Navigation Buttons
                        ==================
                    -->
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="BIRCASInventoryJournalNavigationPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnBIRCASInventoryJournalMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnBIRCASInventoryJournalMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnBIRCASInventoryJournalCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnBIRCASInventoryJournalMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnBIRCASInventoryJournalMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ======
                    Totals
                    ======
                -->
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6"></div>
                            <div class="col-md-6">
                                <dl class="dl-horizontal dl-custom">
                                    <dt>
                                        <b>Total Debit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpTotalDebitAmount" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Credit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpTotalCreditAmount" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Balance</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpTotalBalanceAmount" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ==================
        // Data Range Filters
        // ==================
        var cboBIRCASInventoryJournalStartDateFilter = new wijmo.input.InputDate('#cboBIRCASInventoryJournalStartDateFilter');
        var cboBIRCASInventoryJournalEndDateFilter = new wijmo.input.InputDate('#cboBIRCASInventoryJournalEndDateFilter');
        var isCboBIRCASInventoryJournalStartDateFilterSelected = false;
        var isCboBIRCASInventoryJournalEndDateFilterSelected = false;

        // ==========================
        // Company and Branch Filters
        // ==========================
        var cboBIRCASInventoryJournalCompanyFilter = new wijmo.input.ComboBox('#cboBIRCASInventoryJournalCompanyFilter');
        var isCboBIRCASInventoryJournalCompanyFilterSelected = false;
        var cboBIRCASInventoryJournalBranchFilter = new wijmo.input.ComboBox('#cboBIRCASInventoryJournalBranchFilter');

        // =============================
        // Collection View and Flex Grid
        // =============================
        var BIRCASInventoryJournalCollectionView;
        var BIRCASInventoryJournalFlexGrid;
        var cboBIRCASInventoryJournalDisplayNumberOfRows = new wijmo.input.ComboBox('#cboBIRCASInventoryJournalDisplayNumberOfRows');

        // ==================
        // Navigation Buttons
        // ==================
        var btnBIRCASInventoryJournalMoveToFirstPageGrid = document.getElementById('btnBIRCASInventoryJournalMoveToFirstPageGrid');
        var btnBIRCASInventoryJournalMoveToPreviousPageGrid = document.getElementById('btnBIRCASInventoryJournalMoveToPreviousPageGrid');
        var btnBIRCASInventoryJournalMoveToNextPageGrid = document.getElementById('btnBIRCASInventoryJournalMoveToNextPageGrid');
        var btnBIRCASInventoryJournalMoveToLastPageGrid = document.getElementById('btnBIRCASInventoryJournalMoveToLastPageGrid');
        var btnBIRCASInventoryJournalCurrentPageGrid = document.getElementById('btnBIRCASInventoryJournalCurrentPageGrid');
        var BIRCASInventoryJournalCurrentPageIndex = 0;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getURLParameterValue(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ================================
        // Create Combo Date Ranged Filters
        // ================================
        function createCboDateRangedFilter() {
            NProgress.start();
            cboBIRCASInventoryJournalStartDateFilter.dispose();
            cboBIRCASInventoryJournalStartDateFilter = new wijmo.input.InputDate('#cboBIRCASInventoryJournalStartDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(getURLParameterValue("StartDate")),
                onValueChanged: function () {
                    if (!isCboBIRCASInventoryJournalStartDateFilterSelected) {
                        NProgress.start();
                        refreshBIRCASInventoryJournalFlexGrid();
                    } else {
                        isCboBIRCASInventoryJournalStartDateFilterSelected = false;
                    }
                }
            });

            cboBIRCASInventoryJournalEndDateFilter.dispose();
            cboBIRCASInventoryJournalEndDateFilter = new wijmo.input.InputDate('#cboBIRCASInventoryJournalEndDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(getURLParameterValue("EndDate")),
                onValueChanged: function () {
                    if (!isCboBIRCASInventoryJournalEndDateFilterSelected) {
                        NProgress.start();
                        refreshBIRCASInventoryJournalFlexGrid();
                    } else {
                        isCboBIRCASInventoryJournalEndDateFilterSelected = false;
                    }
                }
            });

            createCboCompanyFilter();
        }

        // ===========================
        // Create Combo Company Filter
        // ===========================
        function createCboCompanyFilter() {
            var companyObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/BIRCASInventoryJournal/dropdown/list/company',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            companyObservableArray.push({
                                Id: results[i]["Id"],
                                Company: results[i]["Company"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                    } else {
                        $("#btnBIRCASInventoryJournalDownloadCSV").prop("disabled", true);
                        $("#btnBIRCASInventoryJournalPrintPDF").prop("disabled", true);
                    }

                    cboBIRCASInventoryJournalCompanyFilter.dispose();
                    cboBIRCASInventoryJournalCompanyFilter = new wijmo.input.ComboBox('#cboBIRCASInventoryJournalCompanyFilter', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: companyObservableArray,
                        displayMemberPath: "Company",
                        selectedValuePath: "Id",
                        selectedValue: getURLParameterValue("CompanyId"),
                        onSelectedIndexChanged: function () {
                            NProgress.start();
                            $("#btnBIRCASInventoryJournalDownloadCSV").prop("disabled", false);
                            $("#btnBIRCASInventoryJournalPrintPDF").prop("disabled", false);
                            isCboBIRCASInventoryJournalCompanyFilterSelected = true;
                            createCboBranchFilter();
                        }
                    });

                    createCboBranchFilter();
                }
            });
        }

        // ==========================
        // Create Combo Branch Filter
        // ==========================
        function createCboBranchFilter() {
            var branchObservableArray = new wijmo.collections.ObservableArray();

            if (cboBIRCASInventoryJournalCompanyFilter.selectedValue != null) {
                $.ajax({
                    url: '/api/BIRCASInventoryJournal/dropdown/list/branch/' + cboBIRCASInventoryJournalCompanyFilter.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                branchObservableArray.push({
                                    Id: results[i]["Id"],
                                    Branch: results[i]["Branch"]
                                });
                            }
                        }

                        var disabled = true;
                        if (results.length > 0) {
                            disabled = false;
                        } else {
                            $("#btnBIRCASInventoryJournalDownloadCSV").prop("disabled", true);
                            $("#btnBIRCASInventoryJournalPrintPDF").prop("disabled", true);
                        }

                        cboBIRCASInventoryJournalBranchFilter.dispose();
                        cboBIRCASInventoryJournalBranchFilter = new wijmo.input.ComboBox('#cboBIRCASInventoryJournalBranchFilter', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: branchObservableArray,
                            displayMemberPath: "Branch",
                            selectedValuePath: "Id",
                            selectedValue: getURLParameterValue("BranchId"),
                            onSelectedIndexChanged: function () {
                                NProgress.start();
                                refreshBIRCASInventoryJournalFlexGrid();
                            }
                        });

                        createCboDisplayNumberOfRows();
                    }
                });
            }
        }

        // ===================================
        // Create Combo Display Number of Rows
        // ===================================
        function createCboDisplayNumberOfRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboBIRCASInventoryJournalDisplayNumberOfRows.dispose();
            cboBIRCASInventoryJournalDisplayNumberOfRows = new wijmo.input.ComboBox('#cboBIRCASInventoryJournalDisplayNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboBIRCASInventoryJournalDisplayNumberOfRows.selectedValue;
                        BIRCASInventoryJournalCollectionView.pageSize = parseInt(numberOfRows);
                        BIRCASInventoryJournalCollectionView.refresh();
                        BIRCASInventoryJournalFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });

            if (!isCboBIRCASInventoryJournalCompanyFilterSelected) {
                createBIRCASInventoryJournalFlexGrid();
            } else {
                refreshBIRCASInventoryJournalFlexGrid();
            }
        }

        // ========
        // Get Data
        // ========
        function getBIRCASInventoryJournalData() {
            var BIRCASInventoryJournalObservableArray = new wijmo.collections.ObservableArray;
            if (cboBIRCASInventoryJournalCompanyFilter.selectedValue != null) {
                if (cboBIRCASInventoryJournalBranchFilter.selectedValue != null) {
                    var startDate = cboBIRCASInventoryJournalStartDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                    var endDate = cboBIRCASInventoryJournalEndDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                    var companyId = cboBIRCASInventoryJournalCompanyFilter.selectedValue;
                    var branchId = cboBIRCASInventoryJournalBranchFilter.selectedValue;

                    $.ajax({
                        url: '/api/BIRCASInventoryJournal/list/' + startDate + '/' + endDate + '/' + + companyId + '/' + branchId,
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        success: function (results) {

                            var totalDebit = 0;
                            var totalCredit = 0;
                            var totalBalance = 0;

                            if (results.length > 0) {
                                for (i = 0; i < results.length; i++) {
                                    var dataDateResult = new Date(results[i]["Date"]);
                                    var dataDate = ('0' + (dataDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + dataDateResult.getDate()).slice(-2) + '-' + dataDateResult.getFullYear();

                                    BIRCASInventoryJournalObservableArray.push({
                                        Date: dataDate,
                                        ReferenceNumber: results[i]["ReferenceNumber"],
                                        AccountCode: results[i]["AccountCode"],
                                        Account: results[i]["Account"],
                                        Item: results[i]["Item"],
                                        DebitAmount: results[i]["DebitAmount"],
                                        DebitAmountDisplay: parseFloat(results[i]["DebitAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        CreditAmount: results[i]["CreditAmount"],
                                        CreditAmountDisplay: parseFloat(results[i]["CreditAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        Balance: results[i]["DebitAmount"] - results[i]["CreditAmount"],
                                        BalanceDisplay: parseFloat(results[i]["DebitAmount"] - results[i]["CreditAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    });

                                    totalDebit += results[i]["DebitAmount"];
                                    totalCredit += results[i]["CreditAmount"];
                                    totalBalance += results[i]["DebitAmount"] - results[i]["CreditAmount"];
                                }
                            }

                            document.getElementById("inpTotalDebitAmount").value = parseFloat(totalDebit).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            document.getElementById("inpTotalCreditAmount").value = parseFloat(totalCredit).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            document.getElementById("inpTotalBalanceAmount").value = parseFloat(totalBalance).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            NProgress.done();
                        }
                    });
                } else {
                    document.getElementById("inpTotalDebitAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalCreditAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalBalanceAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    NProgress.done();
                }
            } else {
                document.getElementById("inpTotalDebitAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                document.getElementById("inpTotalCreditAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                document.getElementById("inpTotalBalanceAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                NProgress.done();
            }

            return BIRCASInventoryJournalObservableArray;
        }

        // ================
        // Create Flex Grid
        // ================
        function createBIRCASInventoryJournalFlexGrid() {
            BIRCASInventoryJournalCollectionView = new wijmo.collections.CollectionView(getBIRCASInventoryJournalData());
            BIRCASInventoryJournalCollectionView.canFilter = true;
            BIRCASInventoryJournalCollectionView.pageSize = cboBIRCASInventoryJournalDisplayNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpBIRCASInventoryJournalSeacrhFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                BIRCASInventoryJournalCollectionView.refresh();

                if (BIRCASInventoryJournalCollectionView.items.length > 0) {
                    var totalDebit = 0;
                    var totalCredit = 0;
                    var totalBalance = 0;

                    for (var p = 1; p <= BIRCASInventoryJournalCollectionView.pageCount; p++) {
                        for (i = 0; i < BIRCASInventoryJournalCollectionView.items.length; i++) {
                            totalDebit += BIRCASInventoryJournalCollectionView.items[i].DebitAmount;
                            totalCredit += BIRCASInventoryJournalCollectionView.items[i].CreditAmount;
                            totalBalance += BIRCASInventoryJournalCollectionView.items[i].Balance;
                        }

                        BIRCASInventoryJournalCollectionView.moveToNextPage();
                        if (p == BIRCASInventoryJournalCollectionView.pageCount) {
                            BIRCASInventoryJournalCollectionView.moveToPage(BIRCASInventoryJournalCurrentPageIndex - 1);
                        }
                    }

                    document.getElementById("inpTotalDebitAmount").value = parseFloat(totalDebit).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalCreditAmount").value = parseFloat(totalCredit).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalBalanceAmount").value = parseFloat(totalBalance).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                } else {
                    document.getElementById("inpTotalDebitAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalCreditAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalBalanceAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }
            });

            BIRCASInventoryJournalCollectionView.filter = function (item) {
                return !filterText || (item.ReferenceNumber.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.AccountCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Account.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Item.toLowerCase().indexOf(filterText) > -1);
            }

            BIRCASInventoryJournalCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateBIRCASInventoryJournalNavigationButton();
            });

            BIRCASInventoryJournalFlexGrid = new wijmo.grid.FlexGrid('#BIRCASInventoryJournalFlexGrid');
            BIRCASInventoryJournalFlexGrid.initialize({
                columns: [
                    {
                        "header": "Date",
                        "binding": "Date",
                        "allowSorting": true,
                        "width": "1.5*"
                    },
                    {
                        "header": "Reference No",
                        "binding": "ReferenceNumber",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Account Code",
                        "binding": "AccountCode",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Account",
                        "binding": "Account",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Item",
                        "binding": "Item",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Debit Amount",
                        "binding": "DebitAmountDisplay",
                        "allowSorting": true,
                        "width": "2*",
                        "align": "right"
                    },
                    {
                        "header": "Credit Amount",
                        "binding": "CreditAmountDisplay",
                        "allowSorting": true,
                        "width": "2*",
                        "align": "right"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: BIRCASInventoryJournalCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            BIRCASInventoryJournalFlexGrid.trackChanges = true;

            updateBIRCASInventoryJournalNavigationButton();

            btnBIRCASInventoryJournalMoveToFirstPageGrid.addEventListener('click', function () {
                BIRCASInventoryJournalCollectionView.moveToFirstPage();
                BIRCASInventoryJournalCurrentPageIndex = BIRCASInventoryJournalCollectionView.pageIndex + 1;
                updateBIRCASInventoryJournalNavigationButton();
            });

            btnBIRCASInventoryJournalMoveToPreviousPageGrid.addEventListener('click', function () {
                BIRCASInventoryJournalCollectionView.moveToPreviousPage();
                BIRCASInventoryJournalCurrentPageIndex = BIRCASInventoryJournalCollectionView.pageIndex + 1;
                updateBIRCASInventoryJournalNavigationButton();
            });

            btnBIRCASInventoryJournalMoveToNextPageGrid.addEventListener('click', function () {
                BIRCASInventoryJournalCollectionView.moveToNextPage();
                BIRCASInventoryJournalCurrentPageIndex = BIRCASInventoryJournalCollectionView.pageIndex + 1;
                updateBIRCASInventoryJournalNavigationButton();
            });

            btnBIRCASInventoryJournalMoveToLastPageGrid.addEventListener('click', function () {
                BIRCASInventoryJournalCollectionView.moveToLastPage();
                BIRCASInventoryJournalCurrentPageIndex = BIRCASInventoryJournalCollectionView.pageIndex + 1;
                updateBIRCASInventoryJournalNavigationButton();
            });
        }

        // =========================
        // Update Navigation Buttons
        // =========================
        function updateBIRCASInventoryJournalNavigationButton() {
            if (BIRCASInventoryJournalCollectionView.pageSize <= 0) {
                document.getElementById('BIRCASInventoryJournalNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('BIRCASInventoryJournalNavigationPageGrid').style.display = 'block';
            if (BIRCASInventoryJournalCollectionView.pageIndex === 0) {
                btnBIRCASInventoryJournalMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnBIRCASInventoryJournalMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnBIRCASInventoryJournalMoveToNextPageGrid.removeAttribute('disabled');
                btnBIRCASInventoryJournalMoveToLastPageGrid.removeAttribute('disabled');
            } else if (BIRCASInventoryJournalCollectionView.pageIndex === (BIRCASInventoryJournalCollectionView.pageCount - 1)) {
                btnBIRCASInventoryJournalMoveToFirstPageGrid.removeAttribute('disabled');
                btnBIRCASInventoryJournalMoveToPreviousPageGrid.removeAttribute('disabled');
                btnBIRCASInventoryJournalMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnBIRCASInventoryJournalMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnBIRCASInventoryJournalMoveToFirstPageGrid.removeAttribute('disabled');
                btnBIRCASInventoryJournalMoveToPreviousPageGrid.removeAttribute('disabled');
                btnBIRCASInventoryJournalMoveToNextPageGrid.removeAttribute('disabled');
                btnBIRCASInventoryJournalMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnBIRCASInventoryJournalCurrentPageGrid.innerHTML = (BIRCASInventoryJournalCollectionView.pageIndex + 1) + ' / ' + BIRCASInventoryJournalCollectionView.pageCount;
        }

        // =================
        // Refresh Flex Grid
        // =================
        function refreshBIRCASInventoryJournalFlexGrid() {
            BIRCASInventoryJournalCollectionView = new wijmo.collections.CollectionView(getBIRCASInventoryJournalData());
            BIRCASInventoryJournalCollectionView.canFilter = true;
            BIRCASInventoryJournalCollectionView.pageSize = cboBIRCASInventoryJournalDisplayNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpBIRCASInventoryJournalSeacrhFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                BIRCASInventoryJournalCollectionView.refresh();

                if (BIRCASInventoryJournalCollectionView.items.length > 0) {
                    var totalDebit = 0;
                    var totalCredit = 0;
                    var totalBalance = 0;

                    for (var p = 1; p <= BIRCASInventoryJournalCollectionView.pageCount; p++) {
                        for (i = 0; i < BIRCASInventoryJournalCollectionView.items.length; i++) {
                            totalDebit += BIRCASInventoryJournalCollectionView.items[i].DebitAmount;
                            totalCredit += BIRCASInventoryJournalCollectionView.items[i].CreditAmount;
                            totalBalance += BIRCASInventoryJournalCollectionView.items[i].Balance;
                        }

                        BIRCASInventoryJournalCollectionView.moveToNextPage();
                        if (p == BIRCASInventoryJournalCollectionView.pageCount) {
                            BIRCASInventoryJournalCollectionView.moveToPage(BIRCASInventoryJournalCurrentPageIndex - 1);
                        }
                    }

                    document.getElementById("inpTotalDebitAmount").value = parseFloat(totalDebit).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalCreditAmount").value = parseFloat(totalCredit).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalBalanceAmount").value = parseFloat(totalBalance).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                } else {
                    document.getElementById("inpTotalDebitAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalCreditAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalBalanceAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }
            });

            BIRCASInventoryJournalCollectionView.filter = function (item) {
                return !filterText || (item.ReferenceNumber.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.AccountCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Account.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Item.toLowerCase().indexOf(filterText) > -1);
            }

            BIRCASInventoryJournalCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateBIRCASInventoryJournalNavigationButton();
            });

            BIRCASInventoryJournalFlexGrid.itemsSource = BIRCASInventoryJournalCollectionView;
            BIRCASInventoryJournalFlexGrid.trackChanges = true;
        }

        // ============
        // Download CSV
        // ============
        function btnBIRCASInventoryJournalDownloadCSVOnclick() {
            var CSV = '';
            var BIRCASInventoryJournal = [];
            var fileName = 'BIRCASInventoryJournal.CSV';

            BIRCASInventoryJournalCollectionView.moveToFirstPage();

            for (var p = 1; p <= BIRCASInventoryJournalCollectionView.pageCount; p++) {
                for (i = 0; i < BIRCASInventoryJournalCollectionView.items.length; i++) {
                    BIRCASInventoryJournal.push({
                        Date: BIRCASInventoryJournalCollectionView.items[i].Date,
                        ReferenceNumber: BIRCASInventoryJournalCollectionView.items[i].ReferenceNumber,
                        AccountCode: BIRCASInventoryJournalCollectionView.items[i].AccountCode,
                        Account: BIRCASInventoryJournalCollectionView.items[i].Account,
                        Item: BIRCASInventoryJournalCollectionView.items[i].Item,
                        DebitAmount: BIRCASInventoryJournalCollectionView.items[i].DebitAmount,
                        CreditAmount: BIRCASInventoryJournalCollectionView.items[i].CreditAmount,
                    });
                }

                BIRCASInventoryJournalCollectionView.moveToNextPage();
                if (p == BIRCASInventoryJournalCollectionView.pageCount) {
                    BIRCASInventoryJournalCollectionView.moveToPage(BIRCASInventoryJournalCurrentPageIndex - 1);
                }
            }

            var Headers = [];
            Headers.push({
                Date: "Date",
                ReferenceNumber: "Reference Number",
                AccountCode: "Account Code",
                Account: "Account",
                Item: "Item",
                DebitAmount: "Debit Amount",
                CreditAmount: "Credit Amount"
            });

            var header = '';
            for (var b in Headers[0]) {
                header += '"' + Headers[0][b] + '",';
            }

            CSV = header + '\r\n';
            for (var i = 0; i < BIRCASInventoryJournal.length; i++) {
                var row = '';
                for (var a in BIRCASInventoryJournal[i]) {
                    row += '"' + BIRCASInventoryJournal[i][a] + '",';
                }

                row.slice(0, row.length - 1);
                CSV += row + '\r\n';
            }

            if (CSV == '') {
                toastr.error("No data.");
            } else {
                var link = document.createElement("a");
                if (link.download !== undefined) {
                    var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", fileName);
                    link.style = "visibility:hidden";
                }

                if (navigator.msSaveBlob) {
                    link.addEventListener("click", function (event) {
                        var blob = new Blob([CSV], {
                            "type": "text/csv;charset=utf-8;"
                        });
                        navigator.msSaveBlob(blob, fileName);
                    }, false);
                }

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                toastr.success("Dowload successful.");
            }
        }

        // =====================
        // Preview and Print PDF
        // =====================
        function btnBIRCASInventoryJournalPrintPDFOnclick() {
            if (cboBIRCASInventoryJournalCompanyFilter.selectedValue != null) {
                if (cboBIRCASInventoryJournalBranchFilter.selectedValue != null) {
                    var startDate = cboBIRCASInventoryJournalStartDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                    var endDate = cboBIRCASInventoryJournalEndDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                    var companyId = cboBIRCASInventoryJournalCompanyFilter.selectedValue;
                    var branchId = cboBIRCASInventoryJournalBranchFilter.selectedValue;

                    window.location.href = '/RepBIRCASInventoryJournal/BIRCASInventoryJournal?StartDate=' + startDate + '&EndDate=' + endDate + '&CompanyId=' + companyId + '&BranchId=' + branchId;
                } else {
                    toastr.error("Lacking Information");
                }
            } else {
                toastr.error("Lacking Information");
            }
        }

        // =============================
        // Document Ready - On load Page
        // =============================
        $(document).ready(function () {
            createCboDateRangedFilter();
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>