<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Software - Chart of Accounts</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Font-Awesome/css")
    @Styles.Render("~/Content/Software-css")
    @Styles.Render("~/WijmoCSS/Wijmo-css")
</head>
<body>
    <div id="wrapper" class="wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <br /><br /><br />
            <div class="container">
                <ul class="nav nav-pills pull-right">
                    <li class="active"><a data-toggle="pill" href="#Account">Account</a></li>
                    <li><a data-toggle="pill" href="#AccountType">Account Type</a></li>
                    <li><a data-toggle="pill" href="#AccountCashFlow">Account Cash Flow</a></li>
                    <li><a data-toggle="pill" href="#AccountCategory">Account Category</a></li>
                </ul>
                <h4>Chart of Accounts</h4>
                <hr />
                <div class="tab-content">
                    <div id="Account" class="tab-pane fade in active">
                        <!-- Account List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Account</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="button" readonly>
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </span>
                                    <input type="text" class="form-control" id="InputFilter" placeholder="Search Account">
                                </div>
                            </div>
                            <div class="col-lg-8">
                                <button class="btn btn-info pull-right" onclick="cmdAddNewAccount_OnClick()"><i class="fa fa-plus"></i> Add New Account</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="AccountGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="AccountType" class="tab-pane fade">
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Account Type</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="button" readonly>
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </span>
                                    <input type="text" class="form-control" id="InputFilter" placeholder="Search AccountType">
                                </div>
                            </div>
                            <div class="col-lg-8">
                                <button class="btn btn-info pull-right" onclick=""><i class="fa fa-plus"></i> Add New Account Type</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="AccountTypeGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="AccountCashFlow" class="tab-pane fade">
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Account Cash Flow</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="button" readonly>
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </span>
                                    <input type="text" class="form-control" id="InputFilter" placeholder="Search Account Cash Flow">
                                </div>
                            </div>
                            <div class="col-lg-8">
                                <button class="btn btn-info pull-right" onclick=""><i class="fa fa-plus"></i> Add New Account Cash Flow</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="AccountCashFlowGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="AccountCategory" class="tab-pane fade">
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Account Category</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group">
                                    <span class="input-group-btn">
                                        <button class="btn btn-default" type="button" readonly>
                                            <i class="fa fa-search"></i>
                                        </button>
                                    </span>
                                    <input type="text" class="form-control" id="InputFilter" placeholder="Search AccountCategory">
                                </div>
                            </div>
                            <div class="col-lg-8">
                                <button class="btn btn-info pull-right" onclick=""><i class="fa fa-plus"></i> Add New Account Category</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="AccountCategoryGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- =================== -->
        <!-- Account Edit Detail -->
        <!-- =================== -->
        <div class="modal fade" id="accountEdit" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="accountModalLabel">Account Detail</h4>
                    </div>
                    <div class="modal-body">
                        <form id="branchDetailForm">
                            <dl class="dl-horizontal">
                                <dd><input type="hidden" class="form-control" id="account_id" /></dd>
                                <dt>Code:</dt>
                                <dd><input type="text" class="form-control requiredAccount" id="account_code" /></dd>
                                <dt>Account:</dt>
                                <dd><input type="text" class="form-control requiredAccount" id="account_account" /></dd>
                                <dt>Account Type:</dt>
                                <dd>
                                    <div id="account_type_id" class="comboBox-wide"></div>

                                    <input type="hidden" class="requiredAccount" id="account_type_id_data" required />
                                    <input type="hidden" id="account_type_selectedValue" />
                                </dd>
                                <dt>Cash Flow:</dt>
                                <dd>
                                    <div id="account_cash_flow_id" class="comboBox-wide"></div>

                                    <input type="hidden" class="requiredAccount" id="account_cash_flow_id_data" required />
                                    <input type="hidden" id="account_cash_flow_selectedValue" />
                                </dd>
                            </dl>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary" id="cmdAddAccountButton" onclick="cmdAccountAddButton_OnClick()"><i class="fa fa-plus"></i> Add</button>
                        <button class="btn btn-success" id="cmdUpdateAccountButton" onclick="cmdAccountUpdateButton_OnClick()"><i class="fa fa-check"></i> Update</button>
                        <button type="button" id="cmdAccountDetailCloseButton" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- ============== -->
        <!-- Account Delete -->
        <!-- ============== -->
        <div class="modal fade" id="deleteAccountConfirm" role="dialog">
            <div class="modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Delete Account <i class="fa fa-trash"></i></h4>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this?
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger" id="cmdConfirmDeleteAccount" onclick="cmdAccountConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                        <button type="button" id="cmdConfirmDeleteCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">
                        <h4>Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    @Scripts.Render("~/Scripts/Software-js")
    @Scripts.Render("~/WijmoScripts/Wijmo-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var accounts;
        var accountGrid;

        var cboAccountType;
        var cboAccountCashFlow;

        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;

        // ================
        // GET Account Type
        // ================
        function getAccountType() {
            var accountTypes = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccountType',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accountTypes.push({
                                AccountTypeId: results[i]["Id"],
                                AccountTypeCode: results[i]["AccountTypeCode"],
                                AccountType: results[i]["AccountType"],
                                AccountCategoryId: results[i]["AccountCategoryId"]
                            });
                        }
                        createCboAccountType(accountTypes);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
            );
        }

        // ==========================
        // Combo Box for Account Type
        // ==========================
        function createCboAccountType(accountTypes) {
            var accountCollections = new wijmo.collections.CollectionView(accountTypes);
            var accountList = new Array();
            for (var i = 0; i < accountCollections.items.length; i++) {
                accountList.push(accountCollections.items[i].AccountType);
            }

            cboAccountType.dispose();
            cboAccountType = new wijmo.input.ComboBox('#account_type_id', {
                placeholder: "Select a Account Type",
                itemsSource: accountList,
                isEditable: false,
                selectedValue: document.getElementById('account_type_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#account_type_id_data").val(accountCollections.items[this.selectedIndex].AccountTypeId);
                }
            });
        }

        // =====================
        // GET Account Cash Flow
        // =====================
        function getAccountCashFlow() {
            var accountCashFlows = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccountCashFlow',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accountCashFlows.push({
                                AccountCashFlowId: results[i]["Id"],
                                AccountCashFlowCode: results[i]["AccountCashFlowCode"],
                                AccountCashFlow: results[i]["AccountCashFlow"]
                            });
                        }
                        createCboAccountCashFlow(accountCashFlows);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
            );
        }

        // ===============================
        // Combo Box for Account Cash FLow
        // ===============================
        function createCboAccountCashFlow(accountCashFlows) {
            var accountCashFlowCollections = new wijmo.collections.CollectionView(accountCashFlows);
            var accountCashFlowList = new Array();
            for (var i = 0; i < accountCashFlowCollections.items.length; i++) {
                accountCashFlowList.push(accountCashFlowCollections.items[i].AccountCashFlow);
            }

            cboAccountCashFlow.dispose();
            cboAccountCashFlow = new wijmo.input.ComboBox('#account_cash_flow_id', {
                placeholder: "Select a Account Cash Flow",
                itemsSource: accountCashFlowList,
                isEditable: false,
                selectedValue: document.getElementById('account_cash_flow_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#account_cash_flow_id_data").val(accountCashFlowCollections.items[this.selectedIndex].AccountCashFlowId);
                }
            });
        }

        // ================
        // GET Account List
        // ================
        function getAccount() {
            var accounts = new wijmo.collections.ObservableArray;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            accounts.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-pencil-square'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: Results[i]["Id"],
                                AccountCode: Results[i]["AccountCode"],
                                Account: Results[i]["Account"],
                                AccountTypeId: Results[i]["AccountTypeId"],
                                AccountType: Results[i]["AccountType"],
                                AccountCashFlowId: Results[i]["AccountCashFlowId"],
                                AccountCashFlow: Results[i]["AccountCashFlow"],
                                IsLocked: Results[i]["IsLocked"],
                                CreatedById: Results[i]["CreatedById"],
                                CreatedBy: Results[i]["CreatedBy"],
                                CreatedDateTime: Results[i]["CreatedDateTime"],
                                UpdatedById: Results[i]["UpdatedById"],
                                UpdatedBy: Results[i]["UpdatedBy"],
                                UpdatedDateTime: Results[i]["UpdatedDateTime"]
                            });
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return accounts;
        }

        // ======================
        // ADD new Account Button
        // ======================
        function cmdAddNewAccount_OnClick() {
            $('#accountEdit').modal({
                show: true,
                backdrop: 'static'
            });

            getAccountType();
            getAccountCashFlow();

            $("#cmdAddAccountButton").show();
            $("#cmdUpdateAccountButton").hide();

            document.getElementById('account_id').value = 0;
            document.getElementById('account_code').value = "";
            document.getElementById('account_account').value = "";
            document.getElementById('account_type_id_data').value = "";
            document.getElementById('account_type_selectedValue').value = null;
            document.getElementById('account_cash_flow_id_data').value = "";
            document.getElementById('account_cash_flow_selectedValue').value = null;

            cboAccountType.disable = true;
        }

        // =================
        // Account Add Button
        // =================
        function cmdAccountAddButton_OnClick() {
            var accountObject = new Object();

            accountObject.AccountCode = document.getElementById('account_code').value;
            accountObject.Account = document.getElementById('account_account').value;
            accountObject.AccountTypeId = document.getElementById('account_type_id_data').value;
            accountObject.AccountCashFlowId = document.getElementById('account_cash_flow_id_data').value;
            var data = JSON.stringify(accountObject);

            var isValid = true;
            $('.requiredAccount').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "2px solid red",
                        "transition": "border 1s ease 0s"
                    });
                }
                else {
                    $(this).css({
                        "border": "1px solid blue",
                    });
                }
            });
            if (isValid == false) {
                e.preventDefault();
            }
            else {
                $.ajax({
                    type: "POST",
                    url: '/api/addAccount',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            $("#cmdAddAccountButton").prop("disabled", true);
                            $("#cmdAccountDetailCloseButton").prop("disabled", true);
                            toastr.success("Successfully Added");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function () {
                            toastr.error("Can't Add");
                        },
                        400: function () {
                            toastr.error("Bad Request");
                        }
                    }
                });
            }
        }

        // =====================
        // UPDATE Account Button
        // =====================
        function cmdAccountUpdateButton_OnClick() {
            var accountObject = new Object();
            var accountId = document.getElementById('account_id').value;

            accountObject.AccountCode = document.getElementById('account_code').value;
            accountObject.Account = document.getElementById('account_account').value;
            accountObject.AccountTypeId = document.getElementById('account_type_id_data').value;
            accountObject.AccountCashFlowId = document.getElementById('account_cash_flow_id_data').value;
            var data = JSON.stringify(accountObject);

            var isValid = true;
            $('.requiredAccount').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "2px solid red",
                        "transition": "border 1s ease 0s"
                    });
                }
                else {
                    $(this).css({
                        "border": "1px solid blue",
                    });
                }
            });
            if (isValid == false) {
                e.preventDefault();
            }
            else {
                $.ajax({
                    type: "PUT",
                    url: '/api/updateAccount/' + accountId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            $("#cmdUpdateAccountButton").prop("disabled", true);
                            $("#cmdAccountDetailCloseButton").prop("disabled", true);
                            toastr.success("Successfully Updated");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function () {
                            toastr.error("Can't Update");
                        },
                        400: function () {
                            toastr.error("Bad Request");
                        }
                    }
                });
            }
        }

        // ===================
        // EDIT Account Button
        // ===================
        function cmdAccountEditButton_OnClick() {
            accounts.editItem(accounts.currentItem);
            $('#accountEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#cmdUpdateAccountButton").show();
            $("#cmdAddAccountButton").hide();

            getAccountType();
            getAccountCashFlow();

            var account = accounts.currentEditItem;
            document.getElementById('account_id').value = account.Id !== null && typeof (account.Id) != 'undefined' ? wijmo.Globalize.format(account.Id) : '';
            document.getElementById('account_code').value = account.AccountCode ? account.AccountCode : '';
            document.getElementById('account_account').value = account.Account ? account.Account : '';
            document.getElementById('account_type_id_data').value = account.AccountTypeId ? account.AccountTypeId : '';
            document.getElementById('account_type_selectedValue').value = account.AccountType ? account.AccountType : '';
            document.getElementById('account_cash_flow_id_data').value = account.AccountCashFlowId ? account.AccountCashFlowId : '';
            document.getElementById('account_cash_flow_selectedValue').value = account.AccountCashFlow ? account.AccountCashFlow : '';
        }

        // ======================
        // DELETE Account Buttons
        // ======================
        function cmdAccountDeleteButton_OnClick() {
            $('#deleteAccountConfirm').modal({
                show: true,
                backdrop: 'static'
            });
        }
        // Account Confirm Delete Button
        function cmdAccountConfirmDeleteButton_OnClick() {
            accounts.editItem(accounts.currentItem);
            var id = accounts.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteAccount/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteAccount").prop("disabled", true);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deleteAccountConfirm').modal('hide');
                    },
                    400: function () {
                        toastr.error("Can't be deleted");
                        $('#deleteAccountConfirm').modal('hide');
                    }
                }
            });
        }

        // ===================
        // FlexGrid Selection
        // ===================
        function updateDetails() {
            var item = accounts.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ===============================
        // Navigation Buttons for Comapany
        // ===============================
        function updateNavigateButtonsAccount() {
            if (accounts.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            if (accounts.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (accounts.pageIndex === (accounts.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (accounts.pageIndex + 1) + ' / ' + accounts.pageCount;
        }

        // ============
        // On Page Load
        // ============
        $(document).ready(function () {
            document.getElementById('StampSecurity').innerHTML = 'Chart of Account Stamp';

            toastr.options = {
                "closeButton": true,
                "debug": true,
                "newestOnTop": true,
                "progressBar": true,
                "positionClass": "toast-top-right",
                "preventDuplicates": true,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            }

            accounts = new wijmo.collections.CollectionView(getAccount());
            accounts.canFilter = true;
            accounts.pageSize = 10;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                accounts.refresh();
            });
            accounts.filter = function (item) {
                return !filterText || (item.Account.toLowerCase().indexOf(filterText) > -1);
            }
            accounts.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsAccount();
            });
            accounts.currentChanged.addHandler(function (sender, args) {
                updateDetails();
            });

            cboAccountType = new wijmo.input.ComboBox('#account_type_id');
            cboAccountCashFlow = new wijmo.input.ComboBox('#account_cash_flow_id');

            // Flex Grid
            accountGrid = new wijmo.grid.FlexGrid('#AccountGrid');
            accountGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Code",
                                "binding": "AccountCode",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Account",
                                "binding": "Account",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Account Type",
                                "binding": "AccountType",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Cash Flow",
                                "binding": "AccountCashFlow",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: accounts,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            accountGrid.trackChanges = true;

            //Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtonsAccount();

            btnFirstPageGrid.addEventListener('click', function () {
                accounts.moveToFirstPage();
                updateNavigateButtonsAccount();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                accounts.moveToPreviousPage();
                updateNavigateButtonsAccount();
            });
            btnNextPageGrid.addEventListener('click', function () {
                accounts.moveToNextPage();
                updateNavigateButtonsAccount();
            });
            btnLastPageGrid.addEventListener('click', function () {
                accounts.moveToLastPage();
                updateNavigateButtonsAccount();
            });
        });
    </script>
</body>
</html>