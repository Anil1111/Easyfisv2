<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Out</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock Out <br />  <small>@ViewData["Company"] &nbsp; | &nbsp; @ViewData["Branch"]</small>
                    </h3>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control " id="InputFilter" placeholder="Search">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 40%" align="right">
                                    <button class="btn btn-primary " id="btnAddStockOut" onclick="btnAddStockOut_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                    <button class="btn btn-danger " id="btnCloseStockOut" onclick="btnCloseStockOut_OnClick()"><i class=" fa fa-times"></i> Close</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 29%">
                                    <div class="input-group ">
                                        <span class="input-group-addon">Start Date</span>
                                        <div id="filterDate"></div>
                                        <input type="hidden" id="filterDate_data" />
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 29%">
                                    <div class="input-group ">
                                        <span class="input-group-addon">End Date</span>
                                        <div id="filterEndDate"></div>
                                        <input type="hidden" id="filterEndDate_data" />
                                    </div>
                                </td>
                                <td style="width: 41%"></td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="StockOutGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    <!-- Stock Out Delete -->
    <div class="modal fade" id="deleteStockOutConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Stock <i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger " id="cmdConfirmDeleteStockOut" onclick="cmdStockOutConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary " data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Lock -->
    <div class="modal fade" id="deleteRecordLock" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Record Locked <i class="fa fa-lock"></i></h4>
                </div>
                <div class="modal-body">
                    Sorry, the record is lock! It can't be deleted!
                </div>
                <div class="modal-footer">
                    <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary " data-dismiss="modal"> Okay</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var stockOuts;
        var stockOutGrid;
        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;

        var isFirstSelect = true;
        var isFirstSelectEndDate = true;

        // ==================
        // GET Stock out List
        // ==================
        function getStockOutFilterByOUTdate() {
            var stockOuts = new wijmo.collections.ObservableArray;
            NProgress.start();

            var startDate = document.getElementById("filterDate_data").value;
            var endDate = document.getElementById("filterEndDate_data").value;

            $.ajax({
                url: '/api/listStockOutFilterByOTDate/' + startDate + '/' + endDate,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {

                            var canDelete = "@ViewData["CanDelete"]";
                            var deleteDisabled;

                            if (canDelete == "True") {
                                deleteDisabled = "";
                            } else if (canDelete == "False") {
                                deleteDisabled = "disabled";
                            } else {
                                deleteDisabled = "disabled";
                            }

                            var btnDeleteId;
                            if (Results[i]["IsLocked"] == true) {
                                btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='cmdStockOutDeleteLockButton_OnClick()' " + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                            } else {
                                btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='cmdStockOutDeleteButton_OnClick()' " + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                            }

                            var canEdit = "@ViewData["CanEdit"]";
                            var editDisabled;

                            if (canEdit == "True") {
                                editDisabled = "";
                            } else if (canEdit == "False") {
                                editDisabled = "disabled";
                            } else {
                                editDisabled = "disabled";
                            }

                            stockOuts.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='stockOutEditButton' onclick='cmdStockOutEditButton_OnClick()'" + editDisabled + "><i class='fa fa-edit'></i> Edit</button>",
                                DeleteId: btnDeleteId,
                                Id: Results[i]["Id"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                OTNumber: Results[i]["OTNumber"],
                                OTDate: Results[i]["OTDate"],
                                AccountId: Results[i]["AccountId"],
                                Account: Results[i]["Account"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                Particulars: Results[i]["Particulars"],
                                ManualOTNumber: Results[i]["ManualOTNumber"],
                                PreparedById: Results[i]["PreparedById"],
                                PreparedBy: Results[i]["PreparedBy"],
                                CheckedById: Results[i]["CheckedById"],
                                CheckedBy: Results[i]["CheckedBy"],
                                ApprovedById: Results[i]["ApprovedById"],
                                ApprovedBy: Results[i]["ApprovedBy"],
                                IsLocked: Results[i]["IsLocked"],
                                CreatedById: Results[i]["CreatedById"],
                                CreatedBy: Results[i]["CreatedBy"],
                                CreatedDateTime: Results[i]["CreatedDateTime"],
                                UpdatedById: Results[i]["UpdatedById"],
                                UpdatedBy: Results[i]["UpdatedBy"],
                                UpdatedDateTime: Results[i]["UpdatedDateTime"]
                            });
                        }
                    }
                    NProgress.done();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return stockOuts;
        }

        // ============================
        // Stock Out Delete Lock Button
        // ============================
        function cmdStockOutDeleteLockButton_OnClick() {
            toastr.error("Record Locked")
        }

        // ====================
        // Stock Out Add Button
        // ====================
        function btnAddStockOut_OnClick() {
            //window.location = '/Software/StockOutDetail';
            document.getElementById('btnAddStockOut').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Adding";
            $('#btnAddStockOut').prop('disabled', true);
            $('#btnCloseStockOut').prop('disabled', true);

            var canAccessToDetailPage = "@ViewData["CanAccessToDetailPage"]";
            if (canAccessToDetailPage == "True") {
                $.ajax({
                    type: "POST",
                    url: '/api/addStockOut',
                    contentType: "application/json; charset=utf-8",
                    success: function (id) {
                        if (id > 0) {
                            window.location = '/Software/StockOutDetail?StockOutId=' + id;
                        } else {
                            toastr.error("Internal Server Error");
                        }
                    }
                });
            } else if (canAccessToDetailPage == "False") {
                window.location = '/Software/Forbidden';
            } else {
                document.getElementById('btnAddStockOut').innerHTML = "<i class='fa fa-plus'></i> Add";
                $('#btnAddStockOut').prop('disabled', true);
                $('#btnCloseStockOut').prop('disabled', true);
            }
        }

        // =====================
        // Stock In Close Button
        // =====================
        function btnCloseStockOut_OnClick() {
            window.location = '/Software';
        }

        // =====================
        // Stock out Edit Button
        // =====================
        function cmdStockOutEditButton_OnClick() {
            stockOuts.editItem(stockOuts.currentItem);
            var stockOut = stockOuts.currentEditItem;
            var stockOutId = stockOut.Id;
            window.location = '/Software/StockOutDetail?StockOutId=' + stockOutId;
        }

        // =======================
        // Stock out delete Button
        // =======================
        function cmdStockOutDeleteButton_OnClick() {
            $('#deleteStockOutConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdConfirmDeleteStockOut').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#cmdConfirmDeleteStockOut").prop("disabled", false);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
        }
        // Stock out Confirm Delete Button
        function cmdStockOutConfirmDeleteButton_OnClick() {
            document.getElementById('cmdConfirmDeleteStockOut').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $("#cmdConfirmDeleteStockOut").prop("disabled", true);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", true);

            stockOuts.editItem(stockOuts.currentItem);
            var id = stockOuts.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteStockOut/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteStockOut").prop("disabled", true);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", true);
                        toastr.success("Delete Successful");

                        $('#deleteStockOutConfirm').modal('hide');

                        var OUTdateFilter = document.getElementById('filterDate_data').value;
                        stockOuts = new wijmo.collections.CollectionView(getStockOutFilterByOUTdate());
                        stockOuts.canFilter = true;
                        stockOuts.pageSize = 15;

                        var filterText = '';
                        $('#InputFilter').keyup(function () {
                            filterText = this.value.toLowerCase();
                            stockOuts.refresh();
                        });
                        stockOuts.filter = function (item) {
                            return !filterText || (item.OTNumber.toLowerCase().indexOf(filterText) > -1)
                                               || (item.Account.toLowerCase().indexOf(filterText) > -1);
                        }
                        stockOuts.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtonsStockOut();
                        });
                        stockOuts.currentChanged.addHandler(function (sender, args) {
                            updateDetails();
                        });

                        // Flex Grid
                        stockOutGrid.itemsSource = stockOuts;
                        stockOutGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $('#deleteStockOutConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockOut").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deleteStockOutConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockOut").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    }
                }
            });
        }
        // ===================
        // FlexGrid Selection
        // ===================
        function updateDetails() {
            var item = stockOuts.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ===============================
        // Navigation Buttons for Comapany
        // ===============================
        function updateNavigateButtonsStockOut() {
            if (stockOuts.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            if (stockOuts.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (stockOuts.pageIndex === (stockOuts.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (stockOuts.pageIndex + 1) + ' / ' + stockOuts.pageCount;
        }

        // ===========
        // Onload Page
        // ===========
        $(document).ready(function () {
            var OUTDateFilter_Date = new Date();
            document.getElementById("filterDate_data").value = [OUTDateFilter_Date.getMonth() + 1, OUTDateFilter_Date.getDate(), OUTDateFilter_Date.getFullYear()].join('-');
            document.getElementById("filterEndDate_data").value = [OUTDateFilter_Date.getMonth() + 1, OUTDateFilter_Date.getDate(), OUTDateFilter_Date.getFullYear()].join('-');

            var cboFilterDate;
            cboFilterDate = new wijmo.input.InputDate('#filterDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    if (!isFirstSelect) {
                        document.getElementById('filterDate_data').value = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                        var OUTDateFilterValue = document.getElementById('filterDate_data').value;

                        $('body').removeClass('modal-open');
                        $(".modal-backdrop").remove();

                        stockOuts = new wijmo.collections.CollectionView(getStockOutFilterByOUTdate(OUTDateFilterValue));
                        stockOuts.canFilter = true;
                        stockOuts.pageSize = 15;

                        var filterText = '';
                        $('#InputFilter').keyup(function () {
                            filterText = this.value.toLowerCase();
                            stockOuts.refresh();
                        });
                        stockOuts.filter = function (item) {
                            return !filterText || (item.OTNumber.toLowerCase().indexOf(filterText) > -1)
                                               || (item.Account.toLowerCase().indexOf(filterText) > -1);
                        }
                        stockOuts.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtonsStockOut();
                        });
                        stockOuts.currentChanged.addHandler(function (sender, args) {
                            updateDetails();
                        });

                        stockOutGrid.itemsSource = stockOuts;
                        stockOutGrid.trackChanges = true;

                        updateNavigateButtonsStockOut();
                    }
                    else {
                        isFirstSelect = false;
                    }
                }
            });

            var cboFilterEndDate;
            cboFilterEndDate = new wijmo.input.InputDate('#filterEndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    if (!isFirstSelectEndDate) {
                        document.getElementById('filterEndDate_data').value = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                        var OUTDateFilterValue = document.getElementById('filterEndDate_data').value;

                        $('body').removeClass('modal-open');
                        $(".modal-backdrop").remove();

                        stockOuts = new wijmo.collections.CollectionView(getStockOutFilterByOUTdate(OUTDateFilterValue));
                        stockOuts.canFilter = true;
                        stockOuts.pageSize = 15;

                        var filterText = '';
                        $('#InputFilter').keyup(function () {
                            filterText = this.value.toLowerCase();
                            stockOuts.refresh();
                        });
                        stockOuts.filter = function (item) {
                            return !filterText || (item.OTNumber.toLowerCase().indexOf(filterText) > -1)
                                               || (item.Account.toLowerCase().indexOf(filterText) > -1);
                        }
                        stockOuts.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtonsStockOut();
                        });
                        stockOuts.currentChanged.addHandler(function (sender, args) {
                            updateDetails();
                        });

                        stockOutGrid.itemsSource = stockOuts;
                        stockOutGrid.trackChanges = true;

                        updateNavigateButtonsStockOut();
                    }
                    else {
                        isFirstSelectEndDate = false;
                    }
                }
            });


            var OUTdateFilter = document.getElementById('filterDate_data').value;
            stockOuts = new wijmo.collections.CollectionView(getStockOutFilterByOUTdate());
            stockOuts.canFilter = true;
            stockOuts.pageSize = 15;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockOuts.refresh();
            });
            stockOuts.filter = function (item) {
                return !filterText || (item.OTNumber.toLowerCase().indexOf(filterText) > -1)
                                   || (item.Account.toLowerCase().indexOf(filterText) > -1);
            }
            stockOuts.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsStockOut();
            });
            stockOuts.currentChanged.addHandler(function (sender, args) {
                updateDetails();
            });

            // Flex Grid
            stockOutGrid = new wijmo.grid.FlexGrid('#StockOutGrid');
            stockOutGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "OUT Number",
                                "binding": "OTNumber",
                                "allowSorting": true,
                                "width": 120,
                            },
                            {
                                "header": "OUT Date",
                                "binding": "OTDate",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Account",
                                "binding": "Account",
                                "allowSorting": true,
                                "width": 670
                            },
                            {
                                "header": "L",
                                "binding": "IsLocked",
                                "align": "center",
                                "allowSorting": true,
                                "width": 50
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: stockOuts,
                isReadOnly: true,
                //frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockOutGrid.trackChanges = true;

            //Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtonsStockOut();

            btnFirstPageGrid.addEventListener('click', function () {
                stockOuts.moveToFirstPage();
                updateNavigateButtonsStockOut();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                stockOuts.moveToPreviousPage();
                updateNavigateButtonsStockOut();
            });
            btnNextPageGrid.addEventListener('click', function () {
                stockOuts.moveToNextPage();
                updateNavigateButtonsStockOut();
            });
            btnLastPageGrid.addEventListener('click', function () {
                stockOuts.moveToLastPage();
                updateNavigateButtonsStockOut();
            });

            var canAdd = "@ViewData["CanAdd"]";
            if (canAdd == "True") {
                $("#btnAddStockOut").prop("disabled", false)
            } else if (canAdd == "False") {
                $("#btnAddStockOut").prop("disabled", true)
            } else {
                $("#btnAddStockOut").prop("disabled", true)
            }
        });
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>