<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title> Account Ledger</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body class="hold-transition skin-blue fixed sidebar-mini">
    <div class="wrapper">
        @Html.Partial("_SoftwareHeader")
        @Html.Partial("_SoftwareSideBarMenu")

        <div class="content-wrapper">
            <section class="content-header">
                <h1>
                    Account Ledger
                    <small><i class="fa fa-building"></i> @ViewData["Company"] / @ViewData["Branch"]</small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="/Software"> Dashboard</a></li>
                    <li> <a href="/Software/FinancialStatements"> Financial Statements</a></li>
                    <li> Account Ledger </li>
                </ol>
            </section>

            <section class="content">
                <div class="box box-default">
                    <div class="box-header">
                        <br />
                        <div class="row">
                            <div class="col-md-6">
                                <h4>
                                    <span id="accountTitle"></span>
                                    <small>
                                        <i class="fa fa-calendar fa-fw"></i> <span id="jdate"></span>
                                    </small>
                                </h4>
                              
                            </div>
                            <div class="col-md-6" align="right">
                                <button onclick="FinancialStatementAccountLedgerPDF_OnClick()" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                            </div>
                        </div>
                    </div>
                    <div class="box-body">
                        <div id="accountLedgerGrid" class="grid"></div>
                        <br /><br /><br />
                        <div align="right">
                            <table>
                                <tr>
                                    <td align="right">
                                        <b>Total Debit: </b>
                                    </td>
                                    <td style="padding-left: 50px"></td>
                                    <td align="right">
                                        <span id="totalDebit"></span>
                                    </td>
                                </tr>
                                <tr>
                                    <td align="right">
                                        <b>Total Credit: </b>
                                    </td>
                                    <td style="padding-left: 50px"></td>
                                    <td align="right">
                                        <span id="totalCredit"></span>
                                    </td>
                                </tr>
                                <tr>
                                    <td style="padding-top: 50px" align="right">
                                        <b>Total Balance: </b>
                                    </td>
                                    <td style="padding-left: 50px; padding-top: 50px"></td>
                                    <td align="right" style="padding-top: 50px">
                                        <span id="totalBalance"></span>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        @Html.Partial("_SoftwareFooter")
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        var accountLedgerGrid;

        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        function getAccountLedger() {
            NProgress.start();
            var accountLedgers = new wijmo.collections.ObservableArray;
            document.getElementById("jdate").innerHTML = "Date from " + getParam("StartDate") + " to " + getParam("EndDate");
            $.ajax({
                url: '/api/accountLedger/list/' + getParam("StartDate") + "/" + getParam("EndDate") + "/" + getParam("CompanyId") + "/" + getParam("AccountId"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (Results) {
                    if (Results.length > 0) {
                        var totalDebit = 0;
                        var totalCredit = 0;
                        var totalBalance = 0;

                        for (i = 0; i < Results.length; i++) {
                            document.getElementById("accountTitle").innerHTML = Results[i]["AccountCode"] + " - " + Results[i]["Account"];

                            var docRefLink;
                            if (Results[i]["ORId"] != null) {
                                docRefLink = "/Software/CollectionDetail?CollectonId=" + Results[i]["ORId"];
                            } else if (Results[i]["CVId"] != null) {
                                docRefLink = "/Software/DisbursementDetail?DisbursementId=" + Results[i]["ORId"];
                            } else if (Results[i]["JVId"] != null) {
                                docRefLink = "/Software/JournalVoucherDetail?JournalVoucherId=" + Results[i]["JVId"];
                            } else if (Results[i]["RRId"] != null) {
                                docRefLink = "/Software/ReceivingReceiptDetail?ReceivingReceiptId=" + Results[i]["RRId"];
                            } else if (Results[i]["SIId"] != null) {
                                docRefLink = "/Software/SalesDetail?SalesId=" + Results[i]["SIId"];
                            } else if (Results[i]["INId"] != null) {
                                docRefLink = "/Software/StockInDetail?StockInId=" + Results[i]["INId"];
                            } else if (Results[i]["OTId"] != null) {
                                docRefLink = "/Software/StockOutDetail?StockOutId=" + Results[i]["OTId"];
                            } else if (Results[i]["STId"] != null) {
                                docRefLink = "/Software/StockTransferDetail?StockTransferId=" + Results[i]["STId"];
                            } else {
                                docRefLink = "#";
                            }

                            totalDebit = totalDebit + Results[i]["DebitAmount"];
                            totalCredit = totalCredit + Results[i]["CreditAmount"];
                            totalBalance = totalBalance + Results[i]["DebitAmount"];

                            accountLedgers.push({
                                AccountId: Results[i]["AccountId"],
                                AccountCode: Results[i]["AccountCode"],
                                Account: Results[i]["Account"],
                                JournalDate: Results[i]["JournalDate"],
                                DocumentReference: "<a href='" + docRefLink + "' class='btn btn-default btn-xs btn-block'> " + Results[i]["DocumentReference"] + "</a>",
                                Article: Results[i]["Article"],
                                Particulars: Results[i]["Particulars"],
                                DebitAmount: Results[i]["DebitAmount"],
                                CreditAmount: Results[i]["CreditAmount"],
                                Balance: Results[i]["DebitAmount"] - Results[i]["CreditAmount"],
                                ORId: Results[i]["ORId"],
                                CVId: Results[i]["CVId"],
                                JVId: Results[i]["JVId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"]
                            });
                        }

                        document.getElementById("totalDebit").innerHTML = totalDebit.toLocaleString();
                        document.getElementById("totalCredit").innerHTML = totalCredit.toLocaleString();
                        document.getElementById("totalBalance").innerHTML = totalBalance.toLocaleString();
                    }
                    NProgress.done();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });

            return accountLedgers;
        }

        function FinancialStatementAccountLedgerPDF_OnClick() {
            window.location.href = '/RepAccountLedger/AccountLedger?StartDate=' + getParam("StartDate") + '&EndDate=' + getParam("EndDate") + '&CompanyId=' + getParam("CompanyId") + '&AccountId=' + getParam("AccountId");
        }

        $(document).ready(function () {
            var accountLedgers = new wijmo.collections.CollectionView(getAccountLedger());

            // Flex Grid
            accountLedgerGrid = new wijmo.grid.FlexGrid('#accountLedgerGrid');
            accountLedgerGrid.initialize({
                columns: [
                            {
                                "header": "Date",
                                "binding": "JournalDate",
                                "allowSorting": true,
                                "width": "1.5*",
                            },
                            {
                                "header": "Document Reference ",
                                "binding": "DocumentReference",
                                "width": "2.3*",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Article",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "2.5*"
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": "3.5*"
                            },
                            {
                                "header": "Debit",
                                "binding": "DebitAmount",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Credit",
                                "binding": "CreditAmount",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Balance",
                                "binding": "Balance",
                                "allowSorting": true,
                                "width": "2*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: accountLedgers,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            accountLedgerGrid.trackChanges = true;
        });
    </script>
</body>
</html>