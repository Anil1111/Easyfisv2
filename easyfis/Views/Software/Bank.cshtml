<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Bank</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <div class="sub-nav">
                <div class="container">
                    <h4><i class="fa fa-university"></i> Bank</h4>
                </div>
                <div class="div_Current_Page">
                    <div class="container">
                        <a href="@Url.Action("Index", "Software")" class="currentPageLinkCustom">Main Menu</a> > Bank
                    </div>
                </div>
            </div>
            <div class="container">
                <!-- User List -->
                <div id="">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="input-group input-group-sm">
                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                <input type="text" class="form-control input-sm" id="InputFilter" placeholder="Search">
                            </div>
                        </div>
                        <div class="col-lg-8" align="right">
                            <a href="#" class="btn btn-primary btn-sm" id="cmdAddBank" onclick="bankAddbutton_OnClick()"><i class="fa fa-plus"></i> Add</a>
                            <a href="@Url.Action("Index", "Software")" class="btn btn-danger btn-sm" id="cmdCloseButtonCompany"><i class="fa fa-times"></i> Close</a>
                        </div>
                    </div>
                    <br />
                    <div class="row" align="left">
                        <div class="col-lg-12">
                            <div id="BankGrid" class="grid" align="left"></div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="btn-group col-md-7" id="naviagtionPageGrid">
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                <span class="glyphicon glyphicon-fast-backward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                <span class="glyphicon glyphicon-step-backward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                <span class="glyphicon glyphicon-step-forward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                <span class="glyphicon glyphicon-fast-forward"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Bank Modal -->
        <div class="modal fade" id="BankModal" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="BankModalLabel">Bank Detail <span id="bankLockAndUnLock"></span></h4>
                    </div>
                    <div class="modal-body">
                        <form id="bankDetailForm">
                            <input type="hidden" id="bank_Id" />
                            <dl class="dl-horizontal">
                                <dt>Code</dt>
                                <dd><input type="text" class="form-control input-sm requiredBank" id="bank_code" readonly /></dd>
                                <dt>Bank</dt>
                                <dd><input type="text" class="form-control input-sm requiredBank" id="bank_bank" /></dd>
                                <dt>Bank Group</dt>
                                <dd>
                                    <div id="bank_BankGroup" class="comboBox-wide"></div>

                                    <input type="hidden" class="requiredBank" id="bank_BankGroup_data" />
                                    <input type="hidden" id="bank_BankGroup_selectedValue" />
                                </dd>
                                <dt>Account</dt>
                                <dd>
                                    <div id="bank_Account" class="comboBox-wide"></div>

                                    <input type="hidden" class="requiredBank" id="bank_Account_data" />
                                    <input type="hidden" id="bank_Account_selectedValue" />
                                    <input type="hidden" id="bank_SalesAccountId" />
                                    <input type="hidden" id="bank_CostAccountId" />
                                    <input type="hidden" id="bank_AssetAccountId" />
                                    <input type="hidden" id="bank_ExpenseAccountId" />
                                </dd>
                                <dt>Address</dt>
                                <dd><textarea class="form-control textarea-custom requiredBank" id="bank_Address"></textarea></dd>
                                <dt>Contact Number</dt>
                                <dd><input type="text" class="form-control input-sm requiredBank" id="bank_ContactNumber" /></dd>
                                <dt>Contect Person</dt>
                                <dd><input type="text" class="form-control input-sm requiredBank" id="branch_ContactPerson" /></dd>
                                <dt>Lock (Edit)</dt>
                                <dd><input type="checkbox" id="bank_Lock" /></dd>
                            </dl>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary btn-sm" id="cmdBankSave" onclick="btnAddBank_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button type="button" id="cmdBankCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Bank Delete -->
        <div class="modal fade" id="deleteBankConfirm" role="dialog">
            <div class="modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Delete Bank <i class="fa fa-trash"></i></h4>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this?
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger btn-sm" id="cmdDeleteBank" onclick="btnConfirmDeleteBank_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                        <button id="cmdConfirmDeleteBankCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Delete Lock -->
        <div class="modal fade" id="deleteRecordLock" role="dialog">
            <div class="modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Record Locked <i class="fa fa-lock"></i></h4>
                    </div>
                    <div class="modal-body">
                        Sorry, the record is lock! It can't be deleted!
                    </div>
                    <div class="modal-footer">
                        <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"> Okay</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">
                        <h4>Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var banks;
        var bankGrid;
        var bankAccounts;
        var bankArticleGroups;
        var cboBankForAccount;
        var cboArticleGroup;
        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;

        // ==============================
        // Get Data from MstArtcile Table
        // ==============================
        function getArtcileForBank() {
            var banks = new wijmo.collections.ObservableArray;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listArticleByArticleTypeId/5',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            if(Results[i]["IsLocked"] == true) {
                                banks.push ({
                                    EditId: "<button class='btn btn-primary btn-xs btn-block' id='' onclick='cmdBankEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='' onclick='cmdBankDeleteLockButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                    Id: Results[i]["Id"],
                                    ArticleCode : Results[i]["ArticleCode"],
                                    ManualArticleCode : Results[i]["ManualArticleCode"],
                                    Article : Results[i]["Article"],
                                    Category : Results[i]["Category"],
                                    ArticleTypeId : Results[i]["ArticleTypeId"],
                                    ArticleType : Results[i]["ArticleType"],
                                    ArticleGroupId : Results[i]["ArticleGroupId"],
                                    ArticleGroup : Results[i]["ArticleGroup"],
                                    AccountId : Results[i]["AccountId"],
                                    Account : Results[i]["Account"],
                                    SalesAccountId : Results[i]["SalesAccountId"],
                                    CostAccountId : Results[i]["CostAccountId"],
                                    AssetAccountId : Results[i]["AssetAccountId"],
                                    ExpenseAccountId : Results[i]["ExpenseAccountId"],
                                    UnitId : Results[i]["UnitId"],
                                    OutputTaxId : Results[i]["OutputTaxId"],
                                    InputTaxId : Results[i]["InputTaxId"],
                                    WTaxTypeId : Results[i]["WTaxTypeId"],
                                    Price : Results[i]["Price"],
                                    Cost : Results[i]["Cost"],
                                    IsInventory : Results[i]["IsInventory"],
                                    Particulars : Results[i]["Particulars"],
                                    Address : Results[i]["Address"],
                                    TermId : Results[i]["TermId"],
                                    ContactNumber : Results[i]["ContactNumber"],
                                    ContactPerson : Results[i]["ContactPerson"],
                                    TaxNumber : Results[i]["TaxNumber"],
                                    CreditLimit : Results[i]["CreditLimit"],
                                    DateAcquired : Results[i]["DateAcquired"],
                                    UsefulLife : Results[i]["UsefulLife"],
                                    SalvageValue : Results[i]["SalvageValue"],
                                    ManualArticleOldCode : Results[i]["ManualArticleOldCode"],
                                    IsLocked: Results[i]["IsLocked"],
                                    CreatedById: Results[i]["CreatedById"],
                                    CreatedBy: Results[i]["CreatedBy"],
                                    CreatedDateTime: Results[i]["CreatedDateTime"],
                                    UpdatedById: Results[i]["UpdatedById"],
                                    UpdatedBy: Results[i]["UpdatedBy"],
                                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
                                });
                            } else {
                                banks.push ({
                                    EditId: "<button class='btn btn-primary btn-xs btn-block' id='' onclick='cmdBankEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='' onclick='cmdBankDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                    Id: Results[i]["Id"],
                                    ArticleCode : Results[i]["ArticleCode"],
                                    ManualArticleCode : Results[i]["ManualArticleCode"],
                                    Article : Results[i]["Article"],
                                    Category : Results[i]["Category"],
                                    ArticleTypeId : Results[i]["ArticleTypeId"],
                                    ArticleType : Results[i]["ArticleType"],
                                    ArticleGroupId : Results[i]["ArticleGroupId"],
                                    ArticleGroup : Results[i]["ArticleGroup"],
                                    AccountId : Results[i]["AccountId"],
                                    Account : Results[i]["Account"],
                                    SalesAccountId : Results[i]["SalesAccountId"],
                                    CostAccountId : Results[i]["CostAccountId"],
                                    AssetAccountId : Results[i]["AssetAccountId"],
                                    ExpenseAccountId : Results[i]["ExpenseAccountId"],
                                    UnitId : Results[i]["UnitId"],
                                    OutputTaxId : Results[i]["OutputTaxId"],
                                    InputTaxId : Results[i]["InputTaxId"],
                                    WTaxTypeId : Results[i]["WTaxTypeId"],
                                    Price : Results[i]["Price"],
                                    Cost : Results[i]["Cost"],
                                    IsInventory : Results[i]["IsInventory"],
                                    Particulars : Results[i]["Particulars"],
                                    Address : Results[i]["Address"],
                                    TermId : Results[i]["TermId"],
                                    ContactNumber : Results[i]["ContactNumber"],
                                    ContactPerson : Results[i]["ContactPerson"],
                                    TaxNumber : Results[i]["TaxNumber"],
                                    CreditLimit : Results[i]["CreditLimit"],
                                    DateAcquired : Results[i]["DateAcquired"],
                                    UsefulLife : Results[i]["UsefulLife"],
                                    SalvageValue : Results[i]["SalvageValue"],
                                    ManualArticleOldCode : Results[i]["ManualArticleOldCode"],
                                    IsLocked: Results[i]["IsLocked"],
                                    CreatedById: Results[i]["CreatedById"],
                                    CreatedBy: Results[i]["CreatedBy"],
                                    CreatedDateTime: Results[i]["CreatedDateTime"],
                                    UpdatedById: Results[i]["UpdatedById"],
                                    UpdatedBy: Results[i]["UpdatedBy"],
                                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
                                });
                            }
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return banks;
        }
        
        // ==========================
        // Company Delete Lock Button
        // ==========================
        function cmdBankDeleteLockButton_OnClick() {
            $('#deleteRecordLock').modal({
                show: true,
                backdrop: 'static'
            });
        }

        // =========================
        // Get Artile Supplier Group
        // =========================
        function getBankArticleGroupForComboBox() {
            bankArticleGroups = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleGroupByArticleTypeId/5',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            bankArticleGroups.push({
                                ArticleGroupId: results[i]["Id"],
                                ArticleGroupArticleGroup: results[i]["ArticleGroup"],
                                ArticleGroupAccountId: results[i]["AccountId"],
                                ArticleGroupAccount: results[i]["Account"],
                                ArticleGroupSalesAccountId: results[i]["SalesAccountId"],
                                ArticleGroupSalesAccount: results[i]["SalesAccount"],
                                ArticleGroupCostAccountId: results[i]["CostAccountId"],
                                ArticleGroupCostAccount: results[i]["CostAccount"],
                                ArticleGroupAssetAccountId: results[i]["AssetAccountId"],
                                ArticleGroupAssetAccount: results[i]["AssetAccount"],
                                ArticleGroupExpenseAccountId: results[i]["ExpenseAccountId"],
                                ArticleGroupExpenseAccount: results[i]["ExpenseAccount"]
                            });
                        }
                        createCboForBankArticleGroup(bankArticleGroups);
                    }
                }
            });
        }

        // ======================
        // CBO for Supplier Group
        // ======================
        function createCboForBankArticleGroup(bankArticleGroups) {
            var bankArticleGroupCollection = new wijmo.collections.CollectionView(bankArticleGroups);
            var articleGroupList = new Array();
            for (var i = 0; i < bankArticleGroupCollection.items.length; i++) {
                articleGroupList.push(bankArticleGroupCollection.items[i].ArticleGroupArticleGroup);
            }
        
            var disabledDropdown;
            if(document.getElementById('bank_Lock').checked == true) {
                disabledDropdown = true;
            } else {
                disabledDropdown = false;
            }

            cboArticleGroup.dispose();
            cboArticleGroup = new wijmo.input.ComboBox('#bank_BankGroup', {
                disabled: disabledDropdown,
                placeholder: "Select Bank Group",
                itemsSource: articleGroupList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('bank_BankGroup_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#bank_BankGroup_data").val(bankArticleGroupCollection.items[this.selectedIndex].ArticleGroupId);
                    $("#bank_Account_data").val(bankArticleGroupCollection.items[this.selectedIndex].ArticleGroupAccountId);
                    $("#bank_Account_selectedValue").val(bankArticleGroupCollection.items[this.selectedIndex].ArticleGroupAccount);
                    $("#bank_SalesAccountId").val(bankArticleGroupCollection.items[this.selectedIndex].ArticleGroupSalesAccountId);
                    $("#bank_CostAccountId").val(bankArticleGroupCollection.items[this.selectedIndex].ArticleGroupCostAccountId);
                    $("#bank_AssetAccountId").val(bankArticleGroupCollection.items[this.selectedIndex].ArticleGroupAssetAccountId);
                    $("#bank_ExpenseAccountId").val(bankArticleGroupCollection.items[this.selectedIndex].ArticleGroupExpenseAccountId);

                    accounts = new wijmo.collections.ObservableArray();
                    $.ajax({
                        url: '/api/listAccount',
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        data: {},
                        success: function (results) {
                            if (results.length > 0) {
                                for (i = 0; i < results.length; i++) {
                                    accounts.push({
                                        AccountId: results[i]["Id"],
                                        AccountAccount: results[i]["Account"]
                                    });
                                }

                                var accountCollection = new wijmo.collections.CollectionView(accounts);
                                var accountList = new Array();
                                for (var i = 0; i < accountCollection.items.length; i++) {
                                    accountList.push(accountCollection.items[i].AccountAccount);
                                }

                                cboBankForAccount.dispose();
                                cboBankForAccount = new wijmo.input.ComboBox('#bank_Account', {
                                    disabled: true,
                                    placeholder: "Select Account",
                                    itemsSource: accountList,
                                    isEditable: false,
                                    required: false,
                                    selectedValue: document.getElementById('bank_Account_selectedValue').value.toString(),
                                    onSelectedIndexChanged: function () {
                                        $("#bank_Account_data").val(accountCollection.items[this.selectedIndex].AccountId);
                                    }
                                });

                            }
                        }
                    });
                }
            });
        }

        // ===========
        // Get Account
        // ===========
        function getBankAccountForComboBox() {
            bankAccounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            bankAccounts.push({
                                AccountId: results[i]["Id"],
                                AccountAccount: results[i]["Account"]
                            });
                        }
                        createCboForBankAccount(bankAccounts);
                    }
                }
            });
        }

        // ===============
        // CBO for Account
        // ===============
        function  createCboForBankAccount(bankAccounts) {
            var accountCollection = new wijmo.collections.CollectionView(bankAccounts);
            var accountList = new Array();
            for (var i = 0; i < accountCollection.items.length; i++) {
                accountList.push(accountCollection.items[i].AccountAccount);
            }

            cboBankForAccount.dispose();
            cboBankForAccount = new wijmo.input.ComboBox('#bank_Account', {
                disabled: true,
                placeholder: "Select Account",
                itemsSource: accountList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('bank_Account_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#bank_Account_data").val(accountCollection.items[this.selectedIndex].AccountId);
                }
            });
        }

        // ========================================================
        // Function with leading zeroes to display the article code
        // ========================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while(pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // ===============
        // Bank ADD Button
        // ===============
        function bankAddbutton_OnClick() {
            $('#BankModal').modal({
                show: true,
                backdrop: 'static'
            });
            
            $('.requiredBank').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#cmdBankSave").prop("disabled", false);
            $("#cmdBankCloseButton").prop("disabled", false);

            getBankArticleGroupForComboBox();
            getBankAccountForComboBox();

            document.getElementById('bank_Id').value = 0;
            //document.getElementById('bank_code').value = '';
            var banks = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/articleLastArticleCodeByArticleTypeId/5',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if(Results == null) {
                        document.getElementById('bank_code').value = '0000000001';
                    } else {
                        var ArticleCode = parseInt(Results.ArticleCode);
                        var ArticleCode_plusOne = 0000000001;
                        var ArticleCode_Results = ArticleCode + ArticleCode_plusOne;

                        document.getElementById('bank_code').value = zerofill(ArticleCode_Results, 10);
                        console.log(zerofill(ArticleCode_Results, 10));

                        //if (Results.length > 0) {
                        //    banks.push({
                        //        Id: Results.Id,
                        //        BankArticleCode: Results.ArticleCode
                        //    });
                        //} 
                    }
                }
            });

            document.getElementById('bank_bank').value = '';
            document.getElementById('bank_BankGroup_data').value = '';
            document.getElementById('bank_BankGroup_selectedValue').value = '';
            document.getElementById('bank_Account_data').value = '';
            
            document.getElementById('bank_SalesAccountId').value = '';
            document.getElementById('bank_CostAccountId').value = '';
            document.getElementById('bank_AssetAccountId').value = '';
            document.getElementById('bank_ExpenseAccountId').value = '';

            document.getElementById('bank_Account_selectedValue').value = '';
            document.getElementById('bank_Address').value = '';
            document.getElementById('bank_ContactNumber').value = '';
            document.getElementById('branch_ContactPerson').value = '';

            document.getElementById('bank_Lock').checked = false 
            if(document.getElementById('bank_Lock').checked == true) {
                document.getElementById('bank_bank').disabled = true;
                document.getElementById('bank_Address').disabled = true;
                document.getElementById('bank_ContactNumber').disabled = true;
                document.getElementById('branch_ContactPerson').disabled = true;
                //getBankArticleGroupForComboBox();
                document.getElementById('bankLockAndUnLock').innerHTML = "<i class='fa fa-lock'></i>";
            } else {
                document.getElementById('bank_bank').disabled = false;
                document.getElementById('bank_Address').disabled = false;
                document.getElementById('bank_ContactNumber').disabled = false;
                document.getElementById('branch_ContactPerson').disabled = false;
                //getBankArticleGroupForComboBox();
                document.getElementById('bankLockAndUnLock').innerHTML = "<i class='fa fa-unlock'></i>";
            }

            
        }

        // ================
        // Bank EDIT Button
        // ================
        function cmdBankEditButton_OnClick() {
            banks.editItem(banks.currentItem);
            $('#BankModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredBank').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#cmdBankSave").prop("disabled", false);
            $("#cmdBankCloseButton").prop("disabled", false);

            getBankArticleGroupForComboBox();
            getBankAccountForComboBox();

            var bank = banks.currentEditItem;
            document.getElementById('bank_Id').value = bank.Id ? bank.Id : '';
            document.getElementById('bank_code').value = bank.ArticleCode ? bank.ArticleCode : '';
            document.getElementById('bank_bank').value = bank.Article ? bank.Article : '';
            document.getElementById('bank_BankGroup_data').value = bank.ArticleGroupId ? bank.ArticleGroupId : '';
            document.getElementById('bank_BankGroup_selectedValue').value = bank.ArticleGroup ? bank.ArticleGroup : '';
            document.getElementById('bank_Account_data').value = bank.AccountId ? bank.AccountId : '';
            document.getElementById('bank_Account_selectedValue').value = bank.Account ? bank.Account : '';

            document.getElementById('bank_SalesAccountId').value = bank.SalesAccountId ? bank.SalesAccountId : '';
            document.getElementById('bank_CostAccountId').value = bank.CostAccountId ? bank.CostAccountId : '';
            document.getElementById('bank_AssetAccountId').value = bank.AssetAccountId ? bank.AssetAccountId : '';
            document.getElementById('bank_ExpenseAccountId').value = bank.ExpenseAccountId ? bank.ExpenseAccountId : '';

            document.getElementById('bank_Address').value = bank.Address ? bank.Address : '';
            document.getElementById('bank_ContactNumber').value = bank.ContactNumber ? bank.ContactNumber : '';
            document.getElementById('branch_ContactPerson').value = bank.ContactPerson ? bank.ContactPerson : '';
            document.getElementById('bank_Lock').checked = bank.IsLocked;

            if(document.getElementById('bank_Lock').checked == true) {
                document.getElementById('bank_bank').disabled = true;
                document.getElementById('bank_Address').disabled = true;
                document.getElementById('bank_ContactNumber').disabled = true;
                document.getElementById('branch_ContactPerson').disabled = true;
                getBankArticleGroupForComboBox();
                document.getElementById('bankLockAndUnLock').innerHTML = "<i class='fa fa-lock'></i>";
            } else {
                document.getElementById('bank_bank').disabled = false;
                document.getElementById('bank_Address').disabled = false;
                document.getElementById('bank_ContactNumber').disabled = false;
                document.getElementById('branch_ContactPerson').disabled = false;
                getBankArticleGroupForComboBox();
                document.getElementById('bankLockAndUnLock').innerHTML = "<i class='fa fa-unlock'></i>";
            }
        }

        // ==================
        // Bank Delete Button
        // ==================
        function cmdBankDeleteButton_OnClick() {
            $('#deleteBankConfirm').modal({
                show: true,
                backdrop: 'static'
            });
            
            $("#cmdDeleteBank").prop("disabled", false);
            $("#cmdConfirmDeleteBankCloseButton").prop("disabled", false);
        }
        // Employee Confirm Delete Button
        function btnConfirmDeleteBank_OnClick() {
            $("#cmdDeleteBank").prop("disabled", true);
            $("#cmdConfirmDeleteBankCloseButton").prop("disabled", true);

            banks.editItem(banks.currentItem);
            var id = banks.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteArticle/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdDeleteBank").prop("disabled", true);
                        $("#cmdConfirmDeleteBankCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");

                        $('#deleteBankConfirm').modal('hide');

                        banks = new wijmo.collections.CollectionView(getArtcileForBank());
                        banks.canFilter = true;
                        banks.pageSize = 15;

                        var filterText = '';
                        $('#InputFilter').keyup(function () {
                            filterText = this.value.toLowerCase();
                            banks.refresh();
                        });
                        banks.filter = function (item) {
                            return !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1);
                        }
                        banks.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtonsBank();
                        });
                        banks.currentChanged.addHandler(function (sender, args) {
                            updateDetails();
                        });

                        bankGrid.itemsSource = banks;
                        bankGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $("#cmdDeleteBank").prop("disabled", false);
                        $("#cmdConfirmDeleteBankCloseButton").prop("disabled", false);
                        $('#deleteBankConfirm').modal('hide');

                    },
                    400: function () {
                        toastr.error("Can't be deleted");
                        $("#cmdDeleteBank").prop("disabled", false);
                        $("#cmdConfirmDeleteBankCloseButton").prop("disabled", false);
                        $('#deleteBankConfirm').modal('hide');
                    }
                }
            });
        }

        // =========
        // SAVE Bank
        // =========
        function btnAddBank_OnClick() {
            var bankObject = new Object();
            var bankId = document.getElementById('bank_Id').value;
            bankObject.ArticleCode = document.getElementById('bank_code').value;
            bankObject.Article = document.getElementById('bank_bank').value;
            bankObject.ArticleGroupId = document.getElementById('bank_BankGroup_data').value;
            if(bankId == 0) {
                bankObject.AccountId = document.getElementById('bank_Account_data').value;
                bankObject.SalesAccountId = document.getElementById('bank_SalesAccountId').value;
                bankObject.CostAccountId = document.getElementById('bank_CostAccountId').value;
                bankObject.AssetAccountId = document.getElementById('bank_AssetAccountId').value;
                bankObject.ExpenseAccountId = document.getElementById('bank_ExpenseAccountId').value;
            } else {
                bankObject.AccountId = document.getElementById('bank_Account_data').value;
            }
            bankObject.Address = document.getElementById('bank_Address').value;
            bankObject.ContactNumber = document.getElementById('bank_ContactNumber').value;
            bankObject.ContactPerson = document.getElementById('branch_ContactPerson').value;
            bankObject.IsLocked = document.getElementById('bank_Lock').checked;
            var bankData = JSON.stringify(bankObject);

            if( document.getElementById('bank_BankGroup_data').value == '') {
                document.getElementById("bank_BankGroup").style.border = "1px solid red";
            } else {
                document.getElementById("bank_BankGroup").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('bank_Account_data').value == '') {
                document.getElementById("bank_Account").style.border = "1px solid red";
            } else {
                document.getElementById("bank_Account").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredBank').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                $("#cmdBankSave").prop("disabled", true);
                $("#cmdBankCloseButton").prop("disabled", true);

                if(bankId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addArticle/5',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: bankData,
                        statusCode: {
                            200: function () {
                                $("#cmdBankSave").prop("disabled", true);
                                $("#cmdBankCloseButton").prop("disabled", true);
                                toastr.success("Successfully Saved");

                                $('#BankModal').modal('hide');

                                banks = new wijmo.collections.CollectionView(getArtcileForBank());
                                banks.canFilter = true;
                                banks.pageSize = 15;

                                var filterText = '';
                                $('#InputFilter').keyup(function () {
                                    filterText = this.value.toLowerCase();
                                    banks.refresh();
                                });
                                banks.filter = function (item) {
                                    return !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1);
                                }
                                banks.collectionChanged.addHandler(function (sender, args) {
                                    updateNavigateButtonsBank();
                                });
                                banks.currentChanged.addHandler(function (sender, args) {
                                    updateDetails();
                                });

                                bankGrid.itemsSource = banks;
                                bankGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdBankSave").prop("disabled", false);
                                $("#cmdBankCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdBankSave").prop("disabled", false);
                                $("#cmdBankCloseButton").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateArticle/' + bankId + '/5',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: bankData,
                        statusCode: {
                            200: function () {
                                $("#cmdBankSave").prop("disabled", true);
                                $("#cmdBankCloseButton").prop("disabled", true);
                                toastr.success("Successfully Updated");

                                $('#BankModal').modal('hide');

                                banks = new wijmo.collections.CollectionView(getArtcileForBank());
                                banks.canFilter = true;
                                banks.pageSize = 15;

                                var filterText = '';
                                $('#InputFilter').keyup(function () {
                                    filterText = this.value.toLowerCase();
                                    banks.refresh();
                                });
                                banks.filter = function (item) {
                                    return !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1);
                                }
                                banks.collectionChanged.addHandler(function (sender, args) {
                                    updateNavigateButtonsBank();
                                });
                                banks.currentChanged.addHandler(function (sender, args) {
                                    updateDetails();
                                });

                                bankGrid.itemsSource = banks;
                                bankGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdBankSave").prop("disabled", false);
                                $("#cmdBankCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdBankSave").prop("disabled", false);
                                $("#cmdBankCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ===================
        // FlexGrid Selection
        // ===================
        function updateDetails() {
            var bank = banks.currentItem;
            document.getElementById('createdBy').innerHTML = bank.CreatedBy;
            document.getElementById('createdDate').innerHTML = bank.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = bank.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = bank.UpdatedDateTime;
        }

        // ============================
        // Navigation Buttons for Bank
        // ============================
        function updateNavigateButtonsBank() {
            if (banks.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            if (banks.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (banks.pageIndex === (banks.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (banks.pageIndex + 1) + ' / ' + banks.pageCount;
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            // Bank Lock - IsLocked
            $("#bank_Lock").click( function(){
                if( $(this).is(':checked') ) {
                    document.getElementById('bank_bank').disabled = true;
                    document.getElementById('bank_Address').disabled = true;
                    document.getElementById('bank_ContactNumber').disabled = true;
                    document.getElementById('branch_ContactPerson').disabled = true;
                    getBankArticleGroupForComboBox();
                    document.getElementById('bankLockAndUnLock').innerHTML = "<i class='fa fa-lock'></i>";
                } else {
                    document.getElementById('bank_bank').disabled = false;
                    document.getElementById('bank_Address').disabled = false;
                    document.getElementById('bank_ContactNumber').disabled = false;
                    document.getElementById('branch_ContactPerson').disabled = false;
                    getBankArticleGroupForComboBox();
                    document.getElementById('bankLockAndUnLock').innerHTML = "<i class='fa fa-unlock'></i>";
                }
            });

            cboBankForAccount = new wijmo.input.ComboBox('#bank_Account');
            cboArticleGroup = new wijmo.input.ComboBox('#bank_BankGroup');

            banks = new wijmo.collections.CollectionView(getArtcileForBank());
            banks.canFilter = true;
            banks.pageSize = 15;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                banks.refresh();
            });
            banks.filter = function (item) {
                return !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1);
            }
            banks.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsBank();
            });
            banks.currentChanged.addHandler(function (sender, args) {
                updateDetails();
            });

            // Flex Grid
            bankGrid = new wijmo.grid.FlexGrid('#BankGrid');
            bankGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Code",
                                "binding": "ArticleCode",
                                "allowSorting": true,
                                "width": "1*",
                            },
                            {
                                "header": "Bank",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Address",
                                "binding": "Address",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Contact No.",
                                "binding": "ContactNumber",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Lock",
                                "binding": "IsLocked",
                                "allowSorting": true,
                                "width": "0.5*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: banks,
                isReadOnly: true,
                //frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            bankGrid.trackChanges = true;

            //Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtonsBank();

            btnFirstPageGrid.addEventListener('click', function () {
                banks.moveToFirstPage();
                updateNavigateButtonsBank();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                banks.moveToPreviousPage();
                updateNavigateButtonsBank();
            });
            btnNextPageGrid.addEventListener('click', function () {
                banks.moveToNextPage();
                updateNavigateButtonsBank();
            });
            btnLastPageGrid.addEventListener('click', function () {
                banks.moveToLastPage();
                updateNavigateButtonsBank();
            });
        });
    </script>
</body>
</html>