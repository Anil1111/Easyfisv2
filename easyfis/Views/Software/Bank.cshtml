@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Bank</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Bank
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control " id="InputFilter" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 40%" align="right">
                                    @{
                                        if (canAdd)
                                        {
                                            <button class="btn btn-primary" id="cmdAddBank" onclick="bankAddbutton_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                        }
                                    }
                                    <a href="/Software" class="btn btn-danger" id="cmdCloseButtonCompany"><i class="fa fa-times"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">
                        <div id="BankGrid"></div>
                    </div>
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!-- Bank Modal -->
    <div class="modal fade" id="BankModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="BankModalLabel">Bank</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingBank"></span>
                    </center>
                    <div id="bankDetailForm">
                        <dl class="dl-horizontal">
                            <dt id="code">Code</dt>
                            <dd id="code_value"><input type="text" class="form-control" id="bank_code" disabled /></dd>
                            <dt>Bank</dt>
                            <dd><input type="text" class="form-control requiredBank" id="bank_bank" placeholder="Bank" /></dd>
                            <dt>Bank Group</dt>
                            <dd><div id="cboBankGroup" class="comboBox-wide"></div></dd>
                            <dt>Account</dt>
                            <dd>
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 30%">
                                            <div class="comboBox-wide" id="cboAccountCode"></div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 69%">
                                            <div class="comboBox-wide" id="cboAccount"></div>
                                        </td>
                                    </tr>
                                </table>
                            </dd>
                            <dt>Address</dt>
                            <dd><textarea class="form-control textarea-custom requiredBank" id="bank_Address" placeholder="Address" rows="5"></textarea></dd>
                            <dt>Contact Number</dt>
                            <dd><input type="text" class="form-control   requiredBank" id="bank_ContactNumber" placeholder="Contact Number" /></dd>
                            <dt>Contect Person</dt>
                            <dd><input type="text" class="form-control  requiredBank" id="branch_ContactPerson" placeholder="Contect Person" /></dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdBankSave" class="btn btn-primary" onclick="btnAddBank_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdBankCloseButton" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bank Delete -->
    <div class="modal fade" id="deleteBankConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this bank?
                </div>
                <div class="modal-footer">
                    <button id="cmdDeleteBank" class="btn btn-danger" onclick="btnConfirmDeleteBank_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteBankCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var banks;
        var bankGrid;
        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;
        var bankId = 0;
        var cboBankGroup = new wijmo.input.ComboBox('#cboBankGroup');
        var cboAccountCode = new wijmo.input.ComboBox('#cboAccountCode');
        var cboAccount = new wijmo.input.ComboBox('#cboAccount');

        // ==============================
        // Get Data from MstArtcile Table
        // ==============================
        function getArtcileForBank() {
            NProgress.start();
            var banks = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/bank/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            banks.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='' onclick='cmdBankEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdBankDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: results[i]["Id"],
                                ArticleCode: results[i]["ArticleCode"],
                                Article: results[i]["Article"],
                                ArticleGroupId: results[i]["ArticleGroupId"],
                                ArticleGroup: results[i]["ArticleGroup"],
                                AccountId: results[i]["AccountId"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                ContactPerson: results[i]["ContactPerson"],
                                IsLocked: results[i]["IsLocked"],
                                CreatedBy: results[i]["CreatedBy"],
                                CreatedDateTime: results[i]["CreatedDateTime"],
                                UpdatedBy: results[i]["UpdatedBy"],
                                UpdatedDateTime: results[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return banks;
        }

        // ===================
        // FlexGrid Selection
        // ===================
        function updateDetails() {
            var bank = banks.currentItem;
            document.getElementById('createdBy').innerHTML = bank.CreatedBy;
            document.getElementById('createdDate').innerHTML = bank.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = bank.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = bank.UpdatedDateTime;
        }

        // ============================
        // Navigation Buttons for Bank
        // ============================
        function updateNavigateButtonsBank() {
            if (banks.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            if (banks.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (banks.pageIndex === (banks.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (banks.pageIndex + 1) + ' / ' + banks.pageCount;
        }

        // =====================
        // Refresh FlexGrid Bank
        // =====================
        function refreshBankFlexGrid() {
            banks = new wijmo.collections.CollectionView(getArtcileForBank());
            banks.canFilter = true;
            banks.pageSize = 15;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                banks.refresh();
            });

            banks.filter = function (item) {
                return !filterText || (item.ArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || (item.Address.toLowerCase().indexOf(filterText) > -1)
                    || (item.ContactNumber.toLowerCase().indexOf(filterText) > -1);
            }

            banks.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsBank();
            });

            banks.currentChanged.addHandler(function (sender, args) {
                updateDetails();
            });

            // Flex Grid
            bankGrid.itemsSource = banks;
            bankGrid.trackChanges = true;
        }

        // =============
        // FlexGrid Bank
        // =============
        function createBankFlexGrid() {
            banks = new wijmo.collections.CollectionView(getArtcileForBank());
            banks.canFilter = true;
            banks.pageSize = 15;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                banks.refresh();
            });

            banks.filter = function (item) {
                return !filterText || (item.ArticleCode.toLowerCase().indexOf(filterText) > -1)
                                   || (item.Article.toLowerCase().indexOf(filterText) > -1)
                                   || (item.Address.toLowerCase().indexOf(filterText) > -1)
                                   || (item.ContactNumber.toLowerCase().indexOf(filterText) > -1);
            }

            banks.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsBank();
            });

            banks.currentChanged.addHandler(function (sender, args) {
                updateDetails();
            });

            // Flex Grid
            bankGrid = new wijmo.grid.FlexGrid('#BankGrid');
            bankGrid.initialize({
                columns: [
                           @{
                                if (canEdit)
                                {
                                    <text>
                                        {
                                            "header": "Edit",
                                            "binding": "EditId",
                                            "width": 70,
                                            "align": "center",
                                            "allowResizing": false,
                                            "allowSorting": false,
                                            "isContentHtml": true
                                        },
                                    </text>
                                }
                                if (canDelete)
                                {
                                    <text>
                                        {
                                            "header": "Delete",
                                            "binding": "DeleteId",
                                            "width": 70,
                                            "align": "center",
                                            "allowResizing": false,
                                            "allowSorting": false,
                                            "isContentHtml": true
                                        },
                                    </text>
                                }
                            }
                            {
                                "header": "Code",
                                "binding": "ArticleCode",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Bank",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Address",
                                "binding": "Address",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Contact No.",
                                "binding": "ContactNumber",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Group",
                                "binding": "ArticleGroup",
                                "allowSorting": true,
                                "width": "3*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: banks,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            bankGrid.trackChanges = true;

            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtonsBank();

            btnFirstPageGrid.addEventListener('click', function () {
                banks.moveToFirstPage();
                updateNavigateButtonsBank();
            });

            btnPreviousPageGrid.addEventListener('click', function () {
                banks.moveToPreviousPage();
                updateNavigateButtonsBank();
            });

            btnNextPageGrid.addEventListener('click', function () {
                banks.moveToNextPage();
                updateNavigateButtonsBank();
            });

            btnLastPageGrid.addEventListener('click', function () {
                banks.moveToLastPage();
                updateNavigateButtonsBank();
            });
        }

        // =========================
        // Get Artile Bank Group
        // =========================
        function getBankArticleGroupForComboBox(bankGroupIdSelectedValue, accountIdSelectedValue) {
            var bankArticleGroupsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/bank/dropdown/list/bankGroup',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            bankArticleGroupsObservableArray.push({
                                Id: results[i]["Id"],
                                ArticleGroup: results[i]["ArticleGroup"],
                                AccountId: results[i]["AccountId"],
                                SalesAccountId: results[i]["SalesAccountId"],
                                CostAccountId: results[i]["CostAccountId"],
                                AssetAccountId: results[i]["AssetAccountId"],
                                ExpenseAccountId: results[i]["ExpenseAccountId"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                        $("#cmdBankSave").prop("disabled", false);
                    } else {
                        $("#cmdBankSave").prop("disabled", true);
                    }
                   
                    cboBankGroup.dispose();
                    cboBankGroup = new wijmo.input.ComboBox('#cboBankGroup', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: bankArticleGroupsObservableArray,
                        displayMemberPath: "ArticleGroup",
                        selectedValuePath: "Id",
                        selectedValue: bankGroupIdSelectedValue,
                        onSelectedIndexChanged: function () {
                            if (cboBankGroup.selectedItem["AccountId"] != null) {
                                getBankAccountForComboBox(cboBankGroup.selectedItem["AccountId"]);
                            } else {
                                getBankAccountForComboBox(0);
                            }
                        }
                    });

                    if (bankId == 0) {
                        if (cboBankGroup.selectedValue != null) {
                            getBankAccountForComboBox(cboBankGroup.selectedItem["AccountId"]);
                        } else {
                            getBankAccountForComboBox(accountIdSelectedValue);
                        }
                    } else {
                        getBankAccountForComboBox(accountIdSelectedValue);
                    }
                }
            });
        }

        // ===========
        // Get Account
        // ===========
        function getBankAccountForComboBox(accountIdSelectedValue) {
            var bankAccountsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/bank/dropdown/list/bankGroup/account/' + cboBankGroup.selectedItem["AccountId"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            bankAccountsObservableArray.push({
                                Id: results[i]["Id"],
                                AccountCode: results[i]["AccountCode"],
                                Account: results[i]["Account"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                        $("#cmdBankSave").prop("disabled", false);
                    } else {
                        $("#cmdBankSave").prop("disabled", true);
                    }

                    var accountIdValue = accountIdSelectedValue;
                    if (bankId == 0) {
                        if (cboBankGroup.selectedValue != null) {
                            accountIdValue = cboBankGroup.selectedItem["AccountId"];
                        }
                    }

                    cboAccountCode.dispose();
                    cboAccountCode = new wijmo.input.ComboBox('#cboAccountCode', {
                        disabled: true,
                        isEditable: false,
                        itemsSource: bankAccountsObservableArray,
                        displayMemberPath: "AccountCode",
                        selectedValuePath: "Id",
                        selectedValue: accountIdValue,
                        onSelectedIndexChanged: function () {
                            cboAccount.selectedValue = this.selectedValue;
                        }
                    });

                    cboAccount.dispose();
                    cboAccount = new wijmo.input.ComboBox('#cboAccount', {
                        disabled: true,
                        isEditable: false,
                        itemsSource: bankAccountsObservableArray,
                        displayMemberPath: "Account",
                        selectedValuePath: "Id",
                        selectedValue: accountIdValue,
                        onSelectedIndexChanged: function () {
                            cboAccountCode.selectedValue = this.selectedValue;
                        }
                    });

                    setTimeout(function () {
                        $("#loadingBank").hide();
                        $("#bankDetailForm").show();
                    }, 500);
                }
            });
        }

        // ===============
        // Bank ADD Button
        // ===============
        function bankAddbutton_OnClick() {
            $('#BankModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredBank').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#loadingBank").show();
            document.getElementById("loadingBank").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#bankDetailForm").hide();

            document.getElementById('cmdBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdBankSave").prop("disabled", true);
            $("#cmdBankCloseButton").prop("disabled", false);

            $("#bank_code").hide();
            $("#code").hide();
            $("#code_value").hide();

            bankId = 0;
            document.getElementById('bank_bank').value = "NA";
            getBankArticleGroupForComboBox(0, 0, false);
            document.getElementById('bank_Address').value = "NA";
            document.getElementById('bank_ContactNumber').value = "NA";
            document.getElementById('branch_ContactPerson').value = "NA";
            document.getElementById('bank_bank').disabled = false;
            document.getElementById('bank_Address').disabled = false;
            document.getElementById('bank_ContactNumber').disabled = false;
            document.getElementById('branch_ContactPerson').disabled = false;
        }

        // ================
        // Bank EDIT Button
        // ================
        function cmdBankEditButton_OnClick() {
            $('#BankModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredBank').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#loadingBank").show();
            document.getElementById("loadingBank").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#bankDetailForm").hide();

            document.getElementById('cmdBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdBankSave").prop("disabled", true);
            $("#cmdBankCloseButton").prop("disabled", false);

            banks.editItem(banks.currentItem);
            var bank = banks.currentEditItem;

            bankId = bank.Id;
            getBankArticleGroupForComboBox(bank.ArticleGroupId, bank.AccountId);

            $("#bank_code").show();
            $("#code").show();
            $("#code_value").show();

            document.getElementById('bank_code').value = bank.ArticleCode;
            document.getElementById('bank_bank').value = bank.Article;
            document.getElementById('bank_Address').value = bank.Address;
            document.getElementById('bank_ContactNumber').value = bank.ContactNumber;
            document.getElementById('branch_ContactPerson').value = bank.ContactPerson;
        }

        // ==================
        // Bank Delete Button
        // ==================
        function cmdBankDeleteButton_OnClick() {
            banks.editItem(banks.currentItem);
            var bank = banks.currentEditItem;

            $('#deleteBankConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdDeleteBank').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#cmdDeleteBank").prop("disabled", false);
            $("#cmdConfirmDeleteBankCloseButton").prop("disabled", false);
        }

        // Employee Confirm Delete Button
        function btnConfirmDeleteBank_OnClick() {
            document.getElementById('cmdDeleteBank').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $("#cmdDeleteBank").prop("disabled", true);
            $("#cmdConfirmDeleteBankCloseButton").prop("disabled", true);

            banks.editItem(banks.currentItem);
            var id = banks.currentEditItem.Id;

            $.ajax({
                url: '/api/bank/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#deleteBankConfirm').modal('hide');
                        refreshBankFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#deleteBankConfirm').modal('hide');
                        document.getElementById('cmdDeleteBank').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdDeleteBank").prop("disabled", false);
                        $("#cmdConfirmDeleteBankCloseButton").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#deleteBankConfirm').modal('hide');
                        document.getElementById('cmdDeleteBank').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdDeleteBank").prop("disabled", false);
                        $("#cmdConfirmDeleteBankCloseButton").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#deleteBankConfirm').modal('hide');
                        document.getElementById('cmdDeleteBank').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdDeleteBank").prop("disabled", false);
                        $("#cmdConfirmDeleteBankCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // =========
        // SAVE Bank
        // =========
        function btnAddBank_OnClick() {
            var bankObject = new Object();
            bankObject.Article = document.getElementById('bank_bank').value;
            bankObject.ArticleGroupId = cboBankGroup.selectedValue;
            bankObject.AccountId = cboBankGroup.selectedItem["AccountId"];
            bankObject.SalesAccountId = cboBankGroup.selectedItem["SalesAccountId"];
            bankObject.CostAccountId = cboBankGroup.selectedItem["CostAccountId"];
            bankObject.AssetAccountId = cboBankGroup.selectedItem["AssetAccountId"];
            bankObject.ExpenseAccountId = cboBankGroup.selectedItem["ExpenseAccountId"];
            bankObject.Address = document.getElementById('bank_Address').value;
            bankObject.ContactNumber = document.getElementById('bank_ContactNumber').value;
            bankObject.ContactPerson = document.getElementById('branch_ContactPerson').value;
            var bankData = JSON.stringify(bankObject);

            var isValid = true;
            $('.requiredBank').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('cmdBankSave').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $("#cmdBankSave").prop("disabled", true);
                $("#cmdBankCloseButton").prop("disabled", true);

                if (bankId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/bank/add',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: bankData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");
                                $('#BankModal').modal('hide');
                                refreshBankFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById('cmdBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdBankSave").prop("disabled", false);
                                $("#cmdBankCloseButton").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById('cmdBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdBankSave").prop("disabled", false);
                                $("#cmdBankCloseButton").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById('cmdBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdBankSave").prop("disabled", false);
                                $("#cmdBankCloseButton").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/bank/update/' + bankId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: bankData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#BankModal').modal('hide');
                                refreshBankFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                $('#BankModal').modal('hide');
                                document.getElementById('cmdBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdBankSave").prop("disabled", false);
                                $("#cmdBankCloseButton").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                $('#BankModal').modal('hide');
                                document.getElementById('cmdBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdBankSave").prop("disabled", false);
                                $("#cmdBankCloseButton").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                $('#BankModal').modal('hide');
                                document.getElementById('cmdBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdBankSave").prop("disabled", false);
                                $("#cmdBankCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            createBankFlexGrid();
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesresults) {
                    if (userBranchesresults.length > 0) {
                        for (i = 0; i < userBranchesresults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesresults[i]["BranchId"],
                                Branch: userBranchesresults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>