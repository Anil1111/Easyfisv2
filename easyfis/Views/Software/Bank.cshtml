@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Bank</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Bank
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        ===============
                        Search / Filter
                        ===============
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control" id="inpBankSearchFilter" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 40%" align="right">
                                    @{
                                        if (canAdd)
                                        {
                                            <button class="btn btn-primary" id="btnBankAdd" onclick="btnBankAddOnclick()"><i class="fa fa-plus"></i> Add</button>
                                        }
                                    }
                                    <a href="/Software" class="btn btn-danger"><i class="fa fa-times"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        =========
                        Flex Grid
                        =========
                    -->
                    <div class="panel-body">
                        <div id="bankFlexGrid"></div>
                    </div>

                    <!--
                        ==================
                        Navigation Buttons
                        ==================
                    -->
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="bankNavigationFlexGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnBankMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnBankMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnBankCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnBankMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnBankMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ==========
                    User Stamp
                    ==========
                -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!--
        ========================
        Bank Detail Form (Modal)
        ========================
    -->
    <div class="modal fade" id="bankDetailFormModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="bankModalTitle"></h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="bankLoadingForm"></span>
                    </center>
                    <div id="bankDetailForm">
                        <dl class="dl-horizontal">
                            <dt id="lblCode">Code</dt>
                            <dd id="lblCodeInput">
                                <input type="text" class="form-control" id="inpBankCode" disabled />
                            </dd>
                            <dt>Manual Code</dt>
                            <dd>
                                <input type="text" class="form-control requiredBank" id="inpManualBankCode" placeholder="Manual Code" />
                            </dd>
                            <dt>Bank</dt>
                            <dd>
                                <input type="text" class="form-control requiredBank" id="inpBank" placeholder="Bank" />
                            </dd>
                            <dt>Bank Group</dt>
                            <dd>
                                <div class="comboBox-wide" id="cboBankGroup"></div>
                            </dd>
                            <dt>Account</dt>
                            <dd>
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 30%">
                                            <div class="comboBox-wide" id="cboBankAccountCode"></div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 69%">
                                            <div class="comboBox-wide" id="cboBankAccount"></div>
                                        </td>
                                    </tr>
                                </table>
                            </dd>
                            <dt>Address</dt>
                            <dd>
                                <textarea class="form-control textarea-custom requiredBank" id="inpBankAddress" placeholder="Address" rows="5"></textarea>
                            </dd>
                            <dt>Contact Number</dt>
                            <dd>
                                <input type="text" class="form-control requiredBank" id="inpBankContactNumber" placeholder="Contact Number" />
                            </dd>
                            <dt>Contect Person</dt>
                            <dd>
                                <input type="text" class="form-control requiredBank" id="inpBankContactPerson" placeholder="Contect Person" />
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnBankSave" class="btn btn-primary" onclick="btnBankSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                    <button id="btnBankCloseDetailFormModal" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ===========================
        Bank Confirm Delete (Modal)
        ===========================
    -->
    <div class="modal fade" id="bankConfirmDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Delete bank?
                </div>
                <div class="modal-footer">
                    <button id="btnBankConfirmDelete" class="btn btn-danger" onclick="btnBankConfirmDeleteOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="btnBankCancelConfirmDeleteModal" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ==================================
        // Bank Collection View and Flex Grid
        // ==================================
        var bankCollectionView;
        var bankFlexGrid;

        // =======================
        // Bank Navigation Buttons
        // =======================
        var btnBankMoveToFirstPageGrid = document.getElementById('btnBankMoveToFirstPageGrid');
        var btnBankMoveToPreviousPageGrid = document.getElementById('btnBankMoveToPreviousPageGrid');
        var btnBankMoveToNextPageGrid = document.getElementById('btnBankMoveToNextPageGrid');
        var btnBankMoveToLastPageGrid = document.getElementById('btnBankMoveToLastPageGrid');
        var btnBankCurrentPageGrid = document.getElementById('btnBankCurrentPageGrid');

        // ====================
        // Bank Data, Dropdowns
        // ====================
        var bankId = 0;
        var cboBankGroup = new wijmo.input.ComboBox('#cboBankGroup');
        var cboBankAccountCode = new wijmo.input.ComboBox('#cboBankAccountCode');
        var cboBankAccount = new wijmo.input.ComboBox('#cboBankAccount');

        // =============
        // Get Bank Data
        // =============
        function getBankData() {
            NProgress.start();
            var bankObservableArray = new wijmo.collections.ObservableArray;

            $.ajax({
                url: '/api/bank/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            bankObservableArray.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='' onclick='btnBankEditOnclick()'><i class='fa fa-edit'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnBankDeleteOnclick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: results[i]["Id"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                ArticleCode: results[i]["ArticleCode"],
                                Article: results[i]["Article"],
                                ArticleGroupId: results[i]["ArticleGroupId"],
                                ArticleGroup: results[i]["ArticleGroup"],
                                AccountId: results[i]["AccountId"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                ContactPerson: results[i]["ContactPerson"],
                                IsLocked: results[i]["IsLocked"],
                                CreatedBy: results[i]["CreatedBy"],
                                CreatedDateTime: results[i]["CreatedDateTime"],
                                UpdatedBy: results[i]["UpdatedBy"],
                                UpdatedDateTime: results[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return bankObservableArray;
        }

        // =====================
        // Create Bank Flex Grid
        // =====================
        function createBankFlexGrid() {
            bankCollectionView = new wijmo.collections.CollectionView(getBankData());
            bankCollectionView.canFilter = true;
            bankCollectionView.pageSize = 15;

            var filterText = '';
            $('#inpBankSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                bankCollectionView.refresh();
            });

            bankCollectionView.filter = function (item) {
                return !filterText || (item.ArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || (item.ContactNumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.ArticleGroup.toLowerCase().indexOf(filterText) > -1);
            }

            bankCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateBankNavigationButtons();
            });

            bankCollectionView.currentChanged.addHandler(function (sender, args) {
                updateBankDetailsSelection();
            });

            bankFlexGrid = new wijmo.grid.FlexGrid('#bankFlexGrid');
            bankFlexGrid.initialize({
                columns: [
                           @{
                                if (canEdit)
                                {
                                    <text>
                                        {
                                            "header": "Edit",
                                            "binding": "EditId",
                                            "width": 70,
                                            "align": "center",
                                            "allowResizing": false,
                                            "allowSorting": false,
                                            "isContentHtml": true
                                        },
                                    </text>
                                }
                                if (canDelete)
                                {
                                    <text>
                                        {
                                            "header": "Delete",
                                            "binding": "DeleteId",
                                            "width": 70,
                                            "align": "center",
                                            "allowResizing": false,
                                            "allowSorting": false,
                                            "isContentHtml": true
                                        },
                                    </text>
                                }
                            }
                            {
                                "header": "Code",
                                "binding": "ArticleCode",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Manual Code",
                                "binding": "ManualArticleCode",
                                "allowSorting": true,
                                "width": 120
                            },
                            {
                                "header": "Bank",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "4*"
                            },
                            {
                                "header": "Contact No.",
                                "binding": "ContactNumber",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Group",
                                "binding": "ArticleGroup",
                                "allowSorting": true,
                                "width": "3*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: bankCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            bankFlexGrid.trackChanges = true;

            updateBankNavigationButtons();

            btnBankMoveToFirstPageGrid.addEventListener('click', function () {
                bankCollectionView.moveToFirstPage();
                updateBankNavigationButtons();
            });

            btnBankMoveToPreviousPageGrid.addEventListener('click', function () {
                bankCollectionView.moveToPreviousPage();
                updateBankNavigationButtons();
            });

            btnBankMoveToNextPageGrid.addEventListener('click', function () {
                bankCollectionView.moveToNextPage();
                updateBankNavigationButtons();
            });

            btnBankMoveToLastPageGrid.addEventListener('click', function () {
                bankCollectionView.moveToLastPage();
                updateBankNavigationButtons();
            });
        }

        // =====================
        // Refresh FlexGrid Bank
        // =====================
        function refreshBankFlexGrid() {
            bankCollectionView = new wijmo.collections.CollectionView(getBankData());
            bankCollectionView.canFilter = true;
            bankCollectionView.pageSize = 15;

            var filterText = '';
            $('#inpBankSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                bankCollectionView.refresh();
            });

            bankCollectionView.filter = function (item) {
                return !filterText || (item.ArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || (item.ContactNumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.ArticleGroup.toLowerCase().indexOf(filterText) > -1);
            }

            bankCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateBankNavigationButtons();
            });

            bankCollectionView.currentChanged.addHandler(function (sender, args) {
                updateBankDetailsSelection();
            });

            bankFlexGrid.itemsSource = bankCollectionView;
            bankFlexGrid.trackChanges = true;
        }

        // ==============================
        // Update Bank Details Selection
        // ==============================
        function updateBankDetailsSelection() {
            var bank = bankCollectionView.currentItem;
            document.getElementById('createdBy').innerHTML = bank.CreatedBy;
            document.getElementById('createdDate').innerHTML = bank.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = bank.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = bank.UpdatedDateTime;
        }

        // ==============================
        // Update Bank Navigation Buttons
        // ==============================
        function updateBankNavigationButtons() {
            if (bankCollectionView.pageSize <= 0) {
                document.getElementById('bankNavigationFlexGrid').style.display = 'none';
                return;
            }
            document.getElementById('bankNavigationFlexGrid').style.display = 'block';
            if (bankCollectionView.pageIndex === 0) {
                btnBankMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnBankMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnBankMoveToNextPageGrid.removeAttribute('disabled');
                btnBankMoveToLastPageGrid.removeAttribute('disabled');
            } else if (bankCollectionView.pageIndex === (bankCollectionView.pageCount - 1)) {
                btnBankMoveToFirstPageGrid.removeAttribute('disabled');
                btnBankMoveToPreviousPageGrid.removeAttribute('disabled');
                btnBankMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnBankMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnBankMoveToFirstPageGrid.removeAttribute('disabled');
                btnBankMoveToPreviousPageGrid.removeAttribute('disabled');
                btnBankMoveToNextPageGrid.removeAttribute('disabled');
                btnBankMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnBankCurrentPageGrid.innerHTML = (bankCollectionView.pageIndex + 1) + ' / ' + bankCollectionView.pageCount;
        }

        // =======================
        // Create Combo Bank Group
        // =======================
        function createCboBankGroup(bankGroupIdSelectedValue, accountIdSelectedValue) {
            var bankArticleGroupsObservableArray = new wijmo.collections.ObservableArray();

            $.ajax({
                url: '/api/bank/dropdown/list/bankGroup',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            bankArticleGroupsObservableArray.push({
                                Id: results[i]["Id"],
                                ArticleGroup: results[i]["ArticleGroup"],
                                AccountId: results[i]["AccountId"],
                                SalesAccountId: results[i]["SalesAccountId"],
                                CostAccountId: results[i]["CostAccountId"],
                                AssetAccountId: results[i]["AssetAccountId"],
                                ExpenseAccountId: results[i]["ExpenseAccountId"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                        $("#btnBankSave").prop("disabled", false);
                    } else {
                        $("#btnBankSave").prop("disabled", true);
                    }

                    cboBankGroup.dispose();
                    cboBankGroup = new wijmo.input.ComboBox('#cboBankGroup', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: bankArticleGroupsObservableArray,
                        displayMemberPath: "ArticleGroup",
                        selectedValuePath: "Id",
                        selectedValue: bankGroupIdSelectedValue,
                        onSelectedIndexChanged: function () {
                            if (cboBankGroup.selectedItem["AccountId"] != null) {
                                createCboBankAccount(cboBankGroup.selectedItem["AccountId"]);
                            } else {
                                createCboBankAccount(0);
                            }
                        }
                    });

                    if (bankId == 0) {
                        if (cboBankGroup.selectedValue != null) {
                            createCboBankAccount(cboBankGroup.selectedItem["AccountId"]);
                        } else {
                            createCboBankAccount(accountIdSelectedValue);
                        }
                    } else {
                        createCboBankAccount(accountIdSelectedValue);
                    }
                }
            });
        }

        // =========================
        // Create Combo Bank Account
        // =========================
        function createCboBankAccount(accountIdSelectedValue) {
            var bankAccountsObservableArray = new wijmo.collections.ObservableArray();

            $.ajax({
                url: '/api/bank/dropdown/list/bankGroup/account/' + cboBankGroup.selectedItem["AccountId"],
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            bankAccountsObservableArray.push({
                                Id: results[i]["Id"],
                                AccountCode: results[i]["AccountCode"],
                                Account: results[i]["Account"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                        $("#btnBankSave").prop("disabled", false);
                    } else {
                        $("#btnBankSave").prop("disabled", true);
                    }

                    var accountIdValue = accountIdSelectedValue;
                    if (bankId == 0) {
                        if (cboBankGroup.selectedValue != null) {
                            accountIdValue = cboBankGroup.selectedItem["AccountId"];
                        }
                    }

                    cboBankAccountCode.dispose();
                    cboBankAccountCode = new wijmo.input.ComboBox('#cboBankAccountCode', {
                        disabled: true,
                        isEditable: false,
                        itemsSource: bankAccountsObservableArray,
                        displayMemberPath: "AccountCode",
                        selectedValuePath: "Id",
                        selectedValue: accountIdValue,
                        onSelectedIndexChanged: function () {
                            cboBankAccount.selectedValue = this.selectedValue;
                        }
                    });

                    cboBankAccount.dispose();
                    cboBankAccount = new wijmo.input.ComboBox('#cboBankAccount', {
                        disabled: true,
                        isEditable: false,
                        itemsSource: bankAccountsObservableArray,
                        displayMemberPath: "Account",
                        selectedValuePath: "Id",
                        selectedValue: accountIdValue,
                        onSelectedIndexChanged: function () {
                            cboBankAccountCode.selectedValue = this.selectedValue;
                        }
                    });

                    setTimeout(function () {
                        $("#bankLoadingForm").hide();
                        $("#bankDetailForm").show();
                    }, 500);
                }
            });
        }

        // ========
        // Add Bank
        // ========
        function btnBankAddOnclick() {
            $('#bankDetailFormModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredBank').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("bankModalTitle").innerHTML = 'Add Bank';
            $("#bankLoadingForm").show();
            document.getElementById("bankLoadingForm").innerHTML = 'Loading...';
            $("#bankDetailForm").hide();

            document.getElementById('btnBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnBankSave").prop("disabled", true);
            $("#btnBankCloseDetailFormModal").prop("disabled", false);

            $("#inpBankCode").hide();
            $("#lblCode").hide();
            $("#lblCodeInput").hide();

            bankId = 0;
            document.getElementById('inpManualBankCode').value = "NA";
            document.getElementById('inpBank').value = "NA";
            createCboBankGroup(0, 0, false);
            document.getElementById('inpBankAddress').value = "NA";
            document.getElementById('inpBankContactNumber').value = "NA";
            document.getElementById('inpBankContactPerson').value = "NA";
            document.getElementById('inpBank').disabled = false;
            document.getElementById('inpManualBankCode').disabled = false;
            document.getElementById('inpBankAddress').disabled = false;
            document.getElementById('inpBankContactNumber').disabled = false;
            document.getElementById('inpBankContactPerson').disabled = false;
        }

        // =========
        // Edit Bank
        // =========
        function btnBankEditOnclick() {
            $('#bankDetailFormModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredBank').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById("bankModalTitle").innerHTML = 'Edit Bank';
            $("#bankLoadingForm").show();
            document.getElementById("bankLoadingForm").innerHTML = 'Loading...';
            $("#bankDetailForm").hide();

            document.getElementById('btnBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnBankSave").prop("disabled", true);
            $("#btnBankCloseDetailFormModal").prop("disabled", false);

            bankCollectionView.editItem(bankCollectionView.currentItem);
            var bank = bankCollectionView.currentEditItem;

            bankId = bank.Id;
            createCboBankGroup(bank.ArticleGroupId, bank.AccountId);

            $("#inpBankCode").show();
            $("#lblCode").show();
            $("#lblCodeInput").show();

            document.getElementById('inpBankCode').value = bank.ArticleCode;
            document.getElementById('inpManualBankCode').value = bank.ManualArticleCode;
            document.getElementById('inpBank').value = bank.Article;
            document.getElementById('inpBankAddress').value = bank.Address;
            document.getElementById('inpBankContactNumber').value = bank.ContactNumber;
            document.getElementById('inpBankContactPerson').value = bank.ContactPerson;
        }

        // ===========
        // Delete Bank
        // ===========
        function btnBankDeleteOnclick() {
            bankCollectionView.editItem(bankCollectionView.currentItem);
            var bank = bankCollectionView.currentEditItem;

            $('#bankConfirmDeleteModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnBankConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#btnBankConfirmDelete").prop("disabled", false);
            $("#btnBankCancelConfirmDeleteModal").prop("disabled", false);
        }

        // ===================
        // Confirm Delete Bank
        // ===================
        function btnBankConfirmDeleteOnclick() {
            document.getElementById('btnBankConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Deleting...";
            $("#btnBankConfirmDelete").prop("disabled", true);
            $("#btnBankCancelConfirmDeleteModal").prop("disabled", true);

            bankCollectionView.editItem(bankCollectionView.currentItem);
            var id = bankCollectionView.currentEditItem.Id;

            $.ajax({
                url: '/api/bank/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#bankConfirmDeleteModal').modal('hide');
                        refreshBankFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#bankConfirmDeleteModal').modal('hide');
                        document.getElementById('btnBankConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnBankConfirmDelete").prop("disabled", false);
                        $("#btnBankCancelConfirmDeleteModal").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#bankConfirmDeleteModal').modal('hide');
                        document.getElementById('btnBankConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnBankConfirmDelete").prop("disabled", false);
                        $("#btnBankCancelConfirmDeleteModal").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#bankConfirmDeleteModal').modal('hide');
                        document.getElementById('btnBankConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnBankConfirmDelete").prop("disabled", false);
                        $("#btnBankCancelConfirmDeleteModal").prop("disabled", false);
                    }
                }
            });
        }

        // =========
        // Save Bank
        // =========
        function btnBankSaveOnclick() {
            var bankObject = new Object();
            bankObject.ManualArticleCode = document.getElementById('inpManualBankCode').value;
            bankObject.Article = document.getElementById('inpBank').value;
            bankObject.ArticleGroupId = cboBankGroup.selectedValue;
            bankObject.AccountId = cboBankGroup.selectedItem["AccountId"];
            bankObject.SalesAccountId = cboBankGroup.selectedItem["SalesAccountId"];
            bankObject.CostAccountId = cboBankGroup.selectedItem["CostAccountId"];
            bankObject.AssetAccountId = cboBankGroup.selectedItem["AssetAccountId"];
            bankObject.ExpenseAccountId = cboBankGroup.selectedItem["ExpenseAccountId"];
            bankObject.Address = document.getElementById('inpBankAddress').value;
            bankObject.ContactNumber = document.getElementById('inpBankContactNumber').value;
            bankObject.ContactPerson = document.getElementById('inpBankContactPerson').value;
            var bankData = JSON.stringify(bankObject);

            var isValid = true;
            $('.requiredBank').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnBankSave').innerHTML = "<i class='fa fa-save'></i> Saving...";
                $("#btnBankSave").prop("disabled", true);
                $("#btnBankCloseDetailFormModal").prop("disabled", true);

                if (bankId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/bank/add',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: bankData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");
                                $('#bankDetailFormModal').modal('hide');
                                refreshBankFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById('btnBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnBankSave").prop("disabled", false);
                                $("#btnBankCloseDetailFormModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById('btnBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnBankSave").prop("disabled", false);
                                $("#btnBankCloseDetailFormModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById('btnBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnBankSave").prop("disabled", false);
                                $("#btnBankCloseDetailFormModal").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/bank/update/' + bankId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: bankData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#bankDetailFormModal').modal('hide');
                                refreshBankFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById('btnBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnBankSave").prop("disabled", false);
                                $("#btnBankCloseDetailFormModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById('btnBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnBankSave").prop("disabled", false);
                                $("#btnBankCloseDetailFormModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById('btnBankSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnBankSave").prop("disabled", false);
                                $("#btnBankCloseDetailFormModal").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =============================
        // Document Ready - On load Page
        // =============================
        $(document).ready(function () {
            createBankFlexGrid();
        });
    </script>

    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>