<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Sales Summary Report (All Fields)</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Sales Summary Report (All Fields)
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        ===============
                        Search / Filter
                        ===============
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 49.5%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control" id="inpSalesSummaryAllFieldsReportFilter" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                        <div class="comboBox-wide" id="cboSalesSummaryAllFieldsReportShowNumberOfRows"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24.5%" align="right">
                                    <button onclick="btnSalesSummaryAllFieldsReportDownloadCSVOnclick()" id="btnSalesSummaryAllFieldsReportDownloadCSV" class="btn btn-success"><i class="fa fa-file-excel-o" aria-hidden="true"></i> CSV</button>
                                    @*<button onclick="btnSalesSummaryAllFieldsReportPDFOnclick()" id="btnSalesSummaryAllFieldsReportPDF" class="btn btn-primary"><i class="fa fa-print"></i> Print</button>*@
                                    <a href="/Software/AccountsReceivable" class="btn btn-danger"><i class="fa fa-close"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        ======================================
                        Date Range, Company and Branch Filters
                        ======================================
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Start Date</b></span>
                                        <div class="comboBox-wide" id="cboSalesSummaryAllFieldsReportStartDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%" align="right">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>End Date</b></span>
                                        <div class="comboBox-wide" id="cboSalesSummaryAllFieldsReportEndDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Company</b></span>
                                        <div class="comboBox-wide" id="cboSalesSummaryAllFieldsReportCompanyFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Branch</b></span>
                                        <div class="comboBox-wide" id="cboSalesSummaryAllFieldsReportBranchFilter"></div>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        =========
                        Flex Grid
                        =========
                    -->
                    <div class="panel-body">
                        <div id="salesSummaryAllFieldsReportFlexGrid" style="font-size: 11.5px;"></div>
                    </div>

                    <!--
                        ==================
                        Navigation Buttons
                        ==================
                    -->
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="salesSummaryAllFieldsReportNavigationPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnSalesSummaryAllFieldsReportMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnSalesSummaryAllFieldsReportMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnSalesSummaryAllFieldsReportCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnSalesSummaryAllFieldsReportMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnSalesSummaryAllFieldsReportMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ======
                    Totals
                    ======
                -->
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6"></div>
                            <div class="col-md-6">
                                <dl class="dl-horizontal dl-custom">
                                    <dt>
                                        <b>Total Amount</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="totalAmount" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Discount</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="totalDiscountAmount" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total VAT</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="totalVATAmount" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ============
        // Date Filters
        // ============
        var cboSalesSummaryAllFieldsReportStartDateFilter = new wijmo.input.InputDate('#cboSalesSummaryAllFieldsReportStartDateFilter');
        var cboSalesSummaryAllFieldsReportEndDateFilter = new wijmo.input.InputDate('#cboSalesSummaryAllFieldsReportEndDateFilter');
        var isSalesSummaryAllFieldsReportStartDateSelected = false;
        var isSalesSummaryAllFieldsReportEndDateSelected = false;

        // =========================
        // Company and Branch Filter
        // =========================
        var cboSalesSummaryAllFieldsReportCompanyFilter = new wijmo.input.ComboBox('#cboSalesSummaryAllFieldsReportCompanyFilter');
        var cboSalesSummaryAllFieldsReportBranchFilter = new wijmo.input.ComboBox('#cboSalesSummaryAllFieldsReportBranchFilter');
        var isCboSalesSummaryAllFieldsReportCompanySelected = false;

        // =============================
        // Collection View and Flex Grid
        // =============================
        var salesSummaryAllFieldsReportCollectionView;
        var salesSummaryAllFieldsReportFlexGrid;
        var cboSalesSummaryAllFieldsReportShowNumberOfRows = new wijmo.input.ComboBox('#cboSalesSummaryAllFieldsReportShowNumberOfRows');

        // ==================
        // Navigation Buttons
        // ==================
        var btnSalesSummaryAllFieldsReportMoveToFirstPageGrid = document.getElementById('btnSalesSummaryAllFieldsReportMoveToFirstPageGrid');
        var btnSalesSummaryAllFieldsReportMoveToPreviousPageGrid = document.getElementById('btnSalesSummaryAllFieldsReportMoveToPreviousPageGrid');
        var btnSalesSummaryAllFieldsReportMoveToNextPageGrid = document.getElementById('btnSalesSummaryAllFieldsReportMoveToNextPageGrid');
        var btnSalesSummaryAllFieldsReportMoveToLastPageGrid = document.getElementById('btnSalesSummaryAllFieldsReportMoveToLastPageGrid');
        var btnSalesSummaryAllFieldsReportCurrentPageGrid = document.getElementById('btnSalesSummaryAllFieldsReportCurrentPageGrid');
        var currentPageIndex = 0;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getURLParameterValue(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ================================
        // Create Combo Date Ranged Filters
        // ================================
        function createCboDateRangeFilters() {
            NProgress.start();

            cboSalesSummaryAllFieldsReportStartDateFilter.dispose();
            cboSalesSummaryAllFieldsReportStartDateFilter = new wijmo.input.InputDate('#cboSalesSummaryAllFieldsReportStartDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(getURLParameterValue("StartDate")),
                onValueChanged: function () {
                    if (!isSalesSummaryAllFieldsReportStartDateSelected) {
                        NProgress.start();
                        refreshSalesSummaryAllFieldsReportFlexGrid();
                    } else {
                        isSalesSummaryAllFieldsReportStartDateSelected = false;
                    }
                }
            });

            cboSalesSummaryAllFieldsReportEndDateFilter.dispose();
            cboSalesSummaryAllFieldsReportEndDateFilter = new wijmo.input.InputDate('#cboSalesSummaryAllFieldsReportEndDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(getURLParameterValue("EndDate")),
                onValueChanged: function () {
                    if (!isSalesSummaryAllFieldsReportEndDateSelected) {
                        NProgress.start();
                        refreshSalesSummaryAllFieldsReportFlexGrid();
                    } else {
                        isSalesSummaryAllFieldsReportEndDateSelected = false;
                    }
                }
            });

            createCboCompanyFilter();
        }

        // ===========================
        // Create Combo Company Filter
        // ===========================
        function createCboCompanyFilter() {
            var companyObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesSummaryReportAllFields/dropdown/list/company',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            companyObservableArray.push({
                                Id: results[i]["Id"],
                                Company: results[i]["Company"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                    } else {
                        $("#btnSalesSummaryAllFieldsReportDownloadCSV").prop("disabled", true);
                        $("#btnSalesSummaryAllFieldsReportPDF").prop("disabled", true);
                    }

                    cboSalesSummaryAllFieldsReportCompanyFilter.dispose();
                    cboSalesSummaryAllFieldsReportCompanyFilter = new wijmo.input.ComboBox('#cboSalesSummaryAllFieldsReportCompanyFilter', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: companyObservableArray,
                        displayMemberPath: "Company",
                        selectedValuePath: "Id",
                        selectedValue: getURLParameterValue("CompanyId"),
                        onSelectedIndexChanged: function () {
                            NProgress.start();
                            $("#btnSalesSummaryAllFieldsReportDownloadCSV").prop("disabled", false);
                            $("#btnSalesSummaryAllFieldsReportPDF").prop("disabled", false);
                            isCboSalesSummaryAllFieldsReportCompanySelected = true;
                            createCboBranchFilter();
                        }
                    });

                    createCboBranchFilter();
                }
            });
        }

        // ==========================
        // Create Combo Branch Filter
        // ==========================
        function createCboBranchFilter() {
            var branchObservableArray = new wijmo.collections.ObservableArray();
            if (cboSalesSummaryAllFieldsReportCompanyFilter.selectedValue != null) {
                $.ajax({
                    url: '/api/salesSummaryReportAllFields/dropdown/list/branch/' + cboSalesSummaryAllFieldsReportCompanyFilter.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (branchResults) {
                        if (branchResults.length > 0) {
                            for (i = 0; i < branchResults.length; i++) {
                                branchObservableArray.push({
                                    Id: branchResults[i]["Id"],
                                    Branch: branchResults[i]["Branch"]
                                });
                            }
                        }

                        var disabled = true;
                        if (branchResults.length > 0) {
                            disabled = false;
                        } else {
                            $("#btnSalesSummaryAllFieldsReportDownloadCSV").prop("disabled", true);
                            $("#btnSalesSummaryAllFieldsReportPDF").prop("disabled", true);
                        }

                        cboSalesSummaryAllFieldsReportBranchFilter.dispose();
                        cboSalesSummaryAllFieldsReportBranchFilter = new wijmo.input.ComboBox('#cboSalesSummaryAllFieldsReportBranchFilter', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: branchObservableArray,
                            displayMemberPath: "Branch",
                            selectedValuePath: "Id",
                            selectedValue: getURLParameterValue("BranchId"),
                            onSelectedIndexChanged: function () {
                                NProgress.start();
                                refreshSalesSummaryAllFieldsReportFlexGrid();
                            }
                        });

                        createCboShowRows();
                    }
                });
            }
        }

        // ===================================
        // Create Combo Display Number of Rows
        // ===================================
        function createCboShowRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboSalesSummaryAllFieldsReportShowNumberOfRows.dispose();
            cboSalesSummaryAllFieldsReportShowNumberOfRows = new wijmo.input.ComboBox('#cboSalesSummaryAllFieldsReportShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboSalesSummaryAllFieldsReportShowNumberOfRows.selectedValue;
                        salesSummaryAllFieldsReportCollectionView.pageSize = parseInt(numberOfRows);
                        salesSummaryAllFieldsReportCollectionView.refresh();
                        salesSummaryAllFieldsReportFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });

            if (!isCboSalesSummaryAllFieldsReportCompanySelected) {
                createSalesSummaryAllFieldsReportFlexGrid();
            } else {
                refreshSalesSummaryAllFieldsReportFlexGrid();
            }
        }

        // ==========================================
        // Get Sales Summary Report (All Fields) Data
        // ==========================================
        function getSalesSummaryAllFieldsReportData() {
            var salesSummaryAllFieldsReports = new wijmo.collections.ObservableArray;
            if (cboSalesSummaryAllFieldsReportCompanyFilter.selectedValue != null) {
                if (cboSalesSummaryAllFieldsReportBranchFilter.selectedValue != null) {

                    var startDate = cboSalesSummaryAllFieldsReportStartDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                    var endDate = cboSalesSummaryAllFieldsReportEndDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                    var companyId = cboSalesSummaryAllFieldsReportCompanyFilter.selectedValue;
                    var branchId = cboSalesSummaryAllFieldsReportBranchFilter.selectedValue;

                    $.ajax({
                        url: '/api/salesSummaryReportAllFields/list/' + startDate + '/' + endDate + '/' + + companyId + '/' + branchId,
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        success: function (salesSummaryAllFieldsReportAllFieldsResult) {
                            var totalAmount = 0;
                            var totalDiscountAmount = 0;
                            var totalVATAmount = 0;
                            if (salesSummaryAllFieldsReportAllFieldsResult.length > 0) {
                                for (i = 0; i < salesSummaryAllFieldsReportAllFieldsResult.length; i++) {
                                    var docLink = "/Software/SalesDetail?id=" + salesSummaryAllFieldsReportAllFieldsResult[i]["SIId"];

                                    var SIDateResult = new Date(salesSummaryAllFieldsReportAllFieldsResult[i]["SIDate"])
                                    var SIDate = ('0' + (SIDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + SIDateResult.getDate()).slice(-2) + '-' + SIDateResult.getFullYear();

                                    salesSummaryAllFieldsReports.push({
                                        Id: salesSummaryAllFieldsReportAllFieldsResult[i]["Id"],
                                        SIId: salesSummaryAllFieldsReportAllFieldsResult["SIId"],
                                        SI: salesSummaryAllFieldsReportAllFieldsResult[i]["SI"],
                                        Branch: salesSummaryAllFieldsReportAllFieldsResult[i]["Branch"],
                                        SIForCSV: "SI-" + salesSummaryAllFieldsReportAllFieldsResult[i]["SI"],
                                        SIButton: "<a href='" + docLink + "' class='btn btn-primary btn-xs btn-block' style='font-size: 10.5px;'>" + salesSummaryAllFieldsReportAllFieldsResult[i]["SI"],
                                        SIDate: SIDate,
                                        Item: salesSummaryAllFieldsReportAllFieldsResult[i]["Item"],
                                        ItemInventory: salesSummaryAllFieldsReportAllFieldsResult[i]["ItemInventory"] != null ? salesSummaryAllFieldsReportAllFieldsResult[i]["ItemInventory"] : "",
                                        Unit: salesSummaryAllFieldsReportAllFieldsResult[i]["Unit"],
                                        Quantity: salesSummaryAllFieldsReportAllFieldsResult[i]["Quantity"],
                                        QuantityDisplay: parseFloat(salesSummaryAllFieldsReportAllFieldsResult[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        Price: salesSummaryAllFieldsReportAllFieldsResult[i]["Price"],
                                        PriceDisplay: parseFloat(salesSummaryAllFieldsReportAllFieldsResult[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","), Discount: salesSummaryAllFieldsReportAllFieldsResult[i]["Discount"],
                                        Discount: salesSummaryAllFieldsReportAllFieldsResult[i]["Discount"],
                                        DiscountRate: salesSummaryAllFieldsReportAllFieldsResult[i]["DiscountRate"],
                                        DiscountPercentage: salesSummaryAllFieldsReportAllFieldsResult[i]["Discount"] + "<hr style='margin-top: 3px; margin-bottom: 3px; border-color: #cccccc' />" + parseFloat(salesSummaryAllFieldsReportAllFieldsResult[i]["DiscountRate"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        DiscountAmount: salesSummaryAllFieldsReportAllFieldsResult[i]["DiscountAmount"],
                                        DiscountAmountDisplay: parseFloat(salesSummaryAllFieldsReportAllFieldsResult[i]["DiscountAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        Amount: salesSummaryAllFieldsReportAllFieldsResult[i]["Amount"],
                                        AmountDisplay: parseFloat(salesSummaryAllFieldsReportAllFieldsResult[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        Customer: salesSummaryAllFieldsReportAllFieldsResult[i]["Customer"],
                                        VAT: salesSummaryAllFieldsReportAllFieldsResult[i]["VAT"],
                                        VATRate: salesSummaryAllFieldsReportAllFieldsResult[i]["VATPercentage"],
                                        VATPercentage: salesSummaryAllFieldsReportAllFieldsResult[i]["VAT"] + "<hr style='margin-top: 3px; margin-bottom: 3px; border-color: #cccccc' />" + parseFloat(salesSummaryAllFieldsReportAllFieldsResult[i]["VATPercentage"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        VATAmount: salesSummaryAllFieldsReportAllFieldsResult[i]["VATAmount"],
                                        VATAmountDisplay: parseFloat(salesSummaryAllFieldsReportAllFieldsResult[i]["VATAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    });

                                    totalAmount += salesSummaryAllFieldsReportAllFieldsResult[i]["Amount"];
                                    totalDiscountAmount += salesSummaryAllFieldsReportAllFieldsResult[i]["DiscountAmount"];
                                    totalVATAmount += salesSummaryAllFieldsReportAllFieldsResult[i]["VATAmount"];
                                }
                            }

                            document.getElementById("totalAmount").value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            document.getElementById("totalDiscountAmount").value = parseFloat(totalDiscountAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            document.getElementById("totalVATAmount").value = parseFloat(totalVATAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            NProgress.done();
                        }
                    });
                } else {
                    document.getElementById("totalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("totalDiscountAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("totalVATAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    NProgress.done();
                }
            } else {
                document.getElementById("totalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                document.getElementById("totalDiscountAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                document.getElementById("totalVATAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                NProgress.done();
            }

            return salesSummaryAllFieldsReports;
        }

        // ==================================================
        // Create Sales Summary Report (All Fields) Flex Grid
        // ==================================================
        function createSalesSummaryAllFieldsReportFlexGrid() {
            salesSummaryAllFieldsReportCollectionView = new wijmo.collections.CollectionView(getSalesSummaryAllFieldsReportData());
            salesSummaryAllFieldsReportCollectionView.canFilter = true;
            salesSummaryAllFieldsReportCollectionView.pageSize = cboSalesSummaryAllFieldsReportShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpSalesSummaryAllFieldsReportFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                salesSummaryAllFieldsReportCollectionView.refresh();
            });

            salesSummaryAllFieldsReportCollectionView.filter = function (item) {
                return !filterText || (item.SIDate.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.SI.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Customer.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Discount.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Item.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1);
            }

            salesSummaryAllFieldsReportCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateSalesSummaryAllFieldsReportNavigationButtons();
            });

            salesSummaryAllFieldsReportFlexGrid = new wijmo.grid.FlexGrid('#salesSummaryAllFieldsReportFlexGrid');
            salesSummaryAllFieldsReportFlexGrid.initialize({
                columns: [
                    {
                        "header": "SI Number",
                        "binding": "SIButton",
                        "isContentHtml": true,
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "SI Date",
                        "binding": "SIDate",
                        "allowSorting": true,
                        "width": "0.8*"
                    },
                    {
                        "header": "Customer",
                        "binding": "Customer",
                        "allowSorting": true,
                        "width": "1.2*"
                    },
                    {
                        "header": "Item",
                        "binding": "Item",
                        "allowSorting": true,
                        "width": "1.2*"
                    },
                    {
                        "header": "Price",
                        "binding": "PriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*"
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": "0.7*"
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*"
                    },
                    {
                        "header": "Rate",
                        "binding": "DiscountPercentage",
                        "allowSorting": true,
                        "width": "0.8*",
                        "align": "right",
                        "isContentHtml": true
                    },
                    {
                        "header": "Discount Amt.",
                        "binding": "DiscountAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*"
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*"
                    },
                    {
                        "header": "VAT Rate",
                        "binding": "VATPercentage",
                        "allowSorting": true,
                        "width": "0.8*",
                        "align": "right",
                        "isContentHtml": true
                    },
                    {
                        "header": "VAT Amt.",
                        "binding": "VATAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: salesSummaryAllFieldsReportCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            salesSummaryAllFieldsReportFlexGrid.trackChanges = true;

            updateSalesSummaryAllFieldsReportNavigationButtons();

            btnSalesSummaryAllFieldsReportMoveToFirstPageGrid.addEventListener('click', function () {
                salesSummaryAllFieldsReportCollectionView.moveToFirstPage();
                currentPageIndex = salesSummaryAllFieldsReportCollectionView.pageIndex + 1;
                updateSalesSummaryAllFieldsReportNavigationButtons();
            });

            btnSalesSummaryAllFieldsReportMoveToPreviousPageGrid.addEventListener('click', function () {
                salesSummaryAllFieldsReportCollectionView.moveToPreviousPage();
                currentPageIndex = salesSummaryAllFieldsReportCollectionView.pageIndex + 1;
                updateSalesSummaryAllFieldsReportNavigationButtons();
            });

            btnSalesSummaryAllFieldsReportMoveToNextPageGrid.addEventListener('click', function () {
                salesSummaryAllFieldsReportCollectionView.moveToNextPage();
                currentPageIndex = salesSummaryAllFieldsReportCollectionView.pageIndex + 1;
                updateSalesSummaryAllFieldsReportNavigationButtons();
            });

            btnSalesSummaryAllFieldsReportMoveToLastPageGrid.addEventListener('click', function () {
                salesSummaryAllFieldsReportCollectionView.moveToLastPage();
                currentPageIndex = salesSummaryAllFieldsReportCollectionView.pageIndex + 1;
                updateSalesSummaryAllFieldsReportNavigationButtons();
            });
        }

        // ===========================================================
        // Update Sales Summary Report (All Fields) Navigation Buttons
        // ===========================================================
        function updateSalesSummaryAllFieldsReportNavigationButtons() {
            if (salesSummaryAllFieldsReportCollectionView.pageSize <= 0) {
                document.getElementById('salesSummaryAllFieldsReportNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('salesSummaryAllFieldsReportNavigationPageGrid').style.display = 'block';
            if (salesSummaryAllFieldsReportCollectionView.pageIndex === 0) {
                btnSalesSummaryAllFieldsReportMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnSalesSummaryAllFieldsReportMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnSalesSummaryAllFieldsReportMoveToNextPageGrid.removeAttribute('disabled');
                btnSalesSummaryAllFieldsReportMoveToLastPageGrid.removeAttribute('disabled');
            } else if (salesSummaryAllFieldsReportCollectionView.pageIndex === (salesSummaryAllFieldsReportCollectionView.pageCount - 1)) {
                btnSalesSummaryAllFieldsReportMoveToFirstPageGrid.removeAttribute('disabled');
                btnSalesSummaryAllFieldsReportMoveToPreviousPageGrid.removeAttribute('disabled');
                btnSalesSummaryAllFieldsReportMoveToLastPageGrid.setAttribute('disabled', 'disabled');
                btnSalesSummaryAllFieldsReportMoveToNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnSalesSummaryAllFieldsReportMoveToFirstPageGrid.removeAttribute('disabled');
                btnSalesSummaryAllFieldsReportMoveToPreviousPageGrid.removeAttribute('disabled');
                btnSalesSummaryAllFieldsReportMoveToNextPageGrid.removeAttribute('disabled');
                btnSalesSummaryAllFieldsReportMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnSalesSummaryAllFieldsReportCurrentPageGrid.innerHTML = (salesSummaryAllFieldsReportCollectionView.pageIndex + 1) + ' / ' + salesSummaryAllFieldsReportCollectionView.pageCount;
        }

        // =================
        // Refresh Flex Grid
        // =================
        function refreshSalesSummaryAllFieldsReportFlexGrid() {
            salesSummaryAllFieldsReportCollectionView = new wijmo.collections.CollectionView(getSalesSummaryAllFieldsReportData());
            salesSummaryAllFieldsReportCollectionView.canFilter = true;
            salesSummaryAllFieldsReportCollectionView.pageSize = cboSalesSummaryAllFieldsReportShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpSalesSummaryAllFieldsReportFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                salesSummaryAllFieldsReportCollectionView.refresh();
            });

            salesSummaryAllFieldsReportCollectionView.filter = function (item) {
                return !filterText || (item.SIDate.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.SI.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Customer.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Discount.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Item.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1);
            }

            salesSummaryAllFieldsReportCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateSalesSummaryAllFieldsReportNavigationButtons();
            });

            salesSummaryAllFieldsReportFlexGrid.itemsSource = salesSummaryAllFieldsReportCollectionView;
            salesSummaryAllFieldsReportFlexGrid.trackChanges = true;
        }

        // ============
        // Download CSV
        // ============
        function btnSalesSummaryAllFieldsReportDownloadCSVOnclick() {
            var CSV = '';
            var salesSummaryAllFieldsReport = [];
            var fileName = 'SalesSummaryAllFieldsReport.CSV';

            salesSummaryAllFieldsReportCollectionView.moveToFirstPage();

            for (var p = 1; p <= salesSummaryAllFieldsReportCollectionView.pageCount; p++) {
                for (i = 0; i < salesSummaryAllFieldsReportCollectionView.items.length; i++) {
                    salesSummaryAllFieldsReport.push({
                        Branch: salesSummaryAllFieldsReportCollectionView.items[i].Branch,
                        SINumber: salesSummaryAllFieldsReportCollectionView.items[i].SIForCSV,
                        SIDate: salesSummaryAllFieldsReportCollectionView.items[i].SIDate,
                        Customer: salesSummaryAllFieldsReportCollectionView.items[i].Customer,
                        Item: salesSummaryAllFieldsReportCollectionView.items[i].Item,
                        Price: salesSummaryAllFieldsReportCollectionView.items[i].Price,
                        Unit: salesSummaryAllFieldsReportCollectionView.items[i].Unit,
                        Quantity: salesSummaryAllFieldsReportCollectionView.items[i].Quantity,
                        Discount: salesSummaryAllFieldsReportCollectionView.items[i].Discount,
                        DiscountRate: salesSummaryAllFieldsReportCollectionView.items[i].DiscountRate,
                        DiscountAmount: salesSummaryAllFieldsReportCollectionView.items[i].DiscountRate,
                        VAT: salesSummaryAllFieldsReportCollectionView.items[i].Discount,
                        VATRate: salesSummaryAllFieldsReportCollectionView.items[i].DiscountRate,
                        VATAmount: salesSummaryAllFieldsReportCollectionView.items[i].DiscountRate,
                        Amount: salesSummaryAllFieldsReportCollectionView.items[i].Amount,
                    });
                }

                salesSummaryAllFieldsReportCollectionView.moveToNextPage();
                if (p == salesSummaryAllFieldsReportCollectionView.pageCount) {
                    salesSummaryAllFieldsReportCollectionView.moveToPage(currentPageIndex - 1);
                }
            }

            var Headers = [];
            Headers.push({
                Branch: "Branch",
                SINumber: "SI Number",
                SIDate: "SI Date",
                Customer: "Customer",
                Item: "Item",
                Price: "Price",
                Unit: "Unit",
                Quantity: "Quantity",
                Discount: "Discount",
                DiscountRate: "Discount Rate",
                DiscountAmount: "Discount Amount",
                VAT: "VAT",
                VATRate: "VAT Rate",
                VATAmount: "VAT Amount",
                Amount: "Amount"
            });

            var header = '';
            for (var b in Headers[0]) {
                header += '"' + Headers[0][b] + '",';
            }

            CSV = header + '\r\n';
            for (var i = 0; i < salesSummaryAllFieldsReport.length; i++) {
                var row = '';
                for (var a in salesSummaryAllFieldsReport[i]) {
                    row += '"' + salesSummaryAllFieldsReport[i][a] + '",';
                }

                row.slice(0, row.length - 1);
                CSV += row + '\r\n';
            }

            if (CSV == '') {
                toastr.error("No data.");
            } else {
                var link = document.createElement("a");
                if (link.download !== undefined) {
                    var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", fileName);
                    link.style = "visibility:hidden";
                }

                if (navigator.msSaveBlob) {
                    link.addEventListener("click", function (event) {
                        var blob = new Blob([CSV], {
                            "type": "text/csv;charset=utf-8;"
                        });
                        navigator.msSaveBlob(blob, fileName);
                    }, false);
                }

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                toastr.success("Dowload successful.");
            }
        }

        // =========
        // Print PDF
        // =========
        function btnSalesSummaryAllFieldsReportPDFOnclick() {
            if (cboSalesSummaryAllFieldsReportCompanyFilter.selectedValue != null) {
                if (cboSalesSummaryAllFieldsReportBranchFilter.selectedValue != null) {
                    var startDate = cboSalesSummaryAllFieldsReportStartDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                    var endDate = cboSalesSummaryAllFieldsReportEndDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                    var companyId = cboSalesSummaryAllFieldsReportCompanyFilter.selectedValue;
                    var branchId = cboSalesSummaryAllFieldsReportBranchFilter.selectedValue;

                    window.location.href = '/RepSalesSummaryAllFieldsReport/SalesSummaryAllFieldsReport?StartDate=' + startDate + '&EndDate=' + endDate + '&CompanyId=' + companyId + '&BranchId=' + branchId;
                } else {
                    toastr.error("Lacking Information");
                }
            } else {
                toastr.error("Lacking Information");
            }
        }

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            createCboDateRangeFilters();
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>