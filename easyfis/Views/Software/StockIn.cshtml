<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <title>Stock In</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <div class="sub-nav">
                <div class="container">
                    <h4><i class="fa fa-archive"></i> Stock In</h4>
                </div>
                <div class="div_Current_Page">
                    <div class="container">
                        <a href="@Url.Action("Index", "Software")" class="currentPageLinkCustom">Main Menu</a> > Stock In
                    </div>
                </div>
            </div>
            <div class="container">
                <!-- Stock In List -->
                <div id="stockInList">
                    <label>IN date </label>
                    <div class="row">
                        <div class="col-lg-4">
                            <div id="filterDate"></div>
                            <input type="hidden" id="filterDate_data" />
                        </div>
                        <div class="col-lg-8"></div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="input-group input-group-sm">
                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                <input type="text" class="form-control input-sm" id="InputFilter" placeholder="Search">
                            </div>
                        </div>
                        <div class="col-lg-8" align="right">
                            <button class="btn btn-primary btn-sm" onclick="btnAddStockIn_OnClick()"><i class="fa fa-plus"></i> Add</button>
                            <button class="btn btn-danger btn-sm" onclick="btnCloseStockIn_OnClick()"><i class=" fa fa-times"></i> Close</button>
                        </div>
                    </div>
                    <br />
                    <div class="row" align="left">
                        <div class="col-lg-12">
                            <div id="StockInGrid" class="grid" align="left"></div>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="btn-group col-md-7" id="naviagtionPageGrid">
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                <span class="glyphicon glyphicon-fast-backward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                <span class="glyphicon glyphicon-step-backward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                <span class="glyphicon glyphicon-step-forward"></span>
                            </button>
                            <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                <span class="glyphicon glyphicon-fast-forward"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- StockIn Delete -->
        <div class="modal fade" id="deleteStockInConfirm" role="dialog">
            <div class="modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Delete Stock <i class="fa fa-trash"></i></h4>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this?
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteStockIn" onclick="cmdStockInConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                        <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Delete Lock -->
        <div class="modal fade" id="deleteRecordLock" role="dialog">
            <div class="modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Record Locked <i class="fa fa-lock"></i></h4>
                    </div>
                    <div class="modal-body">
                        Sorry, the record is lock! It can't be deleted!
                    </div>
                    <div class="modal-footer">
                        <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"> Okay</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var stockIns;
        var stockInGrid;
        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;

        var isFirstSelect = true;

        // ==================================
        // GET Stock In List Filter by INDate
        // ==================================
        function getStockInFilterByINDate(INDateFilter) {
            var stockIns = new wijmo.collections.ObservableArray;
            NProgress.start();
            $.ajax({
                url: '/api/listStockInFilterByINDate/' + INDateFilter,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            if (Results[i]["IsLocked"] == true) {
                                stockIns.push({
                                    EditId: "<button class='btn btn-primary btn-xs btn-block' id='stockInEditButton' onclick='cmdStockInEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='stockInDeleteButton' onclick='cmdStockInDeleteLockButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                    Id: Results[i]["Id"],
                                    BranchId: Results[i]["BranchId"],
                                    Branch: Results[i]["Branch"],
                                    INNumber: Results[i]["INNumber"],
                                    INDate: Results[i]["INDate"],
                                    AccountId: Results[i]["AccountId"],
                                    Account: Results[i]["Account"],
                                    ArticleId: Results[i]["ArticleId"],
                                    Article: Results[i]["Article"],
                                    Particulars: Results[i]["Particulars"],
                                    ManualINNumber: Results[i]["ManualINNumber"],
                                    IsProduced: Results[i]["IsProduced"],
                                    PreparedById: Results[i]["PreparedById"],
                                    PreparedBy: Results[i]["PreparedBy"],
                                    CheckedById: Results[i]["CheckedById"],
                                    CheckedBy: Results[i]["CheckedBy"],
                                    ApprovedById: Results[i]["ApprovedById"],
                                    ApprovedBy: Results[i]["ApprovedBy"],
                                    IsLocked: Results[i]["IsLocked"],
                                    CreatedById: Results[i]["CreatedById"],
                                    CreatedBy: Results[i]["CreatedBy"],
                                    CreatedDateTime: Results[i]["CreatedDateTime"],
                                    UpdatedById: Results[i]["UpdatedById"],
                                    UpdatedBy: Results[i]["UpdatedBy"],
                                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
                                });
                            } else {
                                stockIns.push({
                                    EditId: "<button class='btn btn-primary btn-xs btn-block' id='stockInEditButton' onclick='cmdStockInEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='stockInDeleteButton' onclick='cmdStockInDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                    Id: Results[i]["Id"],
                                    BranchId: Results[i]["BranchId"],
                                    Branch: Results[i]["Branch"],
                                    INNumber: Results[i]["INNumber"],
                                    INDate: Results[i]["INDate"],
                                    AccountId: Results[i]["AccountId"],
                                    Account: Results[i]["Account"],
                                    ArticleId: Results[i]["ArticleId"],
                                    Article: Results[i]["Article"],
                                    Particulars: Results[i]["Particulars"],
                                    ManualINNumber: Results[i]["ManualINNumber"],
                                    IsProduced: Results[i]["IsProduced"],
                                    PreparedById: Results[i]["PreparedById"],
                                    PreparedBy: Results[i]["PreparedBy"],
                                    CheckedById: Results[i]["CheckedById"],
                                    CheckedBy: Results[i]["CheckedBy"],
                                    ApprovedById: Results[i]["ApprovedById"],
                                    ApprovedBy: Results[i]["ApprovedBy"],
                                    IsLocked: Results[i]["IsLocked"],
                                    CreatedById: Results[i]["CreatedById"],
                                    CreatedBy: Results[i]["CreatedBy"],
                                    CreatedDateTime: Results[i]["CreatedDateTime"],
                                    UpdatedById: Results[i]["UpdatedById"],
                                    UpdatedBy: Results[i]["UpdatedBy"],
                                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
                                });
                            }
                        }
                    }
                    NProgress.done();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return stockIns;
        }

        // ===========================
        // Stock In Delete Lock Button
        // ===========================
        function cmdStockInDeleteLockButton_OnClick() {
            $('#deleteRecordLock').modal({
                show: true,
                backdrop: 'static'
            });
        }

        // ===================
        // Stock In Add Button
        // ===================
        function btnAddStockIn_OnClick() {
            window.location = '/Software/StockInDetail';
        }

        // ====================
        // Stock In Edit Button
        // ====================
        function cmdStockInEditButton_OnClick() {
            stockIns.editItem(stockIns.currentItem);
            var stockIn = stockIns.currentEditItem;
            var stockInId = stockIn.Id;
            window.location = '/Software/StockInDetail?StockInId=' + stockInId;
        }

        // =====================
        // Stock In Close Button
        // =====================
        function btnCloseStockIn_OnClick() {
            window.location = '/Software';
        }

        // ======================
        // Stock In delete Button
        // ======================
        function cmdStockInDeleteButton_OnClick() {
            $('#deleteStockInConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            $("#cmdConfirmDeleteStockIn").prop("disabled", false);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
        }
        // Stock In Confirm Delete Button
        function cmdStockInConfirmDeleteButton_OnClick() {
            $("#cmdConfirmDeleteStockIn").prop("disabled", true);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", true);

            stockIns.editItem(stockIns.currentItem);
            var id = stockIns.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteStockIn/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteStockIn").prop("disabled", true);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");

                        $('#deleteStockInConfirm').modal('hide');

                        var INDateFilter = document.getElementById('filterDate_data').value;
                        stockIns = new wijmo.collections.CollectionView(getStockInFilterByINDate(INDateFilter));
                        stockIns.canFilter = true;
                        stockIns.pageSize = 15;

                        var filterText = '';
                        $('#InputFilter').keyup(function () {
                            filterText = this.value.toLowerCase();
                            stockIns.refresh();
                        });
                        stockIns.filter = function (item) {
                            return !filterText || (item.INNumber.toLowerCase().indexOf(filterText) > -1);
                        }
                        stockIns.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtonsStockIn();
                        });
                        stockIns.currentChanged.addHandler(function (sender, args) {
                            updateDetails();
                        });

                        // Flex Grid
                        stockInGrid.itemsSource = stockIns;
                        stockInGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deleteStockInConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockIn").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Can't be deleted");
                        $('#deleteStockInConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockIn").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ===================
        // FlexGrid Selection
        // ===================
        function updateDetails() {
            var item = stockIns.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ===============================
        // Navigation Buttons for Stock In
        // ===============================
        function updateNavigateButtonsStockIn() {
            if (stockIns.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            if (stockIns.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (stockIns.pageIndex === (stockIns.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (stockIns.pageIndex + 1) + ' / ' + stockIns.pageCount;
        }

        // ===========
        // Onload Page
        // ===========
        $(document).ready(function () {
            var INDateFilter_Date = new Date();
            document.getElementById("filterDate_data").value = [INDateFilter_Date.getMonth() + 1, INDateFilter_Date.getDate(), INDateFilter_Date.getFullYear()].join('-');

            var cboFilterDate;
            cboFilterDate = new wijmo.input.InputDate('#filterDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    if (!isFirstSelect) {
                        document.getElementById('filterDate_data').value = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                        var INDateFilterValue = document.getElementById('filterDate_data').value;

                        $('body').removeClass('modal-open');
                        $(".modal-backdrop").remove();

                        stockIns = new wijmo.collections.CollectionView(getStockInFilterByINDate(INDateFilterValue));
                        stockIns.canFilter = true;
                        stockIns.pageSize = 15;

                        var filterText = '';
                        $('#InputFilter').keyup(function () {
                            filterText = this.value.toLowerCase();
                            stockIns.refresh();
                        });
                        stockIns.filter = function (item) {
                            return !filterText || (item.INNumber.toLowerCase().indexOf(filterText) > -1);
                        }
                        stockIns.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtonsStockIn();
                        });
                        stockIns.currentChanged.addHandler(function (sender, args) {
                            updateDetails();
                        });

                        stockInGrid.itemsSource = stockIns;
                        stockInGrid.trackChanges = true;

                        updateNavigateButtonsStockIn();
                    }
                    else {
                        isFirstSelect = false;
                    }
                }
            });

            var INDateFilter = document.getElementById('filterDate_data').value;
            stockIns = new wijmo.collections.CollectionView(getStockInFilterByINDate(INDateFilter));
            stockIns.canFilter = true;
            stockIns.pageSize = 15;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockIns.refresh();
            });
            stockIns.filter = function (item) {
                return !filterText || (item.INNumber.toLowerCase().indexOf(filterText) > -1);
            }
            stockIns.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsStockIn();
            });
            stockIns.currentChanged.addHandler(function (sender, args) {
                updateDetails();
            });

            // Flex Grid
            stockInGrid = new wijmo.grid.FlexGrid('#StockInGrid');
            stockInGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "IN Number",
                                "binding": "INNumber",
                                "allowSorting": true,
                                "width": "1*",
                            },
                            {
                                "header": "IN Date",
                                "binding": "INDate",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Account",
                                "binding": "Account",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Produce",
                                "binding": "IsProduced",
                                "allowSorting": true,
                                "width": "0.5*"
                            },
                            {
                                "header": "Lock",
                                "binding": "IsLocked",
                                "allowSorting": true,
                                "width": "0.5*"
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: stockIns,
                isReadOnly: true,
                //frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockInGrid.trackChanges = true;

            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtonsStockIn();

            btnFirstPageGrid.addEventListener('click', function () {
                stockIns.moveToFirstPage();
                updateNavigateButtonsStockIn();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                stockIns.moveToPreviousPage();
                updateNavigateButtonsStockIn();
            });
            btnNextPageGrid.addEventListener('click', function () {
                stockIns.moveToNextPage();
                updateNavigateButtonsStockIn();
            });
            btnLastPageGrid.addEventListener('click', function () {
                stockIns.moveToLastPage();
                updateNavigateButtonsStockIn();
            });
        });

    </script>
</body>
</html>