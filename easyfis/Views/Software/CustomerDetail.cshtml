@{
    var branchId = Request.QueryString["BranchId"];
    var customerId = Request.QueryString["CustomerId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Customer Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <div class="sub-nav">
                <div class="container">
                    <h4><i class="fa fa-users"></i> Customer Detail</h4>
                </div>
                <div class="div_Current_Page">
                    <div class="container">
                        <span id="currentPage"></span>
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="customerDetailLabel"></h4>
                    </div>
                    <div class="col-md-6" align="right">
                        <button class="btn btn-primary btn-sm" id="customer_saveSaveCustomer" onclick="customerSaveCustomerButton_OnClick()"><i class="fa fa-save"></i> Save (Lock)</button>
                        <button class="btn btn-primary btn-sm" id="customer_saveCustomer" onclick="customerSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button class="btn btn-primary btn-sm" id="customer_editCustomer" onclick="customerEditButton_OnClick()"><i class="fa fa-edit"></i> Edit (Unlock)</button>
                        <button class="btn btn-primary btn-sm" id="customer_printCustomer" onclick="window.location.href ='@Url.Action("CustomerPDF", "Software", new { CustomerId = customerId })'"><i class="fa fa-print"></i> Print</button>
                        <button onclick="window.location.href = '@Url.Action("Customer", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="customer_CloseCustomer"><i class="fa fa-times"></i> Close</button>
                    </div>
                </div>
                <div class="well">
                    <form class="form-horizontal" role="form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Code</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredCustomer" id="artcileCustomer_code" />
                                        <input type="hidden" id="artcileCustomer_code_data" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Customer</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredCustomer" id="artcileCustomer_customer" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Customer Group</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="artcileCustomer_customerGroup"></div>

                                        <input type="hidden" id="artcileCustomer_customerGroup_data" class="requiredCustomer" />
                                        <input type="hidden" id="artcileCustomer_customerGroup_SelectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Account</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="artcileCustomer_account"></div>
                                        <input type="hidden" id="artcileCustomer_account_data" class="requiredCustomer" />
                                        <input type="hidden" id="artcileCustomer_account_SelectedValue" />
                                        <input type="hidden" id="artcileCustomer_SalesAccountId" />
                                        <input type="hidden" id="artcileCustomer_CostAccountId" />
                                        <input type="hidden" id="artcileCustomer_AssetAccountId" />
                                        <input type="hidden" id="artcileCustomer_ExpenseAccountId" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Term</label>
                                    <div class="col-sm-8">
                                        <div type="text" class="comboBox-wide" id="artcileCustomer_term"></div>

                                        <input type="hidden" id="artcileCustomer_term_data" class="requiredCustomer" />
                                        <input type="hidden" id="artcileCustomer_term_SelectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Credit Limit</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredCustomer" id="artcileCustomer_creditLimit"> <!-- Drop down list ni-->
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Address</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control textarea-custom requiredCustomer" id="artcileCustomer_address"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Contact Number</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredCustomer" id="artcileCustomer_contactNo">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Contact Person</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredCustomer" id="artcileCustomer_contactPerson">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">TIN</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredCustomer" id="artcileCustomer_TIN">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Particulars</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control textarea-custom requiredCustomer" id="artcileCustomer_particulars"></textarea>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Lock</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" class="checkbox_custom" id="isLocked_Status" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-4"></div>
                                    <div class="col-sm-8">
                                        <input type="hidden" id="Customer_IsLocked">
                                        <input type="hidden" id="Customer_IsLocked_defaultTrue">
                                        <input type="hidden" id="Customer_IsLocked_defaultFalse">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>

                <!-- Customer Lines -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    @*<li role="presentation" class="active"><a data-toggle="tab" href="#JournalLedger" id="journalLedgerTabId">Journal Ledger</a></li>*@
                    <li role="presentation" class="active"><a data-toggle="tab" href="#ContactInformation" id="contactInformationTabId">More Contact Information</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <!-- Journal Ledger List -->
                    <div id="JournalLedger" class="tab-pane fade in">
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Journal Ledger</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterJournalLedger" placeholder="Search">
                                </div>
                            </div>
                            <div class="col-lg-8" align="right">
                                <button class="btn btn-primary btn-sm" onclick="cmdaddnewaccount_onclick()"><i class="fa fa-plus"></i> add</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="JournalLedgerGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="navigationPageGridJournalLedger">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridJournalLedger">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridJournalLedger">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridJournalLedger"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridJournalLedger">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridJournalLedger">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- More Contact Information List -->
                    <div id="ContactInformation" class="tab-pane fade in active">
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>More Contact Information</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterContactInformation" placeholder="Search">
                                </div>
                            </div>
                            <div class="col-lg-8" align="right">
                                <button class="btn btn-primary btn-sm" id="btnAddContactInformation" onclick="cmdAddContact_OnClick()"><i class="fa fa-plus"></i> Add</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="ContactInformationGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="navigationPageGridContactInformation">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridContactInformation">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridContactInformation">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridContactInformation"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridContactInformation">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridContactInformation">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Contact Edit Detail -->
        <div class="modal fade" id="contactEdit" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="contactModalLabel">Contact Information Detail</h4>
                    </div>
                    <div class="modal-body">
                        <form id="contactDetailForm">
                            <input type="hidden" id="contact_Id" />
                            <dl class="dl-horizontal">
                                <dt>Contact Person</dt>
                                <dd><input type="text" class="form-control input-sm requiredContact" id="contact_contactPerson" /></dd>
                                <dt>Contact Number</dt>
                                <dd><input type="text" class="form-control input-sm requiredContact" id="contact_contactNumber" /></dd>
                                <dt>Remarks</dt>
                                <dd><textarea class="form-control textarea-custom requiredContact" id="contact_Remarks"></textarea></dd>
                            </dl>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary btn-sm" id="cmdSaveContactButton" onclick="cmdContactSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button id="cmdContactDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Contact Delete Modal Confirmation -->
        <div class="modal fade" id="deleteContactConfirm" role="dialog">
            <div class="modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Delete Contact <i class="fa fa-trash"></i></h4>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this?
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteContact" onclick="cmdContactConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                        <button id="cmdConfirmDeleteContactCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">
                        <h4>Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var customers;
        var articleCustomerGroups;
        var accounts;
        var terms;
        var cboArticleGroupForCustomer;
        var cboForAccount;
        var cboForTerm;

        // ==================================
        // Get Article for Customer by its ID
        // ==================================
        function getArticleCustomerById() {
            $('#loadingModal').modal('show');
            var customers = new wijmo.collections.ObservableArray;
            var customerId = @customerId;
            $.ajax({
                url: '/api/article/' +  customerId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    //if (Results.length > 0) {
                    //    customers.push ({
                    //        Id: Results.Id,
                    //        ArticleCode : Results.ArticleCode,
                    //        ManualArticleCode : Result.ManualArticleCode,
                    //        Article : Results.Article,
                    //        Category : Results.Category,
                    //        ArticleTypeId : Results.ArticleTypeId,
                    //        ArticleType : Results.ArticleType,
                    //        ArticleGroupId : Results.ArticleGroupId,
                    //        ArticleGroup : Results.ArticleGroup,
                    //        AccountId : Results.AccountId,
                    //        Account : Results.Account,
                    //        SalesAccountId : Results.SalesAccountId,
                    //        CostAccountId : Results.CostAccountId,
                    //        AssetAccountId : Results.AssetAccountId,
                    //        ExpenseAccountId : Results.ExpenseAccountId,
                    //        UnitId : Results.UnitId,
                    //        OutputTaxId : Results.OutputTaxId,
                    //        OutputTax : Results.OutputTax,
                    //        InputTaxId : Results.InputTaxId,
                    //        InputTax : Results.InputTax,
                    //        WTaxTypeId : Results.WTaxTypeId,
                    //        WTaxType : Results.WTaxType,
                    //        Price : Results.Price,
                    //        Cost : Results.Cost,
                    //        IsInventory : Results.IsInventory,
                    //        Particulars : Results.Particulars,
                    //        Address : Results.Address,
                    //        TermId : Results.TermId,
                    //        Term : Results.Term,
                    //        ContactNumber : Results.ContactNumber,
                    //        ContactPerson : Results.ContactPerson,
                    //        TaxNumber : Results.TaxNumber,
                    //        CreditLimit : Results.CreditLimit,
                    //        DateAcquired : Results.DateAcquired,
                    //        UsefulLife : Results.UsefulLife,
                    //        SalvageValue : Results.SalvageValue,
                    //        ManualArticleOldCode : Results.ManualArticleOldCode,
                    //        IsLocked: Results.IsLocked,
                    //        CreatedById: Results.CreatedById,
                    //        CreatedBy: Results.CreatedBy,
                    //        CreatedDateTime: Results.CreatedDateTime,
                    //        UpdatedById: Results.UpdatedById,
                    //        UpdatedBy: Results.UpdatedBy,
                    //        UpdatedDateTime: Results.UpdatedDateTime
                    //    });
                    //}

                    if(Results != null) {
                        document.getElementById('artcileCustomer_SalesAccountId').value = Results.SalesAccountId;
                        document.getElementById('artcileCustomer_CostAccountId').value = Results.CostAccountId;
                        document.getElementById('artcileCustomer_AssetAccountId').value = Results.AssetAccountId;
                        document.getElementById('artcileCustomer_ExpenseAccountId').value = Results.ExpenseAccountId;
                        document.getElementById('artcileCustomer_code').value = Results.ArticleCode;
                        document.getElementById('artcileCustomer_code_data').value = Results.ArticleCode;
                        document.getElementById('artcileCustomer_customer').value = Results.Article;
                        document.getElementById('artcileCustomer_creditLimit').value = Results.CreditLimit.toLocaleString();
                        document.getElementById('artcileCustomer_customerGroup_data').value = Results.ArticleGroupId;
                        document.getElementById('artcileCustomer_customerGroup_SelectedValue').value = Results.ArticleGroup;
                        document.getElementById('artcileCustomer_account_data').value = Results.AccountId;
                        document.getElementById('artcileCustomer_account_SelectedValue').value = Results.Account;
                        document.getElementById('artcileCustomer_term_data').value = Results.TermId;
                        document.getElementById('artcileCustomer_term_SelectedValue').value = Results.Term;
                        document.getElementById('artcileCustomer_address').value = Results.Address;
                        document.getElementById('artcileCustomer_particulars').value = Results.Particulars;
                        document.getElementById('artcileCustomer_TIN').value = Results.TaxNumber;
                        document.getElementById('artcileCustomer_contactNo').value = Results.ContactNumber;
                        document.getElementById('artcileCustomer_contactPerson').value = Results.ContactPerson;
                        document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                        document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                        document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                        document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;
                        document.getElementById('Customer_IsLocked').value = Results.IsLocked;

                        if(document.getElementById('Customer_IsLocked').value == 'true') {
                            document.getElementById('artcileCustomer_customer').disabled = true;
                            document.getElementById('artcileCustomer_address').disabled = true;
                            document.getElementById('artcileCustomer_creditLimit').disabled = true;
                            document.getElementById('artcileCustomer_particulars').disabled = true;
                            document.getElementById('artcileCustomer_TIN').disabled = true;
                            document.getElementById('artcileCustomer_contactNo').disabled = true;
                            document.getElementById('artcileCustomer_contactPerson').disabled = true;
                            $("#customer_saveSaveCustomer").prop("disabled", true);
                            $("#customer_saveCustomer").prop("disabled", true);
                            $("#customer_editCustomer").prop("disabled", false);
                            $("#customer_printCustomer").prop("disabled", false);
                            document.getElementById('isLocked_Status').checked = true;
                            $('#btnAddContactInformation').prop('disabled', true);

                        } else if(document.getElementById('Customer_IsLocked').value == 'false') {
                            document.getElementById('artcileCustomer_customer').disabled = false;
                            document.getElementById('artcileCustomer_address').disabled = false;
                            document.getElementById('artcileCustomer_creditLimit').disabled = false;
                            document.getElementById('artcileCustomer_particulars').disabled = false;
                            document.getElementById('artcileCustomer_TIN').disabled = false;
                            document.getElementById('artcileCustomer_contactNo').disabled = false;
                            document.getElementById('artcileCustomer_contactPerson').disabled = false;
                            $("#customer_saveSaveCustomer").prop("disabled", false);
                            $("#customer_saveCustomer").prop("disabled", false);
                            $("#customer_editCustomer").prop("disabled", true);
                            $("#customer_printCustomer").prop("disabled", true);
                            document.getElementById('isLocked_Status').checked = false;
                            $('#btnAddContactInformation').prop('disabled', false);

                        } else {
                            console.log("Invalid Lock");
                        }

                        // comboboxes
                        getArticleCustomerGroupForComboBox();
                        //getArticleAccountForComboBox();
                        getArticleTermForComboBox();
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return customers;
        }

        // ==================================
        // Get Last Id for Customer by its ID
        // ==================================
        function getLastInsertedIdCustomerByArticleTypeId() {
            var customers = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/articleLastIdByArticleTypeId/2',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        customers.push ({
                            Id: Results.Id,
                            Article : Results.Article
                        });
                    }
                    window.location = '/Software/CustomerDetail?CustomerId=' + Results.Id + '&BranchId=' + @branchId;
                    window.setTimeout(function () { location.reload() }, 1000);
                }
            });
        }

        // =========================
        // Get Artile Customer Group
        // =========================
        function getArticleCustomerGroupForComboBox() {
            articleCustomerGroups = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleGroupByArticleTypeId/2',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleCustomerGroups.push({
                                ArticleGroupId: results[i]["Id"],
                                ArticleGroupArticleGroup: results[i]["ArticleGroup"],
                                ArticleGroupAccountId: results[i]["AccountId"],
                                ArticleGroupAccount: results[i]["Account"],
                                ArticleGroupSalesAccountId: results[i]["SalesAccountId"],
                                ArticleGroupSalesAccount: results[i]["SalesAccount"],
                                ArticleGroupCostAccountId: results[i]["CostAccountId"],
                                ArticleGroupCostAccount: results[i]["CostAccount"],
                                ArticleGroupAssetAccountId: results[i]["AssetAccountId"],
                                ArticleGroupAssetAccount: results[i]["AssetAccount"],
                                ArticleGroupExpenseAccountId: results[i]["ExpenseAccountId"],
                                ArticleGroupExpenseAccount: results[i]["ExpenseAccount"]
                            });
                        }
                        createCboForArticleCustomerGroup(articleCustomerGroups);
                        getArticleAccountForComboBox();
                    } else {
                        createCboForArticleCustomerGroup(articleCustomerGroups);
                        getArticleAccountForComboBox();
                    }
                }
            });
        }

        // ======================
        // CBO for Customer Group
        // ======================
        function createCboForArticleCustomerGroup(articleCustomerGroups) {
            var articleCustomerGroupCollection = new wijmo.collections.CollectionView(articleCustomerGroups);
            var articleGroupList = new Array();
            for (var i = 0; i < articleCustomerGroupCollection.items.length; i++) {
                articleGroupList.push(articleCustomerGroupCollection.items[i].ArticleGroupArticleGroup);
            }

            var disabled;
            if(articleCustomerGroups == 0) {
                disabled = true;
            } else {
                if(document.getElementById('Customer_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboArticleGroupForCustomer.dispose();
            cboArticleGroupForCustomer = new wijmo.input.ComboBox('#artcileCustomer_customerGroup', {
                disabled: disabled,
                placeholder: "Select Customer Group",
                itemsSource: articleGroupList,
                isEditable: false,
                selectedValue: document.getElementById('artcileCustomer_customerGroup_SelectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#artcileCustomer_customerGroup_data").val(articleCustomerGroupCollection.items[this.selectedIndex].ArticleGroupId);
                    $("#artcileCustomer_account_data").val(articleCustomerGroupCollection.items[this.selectedIndex].ArticleGroupAccountId);
                    $("#artcileCustomer_account_SelectedValue").val(articleCustomerGroupCollection.items[this.selectedIndex].ArticleGroupAccount);
                    $("#artcileCustomer_SalesAccountId").val(articleCustomerGroupCollection.items[this.selectedIndex].ArticleGroupSalesAccountId);
                    $("#artcileCustomer_CostAccountId").val(articleCustomerGroupCollection.items[this.selectedIndex].ArticleGroupCostAccountId);
                    $("#artcileCustomer_AssetAccountId").val(articleCustomerGroupCollection.items[this.selectedIndex].ArticleGroupAssetAccountId);
                    $("#artcileCustomer_ExpenseAccountId").val(articleCustomerGroupCollection.items[this.selectedIndex].ArticleGroupExpenseAccountId);

                    getArticleAccountForComboBox();
                }
            });

            document.getElementById('artcileCustomer_customerGroup_data').value = articleCustomerGroupCollection.items[cboArticleGroupForCustomer.selectedIndex].ArticleGroupId;
            document.getElementById('artcileCustomer_account_data').value = articleCustomerGroupCollection.items[cboArticleGroupForCustomer.selectedIndex].ArticleGroupAccountId;
            document.getElementById('artcileCustomer_account_SelectedValue').value = articleCustomerGroupCollection.items[cboArticleGroupForCustomer.selectedIndex].ArticleGroupAccount;
            document.getElementById('artcileCustomer_SalesAccountId').value = articleCustomerGroupCollection.items[cboArticleGroupForCustomer.selectedIndex].ArticleGroupSalesAccountId;
            document.getElementById('artcileCustomer_CostAccountId').value = articleCustomerGroupCollection.items[cboArticleGroupForCustomer.selectedIndex].ArticleGroupCostAccountId;
            document.getElementById('artcileCustomer_AssetAccountId').value = articleCustomerGroupCollection.items[cboArticleGroupForCustomer.selectedIndex].ArticleGroupAssetAccountId;
            document.getElementById('artcileCustomer_ExpenseAccountId').value = articleCustomerGroupCollection.items[cboArticleGroupForCustomer.selectedIndex].ArticleGroupExpenseAccountId;
        }

        // ==================
        // Get Artile Account
        // ==================
        function getArticleAccountForComboBox() {
            accounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accounts.push({
                                AccountId: results[i]["Id"],
                                AccountAccount: results[i]["Account"]
                            });
                        }
                        createCboForAccount(accounts);
                    } else {
                        createCboForAccount(accounts);
                    }
                }
            });
        }

        // ===============
        // CBO for Account
        // ===============
        function  createCboForAccount(accounts) {
            var accountCollection = new wijmo.collections.CollectionView(accounts);
            var accountList = new Array();
            for (var i = 0; i < accountCollection.items.length; i++) {
                accountList.push(accountCollection.items[i].AccountAccount);
            }

            var disabled;
            if(accounts == 0) {
                disabled = true;
            } else {
                if(document.getElementById('Customer_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboForAccount.dispose();
            cboForAccount = new wijmo.input.ComboBox('#artcileCustomer_account', {
                disabled: true,
                placeholder: "Select Account",
                itemsSource: accountList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('artcileCustomer_account_SelectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#artcileCustomer_account_data").val(accountCollection.items[this.selectedIndex].AccountId);
                }
            });
        }

        // ===============
        // Get Artile Term
        // ===============
        function getArticleTermForComboBox() {
            terms = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTerm',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            terms.push({
                                TermId: results[i]["Id"],
                                TermTerm: results[i]["Term"]
                            });
                        }
                        createCboForTerm(terms);
                    } else {
                        createCboForTerm(terms);
                    }
                }
            });
        }

        // ============
        // CBO for Term
        // ============
        function createCboForTerm(terms) {
            var termCollection = new wijmo.collections.CollectionView(terms);
            var termList = new Array();
            for (var i = 0; i < termCollection.items.length; i++) {
                termList.push(termCollection.items[i].TermTerm);
            }

            var disabled;
            if(terms == 0) {
                disabled = true;
            } else {
                if(document.getElementById('Customer_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboForTerm.dispose();
            cboForTerm = new wijmo.input.ComboBox('#artcileCustomer_term', {
                disabled: disabled,
                placeholder: "Select Term",
                itemsSource: termList,
                isEditable: false,
                selectedValue: document.getElementById('artcileCustomer_term_SelectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#artcileCustomer_term_data").val(termCollection.items[this.selectedIndex].TermId);
                }
            });

            document.getElementById('artcileCustomer_term_data').value = termCollection.items[cboForTerm.selectedIndex].TermId;
        }

        // ========================================================
        // Function with leading zeroes to display the article code
        // ========================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while(pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // =============================
        // SAVE Customer Customer Button
        // =============================
        function customerSaveCustomerButton_OnClick() {
            var customerObject = new Object();
            var customerId = @customerId;
            customerObject.ArticleCode = document.getElementById('artcileCustomer_code').value;
            customerObject.Article = document.getElementById('artcileCustomer_customer').value;
            customerObject.ArticleGroupId = document.getElementById('artcileCustomer_customerGroup_data').value;
            customerObject.AccountId = document.getElementById('artcileCustomer_account_data').value;
            customerObject.SalesAccountId = document.getElementById('artcileCustomer_SalesAccountId').value;
            customerObject.CostAccountId = document.getElementById('artcileCustomer_CostAccountId').value;
            customerObject.AssetAccountId = document.getElementById('artcileCustomer_AssetAccountId').value;
            customerObject.ExpenseAccountId = document.getElementById('artcileCustomer_ExpenseAccountId').value;
            customerObject.Particulars = document.getElementById('artcileCustomer_particulars').value;
            customerObject.Address = document.getElementById('artcileCustomer_address').value;
            customerObject.TermId = document.getElementById('artcileCustomer_term_data').value;
            customerObject.CreditLimit = document.getElementById('artcileCustomer_creditLimit').value;
            customerObject.ContactNumber = document.getElementById('artcileCustomer_contactNo').value;
            customerObject.ContactPerson = document.getElementById('artcileCustomer_contactPerson').value;
            customerObject.TaxNumber = document.getElementById('artcileCustomer_TIN').value;
            customerObject.IsLocked = true;
            var data = JSON.stringify(customerObject);

            if( document.getElementById('artcileCustomer_customerGroup_data').value == '') {
                document.getElementById("artcileCustomer_customerGroup").style.border = "1px solid red";
            } else {
                document.getElementById("artcileCustomer_customerGroup").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('artcileCustomer_account_data').value == '') {
                document.getElementById("artcileCustomer_account").style.border = "1px solid red";
            } else {
                document.getElementById("artcileCustomer_account").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('artcileCustomer_term_data').value == '') {
                document.getElementById("artcileCustomer_term").style.border = "1px solid red";
            } else {
                document.getElementById("artcileCustomer_term").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredCustomer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
            }
            else {
                if(customerId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addArticle/2',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getLastInsertedIdCustomerByArticleTypeId, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateArticle/' + customerId + '/2',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                            }
                        }
                    });
                }
            }
        }

        // ====================
        // EDIT Customer Button
        // ====================
        function customerEditButton_OnClick() {
            $("#customer_saveSaveCustomer").prop("disabled", true);
            $("#customer_saveCustomer").prop("disabled", true);
            $("#customer_editCustomer").prop("disabled", true);
            $("#customer_printCustomer").prop("disabled", true);
            $("#customer_CloseCustomer").prop("disabled", true);

            var customerObject = new Object();
            var customerId = @customerId;

            if(customerId > 0) {
                customerObject.IsLocked = document.getElementById('Customer_IsLocked_defaultFalse').value;
            } else {
                customerObject.IsLocked = document.getElementById('Customer_IsLocked_defaultTrue').value;
            }

            var dataUpdate = JSON.stringify(customerObject);
            $.ajax({
                type: "PUT",
                url: '/api/updateArticleIsLock/' + customerId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: dataUpdate,
                statusCode: {
                    200: function () {
                        toastr.success("Unlocked");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                        $("#customer_saveSaveCustomer").prop("disabled", true);
                        $("#customer_saveCustomer").prop("disabled", true);
                        $("#customer_editCustomer").prop("disabled", true);
                        $("#customer_printCustomer").prop("disabled", true);
                        $("#customer_CloseCustomer").prop("disabled", true);
                    },
                    404: function () {
                        toastr.error("Can't Update");
                        $("#customer_saveSaveCustomer").prop("disabled", false);
                        $("#customer_saveCustomer").prop("disabled", false);
                        $("#customer_editCustomer").prop("disabled", false);
                        $("#customer_printCustomer").prop("disabled", false);
                        $("#customer_CloseCustomer").prop("disabled", false);

                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#customer_saveSaveCustomer").prop("disabled", false);
                        $("#customer_saveCustomer").prop("disabled", false);
                        $("#customer_editCustomer").prop("disabled", false);
                        $("#customer_printCustomer").prop("disabled", false);
                        $("#customer_CloseCustomer").prop("disabled", false);
                    }
                }
            });
        }

        // ============
        // ADD Customer
        // ============
        function customerSaveButton_OnClick() {
            var customerObject = new Object();
            var customerId = @customerId;
            customerObject.ArticleCode = document.getElementById('artcileCustomer_code').value;
            customerObject.Article = document.getElementById('artcileCustomer_customer').value;
            customerObject.ArticleGroupId = document.getElementById('artcileCustomer_customerGroup_data').value;
            customerObject.AccountId = document.getElementById('artcileCustomer_account_data').value;
            customerObject.SalesAccountId = document.getElementById('artcileCustomer_SalesAccountId').value;
            customerObject.CostAccountId = document.getElementById('artcileCustomer_CostAccountId').value;
            customerObject.AssetAccountId = document.getElementById('artcileCustomer_AssetAccountId').value;
            customerObject.ExpenseAccountId = document.getElementById('artcileCustomer_ExpenseAccountId').value;
            customerObject.Particulars = document.getElementById('artcileCustomer_particulars').value;
            customerObject.Address = document.getElementById('artcileCustomer_address').value;
            customerObject.TermId = document.getElementById('artcileCustomer_term_data').value;
            customerObject.CreditLimit = document.getElementById('artcileCustomer_creditLimit').value;
            customerObject.ContactNumber = document.getElementById('artcileCustomer_contactNo').value;
            customerObject.ContactPerson = document.getElementById('artcileCustomer_contactPerson').value;
            customerObject.TaxNumber = document.getElementById('artcileCustomer_TIN').value;
            var data = JSON.stringify(customerObject);

            if( document.getElementById('artcileCustomer_customerGroup_data').value == '') {
                document.getElementById("artcileCustomer_customerGroup").style.border = "1px solid red";
            } else {
                document.getElementById("artcileCustomer_customerGroup").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('artcileCustomer_account_data').value == '') {
                document.getElementById("artcileCustomer_account").style.border = "1px solid red";
            } else {
                document.getElementById("artcileCustomer_account").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('artcileCustomer_term_data').value == '') {
                document.getElementById("artcileCustomer_term").style.border = "1px solid red";
            } else {
                document.getElementById("artcileCustomer_term").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredCustomer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
            }
            else {
                if(customerId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addArticle/2',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getLastInsertedIdCustomerByArticleTypeId, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateArticle/' + customerId + '/2',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#customer_saveSaveCustomer").prop("disabled", true);
                                $("#customer_saveCustomer").prop("disabled", true);
                                $("#customer_editCustomer").prop("disabled", true);
                                $("#customer_printCustomer").prop("disabled", true);
                                $("#customer_CloseCustomer").prop("disabled", true);
                            }
                        }
                    });
                }
            }
        }

        // ===========
        // Onload Page
        // ===========
        $(document).ready(function () {
            document.getElementById('Customer_IsLocked_defaultTrue').value = 'true';
            document.getElementById('Customer_IsLocked_defaultFalse').value = 'false';
            document.getElementById('isLocked_Status').disabled = true;

            getArticleCustomerById();

            var customerId = @customerId;
            if(customerId == 0) {
                // comboboxes
                getArticleCustomerGroupForComboBox();
                //getArticleAccountForComboBox();
                getArticleTermForComboBox();

                if(document.getElementById('artcileCustomer_code_data').value == 0) {
                    document.getElementById('artcileCustomer_code').value = "0000000001";
                }

                document.getElementById('artcileCustomer_code_data').value = 0;

                var customers = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/articleLastArticleCodeByArticleTypeId/2',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        //if (Results.length > 0) {
                        //    customers.push({
                        //        Id: Results.Id,
                        //        CustomerArticleCode: Results.ArticleCode
                        //    });
                        //}

                        if(Results != null) {
                            var ArticleCode = parseInt(Results.ArticleCode);
                            var ArticleCode_plusOne = 0000000001;
                            var ArticleCode_Results = ArticleCode + ArticleCode_plusOne;
                            document.getElementById('artcileCustomer_code_data').value = zerofill(ArticleCode_Results, 10);
                            document.getElementById('artcileCustomer_code').value = zerofill(ArticleCode_Results, 10);
                        }
                    }
                });

                $("#customer_saveSaveCustomer").prop("disabled", false);
                $("#customer_saveCustomer").prop("disabled", false);
                $("#customer_editCustomer").prop("disabled", true);
                $("#customer_printCustomer").prop("disabled", true);
            }

            document.getElementById('currentPage').innerHTML = '<a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Main Menu</a> > ' + ' <a href="@Url.Action("Customer", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Customer</a> ' + ' > Customer Detail';
            document.getElementById('artcileCustomer_code').disabled = true;

            // combo box
            cboArticleGroupForCustomer  = new wijmo.input.ComboBox('#artcileCustomer_customerGroup');
            cboForAccount  = new wijmo.input.ComboBox('#artcileCustomer_account');
            cboForTerm  = new wijmo.input.ComboBox('#artcileCustomer_term');
        });
    </script>

    <!-- ====================== -->
    <!-- Journal Ledger Scripts -->
    <!-- ====================== -->
    <script type="text/javascript">
        // ===================================
        // Global Variables for Journal Ledger
        // ===================================
        var journalLedgers;
        var journalLedgerGrid;

        var btnFirstPageGridJournalLedger;
        var btnPreviousPageGridJournalLedger;
        var btnNextPageGridJournalLedger;
        var btnLastPageGridJournalLedger;
        var btnCurrentPageGridJournalLedger;

        // =======================
        // GET Journal Ledger List
        // =======================
        function getJournalLedger() {
            var journalLedgers = new wijmo.collections.ObservableArray;
            //$('#loadingModal').modal('show');
            //$.ajax({
            //    url: '/api/listAccount',
            //    cache: false,
            //    type: 'GET',
            //    contentType: 'application/json; charset=utf-8',
            //    data: {},
            //    success: function (Results) {
            //        $('#loadingModal').modal('hide');
            //        if (Results.length > 0) {
            //            for (i = 0; i < Results.length; i++) {
            //                journalLedger.push({
            //                    EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
            //                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
            //                    Id: Results[i]["Id"],
            //                    AccountCode: Results[i]["AccountCode"],
            //                    Account: Results[i]["Account"],
            //                    AccountTypeId: Results[i]["AccountTypeId"],
            //                    AccountType: Results[i]["AccountType"],
            //                    AccountCashFlowId: Results[i]["AccountCashFlowId"],
            //                    AccountCashFlow: Results[i]["AccountCashFlow"],
            //                    IsLocked: Results[i]["IsLocked"],
            //                    CreatedById: Results[i]["CreatedById"],
            //                    CreatedBy: Results[i]["CreatedBy"],
            //                    CreatedDateTime: Results[i]["CreatedDateTime"],
            //                    UpdatedById: Results[i]["UpdatedById"],
            //                    UpdatedBy: Results[i]["UpdatedBy"],
            //                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
            //                });
            //            }
            //        }
            //    }
            //}).fail(function (xhr, textStatus, err) {
            //    alert(err);
            //});
            //return journalLedgers;
        }
        // =====================================
        // FlexGrid Selection for Journal Ledger
        // =====================================
        function updateDetailsJournalLedger() {
            var item = journalLedgers.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // =====================================
        // Navigation Buttons for Journal Ledger
        // =====================================
        function updateNavigateButtonsJournalLedger() {
            if (journalLedgers.pageSize <= 0) {
                document.getElementById('navigationPageGridJournalLedger').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridJournalLedger').style.display = 'block';
            if (journalLedgers.pageIndex === 0) {
                btnFirstPageGridJournalLedger.setAttribute('disabled', 'disabled');
                btnPreviousPageGridJournalLedger.setAttribute('disabled', 'disabled');
                btnNextPageGridJournalLedger.removeAttribute('disabled');
                btnLastPageGridJournalLedger.removeAttribute('disabled');
            } else if (journalLedgers.pageIndex === (journalLedgers.pageCount - 1)) {
                btnFirstPageGridJournalLedger.removeAttribute('disabled');
                btnPreviousPageGridJournalLedger.removeAttribute('disabled');
                btnLastPageGridJournalLedger.setAttribute('disabled', 'disabled');
                btnNextPageGridJournalLedger.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridJournalLedger.removeAttribute('disabled');
                btnPreviousPageGridJournalLedger.removeAttribute('disabled');
                btnNextPageGridJournalLedger.removeAttribute('disabled');
                btnLastPageGridJournalLedger.removeAttribute('disabled');
            }
            btnCurrentPageGridJournalLedger.innerHTML = (journalLedgers.pageIndex + 1) + ' / ' + journalLedgers.pageCount;
        }

        // ===============
        //  Journal Ledger
        // ===============
        function journalLedgerTab() {
            journalLedgers = new wijmo.collections.CollectionView();
            journalLedgers.canFilter = true;
            journalLedgers.pageSize = 15;

            var filterTextJournalLedger = '';
            $('#InputFilterJournalLedger').keyup(function () {
                filterTextJournalLedger = this.value.toLowerCase();
                journalLedgers.refresh();
            });
            journalLedgers.filter = function (item) {
                return !filterTextJournalLedger || (item.journalLedger.toLowerCase().indexOf(filterTextJournalLedger) > -1);
            }
            journalLedgers.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsJournalLedger();
            });
            journalLedgers.currentChanged.addHandler(function (sender, args) {
                updateDetailsJournalLedger();
            });

            // Flex Grid for Journal Ledger
            journalLedgerGrid = new wijmo.grid.FlexGrid('#JournalLedgerGrid');
            journalLedgerGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Date",
                                //"binding": "Date",
                                "allowSorting": true,
                                "width": "1*",
                            },
                            {
                                "header": "Doc Ref.",
                                // "binding": "Doc Ref.",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Branch",
                                // "binding": "Branch",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Account",
                                // "binding": "Account",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Debit",
                                // "binding": "Debit",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Credit",
                                // "binding": "Credit",
                                "allowSorting": true,
                                "width": "2*"
                            },
                             {
                                 "header": "Balance",
                                 //    "binding": "Balance",
                                 "allowSorting": true,
                                 "width": "2*"
                             },
                             {
                                 "header": "Particulars",
                                 //  "binding": "Particulars",
                                 "allowSorting": true,
                                 "width": "2*"
                             },
                ],
                autoGenerateColumns: false,
                //itemsSource: journalLedgers,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalLedgerGrid.trackChanges = true;

            //Navigation button for Journal Ledger
            btnFirstPageGridJournalLedger = document.getElementById('btnMoveToFirstPageGridJournalLedger');
            btnPreviousPageGridJournalLedger = document.getElementById('btnMoveToPreviousPageGridJournalLedger');
            btnNextPageGridJournalLedger = document.getElementById('btnMoveToNextPageGridJournalLedger');
            btnLastPageGridJournalLedger = document.getElementById('btnMoveToLastPageGridJournalLedger');
            btnCurrentPageGridJournalLedger = document.getElementById('btnCurrentPageGridJournalLedger');

            updateNavigateButtonsJournalLedger();

            btnFirstPageGridJournalLedger.addEventListener('click', function () {
                journalLedgers.moveToFirstPage();
                updateNavigateButtonsJournalLedger();
            });
            btnPreviousPageGridJournalLedger.addEventListener('click', function () {
                journalLedgers.moveToPreviousPage();
                updateNavigateButtonsJournalLedger();
            });
            btnNextPageGridJournalLedger.addEventListener('click', function () {
                journalLedgers.moveToNextPage();
                updateNavigateButtonsJournalLedger();
            });
            btnLastPageGridJournalLedger.addEventListener('click', function () {
                journalLedgers.moveToLastPage();
                updateNavigateButtonsJournalLedger();
            });
        }
    </script>

    <!-- =========================== -->
    <!-- Contact Information Scripts -->
    <!-- =========================== -->
    <script type="text/javascript">
        // ========================================
        // Global Variables for Contact Information
        // ========================================
        var contactInformations;
        var contactInformationGrid;

        var btnFirstPageGridContactInformation;
        var btnPreviousPageGridContactInformation;
        var btnNextPageGridContactInformation;
        var btnLastPageGridContactInformation;
        var btnCurrentPageGridContactInformation;

        // ============================
        // GET Contact Information List
        // ============================
        function getContactInformation() {
            var contactInformations = new wijmo.collections.ObservableArray;
            var articleId = @customerId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listArticleContactByArticleId/' + articleId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {

                        var customers = new wijmo.collections.ObservableArray;
                        var customerId = @customerId;
                        $.ajax({
                            url: '/api/article/' +  customerId,
                            cache: false,
                            type: 'GET',
                            contentType: 'application/json; charset=utf-8',
                            data: {},
                            success: function (CustomerResults) {
                                $('#loadingModal').modal('hide');
                                if (CustomerResults.length > 0) {
                                    customers.push ({
                                        Id: CustomerResults.Id,
                                        IsLocked: CustomerResults.IsLocked
                                    });
                                }

                                if(CustomerResults.IsLocked == true) {
                                    for (i = 0; i < Results.length; i++) {
                                        contactInformations.push({
                                            EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditContact_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>",
                                            DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteContact_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>",
                                            Id: Results[i]["Id"],
                                            ArticleId: Results[i]["ArticleId"],
                                            Article: Results[i]["Article"],
                                            ContactPerson: Results[i]["ContactPerson"],
                                            ContactNumber: Results[i]["ContactNumber"],
                                            Remarks: Results[i]["Remarks"]
                                        });
                                    }
                                } else {
                                    for (i = 0; i < Results.length; i++) {
                                        contactInformations.push({
                                            EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditContact_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                            DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteContact_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                            Id: Results[i]["Id"],
                                            ArticleId: Results[i]["ArticleId"],
                                            Article: Results[i]["Article"],
                                            ContactPerson: Results[i]["ContactPerson"],
                                            ContactNumber: Results[i]["ContactNumber"],
                                            Remarks: Results[i]["Remarks"]
                                        });
                                    }
                                }
                            }
                        });
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return contactInformations;
        }

        // ===========
        // ADD Contact
        // ===========
        function cmdAddContact_OnClick() {
            $('#contactEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            $("#cmdSaveContactButton").prop("disabled", false);
            $("#cmdContactDetailCloseButton").prop("disabled", false);

            document.getElementById('contact_Id').value = 0;
            document.getElementById('contact_contactPerson').value = '';
            document.getElementById('contact_contactNumber').value = '';
            document.getElementById('contact_Remarks').value = '';
        }

        // ==================
        // Contact Edit Button
        // ==================
        function btnEditContact_OnClick() {
            contactInformations.editItem(contactInformations.currentItem);
            $('#contactEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            $("#cmdSaveContactButton").prop("disabled", false);
            $("#cmdContactDetailCloseButton").prop("disabled", false);

            var contactInformation = contactInformations.currentEditItem;

            document.getElementById('contact_Id').value = contactInformation.Id;
            document.getElementById('contact_contactPerson').value = contactInformation.ContactPerson;
            document.getElementById('contact_contactNumber').value = contactInformation.ContactNumber;
            document.getElementById('contact_Remarks').value = contactInformation.Remarks;
        }

        // ============
        // SAVE Contact
        // ============
        function cmdContactSaveButton_OnClick() {
            var contactObject = new Object();
            var articleId = @customerId;
            var contactId = document.getElementById('contact_Id').value;

            contactObject.ContactPerson = document.getElementById('contact_contactPerson').value;
            contactObject.ContactNumber = document.getElementById('contact_contactNumber').value;
            contactObject.Remarks = document.getElementById('contact_Remarks').value;
            var contactData = JSON.stringify(contactObject);

            var isValid = true;
            $('.requiredContact').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": ""
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
            }
            else {
                $("#cmdSaveContactButton").prop("disabled", true);
                $("#cmdContactDetailCloseButton").prop("disabled", true);

                if (contactId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addArticleContact/' + articleId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveContactButton").prop("disabled", true);
                                $("#cmdContactDetailCloseButton").prop("disabled", true);
                                toastr.success("Successfully Saved");

                                $('#contactEdit').modal('hide');

                                contactInformations = new wijmo.collections.CollectionView(getContactInformation());
                                contactInformations.canFilter = true;
                                contactInformations.pageSize = 15;

                                var filterTextContactInformation = '';
                                $('#InputFilterContactInformation').keyup(function () {
                                    filterTextContactInformation = this.value.toLowerCase();
                                    contactInformations.refresh();
                                });
                                contactInformations.filter = function (item) {
                                    return !filterTextContactInformation || (item.ContactPerson.toLowerCase().indexOf(filterTextContactInformation) > -1);
                                }
                                contactInformations.collectionChanged.addHandler(function (sender, args) {
                                    updateNavigateButtonsContactInformation();
                                });

                                // Flex Grid for Contact Information
                                contactInformationGrid.trackChanges = true;
                                contactInformationGrid.itemsSource = contactInformations;
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdSaveContactButton").prop("disabled", false);
                                $("#cmdContactDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSaveContactButton").prop("disabled", false);
                                $("#cmdContactDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateArticleContact/' + contactId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveContactButton").prop("disabled", true);
                                $("#cmdContactDetailCloseButton").prop("disabled", true);
                                toastr.success("Successfully Updated");

                                $('#contactEdit').modal('hide');

                                contactInformations = new wijmo.collections.CollectionView(getContactInformation());
                                contactInformations.canFilter = true;
                                contactInformations.pageSize = 15;

                                var filterTextContactInformation = '';
                                $('#InputFilterContactInformation').keyup(function () {
                                    filterTextContactInformation = this.value.toLowerCase();
                                    contactInformations.refresh();
                                });
                                contactInformations.filter = function (item) {
                                    return !filterTextContactInformation || (item.ContactPerson.toLowerCase().indexOf(filterTextContactInformation) > -1);
                                }
                                contactInformations.collectionChanged.addHandler(function (sender, args) {
                                    updateNavigateButtonsContactInformation();
                                });

                                // Flex Grid for Contact Information
                                contactInformationGrid.trackChanges = true;
                                contactInformationGrid.itemsSource = contactInformations;
                            },
                            404: function () {
                                toastr.error("Can't Update");
                                $("#cmdSaveContactButton").prop("disabled", false);
                                $("#cmdContactDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSaveContactButton").prop("disabled", false);
                                $("#cmdContactDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ==============
        // DELETE Contact
        // ==============
        function btnDeleteContact_OnClick() {
            $('#deleteContactConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            $("#cmdConfirmDeleteContact").prop("disabled", false);
            $("#cmdConfirmDeleteContactCloseButton").prop("disabled", false);
        }
        // Contact Confirm Delete
        function cmdContactConfirmDeleteButton_OnClick() {
            $("#cmdConfirmDeleteContact").prop("disabled", true);
            $("#cmdConfirmDeleteContactCloseButton").prop("disabled", true);

            contactInformations.editItem(contactInformations.currentItem);
            var contactId = contactInformations.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteArticleContact/' + contactId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteContact").prop("disabled", true);
                        $("#cmdConfirmDeleteContactCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");

                        $('#deleteContactConfirm').modal('hide');

                        contactInformations = new wijmo.collections.CollectionView(getContactInformation());
                        contactInformations.canFilter = true;
                        contactInformations.pageSize = 15;

                        var filterTextContactInformation = '';
                        $('#InputFilterContactInformation').keyup(function () {
                            filterTextContactInformation = this.value.toLowerCase();
                            contactInformations.refresh();
                        });
                        contactInformations.filter = function (item) {
                            return !filterTextContactInformation || (item.ContactPerson.toLowerCase().indexOf(filterTextContactInformation) > -1);
                        }
                        contactInformations.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtonsContactInformation();
                        });

                        // Flex Grid for Contact Information
                        contactInformationGrid.trackChanges = true;
                        contactInformationGrid.itemsSource = contactInformations;
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deleteContactConfirm').modal('hide');
                        $("#cmdConfirmDeleteContact").prop("disabled", false);
                        $("#cmdConfirmDeleteContactCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deleteContactConfirm').modal('hide');
                        $("#cmdConfirmDeleteContact").prop("disabled", false);
                        $("#cmdConfirmDeleteContactCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ==========================================
        // Navigation Buttons for Contact Information
        // ==========================================
        function updateNavigateButtonsContactInformation() {
            if (contactInformations.pageSize <= 0) {
                document.getElementById('navigationPageGridContactInformation').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridContactInformation').style.display = 'block';
            if (contactInformations.pageIndex === 0) {
                btnFirstPageGridContactInformation.setAttribute('disabled', 'disabled');
                btnPreviousPageGridContactInformation.setAttribute('disabled', 'disabled');
                btnNextPageGridContactInformation.removeAttribute('disabled');
                btnLastPageGridContactInformation.removeAttribute('disabled');
            } else if (contactInformations.pageIndex === (contactInformations.pageCount - 1)) {
                btnFirstPageGridContactInformation.removeAttribute('disabled');
                btnPreviousPageGridContactInformation.removeAttribute('disabled');
                btnLastPageGridContactInformation.setAttribute('disabled', 'disabled');
                btnNextPageGridContactInformation.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridContactInformation.removeAttribute('disabled');
                btnPreviousPageGridContactInformation.removeAttribute('disabled');
                btnNextPageGridContactInformation.removeAttribute('disabled');
                btnLastPageGridContactInformation.removeAttribute('disabled');
            }
            btnCurrentPageGridContactInformation.innerHTML = (contactInformations.pageIndex + 1) + ' / ' + contactInformations.pageCount;
        }

        // ====================================
        // On Page Load for Contact Information
        // ====================================
        function contactInformationTab() {
            contactInformations = new wijmo.collections.CollectionView(getContactInformation());
            contactInformations.canFilter = true;
            contactInformations.pageSize = 15;

            var filterTextContactInformation = '';
            $('#InputFilterContactInformation').keyup(function () {
                filterTextContactInformation = this.value.toLowerCase();
                contactInformations.refresh();
            });
            contactInformations.filter = function (item) {
                return !filterTextContactInformation || (item.ContactPerson.toLowerCase().indexOf(filterTextContactInformation) > -1);
            }
            contactInformations.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsContactInformation();
            });

            // Flex Grid for Contact Information
            contactInformationGrid = new wijmo.grid.FlexGrid('#ContactInformationGrid');
            contactInformationGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Contact",
                                "binding": "ContactPerson",
                                "width": "3*",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Contact Number(s)",
                                "binding": "ContactNumber",
                                "width": "2*",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Remarks",
                                "binding": "Remarks",
                                "allowSorting": true,
                                "width": "4*",
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: contactInformations,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            contactInformationGrid.trackChanges = true;

            //Navigation button for Journal Ledger
            btnFirstPageGridContactInformation = document.getElementById('btnMoveToFirstPageGridContactInformation');
            btnPreviousPageGridContactInformation = document.getElementById('btnMoveToPreviousPageGridContactInformation');
            btnNextPageGridContactInformation = document.getElementById('btnMoveToNextPageGridContactInformation');
            btnLastPageGridContactInformation = document.getElementById('btnMoveToLastPageGridContactInformation');
            btnCurrentPageGridContactInformation = document.getElementById('btnCurrentPageGridContactInformation');

            updateNavigateButtonsContactInformation();

            btnFirstPageGridContactInformation.addEventListener('click', function () {
                contactInformations.moveToFirstPage();
                updateNavigateButtonsContactInformation();
            });
            btnPreviousPageGridContactInformation.addEventListener('click', function () {
                contactInformations.moveToPreviousPage();
                updateNavigateButtonsContactInformation();
            });
            btnNextPageGridContactInformation.addEventListener('click', function () {
                contactInformations.moveToNextPage();
                updateNavigateButtonsContactInformation();
            });
            btnLastPageGridContactInformation.addEventListener('click', function () {
                contactInformations.moveToLastPage();
                updateNavigateButtonsContactInformation();
            });
        }
    </script>

    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        // ====
        // TABS
        // ====
        $('#journalLedgerTabId').click(function () {
            $('#JournalLedger').show();
            $('#ContactInformation').hide();
            window.journalLedgerTab = function () {
                return true;
            };
        });

        $('#contactInformationTabId').click(function () {
            $('#JournalLedger').hide();
            $('#ContactInformation').show();
            //contactInformationTab();
            window.contactInformationTab = function () {
                return true;
            };
        });

        $(document).ready(function () {
            //$('#JournalLedger').show();
            //$('#ContactInformation').hide();
            //journalLedgerTab();

            var CustomerId = @customerId;
            if(CustomerId == 0) {
                $('#customer_saveSaveCustomer').hide();
                $('#customer_saveCustomer').show();
                $('#customer_editCustomer').hide();
                $('#btnAddContactInformation').prop('disabled', true);
            } else {
                $('#customer_saveSaveCustomer').show();
                $('#customer_saveCustomer').hide();
                $('#customer_editCustomer').show();
            }

            $('#JournalLedger').hide();
            $('#ContactInformation').show();
            contactInformationTab();
        });
    </script>
</body>
</html>