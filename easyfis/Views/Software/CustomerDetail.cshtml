@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Customer Detail</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Customer Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        ======================================
                        Options: Lock, Unlock and Close Button
                        ======================================
                    -->
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-2">
                                <button class="btn btn-primary" id="btnCustomerDetailSave" onclick="btnCustomerDetailSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                            </div>
                            <div class="col-md-10" align="right">
                                @{
                                    if (canLock)
                                    {
                                        <button class="btn btn-primary" id="btnCustomerDetailLock" onclick="btnCustomerDetailLockOnclick()"><i class="fa fa-lock"></i> Lock</button>
                                    }
                                    if (canUnlock)
                                    {
                                        <button class="btn btn-primary" id="btnCustomerDetailUnlock" onclick="btnCustomerDetailUnlockOnclick()"><i class="fa fa-unlock"></i> Unlock</button>
                                    }
                                }
                                <button class="btn btn-danger" id="btnCustomerDetailClose" onclick="btnCustomerDetailCloseOnclick()"><i class=" fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>

                    <!--
                        ======================================
                        Details, Fields and Other Informations
                        ======================================
                    -->
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Code</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredCustomer" id="inpCustomerDetailCode" placeholder="Code..." disabled />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Manual Code</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredCustomer" id="inpCustomerDetailManualCode" placeholder="Manual Code..." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Customer</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredCustomer" id="inpCustomerDetailCustomer" placeholder="Customer..." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Customer Group</label>
                                        <div class="col-sm-8">
                                            <div class="" id="cboCustomerDetailCustomerGroup"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Account</label>
                                        <div class="col-sm-8">
                                            <table style="width: 100%" border="0">
                                                <tr>
                                                    <td style="width: 30%">
                                                        <div class="comboBox-wide" id="cboCustomerDetailAccountCode"></div>
                                                    </td>
                                                    <td style="width: 1%"></td>
                                                    <td style="width: 69%">
                                                        <div class="comboBox-wide" id="cboCustomerDetailAccount"></div>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Term</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboCustomerDetailTerm"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Address</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredCustomer" id="inpCustomerDetailAddress" placeholder="Address..."></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Credit Limit</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredCustomer numberField" id="inpCustomerDetailCreditLimit" placeholder="Credit Limit..." />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Contact Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredCustomer" id="inpCustomerDetailCustomerContactNumber" placeholder="Contact No...." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Contact Person</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredCustomer" id="inpCustomerDetailCustomerContactPerson" placeholder="Contact Person..." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">TIN</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredCustomer" id="inpCustomerDetailCustomerTIN" placeholder="TIN Number..." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Particulars</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredcustomer" id="inpCustomerDetailCustomerParticulars" placeholder="Particulars..."></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">E-mail</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredCustomer" id="inpCustomerDetailCustomerEmailAddress" placeholder="E-mail Address..." />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <!--
                    ======================================
                    Journal Ledger and Contact Information
                    ======================================
                -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#JournalLedger" id="journalLedgerTab">Journal Ledger</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#ContactInformation" id="contactInformationTab">More Contact Information</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="JournalLedger" class="tab-pane active" style="margin-bottom: 15px;">
                        <div class="panel panel-default">

                            <!--
                                ===================================================================
                                Journal Ledger: Search, Filter, Display Number of Rows and  Buttons
                                ===================================================================
                            -->
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpJournalLedgerSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboJournalLedgerDisplayNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right"> </td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                =========================
                                Journal Ledger: Flex Grid
                                =========================
                            -->
                            <div class="panel-body">
                                <div id="journalLedgerFlexGrid"></div>
                            </div>

                            <!--
                                ==================================
                                Journal Ledger: Navigation Buttons
                                ==================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="journalLedgerNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnJournalLedgerMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnJournalLedgerMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnJournalLedgerCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnJournalLedgerMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnJournalLedgerMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="ContactInformation" class="tab-pane">
                        <div class="panel panel-default">

                            <!--
                                ========================================================================
                                Contact Information: Search, Filter, Display Number of Rows and  Buttons
                                ========================================================================
                            -->
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpContactInformationSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboContactInformationDisplayNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right">
                                            @{
                                                if (canAdd)
                                                {
                                                    <button class="btn btn-primary" id="btnContactInformationAdd" onclick="btnContactInformationAddOnclick()"><i class="fa fa-plus"></i> Add</button>
                                                }
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                ==============================
                                Contact Information: Flex Grid
                                ==============================
                            -->
                            <div class="panel-body">
                                <div id="contactInformationFlexGrid" class="grid"></div>
                            </div>

                            <!--
                                =======================================
                                Contact Information: Navigation Buttons
                                =======================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="contactInformationNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnContactInformationMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnContactInformationMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnContactInformationCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnContactInformationMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnContactInformationMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ==========
                    User Stamp
                    ==========
                -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!--
        =================================
        Contact Information: Detail Modal
        =================================
    -->
    <div class="modal fade" id="contactInformationDetailModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="contactInformationModalTitle">Contact Information</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="contactInformationLoading"></span>
                    </center>
                    <div id="contactInformationDetailForm">
                        <dl class="dl-horizontal">
                            <dt>Contact Person</dt>
                            <dd>
                                <input type="text" class="form-control  requiredContact" id="inpContactInformationContactPerson" placeholder="Contact Person" />
                            </dd>
                            <dt>Contact Number</dt>
                            <dd>
                                <input type="text" class="form-control requiredContact" id="inpContactInformationContactNumber" placeholder="Contact Number" />
                            </dd>
                            <dt>Remarks</dt>
                            <dd>
                                <textarea rows="5" class="form-control textarea-custom requiredContact" id="inpContactInformationRemarks" placeholder="Remarks"></textarea>
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnContactInformationSave" class="btn btn-primary" onclick="btnContactInformationSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                    <button id="btnContactInformationCloseDetailModal" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        =========================================
        Contact Information: Confirm Delete Modal
        =========================================
    -->
    <div class="modal fade" id="contactInformationConfirmDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Delete Contact Information?
                </div>
                <div class="modal-footer">
                    <button id="btnContactInformationConfirmDelete" class="btn btn-danger" onclick="btnContactInformationConfirmDeleteOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="btnContactInformationCloseConfirmDeleteModal" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ==============================
        // Company Detail Data and Fields
        // ==============================
        var customerId = getURLParameterValue('id');
        var cboCustomerDetailCustomerGroup = new wijmo.input.ComboBox('#cboCustomerDetailCustomerGroup');
        var isCboCustomerDetailCustomerGroupSelected = false;
        var cboCustomerDetailAccountCode = new wijmo.input.ComboBox('#cboCustomerDetailAccountCode');
        var cboCustomerDetailAccount = new wijmo.input.ComboBox('#cboCustomerDetailAccount');
        var customerAccountId = 0;
        var cboCustomerDetailTerm = new wijmo.input.ComboBox('#cboCustomerDetailTerm');
        var Islocked = false;

        // ===========================================================================
        // Contact Information Data, Collection View, Flex Grid and Navigation Buttons
        // ===========================================================================
        var journalLedgerCollectionView;
        var journalLedgerFlexGrid;
        var cboContactInformationDisplayNumberOfRows = new wijmo.input.ComboBox('#cboContactInformationDisplayNumberOfRows');
        var btnContactInformationMoveToFirstPageGrid = document.getElementById('btnContactInformationMoveToFirstPageGrid');
        var btnContactInformationMoveToPreviousPageGrid = document.getElementById('btnContactInformationMoveToPreviousPageGrid');
        var btnContactInformationMoveToNextPageGrid = document.getElementById('btnContactInformationMoveToNextPageGrid');
        var btnContactInformationMoveToLastPageGrid = document.getElementById('btnContactInformationMoveToLastPageGrid');
        var btnContactInformationCurrentPageGrid = document.getElementById('btnContactInformationCurrentPageGrid');
        var contactInformationId = 0;


        // ======================================================================
        // Journal Ledger Data, Collection View, Flex Grid and Navigation Buttons
        // ======================================================================
        var contactInformationCollectionView;
        var contactInformationFlexGrid;
        var cboJournalLedgerDisplayNumberOfRows = new wijmo.input.ComboBox('#cboJournalLedgerDisplayNumberOfRows');
        var btnJournalLedgerMoveToFirstPageGrid = document.getElementById('btnJournalLedgerMoveToFirstPageGrid');
        var btnJournalLedgerMoveToPreviousPageGrid = document.getElementById('btnJournalLedgerMoveToPreviousPageGrid');
        var btnJournalLedgerMoveToNextPageGrid = document.getElementById('btnJournalLedgerMoveToNextPageGrid');
        var btnJournalLedgerMoveToLastPageGrid = document.getElementById('btnJournalLedgerMoveToLastPageGrid');
        var btnJournalLedgerCurrentPageGrid = document.getElementById('btnJournalLedgerCurrentPageGrid');

        // =======================
        // Get URL Parameter Value
        // =======================
        function getURLParameterValue(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ===========================================
        // Create Customer Detail Combo Customer Group
        // ===========================================
        function createCboCustomerDetailCustomerGroup() {
            var customerGroupObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/customer/dropdown/list/customerGroup',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            customerGroupObservableArray.push({
                                Id: results[i]["Id"],
                                ArticleGroup: results[i]["ArticleGroup"],
                                AccountId: results[i]["AccountId"],
                                SalesAccountId: results[i]["SalesAccountId"],
                                CostAccountId: results[i]["CostAccountId"],
                                AssetAccountId: results[i]["AssetAccountId"],
                                ExpenseAccountId: results[i]["ExpenseAccountId"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                    }

                    cboCustomerDetailCustomerGroup.dispose();
                    cboCustomerDetailCustomerGroup = new wijmo.input.ComboBox('#cboCustomerDetailCustomerGroup', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: customerGroupObservableArray,
                        displayMemberPath: "ArticleGroup",
                        selectedValuePath: "Id",
                        onSelectedIndexChanged: function () {
                            if (this.selectedValue != null) {
                                isCboCustomerDetailCustomerGroupSelected = true;
                                createCboCustomerDetailAccount();
                            }
                        }
                    });

                    if (cboCustomerDetailCustomerGroup.selectedValue != null) {
                        createCboCustomerDetailAccount();
                    }
                }
            });
        }

        // ====================================
        // Create Customer Detail Combo Account
        // ====================================
        function createCboCustomerDetailAccount() {
            var accountsObservableArray = new wijmo.collections.ObservableArray();
            if (cboCustomerDetailCustomerGroup.selectedValue != null) {
                var accountSelectedValueFromArticleGroup = cboCustomerDetailCustomerGroup.selectedItem["AccountId"];

                $.ajax({
                    url: '/api/customer/dropdown/list/customerGroup/account/' + accountSelectedValueFromArticleGroup,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                accountsObservableArray.push({
                                    Id: results[i]["Id"],
                                    AccountCode: results[i]["AccountCode"],
                                    Account: results[i]["Account"]
                                });
                            }
                        }

                        cboCustomerDetailAccountCode.dispose();
                        cboCustomerDetailAccountCode = new wijmo.input.ComboBox('#cboCustomerDetailAccountCode', {
                            disabled: true,
                            isEditable: false,
                            itemsSource: accountsObservableArray,
                            displayMemberPath: "AccountCode",
                            selectedValuePath: "Id",
                            selectedValue: accountSelectedValueFromArticleGroup,
                            onSelectedIndexChanged: function () {
                                cboCustomerDetailAccount.selectedValue = this.selectedValue;
                            }
                        });

                        cboCustomerDetailAccount.dispose();
                        cboCustomerDetailAccount = new wijmo.input.ComboBox('#cboCustomerDetailAccount', {
                            disabled: true,
                            isEditable: false,
                            itemsSource: accountsObservableArray,
                            displayMemberPath: "Account",
                            selectedValuePath: "Id",
                            selectedValue: accountSelectedValueFromArticleGroup,
                            onSelectedIndexChanged: function () {
                                cboCustomerDetailAccountCode.selectedValue = this.selectedValue;
                            }
                        });

                        if (!isCboCustomerDetailCustomerGroupSelected) {
                            createCboCustomerDetailTerm();
                        }
                    }
                });
            } else {
                cboCustomerDetailAccountCode.dispose();
                cboCustomerDetailAccountCode = new wijmo.input.ComboBox('#cboCustomerDetailAccountCode', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: accountsObservableArray
                });

                cboCustomerDetailAccount.dispose();
                cboCustomerDetailAccount = new wijmo.input.ComboBox('#cboCustomerDetailAccount', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: accountsObservableArray
                });

                if (!isCboCustomerDetailCustomerGroupSelected) {
                    createCboCustomerDetailTerm();
                }
            }
        }

        // =================================
        // Create Customer Detail Combo Term
        // =================================
        function createCboCustomerDetailTerm() {
            var termsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/customer/dropdown/list/term',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            termsObservableArray.push({
                                Id: results[i]["Id"],
                                Term: results[i]["Term"]
                            });
                        }
                    }

                    cboCustomerDetailTerm.dispose();
                    cboCustomerDetailTerm = new wijmo.input.ComboBox('#cboCustomerDetailTerm', {
                        isEditable: false,
                        itemsSource: termsObservableArray,
                        displayMemberPath: "Term",
                        selectedValuePath: "Id"
                    });

                    getCustomerDetailData();
                }
            });
        }

        // ========================
        // Get Customer Detail Data
        // ========================
        function getCustomerDetailData() {
            NProgress.start();
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/customer/detail/' + customerId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results != null) {
                            document.getElementById('inpCustomerDetailCode').value = results.ArticleCode;
                            document.getElementById('inpCustomerDetailManualCode').value = results.ManualArticleCode;
                            document.getElementById('inpCustomerDetailCustomer').value = results.Article;
                            cboCustomerDetailCustomerGroup.selectedValue = results.ArticleGroupId;
                            cboCustomerDetailAccountCode.selectedValue = results.AccountId;
                            customerAccountId = results.AccountId;
                            cboCustomerDetailAccount.selectedValue = results.AccountId;
                            cboCustomerDetailTerm.selectedValue = results.TermId;
                            document.getElementById('inpCustomerDetailAddress').value = results.Address;
                            document.getElementById('inpCustomerDetailCustomerParticulars').value = results.Particulars;
                            document.getElementById('inpCustomerDetailCustomerEmailAddress').value = results.EmailAddress;
                            document.getElementById('inpCustomerDetailCustomerTIN').value = results.TaxNumber;
                            document.getElementById('inpCustomerDetailCustomerContactNumber').value = results.ContactNumber;
                            document.getElementById('inpCustomerDetailCustomerContactPerson').value = results.ContactPerson;
                            document.getElementById('inpCustomerDetailCreditLimit').value = formatDecimalValues(results.CreditLimit);

                            document.getElementById('createdBy').innerHTML = results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = results.UpdatedDateTime;

                            if (results.IsLocked) {
                                document.getElementById('inpCustomerDetailCustomer').disabled = true;
                                document.getElementById('inpCustomerDetailManualCode').disabled = true;
                                cboCustomerDetailCustomerGroup.disabled = true;
                                cboCustomerDetailAccountCode.disabled = true;
                                cboCustomerDetailAccount.disabled = true;
                                cboCustomerDetailTerm.disabled = true;
                                document.getElementById('inpCustomerDetailAddress').disabled = true;
                                document.getElementById('inpCustomerDetailCustomerParticulars').disabled = true;
                                document.getElementById('inpCustomerDetailCustomerTIN').disabled = true;
                                document.getElementById('inpCustomerDetailCustomerContactNumber').disabled = true;
                                document.getElementById('inpCustomerDetailCustomerContactPerson').disabled = true;
                                document.getElementById('inpCustomerDetailCustomerEmailAddress').disabled = true;
                                document.getElementById('inpCustomerDetailCreditLimit').disabled = true;

                                $('#btnCustomerDetailSave').prop('disabled', true);
                                $('#btnCustomerDetailLock').prop('disabled', true);
                                $('#btnContactInformationAdd').prop('disabled', true);

                                Islocked = true;
                            } else {
                                $('#btnCustomerDetailUnlock').prop('disabled', true);
                            }
                        } else {
                            alert("No Data");
                            window.location = "/Software/Customer";
                        }

                        createJournalLedgerFlexGrid();
                        createContactInformationFlexGrid();
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/Customer";
            }
        }

        // =========================
        // Customer Entry Validation
        // =========================
        function customerEntryValidation() {
            var isValid = true;
            $('.requiredCustomer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // ========================
        // Get Customer Data Object
        // ========================
        function getCustomerDataObject() {
            var customerObject = new Object();
            customerObject.ManualArticleCode = document.getElementById('inpCustomerDetailManualCode').value;
            customerObject.Article = document.getElementById('inpCustomerDetailCustomer').value;
            customerObject.ArticleGroupId = cboCustomerDetailCustomerGroup.selectedValue;
            customerObject.AccountId = cboCustomerDetailAccount.selectedValue;
            customerObject.SalesAccountId = cboCustomerDetailCustomerGroup.selectedItem["SalesAccountId"];
            customerObject.CostAccountId = cboCustomerDetailCustomerGroup.selectedItem["CostAccountId"];
            customerObject.AssetAccountId = cboCustomerDetailCustomerGroup.selectedItem["AssetAccountId"];
            customerObject.ExpenseAccountId = cboCustomerDetailCustomerGroup.selectedItem["ExpenseAccountId"];
            customerObject.TermId = cboCustomerDetailTerm.selectedValue;
            customerObject.Address = document.getElementById('inpCustomerDetailAddress').value;
            customerObject.ContactNumber = document.getElementById('inpCustomerDetailCustomerContactNumber').value;
            customerObject.ContactPerson = document.getElementById('inpCustomerDetailCustomerContactPerson').value;
            customerObject.TaxNumber = document.getElementById('inpCustomerDetailCustomerTIN').value;
            customerObject.Particulars = document.getElementById('inpCustomerDetailCustomerParticulars').value;
            customerObject.EmailAddress = document.getElementById('inpCustomerDetailCustomerEmailAddress').value;
            customerObject.CreditLimit = document.getElementById('inpCustomerDetailCreditLimit').value;
            var customerData = JSON.stringify(customerObject);

            return customerData;
        }

        // =============
        // Save Customer
        // =============
        function btnCustomerDetailSaveOnclick() {
            if (customerEntryValidation()) {
                document.getElementById('btnCustomerDetailSave').innerHTML = "<i class='fa fa-lock'></i> Saving...";
                $('#btnCustomerDetailSave').prop('disabled', true);
                $('#btnCustomerDetailLock').prop('disabled', true);
                $('#btnCustomerDetailUnlock').prop('disabled', true);
                $('#btnCustomerDetailClose').prop('disabled', true);

                $.ajax({
                    type: "PUT",
                    url: '/api/customer/save/' + customerId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: getCustomerDataObject(),
                    statusCode: {
                        200: function () {
                            toastr.success("Save Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnCustomerDetailSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#btnCustomerDetailSave').prop('disabled', false);
                            $('#btnCustomerDetailLock').prop('disabled', false);
                            $('#btnCustomerDetailClose').prop('disabled', false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnCustomerDetailSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#btnCustomerDetailSave').prop('disabled', false);
                            $('#btnCustomerDetailLock').prop('disabled', false);
                            $('#btnCustomerDetailClose').prop('disabled', false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnCustomerDetailSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#btnCustomerDetailSave').prop('disabled', false);
                            $('#btnCustomerDetailLock').prop('disabled', false);
                            $('#btnCustomerDetailClose').prop('disabled', false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =============
        // Lock Customer
        // =============
        function btnCustomerDetailLockOnclick() {
            if (customerEntryValidation()) {
                document.getElementById('btnCustomerDetailLock').innerHTML = "<i class='fa fa-lock'></i> Locking...";
                $('#btnCustomerDetailSave').prop('disabled', true);
                $('#btnCustomerDetailLock').prop('disabled', true);
                $('#btnCustomerDetailUnlock').prop('disabled', true);
                $('#btnCustomerDetailClose').prop('disabled', true);

                $.ajax({
                    type: "PUT",
                    url: '/api/customer/lock/' + customerId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: getCustomerDataObject(),
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnCustomerDetailLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnCustomerDetailSave').prop('disabled', false);
                            $('#btnCustomerDetailLock').prop('disabled', false);
                            $('#btnCustomerDetailClose').prop('disabled', false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnCustomerDetailLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnCustomerDetailSave').prop('disabled', false);
                            $('#btnCustomerDetailLock').prop('disabled', false);
                            $('#btnCustomerDetailClose').prop('disabled', false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnCustomerDetailLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnCustomerDetailSave').prop('disabled', false);
                            $('#btnCustomerDetailLock').prop('disabled', false);
                            $('#btnCustomerDetailClose').prop('disabled', false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ===============
        // Unlock Customer
        // ===============
        function btnCustomerDetailUnlockOnclick() {
            document.getElementById('btnCustomerDetailUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlocking...";
            $('#btnCustomerDetailSave').prop('disabled', true);
            $('#btnCustomerDetailLock').prop('disabled', true);
            $('#btnCustomerDetailUnlock').prop('disabled', true);
            $('#btnCustomerDetailClose').prop('disabled', true);

            $.ajax({
                type: "PUT",
                url: '/api/customer/unlock/' + customerId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnCustomerDetailUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#btnCustomerDetailSave').prop('disabled', false);
                        $('#btnCustomerDetailUnlock').prop('disabled', false);
                        $('#btnCustomerDetailClose').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnCustomerDetailUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#btnCustomerDetailSave').prop('disabled', false);
                        $('#btnCustomerDetailUnlock').prop('disabled', false);
                        $('#btnCustomerDetailClose').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnCustomerDetailUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#btnCustomerDetailSave').prop('disabled', false);
                        $('#btnCustomerDetailUnlock').prop('disabled', false);
                        $('#btnCustomerDetailClose').prop('disabled', false);
                    }
                }
            });
        }

        // ==============
        // Close Customer
        // ==============
        function btnCustomerDetailCloseOnclick() {
            window.location = '/Software/Customer';
        }

        // =======================
        // Get Journal Ledger Data
        // =======================
        function getJournalLedgerData() {
            var journalLedgersObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/journalLedger/list/customer/' + customerId + '/' + customerAccountId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var JournalDateResult = new Date(results[i]["JournalDate"])
                            var JournalDate = ('0' + (JournalDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + JournalDateResult.getDate()).slice(-2) + '-' + JournalDateResult.getFullYear();

                            var drillDownTransactionLink = "";

                            if (results[i]["ORId"] != null) {
                                drillDownTransactionLink = "<a href='/Software/CollectionDetail?id=" + results[i]["ORId"] + "' target='_blank' class='btn btn-primary btn-xs'> <i class='fa fa-edit'> Detail</i></a>";
                            } else if (results[i]["CVId"] != null) {
                                drillDownTransactionLink = "<a href='/Software/DisbursementDetail?id=" + results[i]["CVId"] + "' target='_blank' class='btn btn-primary btn-xs'> <i class='fa fa-edit'> Detail</i></a>";
                            } else if (results[i]["JVId"] != null) {
                                drillDownTransactionLink = "<a href='/Software/JournalVoucherDetail?id=" + results[i]["JVId"] + "' target='_blank' class='btn btn-primary btn-xs'> <i class='fa fa-edit'> Detail</i></a>";
                            } else if (results[i]["RRId"] != null) {
                                drillDownTransactionLink = "<a href='/Software/ReceivingReceiptDetail?id=" + results[i]["RRId"] + "' target='_blank' class='btn btn-primary btn-xs'> <i class='fa fa-edit'> Detail</i></a>";
                            } else if (results[i]["SIId"] != null) {
                                drillDownTransactionLink = "<a href='/Software/SalesDetail?id=" + results[i]["SIId"] + "' target='_blank' class='btn btn-primary btn-xs'> <i class='fa fa-edit'> Detail</i></a>";
                            } else if (results[i]["INId"] != null) {
                                drillDownTransactionLink = "<a href='/Software/StockInDetail?id=" + results[i]["INId"] + "' target='_blank' class='btn btn-primary btn-xs'> <i class='fa fa-edit'> Detail</i></a>";
                            } else if (results[i]["OTId"] != null) {
                                drillDownTransactionLink = "<a href='/Software/StockOutDetail?id=" + results[i]["OTId"] + "' target='_blank' class='btn btn-primary btn-xs'> <i class='fa fa-edit'> Detail</i></a>";
                            } else if (results[i]["STId"] != null) {
                                drillDownTransactionLink = "<a href='/Software/StockTransferDetail?id=" + results[i]["STId"] + "' target='_blank' class='btn btn-primary btn-xs'> <i class='fa fa-edit'> Detail</i></a>";
                            }

                            journalLedgersObservableArray.push({
                                DocumentReference: results[i]["DocumentReference"],
                                TransactionLink: drillDownTransactionLink,
                                ORId: results[i]["ORId"],
                                CVId: results[i]["CVId"],
                                JVId: results[i]["JVId"],
                                RRId: results[i]["RRId"],
                                SIId: results[i]["SIId"],
                                INId: results[i]["INId"],
                                OTId: results[i]["OTId"],
                                STId: results[i]["STId"],
                                JournalDate: JournalDate,
                                Particulars: results[i]["Particulars"],
                                DebitAmount: parseFloat(results[i]["DebitAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                CreditAmount: parseFloat(results[i]["CreditAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return journalLedgersObservableArray;
        }

        // ===============================
        // Create Journal Ledger Flex Grid
        // ===============================
        function createJournalLedgerFlexGrid() {
            createJournalLedgerCboDisplayNumberOfRows();

            journalLedgerCollectionView = new wijmo.collections.CollectionView(getJournalLedgerData());
            journalLedgerCollectionView.canFilter = true;
            journalLedgerCollectionView.pageSize = cboJournalLedgerDisplayNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpJournalLedgerSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                journalLedgerCollectionView.refresh();
            });

            journalLedgerCollectionView.filter = function (item) {
                return !filterText || (item.DocumentReference.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1);
            }

            journalLedgerCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateJournalLedgerNavigationButtons();
            });

            journalLedgerFlexGrid = new wijmo.grid.FlexGrid('#journalLedgerFlexGrid');
            journalLedgerFlexGrid.initialize({
                columns: [
                    {
                        "header": "Detail",
                        "binding": "TransactionLink",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Document Reference",
                        "binding": "DocumentReference",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmount",
                        "allowSorting": true,
                        "width": "2*",
                        "align": "right"
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmount",
                        "allowSorting": true,
                        "width": "2*",
                        "align": "right"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalLedgerCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalLedgerFlexGrid.trackChanges = true;

            updateJournalLedgerNavigationButtons();

            btnJournalLedgerMoveToFirstPageGrid.addEventListener('click', function () {
                journalLedgerCollectionView.moveToFirstPage();
                updateJournalLedgerNavigationButtons();
            });

            btnJournalLedgerMoveToPreviousPageGrid.addEventListener('click', function () {
                journalLedgerCollectionView.moveToPreviousPage();
                updateJournalLedgerNavigationButtons();
            });

            btnJournalLedgerMoveToNextPageGrid.addEventListener('click', function () {
                journalLedgerCollectionView.moveToNextPage();
                updateJournalLedgerNavigationButtons();
            });

            btnJournalLedgerMoveToLastPageGrid.addEventListener('click', function () {
                journalLedgerCollectionView.moveToLastPage();
                updateJournalLedgerNavigationButtons();
            });
        }

        // ========================================
        // Update Journal Ledger Navigation Buttons
        // ========================================
        function updateJournalLedgerNavigationButtons() {
            if (journalLedgerCollectionView.pageSize <= 0) {
                document.getElementById('journalLedgerNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('journalLedgerNavigationPageGrid').style.display = 'block';
            if (journalLedgerCollectionView.pageIndex === 0) {
                btnJournalLedgerMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnJournalLedgerMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnJournalLedgerMoveToNextPageGrid.removeAttribute('disabled');
                btnJournalLedgerMoveToLastPageGrid.removeAttribute('disabled');
            } else if (journalLedgerCollectionView.pageIndex === (journalLedgerCollectionView.pageCount - 1)) {
                btnJournalLedgerMoveToFirstPageGrid.removeAttribute('disabled');
                btnJournalLedgerMoveToPreviousPageGrid.removeAttribute('disabled');
                btnJournalLedgerMoveToLastPageGrid.setAttribute('disabled', 'disabled');
                btnJournalLedgerMoveToNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnJournalLedgerMoveToFirstPageGrid.removeAttribute('disabled');
                btnJournalLedgerMoveToPreviousPageGrid.removeAttribute('disabled');
                btnJournalLedgerMoveToNextPageGrid.removeAttribute('disabled');
                btnJournalLedgerMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnJournalLedgerCurrentPageGrid.innerHTML = (journalLedgerCollectionView.pageIndex + 1) + ' / ' + journalLedgerCollectionView.pageCount;
        }

        // ==================================================
        // Create Journal Ledger Combo Display Number of Rows
        // ==================================================
        function createJournalLedgerCboDisplayNumberOfRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboJournalLedgerDisplayNumberOfRows.dispose();
            cboJournalLedgerDisplayNumberOfRows = new wijmo.input.ComboBox('#cboJournalLedgerDisplayNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboJournalLedgerDisplayNumberOfRows.selectedValue;
                        journalLedgerCollectionView.pageSize = parseInt(numberOfRows);
                        journalLedgerCollectionView.refresh();
                        journalLedgerFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });
        }

        // ================================
        // Refresh Journal Ledger Flex Grid
        // ================================
        function refreshJournalLedgerFlexGrid() {
            journalLedgerCollectionView = new wijmo.collections.CollectionView(getJournalLedgerData());
            journalLedgerCollectionView.canFilter = true;
            journalLedgerCollectionView.pageSize = cboJournalLedgerDisplayNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpJournalLedgerSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                journalLedgerCollectionView.refresh();
            });

            journalLedgerCollectionView.filter = function (item) {
                return !filterText || (item.DocumentReference.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1);
            }

            journalLedgerCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateJournalLedgerNavigationButtons();
            });

            journalLedgerFlexGrid.itemsSource = journalLedgerCollectionView;
            journalLedgerFlexGrid.trackChanges = true;
        }

        // ============================
        // Get Contact Information Data
        // ============================
        function getContactInformationData() {
            var contactInformationObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/moreContactInformation/list/' + customerId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnContactInformationEditOnclick()'><i class='fa fa-edit'></i> Edit</button>";
                                var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnContactInformationDeleteOnclick()'><i class='fa fa-trash'></i> Delete</button>";
                                if (Islocked) {
                                    btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnContactInformationEditOnclick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                    btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnContactInformationDeleteOnclick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                                }

                                contactInformationObservableArray.push({
                                    EditId: btnEditId,
                                    DeleteId: btnDeleteId,
                                    Id: results[i]["Id"],
                                    ContactPerson: results[i]["ContactPerson"],
                                    ContactNumber: results[i]["ContactNumber"],
                                    Remarks: results[i]["Remarks"]
                                });
                            }
                        }

                        NProgress.done();
                    }
                });
            }

            return contactInformationObservableArray;
        }

        // ====================================
        // Create Contact Information Flex Grid
        // ====================================
        function createContactInformationFlexGrid() {
            createContactInformationboDisplayNumberOfRows();

            contactInformationCollectionView = new wijmo.collections.CollectionView(getContactInformationData());
            contactInformationCollectionView.canFilter = true;
            contactInformationCollectionView.pageSize = cboContactInformationDisplayNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpContactInformationSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                contactInformationCollectionView.refresh();
            });

            contactInformationCollectionView.filter = function (item) {
                return !filterText || (item.ContactPerson.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ContactNumber.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Remarks.toLowerCase().indexOf(filterText) > -1);
            }

            contactInformationCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateContactInformationNavigationButtons();
            });

            contactInformationFlexGrid = new wijmo.grid.FlexGrid('#contactInformationFlexGrid');
            contactInformationFlexGrid.initialize({
                columns: [
                    @{
                        if (canEdit)
                        {
                            <text>
                                {
                                    "header": "Edit",
                                    "binding": "EditId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                        if (canDelete)
                        {
                            <text>
                                {
                                    "header": "Delete",
                                    "binding": "DeleteId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                    }
                    {
                        "header": "Contact",
                        "binding": "ContactPerson",
                        "width": "2*",
                    },
                    {
                        "header": "Contact Number(s)",
                        "binding": "ContactNumber",
                        "width": "2*",
                    },
                    {
                        "header": "Remarks",
                        "binding": "Remarks",
                        "width": "3*"
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: contactInformationCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            contactInformationFlexGrid.trackChanges = true;

            updateContactInformationNavigationButtons();

            btnContactInformationMoveToFirstPageGrid.addEventListener('click', function () {
                contactInformationCollectionView.moveToFirstPage();
                updateContactInformationNavigationButtons();
            });

            btnContactInformationMoveToPreviousPageGrid.addEventListener('click', function () {
                contactInformationCollectionView.moveToPreviousPage();
                updateContactInformationNavigationButtons();
            });

            btnContactInformationMoveToNextPageGrid.addEventListener('click', function () {
                contactInformationCollectionView.moveToNextPage();
                updateContactInformationNavigationButtons();
            });

            btnContactInformationMoveToLastPageGrid.addEventListener('click', function () {
                contactInformationCollectionView.moveToLastPage();
                updateContactInformationNavigationButtons();
            });
        }

        // =======================================================
        // Create Contact Information Combo Display Number of Rows
        // =======================================================
        function createContactInformationboDisplayNumberOfRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboContactInformationDisplayNumberOfRows.dispose();
            cboContactInformationDisplayNumberOfRows = new wijmo.input.ComboBox('#cboContactInformationDisplayNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboContactInformationDisplayNumberOfRows.selectedValue;
                        contactInformationCollectionView.pageSize = parseInt(numberOfRows);
                        contactInformationCollectionView.refresh();
                        contactInformationFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });
        }

        // =============================================
        // Update Contact Information Navigation Buttons
        // =============================================
        function updateContactInformationNavigationButtons() {
            if (contactInformationCollectionView.pageSize <= 0) {
                document.getElementById('contactInformationNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('contactInformationNavigationPageGrid').style.display = 'block';
            if (contactInformationCollectionView.pageIndex === 0) {
                btnContactInformationMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnContactInformationMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnContactInformationMoveToNextPageGrid.removeAttribute('disabled');
                btnContactInformationMoveToLastPageGrid.removeAttribute('disabled');
            } else if (contactInformationCollectionView.pageIndex === (contactInformationCollectionView.pageCount - 1)) {
                btnContactInformationMoveToFirstPageGrid.removeAttribute('disabled');
                btnContactInformationMoveToPreviousPageGrid.removeAttribute('disabled');
                btnContactInformationMoveToLastPageGrid.setAttribute('disabled', 'disabled');
                btnContactInformationMoveToNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnContactInformationMoveToFirstPageGrid.removeAttribute('disabled');
                btnContactInformationMoveToPreviousPageGrid.removeAttribute('disabled');
                btnContactInformationMoveToNextPageGrid.removeAttribute('disabled');
                btnContactInformationMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnContactInformationCurrentPageGrid.innerHTML = (contactInformationCollectionView.pageIndex + 1) + ' / ' + contactInformationCollectionView.pageCount;
        }

        // =====================================
        // Refresh Contact Information Flex Grid
        // =====================================
        function refreshContactInformationFlexGrid() {
            contactInformationCollectionView = new wijmo.collections.CollectionView(getContactInformationData());
            contactInformationCollectionView.canFilter = true;
            contactInformationCollectionView.pageSize = cboContactInformationDisplayNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpContactInformationSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                contactInformationCollectionView.refresh();
            });

            contactInformationCollectionView.filter = function (item) {
                return !filterText || (item.ContactPerson.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ContactNumber.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Remarks.toLowerCase().indexOf(filterText) > -1);
            }

            contactInformationCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateContactInformationNavigationButtons();
            });

            contactInformationFlexGrid.itemsSource = contactInformationCollectionView;
            contactInformationFlexGrid.trackChanges = true;
        }

        // =======================
        // Add Contact Information
        // =======================
        function btnContactInformationAddOnclick() {
            $('#contactInformationDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            document.getElementById("contactInformationModalTitle").innerHTML = 'Add Contact Information';
            $("#contactInformationLoading").show();
            document.getElementById("contactInformationLoading").innerHTML = 'Loading...';
            $("#contactInformationDetailForm").hide();

            document.getElementById('btnContactInformationSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#btnContactInformationSave').prop('disabled', true);
            $('#btnContactInformationCloseDetailModal').prop('disabled', false);

            contactInformationId = 0;
            document.getElementById('inpContactInformationContactPerson').value = "NA";
            document.getElementById('inpContactInformationContactNumber').value = "NA";
            document.getElementById('inpContactInformationRemarks').value = "NA";

            setTimeout(function () {
                $("#contactInformationLoading").hide();
                $("#contactInformationDetailForm").show();
                $('#btnContactInformationSave').prop('disabled', false);
            }, 500);
        }

        // ========================
        // Edit Contact Information
        // ========================
        function btnContactInformationEditOnclick() {
            $('#contactInformationDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            document.getElementById("contactInformationModalTitle").innerHTML = 'Edit Contact Information';
            $("#contactInformationLoading").show();
            document.getElementById("contactInformationLoading").innerHTML = 'Loading...';
            $("#contactInformationDetailForm").hide();

            document.getElementById('btnContactInformationSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#btnContactInformationSave').prop('disabled', true);
            $('#btnContactInformationCloseDetailModal').prop('disabled', false);

            contactInformationCollectionView.editItem(contactInformationCollectionView.currentItem);
            var contactInformation = contactInformationCollectionView.currentEditItem;
            contactInformationId = contactInformation.Id;
            document.getElementById('inpContactInformationContactPerson').value = contactInformation.ContactPerson;
            document.getElementById('inpContactInformationContactNumber').value = contactInformation.ContactNumber;
            document.getElementById('inpContactInformationRemarks').value = contactInformation.Remarks;

            setTimeout(function () {
                $("#contactInformationLoading").hide();
                $("#contactInformationDetailForm").show();
                $('#btnContactInformationSave').prop('disabled', false);
            }, 500);
        }

        // ====================================
        // Contact Information Entry Validation
        // ====================================
        function contactInformationEntryValidation() {
            var isValid = true;
            $('.requiredContact').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": ""
                    });
                }
            });

            return isValid;
        }

        // ========================
        // Save Contact Information
        // ========================
        function btnContactInformationSaveOnclick() {
            var contactObject = new Object();
            contactObject.ContactPerson = document.getElementById('inpContactInformationContactPerson').value;
            contactObject.ContactNumber = document.getElementById('inpContactInformationContactNumber').value;
            contactObject.Remarks = document.getElementById('inpContactInformationRemarks').value;
            var contactData = JSON.stringify(contactObject);

            if (contactInformationEntryValidation()) {
                document.getElementById('btnContactInformationSave').innerHTML = "<i class='fa fa-save'></i> Saving...";
                $('#btnContactInformationSave').prop('disabled', true);
                $('#btnContactInformationCloseDetailModal').prop('disabled', true);

                if (contactInformationId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/moreContactInformation/add/' + customerId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");
                                $('#contactInformationDetailModal').modal('hide');
                                refreshContactInformationFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                $('#contactInformationDetailModal').modal('hide');
                                document.getElementById('btnContactInformationSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#btnContactInformationSave').prop('disabled', false);
                                $('#btnContactInformationCloseDetailModal').prop('disabled', false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                $('#contactInformationDetailModal').modal('hide');
                                document.getElementById('btnContactInformationSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#btnContactInformationSave').prop('disabled', false);
                                $('#btnContactInformationCloseDetailModal').prop('disabled', false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                $('#contactInformationDetailModal').modal('hide');
                                document.getElementById('btnContactInformationSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#btnContactInformationSave').prop('disabled', false);
                                $('#btnContactInformationCloseDetailModal').prop('disabled', false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/moreContactInformation/update/' + contactInformationId + '/' + customerId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#contactInformationDetailModal').modal('hide');
                                refreshContactInformationFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                $('#contactInformationDetailModal').modal('hide');
                                document.getElementById('btnContactInformationSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#btnContactInformationSave').prop('disabled', false);
                                $('#btnContactInformationCloseDetailModal').prop('disabled', false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                $('#contactInformationDetailModal').modal('hide');
                                document.getElementById('btnContactInformationSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#btnContactInformationSave').prop('disabled', false);
                                $('#btnContactInformationCloseDetailModal').prop('disabled', false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                $('#contactInformationDetailModal').modal('hide');
                                document.getElementById('btnContactInformationSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#btnContactInformationSave').prop('disabled', false);
                                $('#btnContactInformationCloseDetailModal').prop('disabled', false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ==========================
        // Delete Contact Information
        // ==========================
        function btnContactInformationDeleteOnclick() {
            $('#contactInformationConfirmDeleteModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnContactInformationConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $('#btnContactInformationConfirmDelete').prop('disabled', false);
            $('#btnContactInformationCloseConfirmDeleteModal').prop('disabled', false);
        }

        // ==================================
        // Contact Information Confirm Delete
        // ==================================
        function btnContactInformationConfirmDeleteOnclick() {
            document.getElementById('btnContactInformationConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Deleting...";
            $('#btnContactInformationConfirmDelete').prop('disabled', true);
            $('#btnContactInformationCloseConfirmDeleteModal').prop('disabled', true);

            contactInformationCollectionView.editItem(contactInformationCollectionView.currentItem);
            var contactId = contactInformationCollectionView.currentEditItem.Id;

            $.ajax({
                url: '/api/moreContactInformation/delete/' + contactId + '/' + customerId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#contactInformationConfirmDeleteModal').modal('hide');
                        refreshContactInformationFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#contactInformationConfirmDeleteModal').modal('hide');
                        document.getElementById('btnContactInformationConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#btnContactInformationConfirmDelete').prop('disabled', false);
                        $('#btnContactInformationCloseConfirmDeleteModal').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#contactInformationConfirmDeleteModal').modal('hide');
                        document.getElementById('btnContactInformationConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#btnContactInformationConfirmDelete').prop('disabled', false);
                        $('#btnContactInformationCloseConfirmDeleteModal').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#contactInformationConfirmDeleteModal').modal('hide');
                        document.getElementById('btnContactInformationConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#btnContactInformationConfirmDelete').prop('disabled', false);
                        $('#btnContactInformationCloseConfirmDeleteModal').prop('disabled', false);
                    }
                }
            });
        }

        // ==========================
        // Customer Tabs and Controls
        // ==========================
        $('#journalLedgerTab').click(function () {
            $('#JournalLedger').show();
            $('#ContactInformation').hide();
            NProgress.start();
            refreshJournalLedgerFlexGrid();
        });
        $('#contactInformationTab').click(function () {
            $('#JournalLedger').hide();
            $('#ContactInformation').show();
            NProgress.start();
            refreshContactInformationFlexGrid();
        });

        // =============================
        // Document Ready - On load Page
        // =============================
        $(document).ready(function () {
            createCboCustomerDetailCustomerGroup();
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>