<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <title>Customer Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body class="hold-transition skin-blue fixed sidebar-mini">
    <div class="wrapper">
        @Html.Partial("_SoftwareHeader")
        @Html.Partial("_SoftwareSideBarMenu")

        <div class="content-wrapper">
            <section class="content-header">
                <h1>
                    Customer Detail
                    <small><i class="fa fa-building"></i> <span id="currentCompanyName"></span> / <span id="currentBranchName"></span></small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="/Software"><i class="fa fa-dashboard"></i> Dashboard</a></li>
                    <li><a href="/Software/Customer"> Customer</a></li>
                    <li> Customer Detail </li>
                </ol>
            </section>

            <section class="content">
                <div class="box box-default">
                    <div class="box-header">
                        <div class="row">
                            <div class="col-md-6">
                                <h4 id="customerDetailLabel"></h4>
                            </div>
                            <div class="col-md-6" align="right">
                                <button class="btn btn-primary btn-sm" id="customer_SaveButton" onclick="customerSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                                <button class="btn btn-primary btn-sm" id="customer_LockButton" onclick="customerLockButton_OnClick()"><i class="fa fa-lock"></i> Lock</button>
                                <button class="btn btn-primary btn-sm" id="customer_UnlockButton" onclick="customerUnlockButton_OnClick()"><i class="fa fa-unlock"></i> Unlock</button>
                                <button class="btn btn-danger btn-sm" id="customer_CloseButton" onclick="customerCloseButton_OnClick()"><i class=" fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="well">
                            <form class="form-horizontal" role="form">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Code</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-30 input-sm requiredCustomer" id="artcileCustomer_code" placeholder="Code" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Customer</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-sm requiredCustomer" id="artcileCustomer_customer" placeholder="Customer" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Customer Group</label>
                                            <div class="col-sm-8">
                                                <div class="input-70" id="artcileCustomer_customerGroup"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Account</label>
                                            <div class="col-sm-8">
                                                <div class="input-30" id="artcileCustomer_accountCode"></div>
                                                <div class="input-68" id="artcileCustomer_account"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Term</label>
                                            <div class="col-sm-8">
                                                <div type="text" class="input-70" id="artcileCustomer_term"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Credit Limit</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-50 numberField input-sm requiredcustomer" id="artcileCustomer_creditLimit" placeholder="Credit Limit">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Address</label>
                                            <div class="col-sm-8">
                                                <textarea class="form-control textarea-custom requiredCustomer" id="artcileCustomer_address" placeholder="Address"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Contact Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-sm requiredCustomer" id="artcileCustomer_contactNo" placeholder="Contact No.">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Contact Person</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-sm requiredCustomer" id="artcileCustomer_contactPerson" placeholder="Contact Person">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">TIN</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-sm requiredCustomer" id="artcileCustomer_TIN" placeholder="TIN Number">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Particulars</label>
                                            <div class="col-sm-8">
                                                <textarea class="form-control textarea-custom requiredCustomer" id="artcileCustomer_particulars" placeholder="Particulars"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <br />
                        <!-- Customer Lines -->
                        <ul class="nav nav-tabs" role="tablist" id="myTab">
                            <li role="presentation" class="active"><a data-toggle="tab" href="#JournalLedger" id="journalLedgerTabId">Journal Ledger</a></li>
                            <li role="presentation"><a data-toggle="tab" href="#ContactInformation" id="contactInformationTabId">More Contact Information</a></li>
                        </ul>
                        <br />
                        <div class="tab-content">
                            <!-- Journal Ledger List -->
                            <div id="JournalLedger" class="tab-pane fade in active">
                                <div class="row" align="left">
                                    <div class="col-lg-12">
                                        <div id="JournalLedgerGrid" class="grid" align="left"></div>
                                    </div>
                                </div>
                            </div>

                            <!-- More Contact Information List -->
                            <div id="ContactInformation" class="tab-pane fade in">
                                <div class="row">
                                    <div class="col-lg-12" align="right">
                                        <button class="btn btn-primary btn-sm" id="btnAddContactInformation" onclick="cmdAddContact_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                    </div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div id="ContactInformationGrid" class="grid"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- Contact Edit Detail -->
    <div class="modal fade" id="contactEdit" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="contactModalLabel">Contact Information Detail</h4>
                </div>
                <div class="modal-body">
                    <form id="contactDetailForm">
                        <input type="hidden" id="contact_Id" />
                        <dl class="dl-horizontal">
                            <dt>Contact Person</dt>
                            <dd><input type="text" class="form-control input-sm requiredContact" id="contact_contactPerson" placeholder="Contact Person" /></dd>
                            <dt>Contact Number</dt>
                            <dd><input type="text" class="form-control input-sm requiredContact" id="contact_contactNumber" placeholder="Contact Number" /></dd>
                            <dt>Remarks</dt>
                            <dd><textarea class="form-control textarea-custom requiredContact" id="contact_Remarks" placeholder="Remarks"></textarea></dd>
                        </dl>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary btn-sm" id="cmdSaveContactButton" onclick="cmdContactSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdContactDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Contact Delete Modal Confirmation -->
    <div class="modal fade" id="deleteContactConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Contact <i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteContact" onclick="cmdContactConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteContactCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var customers;
        var articleCustomerGroups;
        var accounts;
        var terms;
        var cboArticleGroupForCustomer;
        var cboForAccountCode;
        var cboForAccount;
        var cboForTerm;
        var customerGroupSelectedValue = "";
        var accountSelectedValue = "";
        var termSelectedValue = "";
        var IsLocked;
        var customerId = getParam('CustomerId');

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ==================================
        // Get Article for Customer by its ID
        // ==================================
        function getArticleCustomerById() {
            NProgress.start();
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/article/' + customerId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (customerResults) {
                        if (customerResults != null) {
                            document.getElementById('artcileCustomer_code').value = customerResults.ArticleCode;
                            document.getElementById('artcileCustomer_customer').value = customerResults.Article;
                            document.getElementById('artcileCustomer_creditLimit').value = customerResults.CreditLimit.toLocaleString();
                            document.getElementById('artcileCustomer_address').value = customerResults.Address;
                            document.getElementById('artcileCustomer_particulars').value = customerResults.Particulars;
                            document.getElementById('artcileCustomer_TIN').value = customerResults.TaxNumber;
                            document.getElementById('artcileCustomer_contactNo').value = customerResults.ContactNumber;
                            document.getElementById('artcileCustomer_contactPerson').value = customerResults.ContactPerson;
                            document.getElementById('createdBy').innerHTML = customerResults.CreatedBy;
                            document.getElementById('createdDate').innerHTML = customerResults.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = customerResults.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = customerResults.UpdatedDateTime;
                            customerGroupSelectedValue = customerResults.ArticleGroup;
                            accountSelectedValue = customerResults.Account;
                            termSelectedValue = customerResults.Term;
                            NProgress.done();

                            if (customerResults.IsLocked == true) {
                                document.getElementById('artcileCustomer_customer').disabled = true;
                                document.getElementById('artcileCustomer_address').disabled = true;
                                document.getElementById('artcileCustomer_creditLimit').disabled = true;
                                document.getElementById('artcileCustomer_particulars').disabled = true;
                                document.getElementById('artcileCustomer_TIN').disabled = true;
                                document.getElementById('artcileCustomer_contactNo').disabled = true;
                                document.getElementById('artcileCustomer_contactPerson').disabled = true;
                                $('#customer_SaveButton').prop('disabled', true);
                                $('#customer_LockButton').prop('disabled', true);
                                $('#customer_UnlockButton').prop('disabled', false);
                                $('#btnAddContactInformation').prop('disabled', true);
                                IsLocked = true;
                            } else {
                                document.getElementById('artcileCustomer_customer').disabled = false;
                                document.getElementById('artcileCustomer_address').disabled = false;
                                document.getElementById('artcileCustomer_creditLimit').disabled = false;
                                document.getElementById('artcileCustomer_particulars').disabled = false;
                                document.getElementById('artcileCustomer_TIN').disabled = false;
                                document.getElementById('artcileCustomer_contactNo').disabled = false;
                                document.getElementById('artcileCustomer_contactPerson').disabled = false;
                                $('#customer_SaveButton').prop('disabled', false);
                                $('#customer_LockButton').prop('disabled', false);
                                $('#customer_UnlockButton').prop('disabled', true);
                                $('#btnAddContactInformation').prop('disabled', false);
                                IsLocked = false;
                            }

                            getLastArticleCode();
                            getArticleCustomerGroupForComboBox();
                            getArticleTermForComboBox();
                        } else {
                            confirm("No Data");
                            window.location = '/Software/Customer';
                        }
                    }
                }).fail(function () {
                    confirm("URL Not Found");
                    window.location = '/Software/Customer';
                });
            } else {
                getLastArticleCode();
                getArticleCustomerGroupForComboBox();
                getArticleTermForComboBox();

                NProgress.done();
            }
        }

        // =================
        // IsLocked Disabled
        // =================
        function isLockedDisabledDropdown(items) {
            var disabled;
            if (items == 0) {
                disabled = true;
            } else {
                if (IsLocked == true) {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }
            return disabled;
        }

        // ==================================
        // Get Last Id for Customer by its ID
        // ==================================
        function getLastInsertedIdCustomerByArticleTypeId() {
            $.ajax({
                url: '/api/articleLastIdByArticleTypeId/2',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (lastCustomerResults) {
                    if (lastCustomerResults != null) {
                        window.setTimeout(function () {
                            window.location = '/Software/CustomerDetail?CustomerId=' + lastCustomerResults.Id;
                        }, 1000);
                    }
                }
            });
        }

        // =========================
        // Get Artile Customer Group
        // =========================
        function getArticleCustomerGroupForComboBox() {
            articleCustomerGroups = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleGroupByArticleTypeId/2',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (articleCustomerGroupResults) {
                    if (articleCustomerGroupResults.length > 0) {
                        for (i = 0; i < articleCustomerGroupResults.length; i++) {
                            articleCustomerGroups.push({
                                ArticleGroupId: articleCustomerGroupResults[i]["Id"],
                                ArticleGroup: articleCustomerGroupResults[i]["ArticleGroup"],
                                AccountId: articleCustomerGroupResults[i]["AccountId"],
                                AccountCode: articleCustomerGroupResults[i]["AccountCode"],
                                Account: articleCustomerGroupResults[i]["Account"],
                                SalesAccountId: articleCustomerGroupResults[i]["SalesAccountId"],
                                SalesAccount: articleCustomerGroupResults[i]["SalesAccount"],
                                CostAccountId: articleCustomerGroupResults[i]["CostAccountId"],
                                CostAccount: articleCustomerGroupResults[i]["CostAccount"],
                                AssetAccountId: articleCustomerGroupResults[i]["AssetAccountId"],
                                AssetAccount: articleCustomerGroupResults[i]["AssetAccount"],
                                ExpenseAccountId: articleCustomerGroupResults[i]["ExpenseAccountId"],
                                ExpenseAccount: articleCustomerGroupResults[i]["ExpenseAccount"]
                            });
                        }
                        createCboForArticleCustomerGroup(articleCustomerGroups);
                        getArticleAccountForComboBox();
                    } else {
                        createCboForArticleCustomerGroup(articleCustomerGroups);
                        getArticleAccountForComboBox();
                    }
                }
            });
        }

        // ======================
        // CBO for Customer Group
        // ======================
        function createCboForArticleCustomerGroup(articleCustomerGroups) {
            cboArticleGroupForCustomer.dispose();
            cboArticleGroupForCustomer = new wijmo.input.ComboBox('#artcileCustomer_customerGroup', {
                disabled: isLockedDisabledDropdown(articleCustomerGroups),
                placeholder: "Customer Group",
                itemsSource: articleCustomerGroups,
                displayMemberPath: "ArticleGroup",
                isEditable: false,
                selectedValuePath: "ArticleGroup",
                selectedValue: customerGroupSelectedValue.toString(),
                onSelectedIndexChanged: function () {
                    getArticleAccountForComboBox();
                }
            });
        }

        // ==================
        // Get Artile Account
        // ==================
        function getArticleAccountForComboBox() {
            accounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (accountResults) {
                    if (accountResults.length > 0) {
                        for (i = 0; i < accountResults.length; i++) {
                            accounts.push({
                                AccountId: accountResults[i]["Id"],
                                AccountCode: accountResults[i]["AccountCode"],
                                Account: accountResults[i]["Account"]
                            });
                        }
                        createCboForAccountCode(accounts);
                        createCboForAccount(accounts);
                    } else {
                        createCboForAccountCode(accounts);
                        createCboForAccount(accounts);
                    }
                }
            });
        }

        // ====================
        // CBO for Account Code
        // ====================
        function createCboForAccountCode(accounts) {
            cboForAccountCode.dispose();
            cboForAccountCode = new wijmo.input.ComboBox('#artcileCustomer_accountCode', {
                disabled: true,
                placeholder: "Account Code",
                itemsSource: accounts,
                displayMemberPath: "AccountCode",
                isEditable: false,
                selectedValuePath: "AccountCode",
                selectedValue: cboArticleGroupForCustomer.selectedItem["AccountCode"].toString()
            });
        }

        // ===============
        // CBO for Account
        // ===============
        function createCboForAccount(accounts) {
            cboForAccount.dispose();
            cboForAccount = new wijmo.input.ComboBox('#artcileCustomer_account', {
                disabled: true,
                placeholder: "Account",
                itemsSource: accounts,
                displayMemberPath: "Account",
                isEditable: false,
                selectedValuePath: "Account",
                selectedValue: cboArticleGroupForCustomer.selectedItem["Account"].toString()
            });
        }

        // ===============
        // Get Artile Term
        // ===============
        function getArticleTermForComboBox() {
            terms = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTerm',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (termResults) {
                    if (termResults.length > 0) {
                        for (i = 0; i < termResults.length; i++) {
                            terms.push({
                                TermId: termResults[i]["Id"],
                                Term: termResults[i]["Term"]
                            });
                        }
                        createCboForTerm(terms);
                    } else {
                        createCboForTerm(terms);
                    }
                }
            });
        }

        // ============
        // CBO for Term
        // ============
        function createCboForTerm(terms) {
            cboForTerm.dispose();
            cboForTerm = new wijmo.input.ComboBox('#artcileCustomer_term', {
                disabled: isLockedDisabledDropdown(terms),
                placeholder: "Term",
                itemsSource: terms,
                displayMemberPath: "Term",
                isEditable: false,
                selectedValuePath: "Term",
                selectedValue: termSelectedValue.toString(),
            });
        }

        // =========================
        // Customer Entry Validation
        // =========================
        function customerEntryValidation() {
            var isValid = true;
            $('.requiredCustomer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            return isValid;
        }

        // ===================================
        // Customer drop down field validation
        // ===================================
        function dropdownValidation() {
            if (cboArticleGroupForCustomer.selectedItem["ArticleGroupId"].toString() == '') {
                document.getElementById("artcileCustomer_customerGroup").style.border = "1px solid red";
            } else {
                document.getElementById("artcileCustomer_customerGroup").style.border = "1px solid #C8C8C8   ";
            }

            if (cboForAccount.selectedItem["AccountId"].toString() == '') {
                document.getElementById("artcileCustomer_account").style.border = "1px solid red";
            } else {
                document.getElementById("artcileCustomer_account").style.border = "1px solid #C8C8C8   ";
            }

            if (cboForTerm.selectedItem["TermId"].toString() == '') {
                document.getElementById("artcileCustomer_term").style.border = "1px solid red";
            } else {
                document.getElementById("artcileCustomer_term").style.border = "1px solid #C8C8C8   ";
            }
        }

        // =====================
        // Data Customer Objects
        // =====================
        function dataCustomerObject() {
            var customerObject = new Object();
            customerObject.ArticleCode = document.getElementById('artcileCustomer_code').value;
            customerObject.Article = document.getElementById('artcileCustomer_customer').value;
            customerObject.ArticleGroupId = cboArticleGroupForCustomer.selectedItem["ArticleGroupId"];
            customerObject.AccountId = cboForAccount.selectedItem["AccountId"];
            customerObject.SalesAccountId = cboArticleGroupForCustomer.selectedItem["SalesAccountId"];
            customerObject.CostAccountId = cboArticleGroupForCustomer.selectedItem["CostAccountId"];
            customerObject.AssetAccountId = cboArticleGroupForCustomer.selectedItem["AssetAccountId"];
            customerObject.ExpenseAccountId = cboArticleGroupForCustomer.selectedItem["ExpenseAccountId"];
            customerObject.Particulars = document.getElementById('artcileCustomer_particulars').value;
            customerObject.Address = document.getElementById('artcileCustomer_address').value;
            customerObject.TermId = cboForTerm.selectedItem["TermId"];
            customerObject.CreditLimit = document.getElementById('artcileCustomer_creditLimit').value;
            customerObject.ContactNumber = document.getElementById('artcileCustomer_contactNo').value;
            customerObject.ContactPerson = document.getElementById('artcileCustomer_contactPerson').value;
            customerObject.TaxNumber = document.getElementById('artcileCustomer_TIN').value;
            var data = JSON.stringify(customerObject);
            return data;
        }

        // =============
        // Save Customer
        // =============
        function customerSaveButton_OnClick() {
            dropdownValidation();
            if (customerEntryValidation() == false) {
                toastr.error("Invalid Entry");
            } else {
                document.getElementById('customer_SaveButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving...";
                $('#customer_SaveButton').prop('disabled', true);
                $('#customer_LockButton').prop('disabled', true);
                $('#customer_UnlockButton').prop('disabled', true);
                $('#customer_CloseButton').prop('disabled', true);

                $.ajax({
                    type: "POST",
                    url: '/api/addArticle/2',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataCustomerObject(),
                    statusCode: {
                        200: function () {
                            document.getElementById('customer_SaveButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving...";
                            $('#customer_SaveButton').prop('disabled', true);
                            $('#customer_LockButton').prop('disabled', true);
                            $('#customer_UnlockButton').prop('disabled', true);
                            $('#customer_CloseButton').prop('disabled', true);
                            toastr.success("Successfully saved");
                            setTimeout(getLastInsertedIdCustomerByArticleTypeId, 1000);
                        },
                        404: function () {
                            document.getElementById('customer_SaveButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#customer_SaveButton').prop('disabled', false);
                            $('#customer_LockButton').prop('disabled', true);
                            $('#customer_UnlockButton').prop('disabled', true);
                            $('#customer_CloseButton').prop('disabled', false);
                            toastr.error("Save request not found");
                        },
                        400: function () {
                            document.getElementById('customer_SaveButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#customer_SaveButton').prop('disabled', false);
                            $('#customer_LockButton').prop('disabled', true);
                            $('#customer_UnlockButton').prop('disabled', true);
                            $('#customer_CloseButton').prop('disabled', false);
                            toastr.error("Cannot save new record");
                        }
                    }
                });
            }
        }

        // =============================
        // Lock Customer Customer Button
        // =============================
        function customerLockButton_OnClick() {
            dropdownValidation();
            if (customerEntryValidation() == false) {
                toastr.error("Invalid Entry");
            } else {
                document.getElementById('customer_LockButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking...";
                $('#customer_SaveButton').prop('disabled', true);
                $('#customer_LockButton').prop('disabled', true);
                $('#customer_UnlockButton').prop('disabled', true);
                $('#customer_CloseButton').prop('disabled', true);

                $.ajax({
                    type: "PUT",
                    url: '/api/updateArticle/' + customerId + '/2',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataCustomerObject(),
                    statusCode: {
                        200: function () {
                            document.getElementById('customer_LockButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking...";
                            $('#customer_SaveButton').prop('disabled', true);
                            $('#customer_LockButton').prop('disabled', true);
                            $('#customer_UnlockButton').prop('disabled', true);
                            $('#customer_CloseButton').prop('disabled', true);
                            toastr.success("Locked");
                            window.setTimeout(function () {
                                location.reload();
                            }, 1000);
                        },
                        404: function () {
                            document.getElementById('customer_LockButton').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#customer_SaveButton').prop('disabled', true);
                            $('#customer_LockButton').prop('disabled', false);
                            $('#customer_UnlockButton').prop('disabled', true);
                            $('#customer_CloseButton').prop('disabled', false);
                            toastr.error("Lock request not found");
                        },
                        400: function () {
                            document.getElementById('customer_LockButton').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#customer_SaveButton').prop('disabled', true);
                            $('#customer_LockButton').prop('disabled', false);
                            $('#customer_UnlockButton').prop('disabled', true);
                            $('#customer_CloseButton').prop('disabled', false);
                            toastr.error("Cannot lock record");
                        }
                    }
                });
            }
        }

        // ======================
        // Unlock Customer Button
        // ======================
        function customerUnlockButton_OnClick() {
            document.getElementById('customer_UnlockButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking...";
            $('#customer_SaveButton').prop('disabled', true);
            $('#customer_LockButton').prop('disabled', true);
            $('#customer_UnlockButton').prop('disabled', true);
            $('#customer_CloseButton').prop('disabled', true);

            $.ajax({
                type: "PUT",
                url: '/api/unlockArticle/' + customerId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: {},
                statusCode: {
                    200: function () {
                        document.getElementById('customer_UnlockButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking...";
                        $('#customer_SaveButton').prop('disabled', true);
                        $('#customer_LockButton').prop('disabled', true);
                        $('#customer_UnlockButton').prop('disabled', true);
                        $('#customer_CloseButton').prop('disabled', true);
                        toastr.success("Unlocked");
                        window.setTimeout(function () {
                            location.reload();
                        }, 1000);
                    },
                    404: function () {
                        document.getElementById('customer_UnlockButton').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#customer_SaveButton').prop('disabled', true);
                        $('#customer_LockButton').prop('disabled', false);
                        $('#customer_UnlockButton').prop('disabled', true);
                        $('#customer_CloseButton').prop('disabled', false);
                        toastr.error("Unlock request not found");

                    },
                    400: function () {
                        document.getElementById('customer_UnlockButton').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#customer_SaveButton').prop('disabled', true);
                        $('#customer_LockButton').prop('disabled', false);
                        $('#customer_UnlockButton').prop('disabled', true);
                        $('#customer_CloseButton').prop('disabled', false);
                        toastr.error("Cannot unlock record");
                    }
                }
            });
        }

        // =====================
        // Close Customer Button
        // =====================
        function customerCloseButton_OnClick() {
            window.location = '/Software/Customer';
        }

        // ========================================================
        // Function with leading zeroes to display the article code
        // ========================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while (pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // =========================
        // Get the last Article Code
        // =========================
        function getLastArticleCode() {
            document.getElementById('artcileCustomer_code').disabled = true;
            if (document.location.search.length == 0) {
                $.ajax({
                    url: '/api/articleLastArticleCodeByArticleTypeId/2',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (lastArticleCodeResults) {
                        if (lastArticleCodeResults != null) {
                            var articleCode = parseInt(lastArticleCodeResults.ArticleCode);
                            var articleCodeResults = articleCode + 0000000001;
                            document.getElementById('artcileCustomer_code').value = zerofill(articleCodeResults, 10);
                        } else {
                            document.getElementById('artcileCustomer_code').value = "0000000001";
                        }
                    }
                });

                $("#customer_saveSaveCustomer").prop("disabled", false);
                $("#customer_saveCustomer").prop("disabled", false);
                $("#customer_editCustomer").prop("disabled", true);
                $("#customer_printCustomer").prop("disabled", true);
            }
        }

        // ===========
        // Onload Page
        // ===========
        $(document).ready(function () {
            // combo box
            cboArticleGroupForCustomer = new wijmo.input.ComboBox('#artcileCustomer_customerGroup');
            cboForAccountCode = new wijmo.input.ComboBox('#artcileCustomer_accountCode');
            cboForAccount = new wijmo.input.ComboBox('#artcileCustomer_account');
            cboForTerm = new wijmo.input.ComboBox('#artcileCustomer_term');

            // function
            getArticleCustomerById();

            if (document.location.search.length == 0) {
                $('#customer_SaveButton').show();
                $('#customer_LockButton').hide();
                $('#customer_UnlockButton').hide();

                $('#btnAddContactInformation').prop('disabled', true);
            } else {
                $('#customer_SaveButton').hide();
                $('#customer_LockButton').show();
                $('#customer_UnlockButton').show();
            }

            $('#JournalLedger').show();
            $('#ContactInformation').hide();
            journalLedgerTab();
        });
    </script>

    <!-- ====================== -->
    <!-- Journal Ledger Scripts -->
    <!-- ====================== -->
    <script type="text/javascript">
        // ===================================
        // Global Variables for Journal Ledger
        // ===================================
        var journalLedgers;
        var journalLedgerGrid;

        // =======================
        // GET Journal Ledger List
        // =======================
        function getJournalLedger() {
            //var journalLedgers = new wijmo.collections.ObservableArray;
            //$.ajax({
            //    url: '/api/listAccount',
            //    cache: false,
            //    type: 'GET',
            //    contentType: 'application/json; charset=utf-8',
            //    data: {},
            //    success: function (Results) {
            //        if (Results.length > 0) {
            //            for (i = 0; i < Results.length; i++) {
            //                journalLedger.push({
            //                    EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
            //                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
            //                    Id: Results[i]["Id"],
            //                    AccountCode: Results[i]["AccountCode"],
            //                    Account: Results[i]["Account"],
            //                    AccountTypeId: Results[i]["AccountTypeId"],
            //                    AccountType: Results[i]["AccountType"],
            //                    AccountCashFlowId: Results[i]["AccountCashFlowId"],
            //                    AccountCashFlow: Results[i]["AccountCashFlow"],
            //                    IsLocked: Results[i]["IsLocked"],
            //                    CreatedById: Results[i]["CreatedById"],
            //                    CreatedBy: Results[i]["CreatedBy"],
            //                    CreatedDateTime: Results[i]["CreatedDateTime"],
            //                    UpdatedById: Results[i]["UpdatedById"],
            //                    UpdatedBy: Results[i]["UpdatedBy"],
            //                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
            //                });
            //            }
            //        }
            //    }
            //}).fail(function (xhr, textStatus, err) {
            //    alert(err);
            //});
            //return journalLedgers;
        }

        // ===============
        //  Journal Ledger
        // ===============
        function journalLedgerTab() {
            journalLedgers = new wijmo.collections.CollectionView();

            // Flex Grid for Journal Ledger
            journalLedgerGrid = new wijmo.grid.FlexGrid('#JournalLedgerGrid');
            journalLedgerGrid.initialize({
                columns: [
                            {
                                "header": "date",
                                //"binding": "Remarks",
                                "allowSorting": true,
                                "width": "4*",
                            },
                            {
                                "header": "Doc Ref.",
                                //"binding": "Remarks",
                                "allowSorting": true,
                                "width": "4*",
                            },
                            {
                                "header": "Branch",
                                //"binding": "Remarks",
                                "allowSorting": true,
                                "width": "4*",
                            },
                            {
                                "header": "Account",
                                //"binding": "Remarks",
                                "allowSorting": true,
                                "width": "4*",
                            },
                            {
                                "header": "Debit",
                                //"binding": "Remarks",
                                "allowSorting": true,
                                "width": "4*",
                            },
                            {
                                "header": "Credit",
                                //"binding": "Remarks",
                                "allowSorting": true,
                                "width": "4*",
                            },
                            {
                                "header": "Balance",
                                //"binding": "Remarks",
                                "allowSorting": true,
                                "width": "4*",
                            },
                            {
                                "header": "Particulars",
                                //"binding": "Remarks",
                                "allowSorting": true,
                                "width": "8*",
                            }
                ],
                autoGenerateColumns: false,
                //itemsSource: journalLedgers,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalLedgerGrid.trackChanges = true;
        }
    </script>

    <!-- =========================== -->
    <!-- Contact Information Scripts -->
    <!-- =========================== -->
    <script type="text/javascript">
        // ========================================
        // Global Variables for Contact Information
        // ========================================
        var contactInformations;
        var contactInformationGrid;

        // ============================
        // GET Contact Information List
        // ============================
        function getContactInformation() {
            var contactInformations = new wijmo.collections.ObservableArray;
            NProgress.start();
            $.ajax({
                url: '/api/listArticleContactByArticleId/' + customerId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (contactInformationResults) {
                    if (contactInformationResults.length > 0) {

                        var customers = new wijmo.collections.ObservableArray;
                        $.ajax({
                            url: '/api/article/' + customerId,
                            cache: false,
                            type: 'GET',
                            contentType: 'application/json; charset=utf-8',
                            data: {},
                            success: function (CustomerResults) {
                                var btnEditId;
                                var btnDeleteId;
                                if (CustomerResults.IsLocked == true) {
                                    btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditContact_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                    btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteContact_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                                } else {
                                    btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditContact_OnClick()'><i class='fa fa-edit'></i> Edit</button>";
                                    btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteContact_OnClick()'><i class='fa fa-trash'></i> Delete</button>";
                                }

                                for (i = 0; i < contactInformationResults.length; i++) {
                                    contactInformations.push({
                                        EditId: btnEditId,
                                        DeleteId: btnDeleteId,
                                        Id: contactInformationResults[i]["Id"],
                                        ArticleId: contactInformationResults[i]["ArticleId"],
                                        Article: contactInformationResults[i]["Article"],
                                        ContactPerson: contactInformationResults[i]["ContactPerson"],
                                        ContactNumber: contactInformationResults[i]["ContactNumber"],
                                        Remarks: contactInformationResults[i]["Remarks"]
                                    });
                                }
                            }
                        });
                    }
                    NProgress.done();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return contactInformations;
        }

        // ===========
        // ADD Contact
        // ===========
        function cmdAddContact_OnClick() {
            $('#contactEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#cmdSaveContactButton').prop('disabled', false);
            $('#cmdContactDetailCloseButton').prop('disabled', false);

            document.getElementById('contact_Id').value = 0;
            document.getElementById('contact_contactPerson').value = '';
            document.getElementById('contact_contactNumber').value = '';
            document.getElementById('contact_Remarks').value = '';
        }

        // ==================
        // Contact Edit Button
        // ==================
        function btnEditContact_OnClick() {
            contactInformations.editItem(contactInformations.currentItem);
            $('#contactEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#cmdSaveContactButton').prop('disabled', false);
            $('#cmdContactDetailCloseButton').prop('disabled', false);

            var contactInformation = contactInformations.currentEditItem;
            document.getElementById('contact_Id').value = contactInformation.Id;
            document.getElementById('contact_contactPerson').value = contactInformation.ContactPerson;
            document.getElementById('contact_contactNumber').value = contactInformation.ContactNumber;
            document.getElementById('contact_Remarks').value = contactInformation.Remarks;
        }

        // ====================================
        // Contact Information Entry Validation
        // ====================================
        function contactInformationEntryValidation() {
            var isValid = true;
            $('.requiredContact').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": ""
                    });
                }
            });
            return isValid;
        }

        // =========================================
        // Refresh more contact information flexgrid
        // =========================================
        function refreshMoreContactInformation() {
            contactInformations = new wijmo.collections.CollectionView(getContactInformation());

            // Flex Grid for Contact Information
            contactInformationGrid.trackChanges = true;
            contactInformationGrid.itemsSource = contactInformations;
        }

        // ============
        // SAVE Contact
        // ============
        function cmdContactSaveButton_OnClick() {
            var contactObject = new Object();
            var contactId = document.getElementById('contact_Id').value;

            contactObject.ContactPerson = document.getElementById('contact_contactPerson').value;
            contactObject.ContactNumber = document.getElementById('contact_contactNumber').value;
            contactObject.Remarks = document.getElementById('contact_Remarks').value;
            var contactData = JSON.stringify(contactObject);

            if (contactInformationEntryValidation() == false) {
                toastr.error("Invalid Entry");
            } else {
                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving...";
                $('#cmdSaveContactButton').prop('disabled', true);
                $('#cmdContactDetailCloseButton').prop('disabled', true);

                if (contactId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addArticleContact/' + customerId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        statusCode: {
                            200: function () {
                                $('#cmdSaveContactButton').prop('disabled', true);
                                $('#cmdContactDetailCloseButton').prop('disabled', true);
                                toastr.success("Successfully saved");
                                $('#contactEdit').modal('hide');
                                refreshMoreContactInformation();
                            },
                            404: function () {
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                                toastr.error("Save request not found");
                            },
                            400: function () {
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                                toastr.error("Cannot save new record");
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateArticleContact/' + contactId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        statusCode: {
                            200: function () {
                                $('#cmdSaveContactButton').prop('disabled', true);
                                $('#cmdContactDetailCloseButton').prop('disabled', true);
                                toastr.success("Successfully updated");
                                $('#contactEdit').modal('hide');
                                refreshMoreContactInformation();
                            },
                            404: function () {
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                                toastr.error("Update request not found");
                            },
                            400: function () {
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                                toastr.error("Cannot update record");
                            }
                        }
                    });
                }
            }
        }

        // ==============
        // DELETE Contact
        // ==============
        function btnDeleteContact_OnClick() {
            $('#deleteContactConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $('#cmdConfirmDeleteContact').prop('disabled', false);
            $('#cmdConfirmDeleteContactCloseButton').prop('disabled', false);
        }
        // Contact Confirm Delete
        function cmdContactConfirmDeleteButton_OnClick() {
            $("#cmdConfirmDeleteContact").prop("disabled", true);
            $("#cmdConfirmDeleteContactCloseButton").prop("disabled", true);

            contactInformations.editItem(contactInformations.currentItem);
            var contactId = contactInformations.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteArticleContact/' + contactId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting...";
                        $('#cmdConfirmDeleteContact').prop('disabled', true);
                        $('#cmdConfirmDeleteContactCloseButton').prop('disabled', true);
                        toastr.success("Successfully deleted");
                        $('#deleteContactConfirm').modal('hide');
                        refreshMoreContactInformation();
                    },
                    404: function () {
                        document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#cmdConfirmDeleteContact').prop('disabled', false);
                        $('#cmdConfirmDeleteContactCloseButton').prop('disabled', false);
                        toastr.error("Delete request not found");
                        $('#deleteContactConfirm').modal('hide');
                    },
                    400: function () {
                        document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#cmdConfirmDeleteContact').prop('disabled', false);
                        $('#cmdConfirmDeleteContactCloseButton').prop('disabled', false);
                        toastr.error("Cannot delete record");
                        $('#deleteContactConfirm').modal('hide');
                    }
                }
            });
        }

        // ====================================
        // On Page Load for Contact Information
        // ====================================
        function contactInformationTab() {
            contactInformations = new wijmo.collections.CollectionView(getContactInformation());

            // Flex Grid for Contact Information
            contactInformationGrid = new wijmo.grid.FlexGrid('#ContactInformationGrid');
            contactInformationGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Contact",
                                "binding": "ContactPerson",
                                "width": "3*",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Contact Number(s)",
                                "binding": "ContactNumber",
                                "width": "2*",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Remarks",
                                "binding": "Remarks",
                                "allowSorting": true,
                                "width": "4*",
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: contactInformations,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });
            contactInformationGrid.trackChanges = true;
        }
    </script>
    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        // ====
        // TABS
        // ====
        $('#journalLedgerTabId').click(function () {
            $('#JournalLedger').show();
            $('#ContactInformation').hide();
            window.journalLedgerTab = function () {
                return true;
            };
        });

        $('#contactInformationTabId').click(function () {
            $('#JournalLedger').hide();
            $('#ContactInformation').show();
            contactInformationTab();
            window.contactInformationTab = function () {
                return true;
            };
        });
    </script>
</body>
</html>