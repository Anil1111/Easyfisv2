@{
    var branchId = Request.QueryString["BranchId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Financial Statements</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Font-Awesome/css")
    @Styles.Render("~/Content/Software-css")
    @Styles.Render("~/WijmoCSS/Wijmo-css")
</head>
<body>
    <div id="wrapper" class="wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <br /><br /><br />
            <div class="container">
                <h4><span class="accountReportsDetail">FS</span> Financial Statements</h4>
                <br />
                <div class="div_Current_Page">
                    @*<label id="currentBranchName"></label>*@
                    <span id="currentPage"></span>
                </div>
                @*<button id="c-button--push-left" class="btn btn-default"><i class="fa fa-bars"></i> Menu</button>
                    <a href="@Url.Action("Index","Software")" class="btn btn-default"><i class="fa fa-table"></i> DashBoard</a>*@
                @*<br /><br />*@
                @*<h2>Accounts Payable</h2>*@
                <div class="row">
                    <div class="col-md-4">
                        <ul class="nav nav-pills nav-stacked pill-custom pill-report-custom" role="tablist" id="myTab">
                            <li class="active"><a data-toggle="pill" href="#BS">Balance Sheet</a></li>
                            <li><a data-toggle="pill" href="#IS">Income Statement</a></li>
                            <li><a data-toggle="pill" href="#CF">Cash Flow (Indirect)</a></li>
                            <li><a data-toggle="pill" href="#TB">Trial Balance</a></li>
                            <li><a data-toggle="pill" href="#AL">Account Ledger</a></li>
                            <li><a data-toggle="pill" href="#RRB">Receiving Receipt Book</a></li>
                            <li><a data-toggle="pill" href="#DB">Disbursement Book</a></li>
                            <li><a data-toggle="pill" href="#SB">Sales Book</a></li>
                            <li><a data-toggle="pill" href="#CB">Collection Book</a></li>
                            <li><a data-toggle="pill" href="#SIB">Stock-in Book</a></li>
                            <li><a data-toggle="pill" href="#SOB">Stock-out Book</a></li>
                            <li><a data-toggle="pill" href="#STB">Stock Transfer Book</a></li>
                            <li><a data-toggle="pill" href="#JVB">Journal Voucher Book</a></li>
                            <li><a data-toggle="pill" href="#COA">Chart of Accounts</a></li>
                        </ul>
                    </div>
                    <div class="col-md-8">
                        <div class="tab-content">
                            <div id="BS" class="tab-pane fade in active">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementBalanceSheetPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Date as of:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementBalanceSheet_DateAsOf" ></div>
                                                        <input type="text" id="FinancialStatementBalanceSheet_DateAsOf_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialStatementBalanceSheet_Company"></div>

                                                        <input type="text" id="FinancialStatementBalanceSheet_Company_data" />
                                                        <input type="text" id="FinancialStatementBalanceSheet_Company_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="FinancialStatementBalanceSheet_filter" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div id="filterTabsFinancialStatementBalanceSheet">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#one">1</a></li>
                                    </ul>

                                    <div class="tab-content">
                                        <div id="one" class="tab-pane fade in active">
                                            <div class="well">
                                                <form class="form-horizontal" role="form">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label col-sm-2">Branch:</label>
                                                                <div class="col-sm-6">
                                                                    <div class="comboBox-wide" id="FinancialStatementBalanceSheet_Branch"></div>

                                                                    <input type="text" id="FinancialStatementBalanceSheet_Branch_data" />
                                                                    <input type="text" id="FinancialStatementBalanceSheet_Branch_selectedValue" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="IS" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementIncomeStatementPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementIncomeStatement_StartDate"></div>
                                                        <input type="text" id="FinancialStatementIncomeStatement_StartDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementIncomeStatement_EndDate"></div>
                                                        <input type="text" id="FinancialStatementIncomeStatement_EndDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialStatementIncomeStatement_Company"></div>

                                                        <input type="text" id="FinancialStatementIncomeStatement_Company_data" />
                                                        <input type="text" id="FinancialStatementIncomeStatement_Company_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="FinancialStatementIncomeStatement_filter" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div id="filterTabsFinancialStatementIncomeStatement">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#one">1</a></li>
                                    </ul>

                                    <div class="tab-content">
                                        <div id="one" class="tab-pane fade in active">
                                            <div class="well">
                                                <form class="form-horizontal" role="form">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label col-sm-2">Branch:</label>
                                                                <div class="col-sm-6">
                                                                    <div class="comboBox-wide" id="FinancialStatementIncomeStatement_Branch"></div>

                                                                    <input type="text" id="FinancialStatementIncomeStatement_Branch_data" />
                                                                    <input type="text" id="FinancialStatementIncomeStatement_Branch_selectedValue" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="CF" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementCashFlowIndirectPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementCashFlow_StartDate"></div>
                                                        <input type="text" id="FinancialStatementCashFlow_StartDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementCashFlow_EndDate"></div>
                                                        <input type="text" id="FinancialStatementCashFlow_EndDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialStatementCashFlow_Company"></div>

                                                        <input type="text" id="FinancialStatementCashFlow_Company_data" />
                                                        <input type="text" id="FinancialStatementCashFlow_Company_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="FinancialStatementCashFlow_filter" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div id="filterTabsFinancialStatementCashFlow">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#one">1</a></li>
                                    </ul>

                                    <div class="tab-content">
                                        <div id="one" class="tab-pane fade in active">
                                            <div class="well">
                                                <form class="form-horizontal" role="form">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label col-sm-2">Branch:</label>
                                                                <div class="col-sm-6">
                                                                    <div class="comboBox-wide" id="FinancialStatementCashFlow_Branch"></div>

                                                                    <input type="text" id="FinancialStatementCashFlow_Branch_data" />
                                                                    <input type="text" id="FinancialStatementCashFlow_Branch_selectedValue" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="TB" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementTrialBalancePDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementTrialBalance_StartDate"></div>
                                                        <input type="text" id="FinancialStatementTrialBalance_StartDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementTrialBalance_EndDate"></div>
                                                        <input type="text" id="FinancialStatementTrialBalance_EndDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialStatementTrialBalance_Company"></div>

                                                        <input type="text" id="FinancialStatementTrialBalance_Company_data" />
                                                        <input type="text" id="FinancialStatementTrialBalance_Company_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="FinancialStatementTrialBalance_filter" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div id="filterTabsFinancialStatementTrialBalance">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#one">1</a></li>
                                    </ul>

                                    <div class="tab-content">
                                        <div id="one" class="tab-pane fade in active">
                                            <div class="well">
                                                <form class="form-horizontal" role="form">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label col-sm-2">Branch:</label>
                                                                <div class="col-sm-6">
                                                                    <div class="comboBox-wide" id="FinancialStatementTrialBalance_Branch"></div>

                                                                    <input type="text" id="FinancialStatementTrialBalance_Branch_data" />
                                                                    <input type="text" id="FinancialStatementTrialBalance_Branch_selectedValue" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="AL" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementAccountLedgerPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementAccountLedger_StartDate"></div>
                                                        <input type="text" id="FinancialStatementAccountLedger_StartDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementAccountLedger_EndDate"></div>
                                                        <input type="text" id="FinancialStatementAccountLedger_EndDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialStatementAccountLedger_Company"></div>

                                                        <input type="text" id="FinancialStatementAccountLedger_Company_data" />
                                                        <input type="text" id="FinancialStatementAccountLedger_Company_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Account:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialStatementAccountLedger_Account"></div>

                                                        <input type="text" id="FinancialStatementAccountLedger_Account_data" />
                                                        <input type="text" id="FinancialStatementAccountLedger_Account_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="FinancialStatementAccountLedger_filter" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div id="filterTabsFinancialStatementAccountLedger">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#one">1</a></li>
                                    </ul>

                                    <div class="tab-content">
                                        <div id="one" class="tab-pane fade in active">
                                            <div class="well">
                                                <form class="form-horizontal" role="form">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label col-sm-2">Branch:</label>
                                                                <div class="col-sm-6">
                                                                    <div class="comboBox-wide" id="FinancialStatementAccountLedger_Branch"></div>

                                                                    <input type="text" id="FinancialStatementAccountLedger_Branch_data" />
                                                                    <input type="text" id="FinancialStatementAccountLedger_Branch_selectedValue" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="RRB" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementReceivingReceiptBookPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialReceivingReceiptBook_StartDate"></div>
                                                        <input type="text" id="FinancialReceivingReceiptBook_StartDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialReceivingReceiptBook_EndDate"></div>
                                                        <input type="text" id="FinancialReceivingReceiptBook_EndDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialReceivingReceiptBook_Company"></div>

                                                        <input type="text" id="FinancialReceivingReceiptBook_Company_data" />
                                                        <input type="text" id="FinancialReceivingReceiptBook_Company_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="FinancialReceivingReceiptBook_filter" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div id="filterTabsFinancialReceivingReceiptBook">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#one">1</a></li>
                                    </ul>

                                    <div class="tab-content">
                                        <div id="one" class="tab-pane fade in active">
                                            <div class="well">
                                                <form class="form-horizontal" role="form">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label col-sm-2">Branch:</label>
                                                                <div class="col-sm-6">
                                                                    <div class="comboBox-wide" id="FinancialReceivingReceiptBook_Branch"></div>

                                                                    <input type="text" id="FinancialReceivingReceiptBook_Branch_data" />
                                                                    <input type="text" id="FinancialReceivingReceiptBook_Branch_selectedValue" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="DB" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementDisbursementBookPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementDisbursementBook_StartDate"></div>
                                                        <input type="text" id="FinancialStatementDisbursementBook_StartDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementDisbursementBook_EndDate"></div>
                                                        <input type="text" id="FinancialStatementDisbursementBook_EndDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialStatementDisbursementBook_Company"></div>

                                                        <input type="text" id="FinancialStatementDisbursementBook_Company_data" />
                                                        <input type="text" id="FinancialStatementDisbursementBook_Company_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="FinancialStatementDisbursementBook_filter" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div id="filterTabsFinancialStatementDisbursementBook">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#one">1</a></li>
                                    </ul>

                                    <div class="tab-content">
                                        <div id="one" class="tab-pane fade in active">
                                            <div class="well">
                                                <form class="form-horizontal" role="form">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label col-sm-2">Branch:</label>
                                                                <div class="col-sm-6">
                                                                    <div class="comboBox-wide" id="FinancialStatementDisbursementBook_Branch"></div>

                                                                    <input type="text" id="FinancialStatementDisbursementBook_Branch_data" />
                                                                    <input type="text" id="FinancialStatementDisbursementBook_Branch_selectedValue" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="SB" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementSalesBookPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementSalesBook_StartDate"></div>
                                                        <input type="text" id="FinancialStatementSalesBook_StartDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementSalesBook_EndDate"></div>
                                                        <input type="text" id="FinancialStatementSalesBook_EndDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialStatementSalesBook_Company"></div>

                                                        <input type="text" id="FinancialStatementSalesBook_Company_data" />
                                                        <input type="text" id="FinancialStatementSalesBook_Company_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="FinancialStatementSalesBook_filter" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div id="filterTabsFinancialStatementSalesBook">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#one">1</a></li>
                                    </ul>

                                    <div class="tab-content">
                                        <div id="one" class="tab-pane fade in active">
                                            <div class="well">
                                                <form class="form-horizontal" role="form">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label col-sm-2">Branch:</label>
                                                                <div class="col-sm-6">
                                                                    <div class="comboBox-wide" id="FinancialStatementSalesBook_Branch"></div>

                                                                    <input type="text" id="FinancialStatementSalesBook_Branch_data" />
                                                                    <input type="text" id="FinancialStatementSalesBook_Branch_selectedValue" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="CB" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementCollectionBookPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementCollectionBook_StartDate"></div>
                                                        <input type="text" id="FinancialStatementCollectionBook_StartDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementCollectionBook_EndDate"></div>
                                                        <input type="text" id="FinancialStatementCollectionBook_EndDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialStatementCollectionBook_Company"></div>

                                                        <input type="text" id="FinancialStatementCollectionBook_Company_data" />
                                                        <input type="text" id="FinancialStatementCollectionBook_Company_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="FinancialStatementCollectionBook_filter" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div id="filterTabsFinancialStatementCollectionBook">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#one">1</a></li>
                                    </ul>

                                    <div class="tab-content">
                                        <div id="one" class="tab-pane fade in active">
                                            <div class="well">
                                                <form class="form-horizontal" role="form">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label col-sm-2">Branch:</label>
                                                                <div class="col-sm-6">
                                                                    <div class="comboBox-wide" id="FinancialStatementCollectionBook_Branch"></div>

                                                                    <input type="text" id="FinancialStatementCollectionBook_Branch_data" />
                                                                    <input type="text" id="FinancialStatementCollectionBook_Branch_selectedValue" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="SIB" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementStockInBookPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementStockInBook_StartDate"></div>
                                                        <input type="text" id="FinancialStatementStockInBook_StartDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <div type="text" class="comboBox-wide" id="FinancialStatementStockInBook_EndDate"></div>
                                                        <input type="text" id="FinancialStatementStockInBook_EndDate_data" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <div class="comboBox-wide" id="FinancialStatementStockInBook_Company"></div>

                                                        <input type="text" id="FinancialStatementStockInBook_Company_data" />
                                                        <input type="text" id="FinancialStatementStockInBook_Company_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="FinancialStatementStockInBook_filter" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div id="filterTabsFinancialStatementStockInBook">
                                    <ul class="nav nav-tabs">
                                        <li class="active"><a data-toggle="tab" href="#one">1</a></li>
                                    </ul>

                                    <div class="tab-content">
                                        <div id="one" class="tab-pane fade in active">
                                            <div class="well">
                                                <form class="form-horizontal" role="form">
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                <label class="control-label col-sm-2">Branch:</label>
                                                                <div class="col-sm-6">
                                                                    <div class="comboBox-wide" id="FinancialStatementStockInBook_Branch"></div>

                                                                    <input type="text" id="FinancialStatementStockInBook_Branch_data" />
                                                                    <input type="text" id="FinancialStatementStockInBook_Branch_selectedValue" />
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="SOB" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementStockOutBookPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <input type="text" class="form-control input-sm" id="" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <input type="text" class="form-control input-sm" id="" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <input type="text" class="form-control input-sm" id="" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            <div id="STB" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementStockTransferBookPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <input type="text" class="form-control input-sm" id="" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <input type="text" class="form-control input-sm" id="" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <input type="text" class="form-control input-sm" id="" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            <div id="JVB" class="tab-pane fade">
                                <div align="right">
                                    <button onclick="window.location.href ='@Url.Action("FinancialStatementJournalVoucherBookPDF", "Software")'" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                    <a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</a>
                                </div>
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Start Date:</label>
                                                    <div class="col-sm-6">
                                                        <input type="text" class="form-control input-sm" id="" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">End Date:</label>
                                                    <div class="col-sm-6">
                                                        <input type="text" class="form-control input-sm" id="" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Company:</label>
                                                    <div class="col-sm-6">
                                                        <input type="text" class="form-control input-sm" id="" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-2">Filter:</label>
                                                    <div class="col-sm-6">
                                                        <input type="checkbox" id="" />
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            <div id="COA" class="tab-pane fade"> </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    @Scripts.Render("~/Scripts/Software-js")
    @Scripts.Render("~/WijmoScripts/Wijmo-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var FinancialStatementBalanceSheetDateAsOf;
        var companies;
        var cboFinancialStatementBalanceSheetCompany;
        var branches;
        var cboFinancialStatementBalanceSheetBranches;

        var FinancialStatementIncomeStatementStartDate;
        var FinancialStatementIncomeStatementEndDate;

        var cboFinancialStatementIncomeStatementCompany;
        var cboFinancialStatementIncomeStatementBranch;

        var FinancialStatementCashFlowStartDate;
        var FinancialStatementCashFlowEndDate;

        var cboFinancialStatementCashFlowCompany;
        var cboFinancialStatementCashFlowBranch;

        var FinancialStatementTrialBalanceStartDate;
        var FinancialStatementTrialBalanceEndDate;

        var cboFinancialStatementTrialBalanceCompany;
        var cboFinancialStatementTrialBalanceBranch;

        var FinancialStatementAccountLedgerStartDate;
        var FinancialStatementAccountLedgerEndDate;

        var cboFinancialStatementAccountLedgerCompany;
        var cboFinancialStatementAccountLedgerBranch;

        var accounts;
        var cboFinancialStatementAccountLedgerAccounts;

        var FinancialReceivingReceiptBookStartDate;
        var FinancialReceivingReceiptBookEndDate;

        var FinancialStatementDisbursementBookStartDate;
        var FinancialStatementDisbursementBookEndDate;

        var cboFinancialStatementDisbursementBookCompany;
        var cboFinancialStatementDisbursementBookBranch;

        var FinancialStatementSalesBookStartDate;
        var FinancialStatementSalesBookEndDate;

        var cboFinancialStatementSalesBookCompany;
        var cboFinancialStatementSalesBookBranch;

        var FinancialStatementStockInBookStartDate;
        var FinancialStatementStockInBookEndDate;


        // ===========
        // Get company
        // ===========
        function getCompanies() {
            companies = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listCompany',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            companies.push({
                                Id: results[i]["Id"],
                                Company: results[i]["Company"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                            });
                        }

                        createCboComapny(companies);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return companies;
        }

        // ===================
        // Company - Combo Box
        // ===================
        function createCboComapny(companies) {
            var companyCollection = new wijmo.collections.CollectionView(companies);
            var companyList = new Array();
            for (var i = 0; i < companyCollection.items.length; i++) {
                companyList.push(companyCollection.items[i].Company);
            }

            cboFinancialStatementBalanceSheetCompany.dispose();
            cboFinancialStatementBalanceSheetCompany = new wijmo.input.ComboBox('#FinancialStatementBalanceSheet_Company', {
                placeholder: "Select Company",
                itemsSource: companyList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementBalanceSheet_Company_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementBalanceSheet_Company_data").val(companyCollection.items[this.selectedIndex].Id);
                    getBranchesForFinancialStatementBalanceSheet();
                }
            });

            cboFinancialStatementIncomeStatementCompany.dispose();
            cboFinancialStatementIncomeStatementCompany = new wijmo.input.ComboBox('#FinancialStatementIncomeStatement_Company', {
                placeholder: "Select Company",
                itemsSource: companyList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementIncomeStatement_Company_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementIncomeStatement_Company_data").val(companyCollection.items[this.selectedIndex].Id);
                    getBranchesForFinancialStatementIncomeStatement();
                }
            });


            cboFinancialStatementCashFlowCompany.dispose();
            cboFinancialStatementCashFlowCompany = new wijmo.input.ComboBox('#FinancialStatementCashFlow_Company', {
                placeholder: "Select Company",
                itemsSource: companyList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementCashFlow_Company_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementCashFlow_Company_data").val(companyCollection.items[this.selectedIndex].Id);
                    getBranchesForFinancialStatementCashFlow();
                }
            });

            cboFinancialStatementTrialBalanceCompany.dispose();
            cboFinancialStatementTrialBalanceCompany = new wijmo.input.ComboBox('#FinancialStatementTrialBalance_Company', {
                placeholder: "Select Company",
                itemsSource: companyList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementTrialBalance_Company_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementTrialBalance_Company_data").val(companyCollection.items[this.selectedIndex].Id);
                    getBranchesForFinancialStatementTrialBalance();
                }
            });

            cboFinancialStatementAccountLedgerCompany.dispose();
            cboFinancialStatementAccountLedgerCompany = new wijmo.input.ComboBox('#FinancialStatementAccountLedger_Company', {
                placeholder: "Select Company",
                itemsSource: companyList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementAccountLedger_Company_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementAccountLedger_Company_data").val(companyCollection.items[this.selectedIndex].Id);
                    getBranchesForFinancialStatementAccountLedger();
                }
            });
            
            cboFinancialReceivingReceiptBookCompany.dispose();
            cboFinancialReceivingReceiptBookCompany = new wijmo.input.ComboBox('#FinancialReceivingReceiptBook_Company', {
                placeholder: "Select Company",
                itemsSource: companyList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialReceivingReceiptBook_Company_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialReceivingReceiptBook_Company_data").val(companyCollection.items[this.selectedIndex].Id);
                    getBranchesForFinancialStatementReceivingReceiptBook();
                }
            });

            cboFinancialStatementDisbursementBookCompany.dispose();
            cboFinancialStatementDisbursementBookCompany = new wijmo.input.ComboBox('#FinancialStatementDisbursementBook_Company', {
                placeholder: "Select Company",
                itemsSource: companyList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementDisbursementBook_Company_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementDisbursementBook_Company_data").val(companyCollection.items[this.selectedIndex].Id);
                    getBranchesForFinancialStatementDisbursmenetBook();
                }
            });

            cboFinancialStatementSalesBookCompany.dispose();
            cboFinancialStatementSalesBookCompany = new wijmo.input.ComboBox('#FinancialStatementSalesBook_Company', {
                placeholder: "Select Company",
                itemsSource: companyList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementSalesBook_Company_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementSalesBook_Company_data").val(companyCollection.items[this.selectedIndex].Id);
                    getBranchesForFinancialStatementSalesBook();
                }
            });

            FinancialStatementCollectionBookCompany.dispose();
            FinancialStatementCollectionBookCompany = new wijmo.input.ComboBox('#FinancialStatementCollectionBook_Company', {
                placeholder: "Select Company",
                itemsSource: companyList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementCollectionBook_Company_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementCollectionBook_Company_data").val(companyCollection.items[this.selectedIndex].Id);
                    getBranchesForFinancialStatementCollectionBook();
                }
            });

            FinancialStatementStockInBookCompany.dispose();
            FinancialStatementStockInBookCompany = new wijmo.input.ComboBox('#FinancialStatementStockInBook_Company', {
                placeholder: "Select Company",
                itemsSource: companyList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementStockInBook_Company_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementStockInBook_Company_data").val(companyCollection.items[this.selectedIndex].Id);
                    getBranchesForFinancialStatementStockInBook();
                }
            });

        }

        // ==================================================
        // Get branches for Financial Statement Balance Sheet
        // ==================================================
        function getBranchesForFinancialStatementBalanceSheet() {
            branches = new wijmo.collections.ObservableArray();

            var companyId;
            if (document.getElementById('FinancialStatementBalanceSheet_Company_data').value == "") {
                companyId = 0;
            } else {
                companyId = document.getElementById('FinancialStatementBalanceSheet_Company_data').value;
            }

            $.ajax({
                url: '/api/listBranchByCompanyId/' + companyId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchCode: results[i]["BranchCode"],
                                Branch: results[i]["Branch"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                                IsLocked: results[i]["IsLocked"]
                            });
                        }
                        createCboBranchesForFinancialStatementBalanceSheetFilterByCompany(branches);
                    } else {
                        createCboBranchesForFinancialStatementBalanceSheetFilterByCompany(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return branches;
        }

        // ===========================================================================
        // create Cbo Branches For Financial Statement Balance Sheet Filter By Company
        // ===========================================================================
        function createCboBranchesForFinancialStatementBalanceSheetFilterByCompany(branches) {
            var branchesCollection = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchesCollection.items.length; i++) {
                branchList.push(branchesCollection.items[i].Branch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                disabled = false;
            }

            document.getElementById('FinancialStatementBalanceSheet_Branch_data').value = "";

            // branches
            cboFinancialStatementBalanceSheetBranches.dispose();
            cboFinancialStatementBalanceSheetBranches = new wijmo.input.ComboBox('#FinancialStatementBalanceSheet_Branch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementBalanceSheet_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementBalanceSheet_Branch_data").val(branchesCollection.items[this.selectedIndex].Id);
                }
            });
        }

        // =====================================================
        // Get Branches For Financial Statement Income Statement
        // =====================================================
        function getBranchesForFinancialStatementIncomeStatement() {
            branches = new wijmo.collections.ObservableArray();

            var companyId;
            if (document.getElementById('FinancialStatementIncomeStatement_Company_data').value == "") {
                companyId = 0;
            } else {
                companyId = document.getElementById('FinancialStatementIncomeStatement_Company_data').value;
            }

            $.ajax({
                url: '/api/listBranchByCompanyId/' + companyId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchCode: results[i]["BranchCode"],
                                Branch: results[i]["Branch"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                                IsLocked: results[i]["IsLocked"]
                            });
                        }
                        createCboBranchesForFinancialStatementIncomeStatementFilterByCompany(branches);
                    } else {
                        createCboBranchesForFinancialStatementIncomeStatementFilterByCompany(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return branches;
        }

        // ==============================================================================
        // create Cbo Branches For Financial Statement Income Statement Filter By Company
        // ==============================================================================
        function createCboBranchesForFinancialStatementIncomeStatementFilterByCompany(branches) {
            var branchesCollection = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchesCollection.items.length; i++) {
                branchList.push(branchesCollection.items[i].Branch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                disabled = false;
            }

            document.getElementById('FinancialStatementIncomeStatement_Branch_data').value = "";

            // branches
            cboFinancialStatementIncomeStatementBranch.dispose();
            cboFinancialStatementIncomeStatementBranch = new wijmo.input.ComboBox('#FinancialStatementIncomeStatement_Branch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementIncomeStatement_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementIncomeStatement_Branch_data").val(branchesCollection.items[this.selectedIndex].Id);
                }
            });
        }

        // ===============================================
        // Get branches for Financial Statement Cash Flow
        // ===============================================
        function getBranchesForFinancialStatementCashFlow() {
            branches = new wijmo.collections.ObservableArray();

            var companyId;
            if (document.getElementById('FinancialStatementCashFlow_Company_data').value == "") {
                companyId = 0;
            } else {
                companyId = document.getElementById('FinancialStatementCashFlow_Company_data').value;
            }

            $.ajax({
                url: '/api/listBranchByCompanyId/' + companyId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchCode: results[i]["BranchCode"],
                                Branch: results[i]["Branch"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                                IsLocked: results[i]["IsLocked"]
                            });
                        }
                        createCboBranchesForFinancialStatementCashFlowFilterByCompany(branches);
                    } else {
                        createCboBranchesForFinancialStatementCashFlowFilterByCompany(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return branches;
        }

        // =======================================================================
        // create Cbo Branches For Financial Statement Cash Flow Filter By Company
        // =======================================================================
        function createCboBranchesForFinancialStatementCashFlowFilterByCompany(branches) {
            var branchesCollection = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchesCollection.items.length; i++) {
                branchList.push(branchesCollection.items[i].Branch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                disabled = false;
            }

            document.getElementById('FinancialStatementCashFlow_Branch_data').value = "";

            // branches
            cboFinancialStatementCashFlowBranch.dispose();
            cboFinancialStatementCashFlowBranch = new wijmo.input.ComboBox('#FinancialStatementCashFlow_Branch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementCashFlow_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementCashFlow_Branch_data").val(branchesCollection.items[this.selectedIndex].Id);
                }
            });
        }

        // ==================================================
        // Get branches for Financial Statement Trial Balance
        // ==================================================
        function getBranchesForFinancialStatementTrialBalance() {
            branches = new wijmo.collections.ObservableArray();

            var companyId;
            if (document.getElementById('FinancialStatementTrialBalance_Company_data').value == "") {
                companyId = 0;
            } else {
                companyId = document.getElementById('FinancialStatementTrialBalance_Company_data').value;
            }

            $.ajax({
                url: '/api/listBranchByCompanyId/' + companyId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchCode: results[i]["BranchCode"],
                                Branch: results[i]["Branch"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                                IsLocked: results[i]["IsLocked"]
                            });
                        }
                        createCboBranchesForFinancialStatementTrialBalanceFilterByCompany(branches);
                    } else {
                        createCboBranchesForFinancialStatementTrialBalanceFilterByCompany(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return branches;
        }

        // ============================================================================
        // create Cbo Branches For Financial Statement Trial Balance Filter By Company
        // ===========================================================================
        function createCboBranchesForFinancialStatementTrialBalanceFilterByCompany(branches) {
            var branchesCollection = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchesCollection.items.length; i++) {
                branchList.push(branchesCollection.items[i].Branch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                disabled = false;
            }

            document.getElementById('FinancialStatementTrialBalance_Branch_data').value = "";

            // branches
            cboFinancialStatementTrialBalanceBranch.dispose();
            cboFinancialStatementTrialBalanceBranch = new wijmo.input.ComboBox('#FinancialStatementTrialBalance_Branch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementTrialBalance_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementTrialBalance_Branch_data").val(branchesCollection.items[this.selectedIndex].Id);
                }
            });
        }

        // ===================================================
        // Get branches for Financial Statement Account Ledger
        // ===================================================
        function getBranchesForFinancialStatementAccountLedger() {
            branches = new wijmo.collections.ObservableArray();

            var companyId;
            if (document.getElementById('FinancialStatementAccountLedger_Company_data').value == "") {
                companyId = 0;
            } else {
                companyId = document.getElementById('FinancialStatementAccountLedger_Company_data').value;
            }

            $.ajax({
                url: '/api/listBranchByCompanyId/' + companyId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchCode: results[i]["BranchCode"],
                                Branch: results[i]["Branch"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                                IsLocked: results[i]["IsLocked"]
                            });
                        }
                        createCboBranchesForFinancialStatementAccountLedgerFilterByCompany(branches);
                    } else {
                        createCboBranchesForFinancialStatementAccountLedgerFilterByCompany(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return branches;
        }

        // ============================================================================
        // create Cbo Branches For Financial Statement Account Ledger Filter By Company
        // ============================================================================
        function createCboBranchesForFinancialStatementAccountLedgerFilterByCompany(branches) {
            var branchesCollection = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchesCollection.items.length; i++) {
                branchList.push(branchesCollection.items[i].Branch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                disabled = false;
            }

            document.getElementById('FinancialStatementAccountLedger_Branch_data').value = "";

            // branches
            cboFinancialStatementAccountLedgerBranch.dispose();
            cboFinancialStatementAccountLedgerBranch = new wijmo.input.ComboBox('#FinancialStatementAccountLedger_Branch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementAccountLedger_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementAccountLedger_Branch_data").val(branchesCollection.items[this.selectedIndex].Id);
                }
            });
        }

        // ========================================================
        // Get Finaancial Statement Account Ledger Account Accounts
        // ========================================================
        function getFinaancialStatementAccountLedgerAccountAccounts() {
            accounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accounts.push({
                                Id: results[i]["Id"],
                                AccountCode: results[i]["AccountCode"],
                                Account: results[i]["Account"],
                                AccountTypeId: results[i]["AccountTypeId"],
                                AccountType: results[i]["AccountType"],
                                AccountCashFlowId: results[i]["AccountCashFlowId"],
                                AccountCashFlow: results[i]["AccountCashFlow"]
                            });
                        }

                        createCboinancialStatementAccountLedgerAccount(accounts);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return accounts;
        }

        // ====================
        // Accounts - Combo Box
        // ====================
        function createCboinancialStatementAccountLedgerAccount(accounts) {
            var accountCollection = new wijmo.collections.CollectionView(accounts);
            var accountList = new Array();
            for (var i = 0; i < accountCollection.items.length; i++) {
                accountList.push(accountCollection.items[i].Account);
            }

            // Inventory
            cboFinancialStatementAccountLedgerAccounts.dispose();
            cboFinancialStatementAccountLedgerAccounts = new wijmo.input.ComboBox('#FinancialStatementAccountLedger_Account', {
                placeholder: "Select Account",
                itemsSource: accountList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementAccountLedger_Account_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementAccountLedger_Account_data").val(accountCollection.items[this.selectedIndex].Id);
                }
            });
        }

        // ===========================================================
        // Get branches for Financial Statement Receiving Receipt Book
        // ===========================================================
        function getBranchesForFinancialStatementReceivingReceiptBook() {
            branches = new wijmo.collections.ObservableArray();

            var companyId;
            if (document.getElementById('FinancialReceivingReceiptBook_Company_data').value == "") {
                companyId = 0;
            } else {
                companyId = document.getElementById('FinancialReceivingReceiptBook_Company_data').value;
            }

            $.ajax({
                url: '/api/listBranchByCompanyId/' + companyId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchCode: results[i]["BranchCode"],
                                Branch: results[i]["Branch"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                                IsLocked: results[i]["IsLocked"]
                            });
                        }
                        createCboBranchesForFinancialStatementReceivingReceiptBookFilterByCompany(branches);
                    } else {
                        createCboBranchesForFinancialStatementReceivingReceiptBookFilterByCompany(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return branches;
        }

        // ====================================================================================
        // create Cbo Branches For Financial Statement Receiving Receipt Book Filter By Company
        // ====================================================================================
        function createCboBranchesForFinancialStatementReceivingReceiptBookFilterByCompany(branches) {
            var branchesCollection = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchesCollection.items.length; i++) {
                branchList.push(branchesCollection.items[i].Branch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                disabled = false;
            }

            document.getElementById('FinancialReceivingReceiptBook_Branch_data').value = "";
            // branches
            cboFinancialReceivingReceiptBookBranch.dispose();
            cboFinancialReceivingReceiptBookBranch = new wijmo.input.ComboBox('#FinancialReceivingReceiptBook_Branch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialReceivingReceiptBook_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialReceivingReceiptBook_Branch_data").val(branchesCollection.items[this.selectedIndex].Id);
                }
            });
        }

        // ======================================================
        // Get branches for Financial Statement Disbursmenet Book
        // ======================================================
        function getBranchesForFinancialStatementDisbursmenetBook() {
            branches = new wijmo.collections.ObservableArray();

            var companyId;
            if (document.getElementById('FinancialStatementDisbursementBook_Company_data').value == "") {
                companyId = 0;
            } else {
                companyId = document.getElementById('FinancialStatementDisbursementBook_Company_data').value;
            }

            $.ajax({
                url: '/api/listBranchByCompanyId/' + companyId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchCode: results[i]["BranchCode"],
                                Branch: results[i]["Branch"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                                IsLocked: results[i]["IsLocked"]
                            });
                        }
                        createCboBranchesForFinancialStatementDisbursmenetBookFilterByCompany(branches);
                    } else {
                        createCboBranchesForFinancialStatementDisbursmenetBookFilterByCompany(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return branches;
        }

        // ===============================================================================
        // create Cbo Branches For Financial Statement Disbursement Book Filter By Company
        // ===============================================================================
        function createCboBranchesForFinancialStatementDisbursmenetBookFilterByCompany(branches) {
            var branchesCollection = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchesCollection.items.length; i++) {
                branchList.push(branchesCollection.items[i].Branch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                disabled = false;
            }

            document.getElementById('FinancialStatementDisbursementBook_Branch_data').value = "";
            // branches
            cboFinancialStatementDisbursementBookBranch.dispose();
            cboFinancialStatementDisbursementBookBranch = new wijmo.input.ComboBox('#FinancialStatementDisbursementBook_Branch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementDisbursementBook_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementDisbursementBook_Branch_data").val(branchesCollection.items[this.selectedIndex].Id);
                }
            });
        }

        // ===============================================
        // Get branches for Financial Statement Sales Book
        // ===============================================
        function getBranchesForFinancialStatementSalesBook() {
            branches = new wijmo.collections.ObservableArray();

            var companyId;
            if (document.getElementById('FinancialStatementSalesBook_Company_data').value == "") {
                companyId = 0;
            } else {
                companyId = document.getElementById('FinancialStatementSalesBook_Company_data').value;
            }

            $.ajax({
                url: '/api/listBranchByCompanyId/' + companyId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchCode: results[i]["BranchCode"],
                                Branch: results[i]["Branch"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                                IsLocked: results[i]["IsLocked"]
                            });
                        }
                        createCboBranchesForFinancialStatementSalesBookFilterByCompany(branches);
                    } else {
                        createCboBranchesForFinancialStatementSalesBookFilterByCompany(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return branches;
        }

        // ========================================================================
        // create Cbo Branches For Financial Statement Sales Book Filter By Company
        // ========================================================================
        function createCboBranchesForFinancialStatementSalesBookFilterByCompany(branches) {
            var branchesCollection = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchesCollection.items.length; i++) {
                branchList.push(branchesCollection.items[i].Branch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                disabled = false;
            }

            document.getElementById('FinancialStatementSalesBook_Branch_data').value = "";
            // branches
            cboFinancialStatementSalesBookBranch.dispose();
            cboFinancialStatementSalesBookBranch = new wijmo.input.ComboBox('#FinancialStatementSalesBook_Branch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementSalesBook_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementSalesBook_Branch_data").val(branchesCollection.items[this.selectedIndex].Id);
                }
            });
        }

        // ====================================================
        // Get branches for Financial Statement Collection Book
        // ====================================================
        function getBranchesForFinancialStatementCollectionBook() {
            branches = new wijmo.collections.ObservableArray();

            var companyId;
            if (document.getElementById('FinancialStatementCollectionBook_Company_data').value == "") {
                companyId = 0;
            } else {
                companyId = document.getElementById('FinancialStatementCollectionBook_Company_data').value;
            }

            $.ajax({
                url: '/api/listBranchByCompanyId/' + companyId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchCode: results[i]["BranchCode"],
                                Branch: results[i]["Branch"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                                IsLocked: results[i]["IsLocked"]
                            });
                        }
                        createCboBranchesForFinancialStatementCollectionBookFilterByCompany(branches);
                    } else {
                        createCboBranchesForFinancialStatementCollectionBookFilterByCompany(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return branches;
        }

        // =============================================================================
        // create Cbo Branches For Financial Statement Collection Book Filter By Company
        // =============================================================================
        function createCboBranchesForFinancialStatementCollectionBookFilterByCompany(branches) {
            var branchesCollection = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchesCollection.items.length; i++) {
                branchList.push(branchesCollection.items[i].Branch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                disabled = false;
            }

            document.getElementById('FinancialStatementCollectionBook_Branch_data').value = "";
            // branches
            FinancialStatementCollectionBookBranch.dispose();
            FinancialStatementCollectionBookBranch = new wijmo.input.ComboBox('#FinancialStatementCollectionBook_Branch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementCollectionBook_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementCollectionBook_Branch_data").val(branchesCollection.items[this.selectedIndex].Id);
                }
            });
        }

        // ==================================================
        // Get branches for Financial Statement Stock In Book
        // ==================================================
        function getBranchesForFinancialStatementStockInBook() {
            branches = new wijmo.collections.ObservableArray();

            var companyId;
            if (document.getElementById('FinancialStatementStockInBook_Company_data').value == "") {
                companyId = 0;
            } else {
                companyId = document.getElementById('FinancialStatementStockInBook_Company_data').value;
            }

            $.ajax({
                url: '/api/listBranchByCompanyId/' + companyId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                Id: results[i]["Id"],
                                CompanyId: results[i]["CompanyId"],
                                Company: results[i]["Company"],
                                BranchCode: results[i]["BranchCode"],
                                Branch: results[i]["Branch"],
                                Address: results[i]["Address"],
                                ContactNumber: results[i]["ContactNumber"],
                                TaxNumber: results[i]["TaxNumber"],
                                IsLocked: results[i]["IsLocked"]
                            });
                        }
                        createCboBranchesForFinancialStatementStockInBookFilterByCompany(branches);
                    } else {
                        createCboBranchesForFinancialStatementStockInBookFilterByCompany(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return branches;
        }

        // ===========================================================================
        // create Cbo Branches For Financial Statement Stock In Book Filter By Company
        // ===========================================================================
        function createCboBranchesForFinancialStatementStockInBookFilterByCompany(branches) {
            var branchesCollection = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchesCollection.items.length; i++) {
                branchList.push(branchesCollection.items[i].Branch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                disabled = false;
            }

            document.getElementById('FinancialStatementStockInBook_Branch_data').value = "";
            // branches
            FinancialStatementStockInBookBranch.dispose();
            FinancialStatementStockInBookBranch = new wijmo.input.ComboBox('#FinancialStatementStockInBook_Branch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('FinancialStatementStockInBook_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#FinancialStatementStockInBook_Branch_data").val(branchesCollection.items[this.selectedIndex].Id);
                }
            });
        }




        // get Financial Statement Income Statement Start Date
        function getFinancialStatementIncomeStatementStartDate() {
            // Input Stock Transfer Start Date
            FinancialStatementIncomeStatementStartDate.dispose();
            FinancialStatementIncomeStatementStartDate = new wijmo.input.InputDate('#FinancialStatementIncomeStatement_StartDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementIncomeStatement_StartDate_data').value),
                mask: '99/99/9999',
                max: new Date(document.getElementById('FinancialStatementIncomeStatement_EndDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementIncomeStatement_StartDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementIncomeStatementEndDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Income Statement End Date
        function getFinancialStatementIncomeStatementEndDate() {
            // Input Stock Transfer End Date
            FinancialStatementIncomeStatementEndDate.dispose();
            FinancialStatementIncomeStatementEndDate = new wijmo.input.InputDate('#FinancialStatementIncomeStatement_EndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementIncomeStatement_EndDate_data').value),
                mask: '99/99/9999',
                min: new Date(document.getElementById('FinancialStatementIncomeStatement_StartDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementIncomeStatement_EndDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementIncomeStatementStartDate();
                    }, 50);
                }
            });
        }


        // get Financial Statement Cas hFlow Start Date
        function getFinancialStatementCashFlowStartDate() {
            // Input Stock Transfer Start Date
            FinancialStatementCashFlowStartDate.dispose();
            FinancialStatementCashFlowStartDate = new wijmo.input.InputDate('#FinancialStatementCashFlow_StartDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementCashFlow_StartDate_data').value),
                mask: '99/99/9999',
                max: new Date(document.getElementById('FinancialStatementCashFlow_EndDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementCashFlow_StartDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementCashFlowEndDate();
                    }, 50);
                }
            });
        }
        
        // get Financial Statement Cash Flow End Date
        function getFinancialStatementCashFlowEndDate() {
            // Input Stock Transfer End Date
            FinancialStatementCashFlowEndDate.dispose();
            FinancialStatementCashFlowEndDate = new wijmo.input.InputDate('#FinancialStatementCashFlow_EndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementCashFlow_EndDate_data').value),
                mask: '99/99/9999',
                min: new Date(document.getElementById('FinancialStatementCashFlow_StartDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementCashFlow_EndDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementCashFlowStartDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Trial Balance Start Date
        function getFinancialStatementTrialBalanceStartDate() {
            // Input Stock Transfer Start Date
            FinancialStatementTrialBalanceStartDate.dispose();
            FinancialStatementTrialBalanceStartDate = new wijmo.input.InputDate('#FinancialStatementTrialBalance_StartDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementTrialBalance_StartDate_data').value),
                mask: '99/99/9999',
                max: new Date(document.getElementById('FinancialStatementTrialBalance_EndDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementTrialBalance_StartDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementTrialBalanceEndDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Trial Balance End Date
        function getFinancialStatementTrialBalanceEndDate() {
            // Input Stock Transfer End Date
            FinancialStatementTrialBalanceEndDate.dispose();
            FinancialStatementTrialBalanceEndDate = new wijmo.input.InputDate('#FinancialStatementTrialBalance_EndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementTrialBalance_EndDate_data').value),
                mask: '99/99/9999',
                min: new Date(document.getElementById('FinancialStatementTrialBalance_StartDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementTrialBalance_EndDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementTrialBalanceStartDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Account Ledger Start Date
        function getFinancialStatementAccountLedgerStartDate() {
            // Input Stock Transfer Start Date
            FinancialStatementAccountLedgerStartDate.dispose();
            FinancialStatementAccountLedgerStartDate = new wijmo.input.InputDate('#FinancialStatementAccountLedger_StartDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementAccountLedger_StartDate_data').value),
                mask: '99/99/9999',
                max: new Date(document.getElementById('FinancialStatementAccountLedger_EndDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementAccountLedger_StartDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementAccountLedgerEndDate();
                    }, 50);
                }
            });
        }
        
        // get Financial Statement Account Ledger End Date
        function getFinancialStatementAccountLedgerEndDate() {
            // Input Stock Transfer End Date
            FinancialStatementAccountLedgerEndDate.dispose();
            FinancialStatementAccountLedgerEndDate = new wijmo.input.InputDate('#FinancialStatementAccountLedger_EndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementAccountLedger_EndDate_data').value),
                mask: '99/99/9999',
                min: new Date(document.getElementById('FinancialStatementAccountLedger_StartDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementAccountLedger_EndDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementAccountLedgerStartDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Receiving Receipt Book Start Date
        function getFinancialReceivingReceiptBookStartDate() {
            // Input Stock Transfer Start Date
            FinancialReceivingReceiptBookStartDate.dispose();
            FinancialReceivingReceiptBookStartDate = new wijmo.input.InputDate('#FinancialReceivingReceiptBook_StartDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialReceivingReceiptBook_StartDate_data').value),
                mask: '99/99/9999',
                max: new Date(document.getElementById('FinancialReceivingReceiptBook_EndDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialReceivingReceiptBook_StartDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialReceivingReceiptBookEndDate();
                    }, 50);
                }
            });
        }
        
        // get Financial Statement Receiving Receipt Book End Date
        function getFinancialReceivingReceiptBookEndDate() {
            // Input Stock Transfer End Date
            FinancialReceivingReceiptBookEndDate.dispose();
            FinancialReceivingReceiptBookEndDate = new wijmo.input.InputDate('#FinancialReceivingReceiptBook_EndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialReceivingReceiptBook_EndDate_data').value),
                mask: '99/99/9999',
                min: new Date(document.getElementById('FinancialReceivingReceiptBook_StartDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialReceivingReceiptBook_EndDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialReceivingReceiptBookStartDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Disbursement Book Start Date
        function getFinancialStatementDisbursementBookStartDate() {
            // Input Stock Transfer Start Date
            FinancialStatementDisbursementBookStartDate.dispose();
            FinancialStatementDisbursementBookStartDate = new wijmo.input.InputDate('#FinancialStatementDisbursementBook_StartDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementDisbursementBook_StartDate_data').value),
                mask: '99/99/9999',
                max: new Date(document.getElementById('FinancialStatementDisbursementBook_EndDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementDisbursementBook_StartDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementDisbursementBookEndDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Disbursement Book End Date
        function getFinancialStatementDisbursementBookEndDate() {
            // Input Stock Transfer End Date
            FinancialStatementDisbursementBookEndDate.dispose();
            FinancialStatementDisbursementBookEndDate = new wijmo.input.InputDate('#FinancialStatementDisbursementBook_EndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementDisbursementBook_EndDate_data').value),
                mask: '99/99/9999',
                min: new Date(document.getElementById('FinancialStatementDisbursementBook_StartDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementDisbursementBook_EndDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementDisbursementBookStartDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Sales Book Start Date
        function getFinancialStatementSalesBookStartDate() {
            // Input Stock Transfer Start Date
            FinancialStatementSalesBookStartDate.dispose();
            FinancialStatementSalesBookStartDate = new wijmo.input.InputDate('#FinancialStatementSalesBook_StartDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementSalesBook_StartDate_data').value),
                mask: '99/99/9999',
                max: new Date(document.getElementById('FinancialStatementSalesBook_EndDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementSalesBook_StartDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementSalesBookEndDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Sales Book End Date
        function getFinancialStatementSalesBookEndDate() {
            // Input Stock Transfer End Date
            FinancialStatementSalesBookEndDate.dispose();
            FinancialStatementSalesBookEndDate = new wijmo.input.InputDate('#FinancialStatementSalesBook_EndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementSalesBook_EndDate_data').value),
                mask: '99/99/9999',
                min: new Date(document.getElementById('FinancialStatementSalesBook_StartDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementSalesBook_EndDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementSalesBookStartDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Collection Book Start Date
        function getFinancialStatementCollectionBookStartDate() {
            // Input Stock Transfer Start Date
            FinancialStatementCollectionBookStartDate.dispose();
            FinancialStatementCollectionBookStartDate = new wijmo.input.InputDate('#FinancialStatementCollectionBook_StartDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementCollectionBook_StartDate_data').value),
                mask: '99/99/9999',
                max: new Date(document.getElementById('FinancialStatementCollectionBook_EndDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementCollectionBook_StartDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementCollectionBookEndDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Collection Book End Date
        function getFinancialStatementCollectionBookEndDate() {
            // Input Stock Transfer End Date
            FinancialStatementCollectionBookEndDate.dispose();
            FinancialStatementCollectionBookEndDate = new wijmo.input.InputDate('#FinancialStatementCollectionBook_EndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementCollectionBook_EndDate_data').value),
                mask: '99/99/9999',
                min: new Date(document.getElementById('FinancialStatementCollectionBook_StartDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementCollectionBook_EndDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementCollectionBookStartDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Stock In Book Start Date
        function getFinancialStatementStockInBookStartDate() {
            // Input Stock Transfer Start Date
            FinancialStatementStockInBookStartDate.dispose();
            FinancialStatementStockInBookStartDate = new wijmo.input.InputDate('#FinancialStatementStockInBook_StartDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementStockInBook_StartDate_data').value),
                mask: '99/99/9999',
                max: new Date(document.getElementById('FinancialStatementStockInBook_EndDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementStockInBook_StartDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementStockInBookEndDate();
                    }, 50);
                }
            });
        }

        // get Financial Statement Stock In Book End Date
        function getFinancialStatementStockInBookEndDate() {
            // Input Stock Transfer End Date
            FinancialStatementStockInBookEndDate.dispose();
            FinancialStatementStockInBookEndDate = new wijmo.input.InputDate('#FinancialStatementStockInBook_EndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(document.getElementById('FinancialStatementStockInBook_EndDate_data').value),
                mask: '99/99/9999',
                min: new Date(document.getElementById('FinancialStatementStockInBook_StartDate_data').value),
                onValueChanged: function () {
                    document.getElementById('FinancialStatementStockInBook_EndDate_data').value = this.value.toLocaleDateString();
                    setTimeout(function () {
                        getFinancialStatementStockInBookStartDate();
                    }, 50);
                }
            });
        }

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            document.getElementById('currentPage').innerHTML = '<a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Main Menu</a> ' + ' > Financial Statements';

            // Financial Statement Balance Sheet Date As Of .. 
            accountsPayableReportDateAsOf = new wijmo.input.InputDate('#FinancialStatementBalanceSheet_DateAsOf', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('FinancialStatementBalanceSheet_DateAsOf_data').value = this.value.toLocaleDateString();
                }
            });

            document.getElementById('FinancialStatementBalanceSheet_DateAsOf_data').value = new Date().toLocaleDateString();

            // filter financial Balance Sheet Branch
            $('#filterTabsFinancialStatementBalanceSheet').hide();
            $("#FinancialStatementBalanceSheet_filter").click(function () {
                if ($(this).is(':checked')) {
                    $('#filterTabsFinancialStatementBalanceSheet').show();
                } else {
                    $('#filterTabsFinancialStatementBalanceSheet').hide();
                }
            });

            // filter financial Income Statement Branch
            $('#filterTabsFinancialStatementIncomeStatement').hide();
            $("#FinancialStatementIncomeStatement_filter").click(function () {
                if ($(this).is(':checked')) {
                    $('#filterTabsFinancialStatementIncomeStatement').show();
                } else {
                    $('#filterTabsFinancialStatementIncomeStatement').hide();
                }
            });

            // filter financial CashFlow Branch
            $('#filterTabsFinancialStatementCashFlow').hide();
            $("#FinancialStatementCashFlow_filter").click(function () {
                if ($(this).is(':checked')) {
                    $('#filterTabsFinancialStatementCashFlow').show();
                } else {
                    $('#filterTabsFinancialStatementCashFlow').hide();
                }
            });

            // filter financial trial balance
            $('#filterTabsFinancialStatementTrialBalance').hide();
            $("#FinancialStatementTrialBalance_filter").click(function () {
                if ($(this).is(':checked')) {
                    $('#filterTabsFinancialStatementTrialBalance').show();
                } else {
                    $('#filterTabsFinancialStatementTrialBalance').hide();
                }
            });

            // filter financial Account Ledger
            $('#filterTabsFinancialStatementAccountLedger').hide();
            $("#FinancialStatementAccountLedger_filter").click(function () {
                if ($(this).is(':checked')) {
                    $('#filterTabsFinancialStatementAccountLedger').show();
                } else {
                    $('#filterTabsFinancialStatementAccountLedger').hide();
                }
            });

            // filter financial Receiving Receipt Book
            $('#filterTabsFinancialReceivingReceiptBook').hide();
            $("#FinancialReceivingReceiptBook_filter").click(function () {
                if ($(this).is(':checked')) {
                    $('#filterTabsFinancialReceivingReceiptBook').show();
                } else {
                    $('#filterTabsFinancialReceivingReceiptBook').hide();
                }
            });

            // filter financial Statement Disbursement Book
            $('#filterTabsFinancialStatementDisbursementBook').hide();
            $("#FinancialStatementDisbursementBook_filter").click(function () {
                if ($(this).is(':checked')) {
                    $('#filterTabsFinancialStatementDisbursementBook').show();
                } else {
                    $('#filterTabsFinancialStatementDisbursementBook').hide();
                }
            });

            // filter financial Statement Sales Book
            $('#filterTabsFinancialStatementSalesBook').hide();
            $("#FinancialStatementSalesBook_filter").click(function () {
                if ($(this).is(':checked')) {
                    $('#filterTabsFinancialStatementSalesBook').show();
                } else {
                    $('#filterTabsFinancialStatementSalesBook').hide();
                }
            });

            // filter financial Statement Collection Book
            $('#filterTabsFinancialStatementCollectionBook').hide();
            $("#FinancialStatementCollectionBook_filter").click(function () {
                if ($(this).is(':checked')) {
                    $('#filterTabsFinancialStatementCollectionBook').show();
                } else {
                    $('#filterTabsFinancialStatementCollectionBook').hide();
                }
            });

            // filter financial Statement Stock In Book
            $('#filterTabsFinancialStatementStockInBook').hide();
            $("#FinancialStatementStockInBook_filter").click(function () {
                if ($(this).is(':checked')) {
                    $('#filterTabsFinancialStatementStockInBook').show();
                } else {
                    $('#filterTabsFinancialStatementStockInBook').hide();
                }
            });

            

            // Financial Statement Income Statement Dates
            document.getElementById('FinancialStatementIncomeStatement_StartDate_data').value = new Date().toLocaleDateString();
            document.getElementById('FinancialStatementIncomeStatement_EndDate_data').value = new Date().toLocaleDateString();

            FinancialStatementIncomeStatementStartDate = new wijmo.input.InputDate('#FinancialStatementIncomeStatement_StartDate');
            FinancialStatementIncomeStatementEndDate = new wijmo.input.InputDate('#FinancialStatementIncomeStatement_EndDate');

            getFinancialStatementIncomeStatementStartDate();
            getFinancialStatementIncomeStatementEndDate();

            // Financial Statement Cash Flow Dates
            document.getElementById('FinancialStatementCashFlow_StartDate_data').value = new Date().toLocaleDateString();
            document.getElementById('FinancialStatementCashFlow_EndDate_data').value = new Date().toLocaleDateString();

            FinancialStatementCashFlowStartDate = new wijmo.input.InputDate('#FinancialStatementCashFlow_StartDate');
            FinancialStatementCashFlowEndDate = new wijmo.input.InputDate('#FinancialStatementCashFlow_EndDate');

            getFinancialStatementCashFlowStartDate();
            getFinancialStatementCashFlowEndDate();

            // Financial Statement Trial Balance Dates
            document.getElementById('FinancialStatementTrialBalance_StartDate_data').value = new Date().toLocaleDateString();
            document.getElementById('FinancialStatementTrialBalance_EndDate_data').value = new Date().toLocaleDateString();

            FinancialStatementTrialBalanceStartDate = new wijmo.input.InputDate('#FinancialStatementTrialBalance_StartDate');
            FinancialStatementTrialBalanceEndDate = new wijmo.input.InputDate('#FinancialStatementTrialBalance_EndDate');

            getFinancialStatementTrialBalanceStartDate();
            getFinancialStatementTrialBalanceEndDate();

            // Financial Statement Account Ledger Dates
            document.getElementById('FinancialStatementAccountLedger_StartDate_data').value = new Date().toLocaleDateString();
            document.getElementById('FinancialStatementAccountLedger_EndDate_data').value = new Date().toLocaleDateString();

            FinancialStatementAccountLedgerStartDate = new wijmo.input.InputDate('#FinancialStatementAccountLedger_StartDate');
            FinancialStatementAccountLedgerEndDate = new wijmo.input.InputDate('#FinancialStatementAccountLedger_EndDate');

            getFinancialStatementAccountLedgerStartDate();
            getFinancialStatementAccountLedgerEndDate();

            // Financial Statement Receiving Receipt Book
            document.getElementById('FinancialReceivingReceiptBook_StartDate_data').value = new Date().toLocaleDateString();
            document.getElementById('FinancialReceivingReceiptBook_EndDate_data').value = new Date().toLocaleDateString();

            FinancialReceivingReceiptBookStartDate = new wijmo.input.InputDate('#FinancialReceivingReceiptBook_StartDate');
            FinancialReceivingReceiptBookEndDate = new wijmo.input.InputDate('#FinancialReceivingReceiptBook_EndDate');

            getFinancialReceivingReceiptBookEndDate();
            getFinancialReceivingReceiptBookStartDate();

            // Financial Statement Disbursement Book
            document.getElementById('FinancialStatementDisbursementBook_StartDate_data').value = new Date().toLocaleDateString();
            document.getElementById('FinancialStatementDisbursementBook_EndDate_data').value = new Date().toLocaleDateString();

            FinancialStatementDisbursementBookStartDate = new wijmo.input.InputDate('#FinancialStatementDisbursementBook_StartDate');
            FinancialStatementDisbursementBookEndDate = new wijmo.input.InputDate('#FinancialStatementDisbursementBook_EndDate');

            getFinancialStatementDisbursementBookEndDate();
            getFinancialStatementDisbursementBookStartDate();

            // Financial Statement Sales Book
            document.getElementById('FinancialStatementSalesBook_StartDate_data').value = new Date().toLocaleDateString();
            document.getElementById('FinancialStatementSalesBook_EndDate_data').value = new Date().toLocaleDateString();

            FinancialStatementSalesBookStartDate = new wijmo.input.InputDate('#FinancialStatementSalesBook_StartDate');
            FinancialStatementSalesBookEndDate = new wijmo.input.InputDate('#FinancialStatementSalesBook_EndDate');

            getFinancialStatementSalesBookStartDate();
            getFinancialStatementSalesBookEndDate();

            // Financial Statement Collection Book
            document.getElementById('FinancialStatementCollectionBook_StartDate_data').value = new Date().toLocaleDateString();
            document.getElementById('FinancialStatementCollectionBook_EndDate_data').value = new Date().toLocaleDateString();

            FinancialStatementCollectionBookStartDate = new wijmo.input.InputDate('#FinancialStatementCollectionBook_StartDate');
            FinancialStatementCollectionBookEndDate = new wijmo.input.InputDate('#FinancialStatementCollectionBook_EndDate');

            getFinancialStatementCollectionBookStartDate();
            getFinancialStatementCollectionBookEndDate();

            // Financial Statement Stock In Book
            document.getElementById('FinancialStatementStockInBook_StartDate_data').value = new Date().toLocaleDateString();
            document.getElementById('FinancialStatementStockInBook_EndDate_data').value = new Date().toLocaleDateString();

            FinancialStatementStockInBookStartDate = new wijmo.input.InputDate('#FinancialStatementStockInBook_StartDate');
            FinancialStatementStockInBookEndDate = new wijmo.input.InputDate('#FinancialStatementStockInBook_EndDate');

            getFinancialStatementStockInBookStartDate();
            getFinancialStatementStockInBookEndDate();
            

            // wijmo cbo financial Statement Balance Sheet
            cboFinancialStatementBalanceSheetCompany = new wijmo.input.ComboBox('#FinancialStatementBalanceSheet_Company');
            cboFinancialStatementBalanceSheetBranches = new wijmo.input.ComboBox('#FinancialStatementBalanceSheet_Branch');

            // Wijmo CBO combobox Financial Statement Income Statement
            cboFinancialStatementIncomeStatementCompany = new wijmo.input.ComboBox('#FinancialStatementIncomeStatement_Company');
            cboFinancialStatementIncomeStatementBranch = new wijmo.input.ComboBox('#FinancialStatementIncomeStatement_Branch');

            // Wijmo CBO combobox Financial Statement CashFlow
            cboFinancialStatementCashFlowCompany = new wijmo.input.ComboBox('#FinancialStatementCashFlow_Company');
            cboFinancialStatementCashFlowBranch = new wijmo.input.ComboBox('#FinancialStatementCashFlow_Branch');

            // Wijmo CBO combobox Financial Statement Trial Balance
            cboFinancialStatementTrialBalanceCompany = new wijmo.input.ComboBox('#FinancialStatementTrialBalance_Company');
            cboFinancialStatementTrialBalanceBranch = new wijmo.input.ComboBox('#FinancialStatementTrialBalance_Branch');
            
            // Wijmo CBO combobox Financial Statement Account Ledger
            cboFinancialStatementAccountLedgerCompany = new wijmo.input.ComboBox('#FinancialStatementAccountLedger_Company');
            cboFinancialStatementAccountLedgerAccounts = new wijmo.input.ComboBox('#FinancialStatementAccountLedger_Account');
            cboFinancialStatementAccountLedgerBranch = new wijmo.input.ComboBox('#FinancialStatementAccountLedger_Branch');

            // Wijmo CBO combobox Financial Statement Receiving Receipt book
            cboFinancialReceivingReceiptBookCompany = new wijmo.input.ComboBox('#FinancialReceivingReceiptBook_Company');
            cboFinancialReceivingReceiptBookBranch = new wijmo.input.ComboBox('#FinancialReceivingReceiptBook_Branch');

            // Wijmo CBO combobox Financial Statement Disbursement book
            cboFinancialStatementDisbursementBookCompany = new wijmo.input.ComboBox('#FinancialStatementDisbursementBook_Company');
            cboFinancialStatementDisbursementBookBranch = new wijmo.input.ComboBox('#FinancialStatementDisbursementBook_Branch');

            // Wijmo CBO combobox Financial Statement Sales book
            cboFinancialStatementSalesBookCompany = new wijmo.input.ComboBox('#FinancialStatementSalesBook_Company');
            cboFinancialStatementSalesBookBranch = new wijmo.input.ComboBox('#FinancialStatementSalesBook_Branch');

            // Wijmo CBO combobox Financial Statement Collection book
            FinancialStatementCollectionBookCompany = new wijmo.input.ComboBox('#FinancialStatementCollectionBook_Company');
            FinancialStatementCollectionBookBranch = new wijmo.input.ComboBox('#FinancialStatementCollectionBook_Branch');

            // Wijmo CBO combobox Financial Statement Stock In book
            FinancialStatementStockInBookCompany = new wijmo.input.ComboBox('#FinancialStatementStockInBook_Company');
            FinancialStatementStockInBookBranch = new wijmo.input.ComboBox('#FinancialStatementStockInBook_Branch');

            // Call Function
            getCompanies();
            getBranchesForFinancialStatementBalanceSheet();
            getBranchesForFinancialStatementIncomeStatement();
            getBranchesForFinancialStatementCashFlow();
            getBranchesForFinancialStatementTrialBalance();
            getBranchesForFinancialStatementAccountLedger();
            getFinaancialStatementAccountLedgerAccountAccounts();
            getBranchesForFinancialStatementReceivingReceiptBook();
            getBranchesForFinancialStatementDisbursmenetBook();
            getBranchesForFinancialStatementSalesBook();
            getBranchesForFinancialStatementCollectionBook();
            getBranchesForFinancialStatementStockInBook();
        });
    </script>
</body>
</html>