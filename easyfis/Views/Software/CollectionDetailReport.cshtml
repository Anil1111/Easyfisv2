<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Collection Detail Report</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Collection Detail Report
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 49.5%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control " id="InputFilter" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                        <div class="comboBox-wide" id="cboARCollectionDetailReportShowNumberOfRows"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24.5%" align="right">
                                    <button onclick="btnCollectionDetailReportCSVOnclick()" id="btnCollectionDetailReportCSV" class="btn btn-success"><i class="fa fa-file-excel-o" aria-hidden="true"></i> CSV</button>
                                    <button onclick="btnCollectionDetailReportPrintPDFOnclick()" id="btnCollectionDetailReportPrintPDF" class="btn btn-primary"><i class="fa fa-print"></i> Print</button>
                                    <a href="/Software/AccountsReceivable" class="btn btn-danger"><i class="fa fa-close"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Start Date</b></span>
                                        <div class="comboBox-wide" id="cboARCollectionDetailReportStartDate"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%" align="right">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>End Date</b></span>
                                        <div class="comboBox-wide" id="cboARCollectionDetailReportEndDate"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Company</b></span>
                                        <div class="comboBox-wide" id="cboARCollectionDetailReportCompany"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Branch</b></span>
                                        <div class="comboBox-wide" id="cboARCollectionDetailReportBranch"></div>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">
                        <div id="collectionDetailReportGrid" class="grid" style="font-size: 13px;"></div>
                    </div>
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6"></div>
                            <div class="col-md-6">
                                <dl class="dl-horizontal dl-custom">
                                    <dt>
                                        <b>Total Amount</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="totalAmount" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var cboARCollectionDetailReportStartDate = new wijmo.input.InputDate('#cboARCollectionDetailReportStartDate');
        var cboARCollectionDetailReportEndDate = new wijmo.input.InputDate('#cboARCollectionDetailReportEndDate');
        var isARCollectionDetailReportStartDateSelected = false;
        var isARCollectionDetailReportEndDateSelected = false;
        var cboARCollectionDetailReportCompany = new wijmo.input.ComboBox('#cboARCollectionDetailReportCompany');
        var cboARCollectionDetailReportBranch = new wijmo.input.ComboBox('#cboARCollectionDetailReportBranch');
        var collectionDetailReportCollections;
        var collectionDetailReportGrid;
        var isARCollectionDetailReportCompanySelected = false;
        var cboARCollectionDetailReportShowNumberOfRows = new wijmo.input.ComboBox('#cboARCollectionDetailReportShowNumberOfRows');
        var btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
        var btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
        var btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
        var btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
        var btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');
        var currentPageIndex = 0;

        // ===================
        // Get Parameter Value
        // ===================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ============
        // Date Filters
        // ============
        function collectionDetailReportDateFilters() {
            NProgress.start();
            cboARCollectionDetailReportStartDate.dispose();
            cboARCollectionDetailReportStartDate = new wijmo.input.InputDate('#cboARCollectionDetailReportStartDate', {
                format: 'MM-dd-yyyy',
                value: new Date(getParam("StartDate")),
                onValueChanged: function () {
                    if (!isARCollectionDetailReportStartDateSelected) {
                        NProgress.start();
                        refreshCollectionDetailReportFlexGrid();
                    } else {
                        isARCollectionDetailReportStartDateSelected = false;
                    }
                }
            });

            cboARCollectionDetailReportEndDate.dispose();
            cboARCollectionDetailReportEndDate = new wijmo.input.InputDate('#cboARCollectionDetailReportEndDate', {
                format: 'MM-dd-yyyy',
                value: new Date(getParam("EndDate")),
                onValueChanged: function () {
                    if (!isARCollectionDetailReportEndDateSelected) {
                        NProgress.start();
                        refreshCollectionDetailReportFlexGrid();
                    } else {
                        isARCollectionDetailReportEndDateSelected = false;
                    }
                }
            });

            createCboCompany();
        }

        // ==============
        // Company Filter
        // ==============
        function createCboCompany() {
            var companyObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/company/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (companyResults) {
                    if (companyResults.length > 0) {
                        for (i = 0; i < companyResults.length; i++) {
                            companyObservableArray.push({
                                Id: companyResults[i]["Id"],
                                Company: companyResults[i]["Company"],
                                Address: companyResults[i]["Address"],
                                ContactNumber: companyResults[i]["ContactNumber"],
                                TaxNumber: companyResults[i]["TaxNumber"],
                            });
                        }
                    }

                    var disabled = true;
                    if (companyResults.length > 0) {
                        disabled = false;
                    } else {
                        $("#btnCollectionDetailReportCSV").prop("disabled", true);
                        $("#btnCollectionDetailReportPrintPDF").prop("disabled", true);
                    }

                    cboARCollectionDetailReportCompany.dispose();
                    cboARCollectionDetailReportCompany = new wijmo.input.ComboBox('#cboARCollectionDetailReportCompany', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: companyObservableArray,
                        displayMemberPath: "Company",
                        selectedValuePath: "Id",
                        selectedValue: getParam("CompanyId"),
                        onSelectedIndexChanged: function () {
                            NProgress.start();
                            $("#btnCollectionDetailReportCSV").prop("disabled", false);
                            $("#btnCollectionDetailReportPrintPDF").prop("disabled", false);
                            isARCollectionDetailReportCompanySelected = true;
                            createCboBranch();
                        }
                    });

                    createCboBranch();
                }
            });
        }

        // =============
        // Branch Filter
        // =============
        function createCboBranch() {
            var branchObservableArray = new wijmo.collections.ObservableArray();
            if (cboARCollectionDetailReportCompany.selectedValue != null) {
                $.ajax({
                    url: '/api/branch/byCompanyId/list/locked/' + cboARCollectionDetailReportCompany.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (branchResults) {
                        if (branchResults.length > 0) {
                            for (i = 0; i < branchResults.length; i++) {
                                branchObservableArray.push({
                                    Id: branchResults[i]["Id"],
                                    CompanyId: branchResults[i]["CompanyId"],
                                    Branch: branchResults[i]["Branch"],
                                    Address: branchResults[i]["Address"],
                                    ContactNumber: branchResults[i]["ContactNumber"],
                                    TaxNumber: branchResults[i]["TaxNumber"]
                                });
                            }
                        }

                        var disabled = true;
                        if (branchResults.length > 0) {
                            disabled = false;
                        } else {
                            $("#btnCollectionDetailReportCSV").prop("disabled", true);
                            $("#btnCollectionDetailReportPrintPDF").prop("disabled", true);
                        }

                        cboARCollectionDetailReportBranch.dispose();
                        cboARCollectionDetailReportBranch = new wijmo.input.ComboBox('#cboARCollectionDetailReportBranch', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: branchObservableArray,
                            displayMemberPath: "Branch",
                            selectedValuePath: "Id",
                            selectedValue: getParam("BranchId"),
                            onSelectedIndexChanged: function () {
                                NProgress.start();
                                refreshCollectionDetailReportFlexGrid();
                            }
                        });

                        createCboShowRows();
                    }
                });
            }
        }

        // ===============
        // Show Rows Table
        // ===============
        function createCboShowRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboARCollectionDetailReportShowNumberOfRows.dispose();
            cboARCollectionDetailReportShowNumberOfRows = new wijmo.input.ComboBox('#cboARCollectionDetailReportShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboARCollectionDetailReportShowNumberOfRows.selectedValue;
                        collectionDetailReportCollections.pageSize = parseInt(numberOfRows);
                        collectionDetailReportCollections.refresh();
                        collectionDetailReportGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });

            if (!isARCollectionDetailReportCompanySelected) {
                createCollectionDetailReportFlexGrid();
            } else {
                refreshCollectionDetailReportFlexGrid();
            }
        }

        // ===============================
        // Get Collection Order Detail Data
        // ===============================
        function getCollectionDetailReport() {
            var collectionDetailReports = new wijmo.collections.ObservableArray;
            if (cboARCollectionDetailReportCompany.selectedValue != null) {
                if (cboARCollectionDetailReportBranch.selectedValue != null) {
                    var startDate = cboARCollectionDetailReportStartDate.value.toLocaleDateString().replace(/\//g, '-');
                    var endDate = cboARCollectionDetailReportEndDate.value.toLocaleDateString().replace(/\//g, '-');
                    var companyId = cboARCollectionDetailReportCompany.selectedValue;
                    var branchId = cboARCollectionDetailReportBranch.selectedValue;

                    $.ajax({
                        url: '/api/collectionDetailReport/list/' + startDate + '/' + endDate + '/' + + companyId + '/' + branchId,
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        success: function (collectionDetailReportResult) {
                            var totalAmount = 0;
                            if (collectionDetailReportResult.length > 0) {
                                for (i = 0; i < collectionDetailReportResult.length; i++) {
                                    var docLink = "/Software/CollectionDetail?id=" + collectionDetailReportResult[i]["ORId"];

                                    var ORDateResult = new Date(collectionDetailReportResult[i]["ORDate"])
                                    var ORDate = ('0' + (ORDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + ORDateResult.getDate()).slice(-2) + '-' + ORDateResult.getFullYear();

                                    var CheckDateResult = new Date(collectionDetailReportResult[i]["CheckDate"])
                                    var CheckDate = ('0' + (CheckDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + CheckDateResult.getDate()).slice(-2) + '-' + CheckDateResult.getFullYear();

                                    collectionDetailReports.push({
                                        Id: collectionDetailReportResult[i]["Id"],
                                        ORId: collectionDetailReportResult[i]["ORId"],
                                        Branch: collectionDetailReportResult[i]["Branch"],
                                        OR: collectionDetailReportResult[i]["OR"],
                                        ORForCSV: "OR-" + collectionDetailReportResult[i]["OR"],
                                        ORButton: "<a href='" + docLink + "' class='btn btn-primary btn-xs btn-block' style='font-size: 10.5px;'>" + collectionDetailReportResult[i]["OR"],
                                        ORDate: ORDate,
                                        SI: collectionDetailReportResult[i]["SI"] != null ? collectionDetailReportResult[i]["SI"]  : "",
                                        SIForCSV: "SI-" + collectionDetailReportResult[i]["SI"],
                                        Amount: collectionDetailReportResult[i]["Amount"],
                                        AmountDisplay: parseFloat(collectionDetailReportResult[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        DepositoryBank: collectionDetailReportResult[i]["DepositoryBank"],
                                        PayType: collectionDetailReportResult[i]["PayType"],
                                        Customer: collectionDetailReportResult[i]["Customer"],
                                        CheckNumber: collectionDetailReportResult[i]["CheckNumber"],
                                        CheckDate: CheckDate,
                                        CheckBank: collectionDetailReportResult[i]["CheckBank"],
                                        Particulars: collectionDetailReportResult[i]["Particulars"],
                                        Remarks: collectionDetailReportResult[i]["Remarks"],
                                        SoldBy: collectionDetailReportResult[i]["SoldBy"],
                                    });

                                    totalAmount += collectionDetailReportResult[i]["Amount"];
                                }
                            }

                            document.getElementById("totalAmount").value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            NProgress.done();
                        }
                    });
                } else {
                    document.getElementById("totalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    NProgress.done();
                }
            } else {
                document.getElementById("totalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                NProgress.done();
            }

            return collectionDetailReports;
        }

        // =========================
        // Update Navigation Buttons
        // =========================
        function updateNavigateButtonsItems() {
            if (collectionDetailReportCollections.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            if (collectionDetailReportCollections.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (collectionDetailReportCollections.pageIndex === (collectionDetailReportCollections.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (collectionDetailReportCollections.pageIndex + 1) + ' / ' + collectionDetailReportCollections.pageCount;
        }

        // =================
        // Refresh Flex Grid
        // =================
        function refreshCollectionDetailReportFlexGrid() {
            collectionDetailReportCollections = new wijmo.collections.CollectionView(getCollectionDetailReport());
            collectionDetailReportCollections.canFilter = true;
            collectionDetailReportCollections.pageSize = cboARCollectionDetailReportShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                collectionDetailReportCollections.refresh();

                if (collectionDetailReportCollections.items.length > 0) {
                    var totalAmount = 0;
                    for (var i = 0; i < collectionDetailReportCollections.items.length; i++) {
                        totalAmount += collectionDetailReportCollections.items[i].Amount;
                    }

                    document.getElementById("totalAmount").value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                } else {
                    document.getElementById("totalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }
            });

            collectionDetailReportCollections.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.OR.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Customer.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.PayType.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.SI.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.DepositoryBank.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.CheckNumber.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.CheckBank.toLowerCase().indexOf(filterText) > -1);
            }

            collectionDetailReportCollections.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItems();
            });

            collectionDetailReportGrid.itemsSource = collectionDetailReportCollections;
            collectionDetailReportGrid.trackChanges = true;
        }

        // =========
        // Flex Grid
        // =========
        function createCollectionDetailReportFlexGrid() {
            collectionDetailReportCollections = new wijmo.collections.CollectionView(getCollectionDetailReport());
            collectionDetailReportCollections.canFilter = true;
            collectionDetailReportCollections.pageSize = cboARCollectionDetailReportShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                collectionDetailReportCollections.refresh();

                if (collectionDetailReportCollections.items.length > 0) {
                    var totalAmount = 0;
                    for (var i = 0; i < collectionDetailReportCollections.items.length; i++) {
                        totalAmount += collectionDetailReportCollections.items[i].Amount;
                    }

                    document.getElementById("totalAmount").value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                } else {
                    document.getElementById("totalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }
            });

            collectionDetailReportCollections.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.OR.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Customer.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.PayType.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.SI.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.DepositoryBank.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.CheckNumber.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.CheckBank.toLowerCase().indexOf(filterText) > -1);
            }

            collectionDetailReportCollections.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItems();
            });

            collectionDetailReportGrid = new wijmo.grid.FlexGrid('#collectionDetailReportGrid');
            collectionDetailReportGrid.initialize({
                columns: [
                    {
                        "header": "OR Number",
                        "binding": "ORButton",
                        "isContentHtml": true,
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "OR Date",
                        "binding": "ORDate",
                        "allowSorting": true,
                        "width": "0.9*"
                    },
                    {
                        "header": "Customer",
                        "binding": "Customer",
                        "allowSorting": true,
                        "width": "1.3*"
                    },
                    {
                        "header": "Pay Type",
                        "binding": "PayType",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "SI Number",
                        "binding": "SI",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Depository Bank",
                        "binding": "DepositoryBank",
                        "allowSorting": true,
                        "width": "1.2*"
                    },
                    {
                        "header": "Check Number",
                        "binding": "CheckNumber",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Check Date",
                        "binding": "CheckDate",
                        "allowSorting": true,
                        "width": "0.9*"
                    },
                    {
                        "header": "Check Bank",
                        "binding": "CheckBank",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: collectionDetailReportCollections,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            collectionDetailReportGrid.trackChanges = true;

            updateNavigateButtonsItems();

            btnFirstPageGrid.addEventListener('click', function () {
                collectionDetailReportCollections.moveToFirstPage();
                currentPageIndex = collectionDetailReportCollections.pageIndex + 1;
                updateNavigateButtonsItems();
            });

            btnPreviousPageGrid.addEventListener('click', function () {
                collectionDetailReportCollections.moveToPreviousPage();
                currentPageIndex = collectionDetailReportCollections.pageIndex + 1;
                updateNavigateButtonsItems();
            });

            btnNextPageGrid.addEventListener('click', function () {
                collectionDetailReportCollections.moveToNextPage();
                currentPageIndex = collectionDetailReportCollections.pageIndex + 1;
                updateNavigateButtonsItems();
            });

            btnLastPageGrid.addEventListener('click', function () {
                collectionDetailReportCollections.moveToLastPage();
                currentPageIndex = collectionDetailReportCollections.pageIndex + 1;
                updateNavigateButtonsItems();
            });
        }

        // ============
        // Download CSV
        // ============
        function btnCollectionDetailReportCSVOnclick() {
            var CSV = '';
            var collectionDetailReport = [];
            var fileName = 'CollectionDetailReport.CSV';

            collectionDetailReportCollections.moveToFirstPage();

            for (var p = 1; p <= collectionDetailReportCollections.pageCount; p++) {
                for (i = 0; i < collectionDetailReportCollections.items.length; i++) {
                    var IsClose = collectionDetailReportCollections.items[i].IsClose;
                    var isPOClose = "Not Closed";
                    if (IsClose) {
                        isPOClose = "Closed"
                    }

                    collectionDetailReport.push({
                        Branch: collectionDetailReportCollections.items[i].Branch,
                        ORNumber: collectionDetailReportCollections.items[i].ORForCSV,
                        ORDate: collectionDetailReportCollections.items[i].ORDate,
                        Customer: collectionDetailReportCollections.items[i].Customer,
                        PayType: collectionDetailReportCollections.items[i].PayType,
                        SINumber: collectionDetailReportCollections.items[i].SIForCSV,
                        DepositoryBank: collectionDetailReportCollections.items[i].DepositoryBank,
                        CheckNumber: collectionDetailReportCollections.items[i].CheckNumber,
                        CheckDate: collectionDetailReportCollections.items[i].CheckDate,
                        CheckBank: collectionDetailReportCollections.items[i].CheckBank,
                        Particulars: collectionDetailReportCollections.items[i].Particulars,
                        Amount: collectionDetailReportCollections.items[i].Amount
                    });
                }

                collectionDetailReportCollections.moveToNextPage();
                if (p == collectionDetailReportCollections.pageCount) {
                    collectionDetailReportCollections.moveToPage(currentPageIndex - 1);
                }
            }

            var Headers = [];
            Headers.push({
                Branch: "Branch",
                ORNumber: "OR Number",
                ORDate: "OR Date",
                Customer: "Customer",
                PayType: "Pay Type",
                SINumber: "SI Number",
                DepositoryBank: "Depository Bank",
                CheckNumber: "Check Number",
                CheckDate: "Check Date",
                CheckBank: "Check Bank",
                Particulars: "Particulars",
                Amount: "Amount"
            });

            var header = '';
            for (var b in Headers[0]) {
                header += '"' + Headers[0][b] + '",';
            }

            CSV = header + '\r\n';
            for (var i = 0; i < collectionDetailReport.length; i++) {
                var row = '';
                for (var a in collectionDetailReport[i]) {
                    row += '"' + collectionDetailReport[i][a] + '",';
                }

                row.slice(0, row.length - 1);
                CSV += row + '\r\n';
            }

            if (CSV == '') {
                toastr.error("No data.");
            } else {
                var link = document.createElement("a");
                if (link.download !== undefined) {
                    var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", fileName);
                    link.style = "visibility:hidden";
                }

                if (navigator.msSaveBlob) {
                    link.addEventListener("click", function (event) {
                        var blob = new Blob([CSV], {
                            "type": "text/csv;charset=utf-8;"
                        });
                        navigator.msSaveBlob(blob, fileName);
                    }, false);
                }

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                toastr.success("Dowload successful.");
            }
        }

        // =====================
        // Preview and Print PDF
        // =====================
        function btnCollectionDetailReportPrintPDFOnclick() {
            if (cboARCollectionDetailReportCompany.selectedValue != null) {
                if (cboARCollectionDetailReportBranch.selectedValue != null) {
                    var startDate = cboARCollectionDetailReportStartDate.value.toLocaleDateString().replace(/\//g, '-');
                    var endDate = cboARCollectionDetailReportEndDate.value.toLocaleDateString().replace(/\//g, '-');
                    var companyId = cboARCollectionDetailReportCompany.selectedValue;
                    var branchId = cboARCollectionDetailReportBranch.selectedValue;

                    window.location.href = '/RepCollectionDetailReport/CollectionDetailReport?StartDate=' + startDate + '&EndDate=' + endDate + '&CompanyId=' + companyId + '&BranchId=' + branchId;
                } else {
                    toastr.error("Lacking Information");
                }
            } else {
                toastr.error("Lacking Information");
            }
        }

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            collectionDetailReportDateFilters();
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>