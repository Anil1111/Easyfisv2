@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>User Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        User Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-12" align="right">
                                @{
                                    if (canLock)
                                    {
                                        <button class="btn btn-primary" id="btnUserDetailLock" onclick="btnUserDetailLock_OnClick()"><i class="fa fa-lock"></i> Lock</button>
                                    }
                                    if (canUnlock)
                                    {
                                        <button class="btn btn-primary" id="btnUserDetailUnLock" onclick="btnUserDetailUnLock_OnClick()"><i class="fa fa-unlock"></i> Unlock</button>
                                    }
                                }
                                <button class="btn btn-danger" id="btnUserDetailClose" onclick="btnUserDetailClose_OnClick()"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Username</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control " id="userDetail_Username" placeholder="Username" disabled />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Fullname</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control  requiredUser" id="userDetail_Fullname" placeholder="Fullname" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">

                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#UserForm" id="userForm">Forms</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#UserDefaults" id="userDefaults">Defaults</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#UserBranches" id="userBranches">Branches</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="UserForm" class="tab-pane fade in active">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-lg-12" align="right">
                                        @{
                                            if (canAdd)
                                            {
                                                <button class="btn btn-primary " id="btnCopyUserRights" onclick="cmdCopyRights_OnClick()"><i class="fa fa-copy"></i> Copy rights</button>
                                                <button class="btn btn-primary " id="btnAddUserForm" onclick="cmdAddUserForm_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div id="userDetailUserFormGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                    </div>
                    <div id="UserDefaults" class="tab-pane fade in">
                        <div class="panel panel-default">
                            <div class="panel-body">
                                <form class="form-horizontal" role="form">
                                    <div class="row">
                                        <div class="col-md-8">
                                            <div class="form-group">
                                                <label class="control-label col-sm-6">Company</label>
                                                <div class="col-sm-6">
                                                    <div class="comboBox-wide" id="defaultCompany"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-6">Branch</label>
                                                <div class="col-sm-6">
                                                    <div class="comboBox-wide" id="defaultBranch"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-6">Income Account</label>
                                                <div class="col-sm-6">
                                                    <div class="comboBox-wide" id="defaultIncomeAccount"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-6">Supplier Advances Account</label>
                                                <div class="col-sm-6">
                                                    <div class="comboBox-wide" id="defaultSupplierAdvancesAccount"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-6">Customer Advances Account</label>
                                                <div class="col-sm-6">
                                                    <div class="comboBox-wide" id="defaultCustomerAdvancesAccount"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-6">Official Receipt Name</label>
                                                <div class="col-sm-6">
                                                    <input type="text" class="form-control " id="defaultOfficialReceiptName" />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-6">Inventory Type</label>
                                                <div class="col-sm-6">
                                                    <div id="cboInventoryType"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-6">Sales Invoice Discount</label>
                                                <div class="col-sm-6">
                                                    <div id="cboDiscounts"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-6">Sales Invoice Name</label>
                                                <div class="col-sm-6">
                                                    <input type="text" class="form-control " id="defaultSalesInvoiceName" />
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4"></div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div id="UserBranches" class="tab-pane fade in">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-lg-12" align="right">
                                        <button class="btn btn-primary" id="btnAddBranches" onclick="btnAddBranches()"><i class="fa fa-plus"></i> Add</button>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div id="userDefaultBranchesFlexGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!-- User Form Edit Detail -->
    <div class="modal fade" id="userFormEdit" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">User Form</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingForms"></span>
                    </center>
                    <div id="formDetail">
                        <dl class="dl-horizontal">
                            <dt>Form</dt>
                            <dd><div class="comboBox-wide" id="userForm_FormName"></div></dd>
                            <dt>Add</dt>
                            <dd><input type="checkbox" id="userForm_CanAdd" /></dd>
                            <dt>Edit</dt>
                            <dd><input type="checkbox" id="userForm_CanEdit" /></dd>
                            <dt>Delete</dt>
                            <dd><input type="checkbox" id="userForm_CanDelete" /></dd>
                            <dt>Lock</dt>
                            <dd><input type="checkbox" id="userForm_CanLock" /></dd>
                            <dt>Unlock</dt>
                            <dd><input type="checkbox" id="userForm_CanUnlock" /></dd>
                            <dt>Print</dt>
                            <dd><input type="checkbox" id="userForm_CanPrint" /></dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdSaveUserFormButton" class="btn btn-primary" onclick="cmdUserFormSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdUserFormDetailCloseButton" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Copy Rights Modal Detail -->
    <div class="modal fade" id="copyRightsModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Copy rights</h4>
                </div>
                <div class="modal-body">
                    <dl class="dl-horizontal">
                        <dt>Copy the rights of </dt>
                        <dd><input type="text" class="form-control" id="usernameOrFullName" placeholder="Username" /></dd>
                    </dl>
                </div>
                <div class="modal-footer">
                    <button id="btnCopyUserRightsIdModal" class="btn btn-primary" onclick="btnCopyUserRights_OnClick()"><i class="fa fa-check"></i> Ok</button>
                    <button id="btnCopyUserRightsIdModalClose" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- User Form Delete Modal Confirmation -->
    <div class="modal fade" id="deleteUserFormConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this form?
                </div>
                <div class="modal-footer">
                    <button id="cmdConfirmDeleteUserForm" class="btn btn-danger" onclick="cmdUserFormConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteUserFormCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- User Branches Modal -->
    <div class="modal fade" id="userDefaultBranchesModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">User Branches</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingUserDefaultBranches"></span>
                    </center>
                    <div id="userDefaultBranchesDetail">
                        <dl class="dl-horizontal">
                            <dt>Company</dt>
                            <dd><div class="comboBox-wide" id="cboUserDefaultCompanies"></div></dd>
                            <dt>Branch</dt>
                            <dd><div class="comboBox-wide" id="cboUserDefaultBranches"></div></dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnSaveUserDefaultBranches" class="btn btn-primary" onclick="btnSaveUserDefaultBranchesOnclick()"><i class="fa fa-save"></i> Save</button>
                    <button id="btnCloseModalUserDefaultBranches" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- User Branches Delete Modal -->
    <div class="modal fade" id="userDefaultBranchesDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this user branch?
                </div>
                <div class="modal-footer">
                    <button id="btnDeleteUserDefaultBranches" class="btn btn-danger" onclick="btnDeleteUserDefaultBranchesOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="btnCloseDeleteModalUserDefaultBranches" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var userId = getParam('id');
        var IsLocked = false;
        var cboForForm = new wijmo.input.ComboBox('#userForm_FormName');
        var userFormId = 0;
        var cboCompany = new wijmo.input.ComboBox('#defaultCompany');
        var cboBranch = new wijmo.input.ComboBox('#defaultBranch');
        var cboIncomeAccount = new wijmo.input.ComboBox('#defaultIncomeAccount');
        var cboSupplierAvancesAccount = new wijmo.input.ComboBox('#defaultSupplierAdvancesAccount');
        var cboCustomerAdvancesAccount = new wijmo.input.ComboBox('#defaultCustomerAdvancesAccount');
        var cboInventoryType = new wijmo.input.ComboBox('#cboInventoryType');
        var cboDiscounts = new wijmo.input.ComboBox('#cboDiscounts');
        var userForms;
        var userFormGrid;
        var isCompanyChanged = false;
        var branchSelectedValue = 0;
        var userDefaultBranchesCollectionView;
        var userDefaultBranchesFlexGrid;
        var userBranchId = 0;
        var cboUserDefaultCompanies = new wijmo.input.ComboBox('#cboUserDefaultCompanies');
        var cboUserDefaultBranches = new wijmo.input.ComboBox('#cboUserDefaultBranches');

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // user defaults
        // =============
        function getCompany() {
            var companies = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/user/dropdown/list/company',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            companies.push({
                                Id: results[i]["Id"],
                                Company: results[i]["Company"]
                            });
                        }
                    }

                    cboCompany.dispose();
                    cboCompany = new wijmo.input.ComboBox('#defaultCompany', {
                        isEditable: false,
                        placeholder: "Select Company",
                        itemsSource: companies,
                        displayMemberPath: "Company",
                        selectedValuePath: "Id",
                        onSelectedIndexChanged: function () {
                            isCompanyChanged = true;
                            getBranch();
                        }
                    });

                    getBranch();
                }
            });
        }

        function getBranch() {
            var branches = new wijmo.collections.ObservableArray;
            if (cboCompany.selectedValue != null) {
                $.ajax({
                    url: '/api/user/dropdown/list/branch/' + cboCompany.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                branches.push({
                                    Id: results[i]["Id"],
                                    Branch: results[i]["Branch"]
                                });
                            }
                        }

                        var disabled = false;
                        if (IsLocked) {
                            disabled = true;
                        } else {
                            if (results.length <= 0) {
                                disabled = true;
                            }
                        }

                        cboBranch.dispose();
                        cboBranch = new wijmo.input.ComboBox('#defaultBranch', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: branches,
                            displayMemberPath: "Branch",
                            selectedValuePath: "Id",
                            selectedValue: branchSelectedValue
                        });

                        if (!isCompanyChanged) {
                            getAccount();
                        }
                    }
                });
            }
        }

        function getAccount() {
            var accounts = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/user/dropdown/list/account',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accounts.push({
                                Id: results[i]["Id"],
                                AccountCode: results[i]["AccountCode"],
                                Account: results[i]["Account"]
                            });
                        }
                    }

                    cboIncomeAccount.dispose();
                    cboIncomeAccount = new wijmo.input.ComboBox('#defaultIncomeAccount', {
                        isEditable: false,
                        placeholder: "Account",
                        itemsSource: accounts,
                        displayMemberPath: "Account",
                        selectedValuePath: "Id"
                    });

                    cboSupplierAvancesAccount.dispose();
                    cboSupplierAvancesAccount = new wijmo.input.ComboBox('#defaultSupplierAdvancesAccount', {
                        isEditable: false,
                        placeholder: "Account",
                        itemsSource: accounts,
                        displayMemberPath: "Account",
                        selectedValuePath: "Id"
                    });

                    cboCustomerAdvancesAccount.dispose();
                    cboCustomerAdvancesAccount = new wijmo.input.ComboBox('#defaultCustomerAdvancesAccount', {
                        isEditable: false,
                        placeholder: "Account",
                        itemsSource: accounts,
                        displayMemberPath: "Account",
                        selectedValuePath: "Id"
                    });

                    createCboInventoryType();
                }
            });
        }

        function createCboInventoryType() {
            var inventoryTypesObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/user/dropdown/list/inventoryType',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    var isInventoryDisabled = false;
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            isInventoryDisabled = results[i]["IsDisabled"];

                            inventoryTypesObservableArray.push({
                                InventoryType: results[i]["InventoryType"],
                                IsDisabled: results[i]["IsDisabled"]
                            });
                        }
                    }

                    var disabled = false;
                    if (IsLocked) {
                        disabled = true;
                    } else {
                        if (isInventoryDisabled) {
                            disabled = true;
                        }
                    }

                    cboInventoryType.dispose();
                    cboInventoryType = new wijmo.input.ComboBox('#cboInventoryType', {
                        disabled: disabled,
                        itemsSource: inventoryTypesObservableArray,
                        displayMemberPath: "InventoryType",
                        selectedValuePath: "InventoryType",
                        placeholder: "Select Inventory Type"
                    });

                    getDiscount();
                }
            });
        }

        function getDiscount() {
            var discountsObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/user/dropdown/list/discount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            discountsObservableArray.push({
                                Id: results[i]["Id"],
                                Discount: results[i]["Discount"]
                            });
                        }

                        cboDiscounts.dispose();
                        cboDiscounts = new wijmo.input.ComboBox('#cboDiscounts', {
                            isEditable: false,
                            placeholder: "Select Discount",
                            itemsSource: discountsObservableArray,
                            displayMemberPath: "Discount",
                            selectedValuePath: "Id"
                        });
                    }

                    getUserByUserId();
                }
            });
        }

        // ==============
        // get User By Id
        // ==============
        function getUserByUserId() {
            NProgress.start();
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/user/detail/' + userId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (userResults) {
                        if (userResults != null) {
                            document.getElementById("userDetail_Username").value = userResults.UserName;
                            document.getElementById("userDetail_Fullname").value = userResults.FullName;
                            cboCompany.selectedValue = userResults.CompanyId;
                            cboBranch.selectedValue = userResults.BranchId;
                            branchSelectedValue = userResults.BranchId;
                            cboIncomeAccount.selectedValue = userResults.IncomeAccountId;
                            cboSupplierAvancesAccount.selectedValue = userResults.SupplierAdvancesAccountId;
                            cboCustomerAdvancesAccount.selectedValue = userResults.CustomerAdvancesAccountId;
                            cboInventoryType.selectedValue = userResults.InventoryType;
                            cboDiscounts.selectedValue = userResults.DefaultSalesInvoiceDiscountId;
                            document.getElementById("defaultOfficialReceiptName").value = userResults.OfficialReceiptName;
                            document.getElementById("defaultSalesInvoiceName").value = userResults.SalesInvoiceName;

                            if (userResults.IsLocked) {
                                document.getElementById("userDetail_Fullname").disabled = true;
                                cboCompany.disabled = true;
                                cboBranch.disabled = true;
                                cboIncomeAccount.disabled = true;
                                cboSupplierAvancesAccount.disabled = true;
                                cboCustomerAdvancesAccount.disabled = true;
                                cboInventoryType.disabled = true;
                                cboDiscounts.disabled = true;
                                document.getElementById("defaultOfficialReceiptName").disabled = true;
                                document.getElementById("defaultSalesInvoiceName").disabled = true;

                                $("#btnUserDetailLock").prop("disabled", true);
                                $("#btnAddUserForm").prop("disabled", true);
                                $("#btnCopyUserRights").prop("disabled", true);
                                $("#btnAddBranches").prop("disabled", true);

                                IsLocked = true;
                            } else {
                                $("#btnUserDetailUnLock").prop("disabled", true);

                                var canAdd = "@ViewData["CanAdd"]";
                                if (canAdd == "False") {
                                    $("#btnAddUserForm").prop("disabled", true);
                                    $("#btnCopyUserRights").prop("disabled", true);
                                    $("#btnAddBranches").prop("disabled", true);
                                }
                            }

                            getUserForm();
                            createUserDefaultBranches();
                        } else {
                            confirm("No Data");
                            window.location = '/Software/Users';
                        }
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/Users";
            }
        }

        // ===========
        // Lock button
        // ===========
        function btnUserDetailLock_OnClick() {
            var isValid = true;
            $('.requiredUser').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnUserDetailLock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $('#btnUserDetailLock').prop('disabled', true);
                $('#btnUserDetailUnLock').prop('disabled', true);
                $('#btnUserDetailClose').prop('disabled', true);

                var userObject = new Object();
                userObject.FullName = document.getElementById('userDetail_Fullname').value;
                userObject.CompanyId = cboCompany.selectedValue;
                userObject.BranchId = cboBranch.selectedValue;
                userObject.IncomeAccountId = cboIncomeAccount.selectedValue;
                userObject.SupplierAdvancesAccountId = cboSupplierAvancesAccount.selectedValue;
                userObject.CustomerAdvancesAccountId = cboCustomerAdvancesAccount.selectedValue;
                userObject.OfficialReceiptName = document.getElementById("defaultOfficialReceiptName").value;
                userObject.InventoryType = cboInventoryType.selectedValue;
                userObject.DefaultSalesInvoiceDiscountId = cboDiscounts.selectedValue;
                userObject.SalesInvoiceName = document.getElementById("defaultSalesInvoiceName").value;
                var data = JSON.stringify(userObject);

                $.ajax({
                    type: "PUT",
                    url: '/api/user/lock/' + userId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnUserDetailLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnUserDetailLock').prop('disabled', false);
                            $('#btnUserDetailClose').prop('disabled', false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnUserDetailLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnUserDetailLock').prop('disabled', false);
                            $('#btnUserDetailClose').prop('disabled', false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnUserDetailLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnUserDetailLock').prop('disabled', false);
                            $('#btnUserDetailClose').prop('disabled', false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =============
        // Unlock button
        // =============
        function btnUserDetailUnLock_OnClick() {
            document.getElementById('btnUserDetailUnLock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $('#btnUserDetailLock').prop('disabled', true);
            $('#btnUserDetailUnLock').prop('disabled', true);
            $('#btnUserDetailClose').prop('disabled', true);

            $.ajax({
                type: "PUT",
                url: '/api/user/unlock/' + userId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnUserDetailUnLock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#btnUserDetailUnLock').prop('disabled', false);
                        $('#btnUserDetailClose').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnUserDetailUnLock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#btnUserDetailUnLock').prop('disabled', false);
                        $('#btnUserDetailClose').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnUserDetailUnLock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#btnUserDetailUnLock').prop('disabled', false);
                        $('#btnUserDetailClose').prop('disabled', false);
                    }
                }
            });
        }

        // ============
        // Close button
        // ============
        function btnUserDetailClose_OnClick() {
            window.location = '/Software/Users';
        }

        // ========
        // get Form
        // ========
        function getForm(formId) {
            var formsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userForm/dropdown/list/forms',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            formsObservableArray.push({
                                Id: results[i]["Id"],
                                FormName: results[i]["FormName"],
                                Particulars: results[i]["Particulars"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                        $('#cmdSaveUserFormButton').prop('disabled', false);
                    } else {
                        $('#cmdSaveUserFormButton').prop('disabled', true);
                    }

                    cboForForm.dispose();
                    cboForForm = new wijmo.input.ComboBox('#userForm_FormName', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: formsObservableArray,
                        displayMemberPath: "Particulars",
                        selectedValuePath: "Id",
                        selectedValue: formId
                    });

                    setTimeout(function () {
                        $("#loadingForms").hide();
                        $("#formDetail").show();
                    }, 500);
                }
            });
        }

        // ==============
        // Modal Add Form
        // ==============
        function cmdAddUserForm_OnClick() {
            $('#userFormEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingForms").show();
            document.getElementById("loadingForms").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#formDetail").hide();

            document.getElementById('cmdSaveUserFormButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#cmdSaveUserFormButton').prop('disabled', true);
            $('#cmdUserFormDetailCloseButton').prop('disabled', false);

            userFormId = 0;
            getForm(0);
            document.getElementById('userForm_CanAdd').checked = false;
            document.getElementById('userForm_CanEdit').checked = false;
            document.getElementById('userForm_CanDelete').checked = false;
            document.getElementById('userForm_CanLock').checked = false;
            document.getElementById('userForm_CanUnlock').checked = false;
            document.getElementById('userForm_CanPrint').checked = false;
        }

        // ===============
        // Modal Edit Form
        // ===============
        function cmdUserFormEditButton_OnClick() {
            $('#userFormEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingForms").show();
            document.getElementById("loadingForms").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#formDetail").hide();

            document.getElementById('cmdSaveUserFormButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#cmdSaveUserFormButton').prop('disabled', true);
            $('#cmdUserFormDetailCloseButton').prop('disabled', false);

            userForms.editItem(userForms.currentItem);
            var userForm = userForms.currentEditItem;
            userFormId = userForm.Id;
            getForm(userForm.FormId);
            document.getElementById('userForm_CanAdd').checked = userForm.CanAdd;
            document.getElementById('userForm_CanEdit').checked = userForm.CanEdit;
            document.getElementById('userForm_CanDelete').checked = userForm.CanDelete;
            document.getElementById('userForm_CanLock').checked = userForm.CanLock;
            document.getElementById('userForm_CanUnlock').checked = userForm.CanUnlock;
            document.getElementById('userForm_CanPrint').checked = userForm.CanPrint;
        }

        // ====================
        // Save UserForm button
        // ====================
        function cmdUserFormSaveButton_OnClick() {
            document.getElementById('cmdSaveUserFormButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
            $('#cmdSaveUserFormButton').prop('disabled', true);
            $('#cmdUserFormDetailCloseButton').prop('disabled', true);

            var userFormObject = new Object();
            userFormObject.UserId = userId;
            userFormObject.FormId = cboForForm.selectedValue;
            userFormObject.CanAdd = document.getElementById('userForm_CanAdd').checked;
            userFormObject.CanEdit = document.getElementById('userForm_CanEdit').checked;
            userFormObject.CanDelete = document.getElementById('userForm_CanDelete').checked;
            userFormObject.CanLock = document.getElementById('userForm_CanLock').checked;
            userFormObject.CanUnlock = document.getElementById('userForm_CanUnlock').checked;
            userFormObject.CanPrint = document.getElementById('userForm_CanPrint').checked;
            var data = JSON.stringify(userFormObject);

            if (userFormId == 0) {
                $.ajax({
                    type: "POST",
                    url: '/api/userForm/add/' + userId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Save Successful");
                            $('#userFormEdit').modal('hide');
                            refreshUserFormGrid();
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            $('#userFormEdit').modal('hide');
                            document.getElementById('cmdSaveUserFormButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#cmdSaveUserFormButton').prop('disabled', false);
                            $('#cmdUserFormDetailCloseButton').prop('disabled', false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            $('#userFormEdit').modal('hide');
                            document.getElementById('cmdSaveUserFormButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#cmdSaveUserFormButton').prop('disabled', false);
                            $('#cmdUserFormDetailCloseButton').prop('disabled', false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            $('#userFormEdit').modal('hide');
                            document.getElementById('cmdSaveUserFormButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#cmdSaveUserFormButton').prop('disabled', false);
                            $('#cmdUserFormDetailCloseButton').prop('disabled', false);
                        }
                    }
                });
            } else {
                $.ajax({
                    type: "PUT",
                    url: '/api/userForm/update/' + userFormId + '/' + userId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Update Successful");
                            $('#userFormEdit').modal('hide');
                            refreshUserFormGrid();
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            $('#userFormEdit').modal('hide');
                            document.getElementById('cmdSaveUserFormButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#cmdSaveUserFormButton').prop('disabled', false);
                            $('#cmdUserFormDetailCloseButton').prop('disabled', false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            $('#userFormEdit').modal('hide');
                            document.getElementById('cmdSaveUserFormButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#cmdSaveUserFormButton').prop('disabled', false);
                            $('#cmdUserFormDetailCloseButton').prop('disabled', false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            $('#userFormEdit').modal('hide');
                            document.getElementById('cmdSaveUserFormButton').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#cmdSaveUserFormButton').prop('disabled', false);
                            $('#cmdUserFormDetailCloseButton').prop('disabled', false);
                        }
                    }
                });
            }
        }

        // ==============================
        // Modal Delete Form Confirmation
        // ==============================
        function cmdUserFormDeleteButton_OnClick() {
            $('#deleteUserFormConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdConfirmDeleteUserForm').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $('#cmdConfirmDeleteUserForm').prop('disabled', false);
            $('#cmdConfirmDeleteUserFormCloseButton').prop('disabled', false);
        }

        // delete Form
        function cmdUserFormConfirmDeleteButton_OnClick() {
            document.getElementById('cmdConfirmDeleteUserForm').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $('#cmdConfirmDeleteUserForm').prop('disabled', true);
            $('#cmdConfirmDeleteUserFormCloseButton').prop('disabled', true);

            userForms.editItem(userForms.currentItem);
            var userForm = userForms.currentEditItem;
            var userFormId = userForm.Id;

            $.ajax({
                url: '/api/userForm/delete/' + userFormId + '/' + userId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#deleteUserFormConfirm').modal('hide');
                        refreshUserFormGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#deleteUserFormConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteUserForm').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#cmdConfirmDeleteUserForm').prop('disabled', false);
                        $('#cmdConfirmDeleteUserFormCloseButton').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#deleteUserFormConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteUserForm').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#cmdConfirmDeleteUserForm').prop('disabled', false);
                        $('#cmdConfirmDeleteUserFormCloseButton').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#deleteUserFormConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteUserForm').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#cmdConfirmDeleteUserForm').prop('disabled', false);
                        $('#cmdConfirmDeleteUserFormCloseButton').prop('disabled', false);
                    }
                }
            });
        }

        function cmdCopyRights_OnClick() {
            $('#copyRightsModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnCopyUserRightsIdModal').innerHTML = "<i class='fa fa-copy'></i> Copy";
            $('#btnCopyUserRightsIdModal').prop('disabled', false);
            $('#btnCopyUserRightsIdModalClose').prop('disabled', false);
            document.getElementById("usernameOrFullName").value = "";
        }

        function btnCopyUserRights_OnClick() {
            document.getElementById('btnCopyUserRightsIdModal').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Copying";
            $('#btnCopyUserRightsIdModal').prop('disabled', true);
            $('#btnCopyUserRightsIdModalClose').prop('disabled', true);
            var name = document.getElementById("usernameOrFullName").value;

            $.ajax({
                type: "POST",
                url: '/api/userform/copyrights/' + name + '/' + userId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Copy Successful");
                        $('#copyRightsModal').modal('hide');
                        refreshUserFormGrid();
                    },
                    404: function () {
                        toastr.error("Not found");
                        $('#copyRightsModal').modal('hide');
                        document.getElementById('btnCopyUserRightsIdModal').innerHTML = "<i class='fa fa-copy'></i> Copy";
                        $('#btnCopyUserRightsIdModal').prop('disabled', false);
                        $('#btnCopyUserRightsIdModalClose').prop('disabled', false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#copyRightsModal').modal('hide');
                        document.getElementById('btnCopyUserRightsIdModal').innerHTML = "<i class='fa fa-copy'></i> Copy";
                        $('#btnCopyUserRightsIdModal').prop('disabled', false);
                        $('#btnCopyUserRightsIdModalClose').prop('disabled', false);
                    }
                }
            });
        }

        // ===================
        // get Form by User Id
        // ===================
        function getUserFormByUserId() {
            var userForms = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/listUserFormByUserId/' + userId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (userFormResults) {
                        if (userFormResults.length > 0) {
                            for (i = 0; i < userFormResults.length; i++) {
                                var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='cmdUserFormEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>";
                                var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='cmdUserFormDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>";
                                if (IsLocked) {
                                    btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='cmdUserFormEditButton_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                    btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='cmdUserFormDeleteButton_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                                }

                                userForms.push({
                                    EditId: btnEditId,
                                    DeleteId: btnDeleteId,
                                    Id: userFormResults[i]["Id"],
                                    UserId: userFormResults[i]["UserId"],
                                    User: userFormResults[i]["User"],
                                    FormId: userFormResults[i]["FormId"],
                                    Form: userFormResults[i]["Form"],
                                    Particulars: userFormResults[i]["Particulars"],
                                    CanAdd: userFormResults[i]["CanAdd"],
                                    CanEdit: userFormResults[i]["CanEdit"],
                                    CanDelete: userFormResults[i]["CanDelete"],
                                    CanLock: userFormResults[i]["CanLock"],
                                    CanUnlock: userFormResults[i]["CanUnlock"],
                                    CanPrint: userFormResults[i]["CanPrint"]
                                });
                            }
                        }

                        NProgress.done();
                    }
                });
            }

            return userForms;
        }

        // ==========================
        // Refresh UserForm Flex Grid
        // ==========================
        function refreshUserFormGrid() {
            userForms = new wijmo.collections.CollectionView(getUserFormByUserId());

            userFormGrid.itemsSource = userForms;
            userFormGrid.trackChanges = true;
        }

        function getUserForm() {
            userForms = new wijmo.collections.CollectionView(getUserFormByUserId());

            userFormGrid = new wijmo.grid.FlexGrid('#userDetailUserFormGrid');
            userFormGrid.initialize({
                columns: [
                            @{
                                if (canEdit)
                                {
                                    <text>
                                        {
                                            "header": "Edit",
                                            "binding": "EditId",
                                            "width": 70,
                                            "align": "center",
                                            "allowResizing": false,
                                            "allowSorting": false,
                                            "isContentHtml": true
                                        },
                                    </text>
                                }
                                if (canDelete)
                                {
                                    <text>
                                        {
                                            "header": "Delete",
                                            "binding": "DeleteId",
                                            "width": 70,
                                            "align": "center",
                                            "allowResizing": false,
                                            "allowSorting": false,
                                            "isContentHtml": true
                                        },
                                    </text>
                                }
                            }
                            {
                                "header": "Form",
                                "binding": "Particulars",
                                "width": "3*",
                                "allowResizing": true,
                                "allowSorting": true
                            },
                            {
                                "header": "Add",
                                "binding": "CanAdd",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Edit",
                                "binding": "CanEdit",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Delete",
                                "binding": "CanDelete",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Lock",
                                "binding": "CanLock",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Unlock",
                                "binding": "CanUnlock",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Print",
                                "binding": "CanPrint",
                                "allowSorting": true,
                                "width": 80
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: userForms,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            userFormGrid.trackChanges = true;
        }

        // =========================
        // Get User Default Branches
        // =========================
        function getUserDefaultBranches() {
            var userDefaultBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranches/list/' + userId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userDefaultBranchesResults) {
                    if (userDefaultBranchesResults.length > 0) {
                        var canEdit = "@ViewData["CanEdit"]";
                        var editDisabled = "";
                        if (canEdit == "False") {
                            editDisabled = "disabled";
                        }

                        var canDelete = "@ViewData["CanDelete"]";
                        var deleteDisabled = "";
                        if (canDelete == "False") {
                            deleteDisabled = "disabled";
                        }

                        var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='cmdUserDefaultBranchesEditButton_OnClick()' " + editDisabled + "><i class='fa fa-edit'></i> Edit</button>";
                        var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='cmdUserDefaultBranchesDeleteButton_OnClick()'" + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                        if (IsLocked) {
                            btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='cmdUserDefaultBranchesEditButton_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                            btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='cmdUserDefaultBranchesDeleteButton_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                        }

                        for (i = 0; i < userDefaultBranchesResults.length; i++) {
                            userDefaultBranchesObservableArray.push({
                                EditId: btnEditId,
                                DeleteId: btnDeleteId,
                                Id: userDefaultBranchesResults[i]["Id"],
                                CompanyId: userDefaultBranchesResults[i]["CompanyId"],
                                Company: userDefaultBranchesResults[i]["Company"],
                                BranchId: userDefaultBranchesResults[i]["BranchId"],
                                Branch: userDefaultBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return userDefaultBranchesObservableArray;
        }

        // ==============================
        // Refresh User Branches FlexGrid
        // ==============================
        function refreshUserDefaultBranchesFlexGrid() {
            userDefaultBranchesCollectionView = new wijmo.collections.CollectionView(getUserDefaultBranches());
            userDefaultBranchesFlexGrid.itemsSource = userDefaultBranchesCollectionView;
            userDefaultBranchesFlexGrid.trackChanges = true;
        }

        // =============================
        // Create User Branches FlexGrid
        // =============================
        function createUserDefaultBranches() {
            userDefaultBranchesCollectionView = new wijmo.collections.CollectionView(getUserDefaultBranches());

            userDefaultBranchesFlexGrid = new wijmo.grid.FlexGrid('#userDefaultBranchesFlexGrid');
            userDefaultBranchesFlexGrid.initialize({
                columns: [
                    {
                        "header": "Edit",
                        "binding": "EditId",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Delete",
                        "binding": "DeleteId",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Company",
                        "binding": "Company",
                        "width": "3*",
                        "allowResizing": true,
                        "allowSorting": true
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "width": "3*",
                        "allowResizing": true,
                        "allowSorting": true
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: userDefaultBranchesCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            userDefaultBranchesFlexGrid.trackChanges = true;
        }

        // ===========================================
        // combo box - User Default Branch (Companies)
        // ===========================================
        function createCboUserDefaultBranchesCompany(companyId, branchId) {
            var companiesObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/company/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (companyListResults) {
                    if (companyListResults.length > 0) {
                        for (i = 0; i < companyListResults.length; i++) {
                            companiesObservableArray.push({
                                Id: companyListResults[i]["Id"],
                                Company: companyListResults[i]["Company"]
                            });
                        }
                    }

                    var disabled = true;
                    if (companyListResults.length > 0) {
                        disabled = false;
                        $('#btnSaveUserDefaultBranches').prop('disabled', false);
                    } else {
                        $('#btnSaveUserDefaultBranches').prop('disabled', true);
                    }

                    cboUserDefaultCompanies.dispose();
                    cboUserDefaultCompanies = new wijmo.input.ComboBox('#cboUserDefaultCompanies', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: companiesObservableArray,
                        displayMemberPath: "Company",
                        selectedValuePath: "Id",
                        selectedValue: companyId,
                        onSelectedIndexChanged: function () {
                            createCboUserDefaultBranches(branchId);
                        }
                    });

                    createCboUserDefaultBranches(branchId);
                }
            });
        }

        // ==========================================
        // combo box - User Default Branch (Branches)
        // ==========================================
        function createCboUserDefaultBranches(branchId) {
            var branchesObservableArray = new wijmo.collections.ObservableArray;
            if (cboUserDefaultCompanies.selectedValue != null) {
                $.ajax({
                    url: '/api/listBranchByCompanyId/' + cboUserDefaultCompanies.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (branchListResults) {
                        if (branchListResults.length > 0) {
                            for (i = 0; i < branchListResults.length; i++) {
                                branchesObservableArray.push({
                                    Id: branchListResults[i]["Id"],
                                    Branch: branchListResults[i]["Branch"]
                                });
                            }
                        }

                        var disabled = true;
                        if (branchListResults.length > 0) {
                            disabled = false;
                        } else {
                            $('#btnSaveUserDefaultBranches').prop('disabled', true);
                        }

                        cboUserDefaultBranches.dispose();
                        cboUserDefaultBranches = new wijmo.input.ComboBox('#cboUserDefaultBranches', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: branchesObservableArray,
                            displayMemberPath: "Branch",
                            selectedValuePath: "Id",
                            selectedValue: branchId
                        });

                        setTimeout(function () {
                            $("#loadingUserDefaultBranches").hide();
                            $("#userDefaultBranchesDetail").show();
                        }, 500);
                    }
                });
            } else {
                cboUserDefaultBranches.dispose();
                cboUserDefaultBranches = new wijmo.input.ComboBox('#cboUserDefaultBranches', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: branchesObservableArray
                });
            }
        }

        // ===============
        // Add User Branch
        // ===============
        function btnAddBranches() {
            $('#userDefaultBranchesModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingUserDefaultBranches").show();
            document.getElementById("loadingUserDefaultBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userDefaultBranchesDetail").hide();

            document.getElementById('btnSaveUserDefaultBranches').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#btnSaveUserDefaultBranches').prop('disabled', true);
            $('#btnCloseModalUserDefaultBranches').prop('disabled', false);

            userBranchId = 0;
            createCboUserDefaultBranchesCompany(0, 0);
        }

        // ================
        // Edit User Branch
        // ================
        function cmdUserDefaultBranchesEditButton_OnClick() {
            $('#userDefaultBranchesModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingUserDefaultBranches").show();
            document.getElementById("loadingUserDefaultBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userDefaultBranchesDetail").hide();

            document.getElementById('btnSaveUserDefaultBranches').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#btnSaveUserDefaultBranches').prop('disabled', true);
            $('#btnCloseModalUserDefaultBranches').prop('disabled', false);

            userDefaultBranchesCollectionView.editItem(userDefaultBranchesCollectionView.currentItem);
            var userBranch = userDefaultBranchesCollectionView.currentEditItem;
            userBranchId = userBranch.Id;
            createCboUserDefaultBranchesCompany(userBranch.CompanyId, userBranch.BranchId);
        }

        // ================
        // Save User Branch
        // ================
        function btnSaveUserDefaultBranchesOnclick() {
            document.getElementById('btnSaveUserDefaultBranches').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
            $('#btnSaveUserDefaultBranches').prop('disabled', true);
            $('#btnCloseModalUserDefaultBranches').prop('disabled', true);

            var userBranchObject = new Object();
            userBranchObject.UserId = userId;
            userBranchObject.BranchId = cboUserDefaultBranches.selectedValue;
            var data = JSON.stringify(userBranchObject);

            if (userBranchId == 0) {
                $.ajax({
                    type: "POST",
                    url: '/api/userBranches/add',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Save Successful");
                            $('#userDefaultBranchesModal').modal('hide');
                            refreshUserDefaultBranchesFlexGrid();
                        },
                        404: function () {
                            toastr.error("Not found");
                            $('#userDefaultBranchesModal').modal('hide');
                            document.getElementById('btnSaveUserDefaultBranches').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#btnSaveUserDefaultBranches').prop('disabled', false);
                            $('#btnCloseModalUserDefaultBranches').prop('disabled', false);
                        },
                        400: function () {
                            toastr.error("Bad Request");
                            $('#userDefaultBranchesModal').modal('hide');
                            document.getElementById('btnSaveUserDefaultBranches').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#btnSaveUserDefaultBranches').prop('disabled', false);
                            $('#btnCloseModalUserDefaultBranches').prop('disabled', false);
                        }
                    }
                });
            } else {
                $.ajax({
                    type: "PUT",
                    url: '/api/userBranches/update/' + userBranchId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Update Successful");
                            $('#userDefaultBranchesModal').modal('hide');
                            refreshUserDefaultBranchesFlexGrid();
                        },
                        404: function () {
                            toastr.error("Not found");
                            $('#userDefaultBranchesModal').modal('hide');
                            document.getElementById('btnSaveUserDefaultBranches').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#btnSaveUserDefaultBranches').prop('disabled', false);
                            $('#btnCloseModalUserDefaultBranches').prop('disabled', false);
                        },
                        400: function () {
                            toastr.error("Bad Request");
                            $('#userDefaultBranchesModal').modal('hide');
                            document.getElementById('btnSaveUserDefaultBranches').innerHTML = "<i class='fa fa-save'></i> Save";
                            $('#btnSaveUserDefaultBranches').prop('disabled', false);
                            $('#btnCloseModalUserDefaultBranches').prop('disabled', false);
                        }
                    }
                });
            }
        }

        // ==================
        // Delete User Branch
        // ==================
        function cmdUserDefaultBranchesDeleteButton_OnClick() {
            $('#userDefaultBranchesDeleteModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnDeleteUserDefaultBranches').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $('#btnDeleteUserDefaultBranches').prop('disabled', false);
            $('#btnCloseDeleteModalUserDefaultBranches').prop('disabled', false);
        }

        // ==========================
        // Confirm Delete User Branch
        // ==========================
        function btnDeleteUserDefaultBranchesOnclick() {
            document.getElementById('btnDeleteUserDefaultBranches').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $('#btnDeleteUserDefaultBranches').prop('disabled', true);
            $('#btnCloseDeleteModalUserDefaultBranches').prop('disabled', true);

            userDefaultBranchesCollectionView.editItem(userDefaultBranchesCollectionView.currentItem);
            var userBranch = userDefaultBranchesCollectionView.currentEditItem;
            userBranchId = userBranch.Id;
            $.ajax({
                type: "DELETE",
                url: '/api/userBranches/delete/' + userBranchId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#userDefaultBranchesDeleteModal').modal('hide');
                        refreshUserDefaultBranchesFlexGrid();
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $('#userDefaultBranchesDeleteModal').modal('hide');
                        document.getElementById('btnDeleteUserDefaultBranches').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#btnDeleteUserDefaultBranches').prop('disabled', false);
                        $('#btnCloseDeleteModalUserDefaultBranches').prop('disabled', false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#userDefaultBranchesDeleteModal').modal('hide');
                        document.getElementById('btnDeleteUserDefaultBranches').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#btnDeleteUserDefaultBranches').prop('disabled', false);
                        $('#btnCloseDeleteModalUserDefaultBranches').prop('disabled', false);
                    }
                }
            });
        }

        $('#userForm').click(function () {
            $("#UserDefaults").hide();
            $("#UserForm").show();
            $("#UserBranches").hide();
            NProgress.start();
            refreshUserFormGrid();
        });

        $('#userDefaults').click(function () {
            $("#UserDefaults").show();
            $("#UserForm").hide();
            $("#UserBranches").hide();
        });

        $('#userBranches').click(function () {
            $("#UserDefaults").hide();
            $("#UserForm").hide();
            $("#UserBranches").show();
            NProgress.start();
            refreshUserDefaultBranchesFlexGrid();
        });

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            getCompany();
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>

</body>
</html>