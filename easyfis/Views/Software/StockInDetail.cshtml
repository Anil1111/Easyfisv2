@{
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <title>Stock In Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body class="hold-transition skin-blue fixed sidebar-mini">
    <div class="wrapper">
        @Html.Partial("_SoftwareHeader")
        @Html.Partial("_SoftwareSideBarMenu")

        <div class="content-wrapper">
            <section class="content-header">
                <h1>
                    Stock In Detail
                    <small><i class="fa fa-building"></i> @ViewData["Company"] / @ViewData["Branch"]</small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="/Software"><i class="fa fa-dashboard"></i> Dashboard</a></li>
                    <li><a href="/Software/StockIn"><i class="fa fa-dashboard"></i> Stock In</a></li>
                    <li> Stock In Detail </li>
                </ol>
            </section>

            <section class="content">
                <div class="box box-default">
                    <div class="box-header">
                        <div class="row">
                            <div class="col-md-6"></div>
                            <div class="col-md-6" align="right">
                                <button class="btn btn-primary btn-sm" id="cmdStockInJournal" onclick="stockInJournal_OnClick()"><i class="fa fa-book"></i> Journal</button>
                                <button class="btn btn-primary btn-sm" id="cmdStockInSaveLock" onclick="btnStockInSaveLock_OnClick()"><i class=" fa fa-save"></i> Save (Lock)</button>
                                <button class="btn btn-primary btn-sm" id="cmdStockInSave" onclick="btnStockInSave_OnClick()"><i class=" fa fa-save"></i> Save</button>
                                <button class="btn btn-primary btn-sm" id="cmdStockInEdit" onclick="btnStockInEdit_OnClick()"><i class=" fa fa-edit"></i> Edit (Unlock)</button>
                                <button class="btn btn-primary btn-sm" id="cmdStockInPrint" onclick="btnStockInPrint_OnClick()"><i class="fa fa-print"></i> Print</button>
                                <button onclick="window.location.href = '@Url.Action("StockIn", "Software")'" class="btn btn-danger btn-sm" id="cmdStockInClose"><i class=" fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="well">
                            <form class="form-horizontal" role="form">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Branch</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="StockIn_Branch"></div>

                                                <input type="hidden" id="StockIn_Branch_data" class="requiredStockIn" />
                                                <input type="hidden" id="StockIn_Branch_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">IN Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-30 input-sm requiredStockIn" id="StockIn_INnumber_Display" placeholder="IN Number" />
                                                <input type="hidden" id="StockIn_INnumber" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">IN Date</label>
                                            <div class="col-sm-8">
                                                <div class="input-50" id="StockIn_InDate"></div>
                                                <input type="hidden" id="StockIn_InDate_data" class="requiredStockIn" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Account</label>
                                            <div class="col-sm-8">
                                                <div class="input-30" id="StockIn_AccountCode"></div>
                                                <div class="input-68" id="StockIn_Account"></div>

                                                <input type="hidden" id="StockIn_Account_data" class="requiredStockIn" />
                                                <input type="hidden" id="StockIn_Account_selectedValue" />
                                                <input type="hidden" id="StockIn_AccountCode_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Article</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="StockIn_Article"></div>

                                                <input type="hidden" id="StockIn_Article_data" class="requiredStockIn" />
                                                <input type="hidden" id="StockIn_Article_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Particulars</label>
                                            <div class="col-sm-8">
                                                <textarea class="form-control textarea-custom requiredStockIn" id="StockIn_Particulars" placeholder="Particulars"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Manual IN Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-sm requiredStockIn" id="StockIn_ManualINNumber" placeholder="Manual IN Number">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Produce</label>
                                            <div class="col-sm-8">
                                                <input type="checkbox" id="StockIn_Produce">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Prepared by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="StockIn_PreparedBy"></div>

                                                <input type="hidden" id="StockIn_PreparedBy_data" class="requiredStockIn" />
                                                <input type="hidden" id="StockIn_PreparedBy_selectedValue" />
                                                <input type="hidden" id="userId_data" value="@userId" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Checked by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="StockIn_CheckedBy"></div>

                                                <input type="hidden" id="StockIn_CheckedBy_data" class="requiredStockIn" />
                                                <input type="hidden" id="StockIn_CheckedBy_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Approved by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="StockIn_ApprovedBy"></div>

                                                <input type="hidden" id="StockIn_ApprovedBy_data" class="requiredStockIn" />
                                                <input type="hidden" id="StockIn_ApprovedBy_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Lock</label>
                                            <div class="col-sm-8">
                                                <input type="checkbox" id="StockIn_Lock">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-4"></div>
                                            <div class="col-sm-8">
                                                <input type="hidden" id="StockIn_IsLocked">
                                                <input type="hidden" id="StockIn_IsLocked_defaultTrue">
                                                <input type="hidden" id="StockIn_IsLocked_defaultFalse">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <br />
                        <!-- Stock In line -->
                        <ul class="nav nav-tabs" role="tablist" id="myTab">
                            <li role="presentation" class="active"><a data-toggle="tab" href="#Items" id="itemTabId">Items</a></li>
                            <li role="presentation"><a data-toggle="tab" href="#InventoryEntries" id="inventoryEntryTabId">inventory entries</a></li>
                        </ul>
                        <br />
                        <div class="tab-content">
                            <div id="Items" class="tab-pane fade in active">
                                <!-- Item  List -->
                                <div class="row">
                                    <div class="col-lg-12" align="right">
                                        <button class="btn btn-primary btn-sm" id="btnAddStockInItem" onclick="cmdAddStockInItem_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                    </div>
                                </div>
                                <br />
                                <div class="row" align="left">
                                    <div class="col-lg-12">
                                        <div id="ItemGrid" class="grid"></div>
                                    </div>
                                </div>
                            </div>

                            <div id="InventoryEntries" class="tab-pane fade in">
                                <!-- Inventory Entries List -->
                                <br />
                                <div class="row" align="left">
                                    <div class="col-lg-12">
                                        <div id="InventoryEntryGrid" class="grid"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- ==================== -->
    <!-- Stock In Item Detail -->
    <!-- ==================== -->
    <div class="modal fade" id="stockInItemsEdit" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="stockInItemsModalLabel">Stock-In Line Item Detail</h4>
                </div>
                <div class="modal-body">
                    <form id="stockInItemsDetailForm">
                        <ul class="nav nav-tabs" role="tablist" id="myTab">
                            <li role="presentation" class="active"><a data-toggle="tab" href="#INItem" id="INItemTabId">Items</a></li>
                            <li role="presentation"><a data-toggle="tab" href="#INBUC" id="INBUCTabId">Basic Unit Conversion</a></li>
                        </ul>
                        <br />
                        <div class="tab-content">
                            <div id="INItem" class="tab-pane fade in active">
                                <input type="hidden" id="stockInItem_Id" />
                                <dl class="dl-horizontal">
                                    <dt>Item</dt>
                                    <dd>
                                        <div class="input-30" id="stockInItem_ItemCode"></div>
                                        <div class="input-68" id="stockInItem_ItemDescription"></div>

                                        <input type="hidden" id="stockInItem_ItemId_data" class="requiredStockInItem">
                                        <input type="hidden" id="stockInItem_ItemCode_selectedValue" /> 
                                        <input type="hidden" id="stockInItem_ItemDescription_selectedValue" />
                                    </dd>
                                    <dt>Particulars</dt>
                                    <dd><textarea class="form-control textarea-custom requiredStockInItem" id="stockInItem_Particulars"></textarea></dd>
                                    <dt>Quantity</dt>
                                    <dd><input type="text" class="form-control input-50 numberField input-sm requiredStockInItem" id="stockInItem_Quantity" placeholder="0.00" /></dd>
                                    <dt>Unit</dt>
                                    <dd>
                                        <div class="input-50" id="stockInItem_Unit"></div>

                                        <input type="hidden" id="stockInItem_Unit_data" class="requiredStockInItem">
                                        <input type="hidden" id="stockInItem_Unit_selectedValue" />
                                    </dd>
                                    <dt>Cost</dt>
                                    <dd><input type="text" class="form-control input-50 numberField input-sm requiredStockInItem" id="stockInItem_Cost" placeholder="0.00" /></dd>
                                    <dt>Amount</dt>
                                    <dd><input type="text" class="form-control input-50 numberField input-sm requiredStockInItem" id="stockInItem_Amount" placeholder="0.00" /></dd>
                                </dl>
                            </div>
                            <div id="INBUC" class="tab-pane fade in">
                                <dl class="dl-horizontal">
                                    <dt>Unit</dt>
                                    <dd>
                                        <div class="input-50" id="stockInItem_BUCUnit"></div>

                                        <input type="hidden" id="stockInItem_BUCUnit_data" class="requiredStockInItem">
                                        <input type="hidden" id="stockInItem_BUCUnit_selectedValue" />
                                    </dd>
                                    <dt>Quantity</dt>
                                    <dd><input type="text" class="form-control input-50 numberField input-sm requiredStockInItem" id="stockInItem_BUCQuantity" placeholder="0.00" /></dd>
                                    <dt>Cost</dt>
                                    <dd><input type="text" class="form-control input-50 numberField input-sm requiredStockInItem" id="stockInItem_BUCCost" placeholder="0.00" /></dd>
                                </dl>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary btn-sm" id="cmdSaveStockInItemButton" onclick="cmdStockInItemSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdStockInItemDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Journal Detail -->
    <div class="modal fade" id="journalDetail" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="journalModalLabel"> Journal</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <h4>
                            <span id="loadingJournalGridList"></span>
                        </h4>
                    </center>
                    <div id="journal_Content">
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="journalGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            <div class="col-md-6"></div>
                            <div class="col-md-6" align="right">
                                <table>
                                    <tr>
                                        <td align="right"> <b>Total Debit:</b> </td>
                                        <td style="padding-left: 35px"></td>
                                        <td> <span id="totalDebitInJournal"></span></td>
                                    </tr>
                                    <tr>
                                        <td align="right"> <b>Total Credit:</b> </td>
                                        <td style="padding-left: 35px"></td>
                                        <td> <span id="totalCreditInJournal"></span></td>
                                    </tr>
                                    <tr>
                                        <td style="padding: 10px"> </td>
                                        <td style="padding: 10px"> </td>
                                        <td style="padding: 10px"> </td>
                                    </tr>
                                    <tr>
                                        <td align="right"> <b>Variance: </b> </td>
                                        <td style="padding-left: 35px"></td>
                                        <td> <span id="variance"></span></td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdJournalDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- ======================================== -->
    <!-- Stock-In Items Delete Modal Confirmation -->
    <!-- ======================================== -->
    <div class="modal fade" id="deletStockInItemsConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Stock-In Item <i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteStockInItems" onclick="cmdStockInItemsConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteStockInItemsCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var stockIns;
        var branches;
        var users;
        var accounts;
        var articles;
        var INDate;
        var cboBranch;
        var cboForAccountCode;
        var cboForAccount;
        var cboArticle;
        var cboPreparedBy;
        var cboCheckedBy;
        var cboApprovedBy;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        // ===========
        // read Cookie
        // ===========
        function readCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') {
                    c = c.substring(1, c.length);
                    if (c.indexOf(nameEQ) == 0) {
                        return c.substring(nameEQ.length, c.length);
                    }
                }
            }
            return null;
        }

        // ================
        // GET Stock In List
        // ================
        function getStockInById() {
            NProgress.start();
            var stockInId = getParam("StockInId");
            if (document.location.search.length == 0) {
                document.getElementById('StockIn_Particulars').value = "NA";
                document.getElementById('StockIn_ManualINNumber').value = "NA";
               
                NProgress.done();
            } else {
                $.ajax({
                    url: '/api/stockIn/' + stockInId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results != null) {
                            document.getElementById('StockIn_Branch_data').value = Results.BranchId;
                            document.getElementById('StockIn_Branch_selectedValue').value = Results.Branch;

                            document.getElementById('StockIn_INnumber').value = Results.INNumber;
                            document.getElementById('StockIn_INnumber_Display').value = Results.INNumber;
                            document.getElementById('StockIn_InDate_data').value = Results.INDate;

                            var INDate_date = Results.INDate;
                            INDate.dispose();
                            INDate = new wijmo.input.InputDate('#StockIn_InDate', {
                                format: 'MM/dd/yyyy',
                                value: new Date(INDate_date),
                                mask: '99/99/9999',
                                onValueChanged: function () {
                                    document.getElementById('StockIn_InDate_data').value = this.value.toLocaleDateString();
                                }
                            });

                            document.getElementById('StockIn_Account_data').value = Results.AccountId;
                            document.getElementById('StockIn_Account_selectedValue').value = Results.Account;
                            document.getElementById('StockIn_AccountCode_selectedValue').value = Results.Account;
                            

                            document.getElementById('StockIn_Article_data').value = Results.ArticleId;
                            document.getElementById('StockIn_Article_selectedValue').value = Results.Article;

                            document.getElementById('StockIn_Particulars').value = Results.Particulars;
                            document.getElementById('StockIn_ManualINNumber').value = Results.ManualINNumber
                            document.getElementById('StockIn_Produce').checked = Results.IsProduced;

                            document.getElementById('StockIn_PreparedBy_data').value = Results.PreparedById;
                            document.getElementById('StockIn_PreparedBy_selectedValue').value = Results.PreparedBy;

                            document.getElementById('StockIn_CheckedBy_data').value = Results.CheckedById;
                            document.getElementById('StockIn_CheckedBy_selectedValue').value = Results.CheckedBy;

                            document.getElementById('StockIn_ApprovedBy_data').value = Results.ApprovedById;
                            document.getElementById('StockIn_ApprovedBy_selectedValue').value = Results.ApprovedBy;

                            document.getElementById('StockIn_Lock').checked = Results.IsLocked;
                            document.getElementById('StockIn_IsLocked').value = Results.IsLocked;

                            document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                            NProgress.done();

                            if (document.getElementById('StockIn_IsLocked').value == 'true') {
                                document.getElementById('StockIn_Particulars').disabled = true;
                                document.getElementById('StockIn_ManualINNumber').disabled = true;

                                var INDate_date = Results.INDate;
                                INDate.dispose();
                                INDate = new wijmo.input.InputDate('#StockIn_InDate', {
                                    disabled: true,
                                    format: 'MM/dd/yyyy',
                                    value: new Date(INDate_date),
                                    mask: '99/99/9999',
                                    onValueChanged: function () {
                                        document.getElementById('StockIn_InDate_data').value = this.value.toLocaleDateString();
                                    }
                                });

                                $("#cmdStockInJournal").prop("disabled", false);
                                $("#cmdStockInSaveLock").prop("disabled", true);
                                $("#cmdStockInSave").prop("disabled", true);
                                $("#cmdStockInEdit").prop("disabled", false);
                                $("#cmdStockInPrint").prop("disabled", false);
                                $("#btnAddStockInItem").prop("disabled", true);

                                document.getElementById('StockIn_Produce').disabled = true;
                            } else if (document.getElementById('StockIn_IsLocked').value == 'false') {
                                document.getElementById('StockIn_Particulars').disabled = false;
                                document.getElementById('StockIn_ManualINNumber').disabled = false;

                                var INDate_date = Results.INDate;
                                INDate.dispose();
                                INDate = new wijmo.input.InputDate('#StockIn_InDate', {
                                    disabled: false,
                                    format: 'MM/dd/yyyy',
                                    value: new Date(INDate_date),
                                    mask: '99/99/9999',
                                    onValueChanged: function () {
                                        document.getElementById('StockIn_InDate_data').value = this.value.toLocaleDateString();
                                    }
                                });

                                $("#cmdStockInJournal").prop("disabled", true);
                                $("#cmdStockInSaveLock").prop("disabled", false);
                                $("#cmdStockInSave").prop("disabled", true);
                                $("#cmdStockInEdit").prop("disabled", true);
                                $("#cmdStockInPrint").prop("disabled", true);
                                $("#btnAddStockInItem").prop("disabled", false);

                                document.getElementById('StockIn_Produce').disabled = false;
                            } else {
                                console.log("Invalid IsLocked");
                            }

                            getBranchesForComboBox();
                            getUsersForComboBox();
                            getAccountForComboBox();
                            getArticlesForComboBox();
                        }
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            }
        }

        // ====================
        // GET Stock In Last Id
        // ====================
        function getStockInLastId() {
            stockIns = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/stockInLastId',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    window.location = '/Software/StockInDetail?StockInId=' + Results.Id;
                    window.setTimeout(function () { location.reload() }, 1000);
                }
            });
            return stockIns;
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var stockInId = getParam("StockInId");
                        var branchId = readCookie("branchId");
                        if (document.location.search.length == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (branchResults) {
                                    if (branchResults != null) {
                                        document.getElementById('StockIn_Branch_data').value = branchResults.Id;
                                        document.getElementById('StockIn_Branch_selectedValue').value = branchResults.Branch;

                                        createCboBranch(branches);
                                    }
                                }
                            });
                        } else {
                            createCboBranch(branches);
                        }
                    } else {
                        createCboBranch(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
                );
            return branches;
        }

        // ======================
        // Combo Box for Branches
        // ======--==============
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                if (document.getElementById('StockIn_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#StockIn_Branch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                selectedValue: document.getElementById('StockIn_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_Branch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });

            if (branches == 0) {
                document.getElementById('StockIn_Branch_data').value = "";
            } else {
                document.getElementById('StockIn_Branch_data').value = branchCollections.items[cboBranch.selectedIndex].BranchId;
            }
        }

        // ====================
        // Get Stock In Account
        // ====================
        function getAccountForComboBox() {
            accounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accounts.push({
                                AccountId: results[i]["Id"],
                                AccountCode: results[i]["AccountCode"],
                                AccountAccount: results[i]["Account"]
                            });
                        }
                        createCboForAccountCode(accounts);
                        createCboForAccount(accounts);
                    } else {
                        createCboForAccountCode(accounts);
                        createCboForAccount(accounts);
                    }
                    
                    var accountCollection = new wijmo.collections.CollectionView(accounts);
                    if (accounts == 0) {
                        document.getElementById('StockIn_Account_data').value = "";
                    } else {
                        document.getElementById('StockIn_Account_data').value = accountCollection.items[cboForAccount.selectedIndex].AccountId;
                        getArticlesForComboBox();
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
        }

        // ====================
        // CBO for Account Code
        // ====================
        function createCboForAccountCode(accounts) {
            var accountCollection = new wijmo.collections.CollectionView(accounts);
            var accountList = new Array();
            for (var i = 0; i < accountCollection.items.length; i++) {
                accountList.push(accountCollection.items[i].AccountCode);
            }

            var disabled;
            if (accounts == 0) {
                disabled = true;
            } else {
                if (document.getElementById('StockIn_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboForAccountCode.dispose();
            cboForAccountCode = new wijmo.input.ComboBox('#StockIn_AccountCode', {
                disabled: disabled,
                placeholder: "Select Account Code",
                itemsSource: accountList,
                isEditable: false,
                selectedValue: document.getElementById('StockIn_AccountCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_Account_data").val(accountCollection.items[this.selectedIndex].AccountId);
                    $("#StockIn_Account_selectedValue").val(accountCollection.items[this.selectedIndex].AccountAccount);
                    getArticlesForComboBox();
                    createCboForAccount(accounts);
                }
            });
        }

        // ===============
        // CBO for Account
        // ===============
        function createCboForAccount(accounts) {
            var accountCollection = new wijmo.collections.CollectionView(accounts);
            var accountList = new Array();
            for (var i = 0; i < accountCollection.items.length; i++) {
                accountList.push(accountCollection.items[i].AccountAccount);
            }

            var disabled;
            if (accounts == 0) {
                disabled = true;
            } else {
                if (document.getElementById('StockIn_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboForAccount.dispose();
            cboForAccount = new wijmo.input.ComboBox('#StockIn_Account', {
                disabled: disabled,
                placeholder: "Select Account",
                itemsSource: accountList,
                isEditable: false,
                selectedValue: document.getElementById('StockIn_Account_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_Account_data").val(accountCollection.items[this.selectedIndex].AccountId);
                    $("#StockIn_AccountCode_selectedValue").val(accountCollection.items[this.selectedIndex].AccountCode);
                    getArticlesForComboBox();
                    createCboForAccountCode(accounts);
                }
            });
        }

        // ==========================
        // GET Articles for Combo Box
        // ==========================
        function getArticlesForComboBox() {
            articles = new wijmo.collections.ObservableArray();

            var accountId;
            if (document.getElementById('StockIn_Account_data').value == "") {
                accountId = 0;
            } else {
                accountId = document.getElementById('StockIn_Account_data').value;
            }

            articlesArticleTypes = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccountArticleTypeByAccountId/' + accountId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (articlesResults) {
                    if (articlesResults.length > 0) {
                        for (i = 0; i < articlesResults.length; i++) {
                            articlesArticleTypes.push({
                                Id: articlesResults[i]["Id"],
                                ArticleTypeId: articlesResults[i]["ArticleTypeId"]
                            });

                            $.ajax({
                                url: '/api/listArticleByArticleTypeId/' + articlesResults[i]["ArticleTypeId"],
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        for (i = 0; i < results.length; i++) {
                                            articles.push({
                                                ArticleId: results[i]["Id"],
                                                ArticleArticle: results[i]["Article"]
                                            });
                                        }
                                        createCboArticles(articles);
                                    } else {
                                        createCboArticles(articles);
                                    }
                                }
                            }).fail(function (xhr, textStatus, err) {
                                alert(err);
                            });

                        }
                    } else {
                        $.ajax({
                            url: '/api/listArticleByArticleTypeId/' + 0,
                            cache: false,
                            type: 'GET',
                            contentType: 'application/json; charset=utf-8',
                            data: {},
                            success: function (results) {
                                if (results.length > 0) {
                                    for (i = 0; i < results.length; i++) {
                                        articles.push({
                                            ArticleId: results[i]["Id"],
                                            ArticleArticle: results[i]["Article"]
                                        });
                                    }
                                    createCboArticles(articles);
                                } else {
                                    createCboArticles(articles);
                                }
                            }
                        }).fail(function (xhr, textStatus, err) {
                            alert(err);
                        });
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });



            //articles = new wijmo.collections.ObservableArray();
            //$.ajax({
            //    url: '/api/listArticle',
            //    cache: false,
            //    type: 'GET',
            //    contentType: 'application/json; charset=utf-8',
            //    data: {},
            //    success: function (results) {
            //        if (results.length > 0) {
            //            for (i = 0; i < results.length; i++) {
            //                articles.push({
            //                    ArticleId: results[i]["Id"],
            //                    ArticleArticle: results[i]["Article"]
            //                });
            //            }
            //            createCboArticles(articles);
            //        }
            //    }
            //}).fail(function (xhr, textStatus, err) {
            //    alert(err);
            //}
            //);
        }

        // ======================
        // Combo Box for Articles
        // ======================
        function createCboArticles(articles) {
            var articleCollections = new wijmo.collections.CollectionView(articles);
            var articleList = new Array();
            for (var i = 0; i < articleCollections.items.length; i++) {
                articleList.push(articleCollections.items[i].ArticleArticle);
            }

            var disabled;
            if (articles == 0) {
                disabled = true;
            } else {
                if (document.getElementById('StockIn_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboArticle.dispose();
            cboArticle = new wijmo.input.ComboBox('#StockIn_Article', {
                disabled: disabled,
                placeholder: "Select Article",
                itemsSource: articleList,
                isEditable: false,
                selectedValue: document.getElementById('StockIn_Article_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_Article_data").val(articleCollections.items[this.selectedIndex].ArticleId);
                }
            });

            if (articles == 0) {
                document.getElementById('StockIn_Article_data').value = "";
            } else {
                document.getElementById('StockIn_Article_data').value = articleCollections.items[cboArticle.selectedIndex].ArticleId;
            }
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        var stockInId = getParam("StockInId");
                        if (document.location.search.length == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        users.push({
                                            UserId: results.Id,
                                            UserFullName: results.FullName
                                        });
                                    }

                                    document.getElementById('StockIn_PreparedBy_data').value = results.Id;
                                    document.getElementById('StockIn_CheckedBy_data').value = results.Id;
                                    document.getElementById('StockIn_ApprovedBy_data').value = results.Id;
                                        
                                    document.getElementById('StockIn_PreparedBy_selectedValue').value = results.FullName;
                                    document.getElementById('StockIn_CheckedBy_selectedValue').value = results.FullName;
                                    document.getElementById('StockIn_ApprovedBy_selectedValue').value = results.FullName;

                                    createCboUserPreparedBy(users);
                                    createCboUserCheckedBy(users);
                                    createCboUserApprovedBy(users);
                                }
                            });
                        } else {
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);
                        }
                    } else {
                        createCboUserPreparedBy(users);
                        createCboUserCheckedBy(users);
                        createCboUserApprovedBy(users);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return users;
        }

        // ==================================
        // Combo Box for Users - Prepared By
        // ==================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('StockIn_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#StockIn_PreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('StockIn_PreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_PreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if (users == 0) {
                document.getElementById('StockIn_PreparedBy_data').value = "";
            } else {
                document.getElementById('StockIn_PreparedBy_data').value = usersCollection.items[cboPreparedBy.selectedIndex].UserId;
            }
        }

        // ==================================
        // Combo Box for Users - Checked By
        // ==================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('StockIn_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboCheckedBy.dispose();
            cboCheckedBy = new wijmo.input.ComboBox('#StockIn_CheckedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('StockIn_CheckedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if (users == 0) {
                document.getElementById('StockIn_CheckedBy_data').value = "";
            } else {
                document.getElementById('StockIn_CheckedBy_data').value = usersCollection.items[cboCheckedBy.selectedIndex].UserId;
            }
        }

        // ==================================
        // Combo Box for Users - Approved By
        // ==================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('StockIn_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboApprovedBy.dispose();
            cboApprovedBy = new wijmo.input.ComboBox('#StockIn_ApprovedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('StockIn_ApprovedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if (users == 0) {
                document.getElementById('StockIn_ApprovedBy_data').value = "";
            } else {
                document.getElementById('StockIn_ApprovedBy_data').value = usersCollection.items[cboApprovedBy.selectedIndex].UserId;
            }
        }

        // =====================================================
        // Function with leading zeroes to display the IN Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while (pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // ============
        // ADD Stock In
        // ============
        function btnStockInSave_OnClick() {
            var stockInObject = new Object();
            var stockInId = getParam("StockInId");
            stockInObject.BranchId = document.getElementById('StockIn_Branch_data').value;
            stockInObject.INNumber = document.getElementById('StockIn_INnumber_Display').value;
            stockInObject.INDate = document.getElementById('StockIn_InDate_data').value;
            stockInObject.AccountId = document.getElementById('StockIn_Account_data').value;
            stockInObject.ArticleId = document.getElementById('StockIn_Article_data').value;
            stockInObject.Particulars = document.getElementById('StockIn_Particulars').value;
            stockInObject.ManualINNumber = document.getElementById('StockIn_ManualINNumber').value;
            stockInObject.IsProduced = document.getElementById('StockIn_Produce').checked;
            stockInObject.PreparedById = document.getElementById('StockIn_PreparedBy_data').value;
            stockInObject.CheckedById = document.getElementById('StockIn_CheckedBy_data').value;
            stockInObject.ApprovedById = document.getElementById('StockIn_ApprovedBy_data').value;
            var data = JSON.stringify(stockInObject);

            if (document.getElementById('StockIn_Account_data').value == '') {
                document.getElementById("StockIn_Account").style.border = "1px solid red";
            } else {
                document.getElementById("StockIn_Account").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('StockIn_Article_data').value == '') {
                document.getElementById("StockIn_Article").style.border = "1px solid red";
            } else {
                document.getElementById("StockIn_Article").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('StockIn_PreparedBy_data').value == '') {
                document.getElementById("StockIn_PreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockIn_PreparedBy").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('StockIn_CheckedBy_data').value == '') {
                document.getElementById("StockIn_CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockIn_CheckedBy").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('StockIn_ApprovedBy_data').value == '') {
                document.getElementById("StockIn_ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockIn_ApprovedBy").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredStockIn').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                if (document.location.search.length == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addStockIn',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdStockInJournal").prop("disabled", true);
                                $("#cmdStockInSaveLock").prop("disabled", true);
                                $("#cmdStockInSave").prop("disabled", true);
                                $("#cmdStockInEdit").prop("disabled", true);
                                $("#cmdStockInPrint").prop("disabled", true);
                                $("#cmdStockInClose").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getStockInLastId, 1000)
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdStockInJournal").prop("disabled", false);
                                $("#cmdStockInSaveLock").prop("disabled", false);
                                $("#cmdStockInSave").prop("disabled", false);
                                $("#cmdStockInEdit").prop("disabled", false);
                                $("#cmdStockInPrint").prop("disabled", false);
                                $("#cmdStockInClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdStockInJournal").prop("disabled", false);
                                $("#cmdStockInSaveLock").prop("disabled", false);
                                $("#cmdStockInSave").prop("disabled", false);
                                $("#cmdStockInEdit").prop("disabled", false);
                                $("#cmdStockInPrint").prop("disabled", false);
                                $("#cmdStockInClose").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateStockIn/' + stockInId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdStockInJournal").prop("disabled", true);
                                $("#cmdStockInSaveLock").prop("disabled", true);
                                $("#cmdStockInSave").prop("disabled", true);
                                $("#cmdStockInEdit").prop("disabled", true);
                                $("#cmdStockInPrint").prop("disabled", true);
                                $("#cmdStockInClose").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdStockInJournal").prop("disabled", false);
                                $("#cmdStockInSaveLock").prop("disabled", false);
                                $("#cmdStockInSave").prop("disabled", false);
                                $("#cmdStockInEdit").prop("disabled", false);
                                $("#cmdStockInPrint").prop("disabled", false);
                                $("#cmdStockInClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdStockInJournal").prop("disabled", false);
                                $("#cmdStockInSaveLock").prop("disabled", false);
                                $("#cmdStockInSave").prop("disabled", false);
                                $("#cmdStockInEdit").prop("disabled", false);
                                $("#cmdStockInPrint").prop("disabled", false);
                                $("#cmdStockInClose").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ====================
        // Stock IN Save - Lock
        // ====================
        function btnStockInSaveLock_OnClick() {
            var stockInObject = new Object();
            var stockInId = getParam("StockInId");
            stockInObject.BranchId = document.getElementById('StockIn_Branch_data').value;
            stockInObject.INNumber = document.getElementById('StockIn_INnumber_Display').value;
            stockInObject.INDate = document.getElementById('StockIn_InDate_data').value;
            stockInObject.AccountId = document.getElementById('StockIn_Account_data').value;
            stockInObject.ArticleId = document.getElementById('StockIn_Article_data').value;
            stockInObject.Particulars = document.getElementById('StockIn_Particulars').value;
            stockInObject.ManualINNumber = document.getElementById('StockIn_ManualINNumber').value;
            stockInObject.IsProduced = document.getElementById('StockIn_Produce').checked;
            stockInObject.PreparedById = document.getElementById('StockIn_PreparedBy_data').value;
            stockInObject.CheckedById = document.getElementById('StockIn_CheckedBy_data').value;
            stockInObject.ApprovedById = document.getElementById('StockIn_ApprovedBy_data').value;
            stockInObject.IsLocked = true;
            var data = JSON.stringify(stockInObject);

            if (document.getElementById('StockIn_Account_data').value == '') {
                document.getElementById("StockIn_Account").style.border = "1px solid red";
            } else {
                document.getElementById("StockIn_Account").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('StockIn_Article_data').value == '') {
                document.getElementById("StockIn_Article").style.border = "1px solid red";
            } else {
                document.getElementById("StockIn_Article").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('StockIn_PreparedBy_data').value == '') {
                document.getElementById("StockIn_PreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockIn_PreparedBy").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('StockIn_CheckedBy_data').value == '') {
                document.getElementById("StockIn_CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockIn_CheckedBy").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('StockIn_ApprovedBy_data').value == '') {
                document.getElementById("StockIn_ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockIn_ApprovedBy").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredStockIn').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                if (document.location.search.length == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addStockIn',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdStockInJournal").prop("disabled", true);
                                $("#cmdStockInSaveLock").prop("disabled", true);
                                $("#cmdStockInSave").prop("disabled", true);
                                $("#cmdStockInEdit").prop("disabled", true);
                                $("#cmdStockInPrint").prop("disabled", true);
                                $("#cmdStockInClose").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getStockInLastId, 1000)
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdStockInJournal").prop("disabled", false);
                                $("#cmdStockInSaveLock").prop("disabled", false);
                                $("#cmdStockInSave").prop("disabled", false);
                                $("#cmdStockInEdit").prop("disabled", false);
                                $("#cmdStockInPrint").prop("disabled", false);
                                $("#cmdStockInClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdStockInJournal").prop("disabled", false);
                                $("#cmdStockInSaveLock").prop("disabled", false);
                                $("#cmdStockInSave").prop("disabled", false);
                                $("#cmdStockInEdit").prop("disabled", false);
                                $("#cmdStockInPrint").prop("disabled", false);
                                $("#cmdStockInClose").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateStockIn/' + stockInId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdStockInJournal").prop("disabled", true);
                                $("#cmdStockInSaveLock").prop("disabled", true);
                                $("#cmdStockInSave").prop("disabled", true);
                                $("#cmdStockInEdit").prop("disabled", true);
                                $("#cmdStockInPrint").prop("disabled", true);
                                $("#cmdStockInClose").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdStockInJournal").prop("disabled", false);
                                $("#cmdStockInSaveLock").prop("disabled", false);
                                $("#cmdStockInSave").prop("disabled", false);
                                $("#cmdStockInEdit").prop("disabled", false);
                                $("#cmdStockInPrint").prop("disabled", false);
                                $("#cmdStockInClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdStockInJournal").prop("disabled", false);
                                $("#cmdStockInSaveLock").prop("disabled", false);
                                $("#cmdStockInSave").prop("disabled", false);
                                $("#cmdStockInEdit").prop("disabled", false);
                                $("#cmdStockInPrint").prop("disabled", false);
                                $("#cmdStockInClose").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ======================
        // Stock IN Edit - UnLock
        // ======================
        function btnStockInEdit_OnClick() {
            var stockInObject = new Object();
            var stockInId = getParam("StockInId");
            stockInObject.IsLocked = false;
            var data = JSON.stringify(stockInObject);

            $.ajax({
                type: "PUT",
                url: '/api/updateStockInIsLocked/' + stockInId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: data,
                statusCode: {
                    200: function () {
                        $("#cmdStockInJournal").prop("disabled", true);
                        $("#cmdStockInSaveLock").prop("disabled", true);
                        $("#cmdStockInSave").prop("disabled", true);
                        $("#cmdStockInEdit").prop("disabled", true);
                        $("#cmdStockInPrint").prop("disabled", true);
                        $("#cmdStockInClose").prop("disabled", true);
                        toastr.success("Unlocked");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Can't Save");
                        $("#cmdStockInJournal").prop("disabled", false);
                        $("#cmdStockInSaveLock").prop("disabled", false);
                        $("#cmdStockInSave").prop("disabled", false);
                        $("#cmdStockInEdit").prop("disabled", false);
                        $("#cmdStockInPrint").prop("disabled", false);
                        $("#cmdStockInClose").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#cmdStockInJournal").prop("disabled", false);
                        $("#cmdStockInSaveLock").prop("disabled", false);
                        $("#cmdStockInSave").prop("disabled", false);
                        $("#cmdStockInEdit").prop("disabled", false);
                        $("#cmdStockInPrint").prop("disabled", false);
                        $("#cmdStockInClose").prop("disabled", false);
                    }
                }
            });
        }

        // ========
        // Print IN
        // ========
        function btnStockInPrint_OnClick() {
            var stockInId = getParam("StockInId");
            window.location = "/RepStockIn/StockIn?StockInId=" + stockInId;
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            var stockInId = getParam("StockInId");
            if (document.location.search.length == 0) {
                $('#cmdStockInJournal').hide();
                $('#cmdStockInSaveLock').hide();
                $('#cmdStockInSave').show();
                $('#cmdStockInEdit').hide();

                $("#cmdStockInPrint").prop("disabled", true);

                $('#btnAddStockInItem').prop("disabled", true);
                //$('#btnAddContactInformation').prop('disabled', true);
            } else {
                $('#cmdStockInJournal').show();
                $('#cmdStockInSave').hide();
                $('#cmdStockInEdit').show();
            }

            document.getElementById('StockIn_INnumber_Display').disabled = true;
            document.getElementById('StockIn_Lock').disabled = true;

            cboBranch = new wijmo.input.ComboBox('#StockIn_Branch');

            var d = new Date();
            document.getElementById("StockIn_InDate_data").value = [d.getMonth() + 1, d.getDate(), d.getFullYear()].join('/');
            INDate = new wijmo.input.InputDate('#StockIn_InDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('StockIn_InDate_data').value = this.value.toLocaleDateString();
                }
            });

            cboForAccountCode = new wijmo.input.ComboBox('#StockIn_AccountCode');
            cboForAccount = new wijmo.input.ComboBox('#StockIn_Account');
            cboArticle = new wijmo.input.ComboBox('#StockIn_Article');
            cboPreparedBy = new wijmo.input.ComboBox('#StockIn_PreparedBy');
            cboCheckedBy = new wijmo.input.ComboBox('#StockIn_CheckedBy');
            cboApprovedBy = new wijmo.input.ComboBox('#StockIn_ApprovedBy');

            getStockInById();

            var stockInId = getParam("StockInId");
            if (document.location.search.length == 0) {
                getBranchesForComboBox();
                getUsersForComboBox();
                getAccountForComboBox();
                getArticlesForComboBox();

                if (document.getElementById('StockIn_INnumber').value == 0) {
                    document.getElementById('StockIn_INnumber_Display').value = "0000000001";
                }

                document.getElementById('StockIn_INnumber').value = 0;
                //document.getElementById('journalVoucher_No_Display').value = "000-000000";
                var stockIns = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/stockInLastINNumber',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        //if (Results.length > 0) {
                        //    stockIns.push({
                        //        Id: Results.Id,
                        //        INNumber: Results.INNumber
                        //    });
                        //}

                        if (Results != null) {
                            var IN_Number = parseInt(Results.INNumber);
                            var IN_Number_PlusOne = 0000000001;
                            var IN_Num_Results = IN_Number + IN_Number_PlusOne;
                            //var JV_Number_Display = JV_Num_Results.toString().replace(/(\d{3})(\d+)/, '$1-$2');

                            document.getElementById('StockIn_INnumber').value = zerofill(IN_Num_Results, 10);
                            document.getElementById('StockIn_INnumber_Display').value = zerofill(IN_Num_Results, 10);
                        }
                    }
                });
            }
        });
    </script>

    <!-- ============= -->
    <!-- Items Scripts -->
    <!-- ============= -->
    <script type="text/javascript">
        // ==========================
        // Global Variables for Items
        // ==========================
        var items;
        var itemGrid;

        var articleItems;
        var cboManualCodeArticleItems;
        var cboItemDescriptionArticleItems;

        var stockInUnits;
        var cboStockInUnit;
        var cboBaseUnit;

        // ======================
        // GET Stock IN Item List
        // ======================
        function getItem() {
            var items = new wijmo.collections.ObservableArray;
            var stockInId = getParam("StockInId");
            NProgress.start();
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/listStockInItemByINId/' + stockInId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            stockIns = new wijmo.collections.ObservableArray;
                            var stockInId = getParam("StockInId");
                            $.ajax({
                                url: '/api/stockIn/' + stockInId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (StockInResults) {
                                    if (StockInResults.length > 0) {
                                        stockIns.push({
                                            Id: StockInResults.Id,
                                            IsLocked: StockInResults.IsLocked
                                        });
                                    }

                                    if (StockInResults.IsLocked == true) {
                                        for (i = 0; i < Results.length; i++) {
                                            items.push({
                                                EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditStockInItem_Onclick()' disabled><i class='fa fa-edit'></i> Edit</button>",
                                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteStockInItem_Onclick()' disabled><i class='fa fa-trash'></i> Delete</button>",
                                                Id: Results[i]["Id"],
                                                INId: Results[i]["INId"],
                                                IN: Results[i]["IN"],
                                                ItemId: Results[i]["ItemId"],
                                                ItemCode: Results[i]["ItemCode"],
                                                Item: Results[i]["Item"],
                                                Particulars: Results[i]["Particulars"],
                                                UnitId: Results[i]["UnitId"],
                                                Unit: Results[i]["Unit"],
                                                Quantity: Results[i]["Quantity"],
                                                Cost: Results[i]["Cost"],
                                                Amount: Results[i]["Amount"],
                                                BaseUnitId: Results[i]["BaseUnitId"],
                                                BaseUnit: Results[i]["BaseUnit"],
                                                BaseQuantity: Results[i]["BaseQuantity"],
                                                BaseCost: Results[i]["BaseCost"]
                                            });
                                        }
                                    } else {
                                        for (i = 0; i < Results.length; i++) {
                                            items.push({
                                                EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditStockInItem_Onclick()'><i class='fa fa-edit'></i> Edit</button>",
                                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteStockInItem_Onclick()'><i class='fa fa-trash'></i> Delete</button>",
                                                Id: Results[i]["Id"],
                                                INId: Results[i]["INId"],
                                                IN: Results[i]["IN"],
                                                ItemId: Results[i]["ItemId"],
                                                ItemCode: Results[i]["ItemCode"],
                                                Item: Results[i]["Item"],
                                                Particulars: Results[i]["Particulars"],
                                                UnitId: Results[i]["UnitId"],
                                                Unit: Results[i]["Unit"],
                                                Quantity: Results[i]["Quantity"],
                                                Cost: Results[i]["Cost"],
                                                Amount: Results[i]["Amount"],
                                                BaseUnitId: Results[i]["BaseUnitId"],
                                                BaseUnit: Results[i]["BaseUnit"],
                                                BaseQuantity: Results[i]["BaseQuantity"],
                                                BaseCost: Results[i]["BaseCost"]
                                            });
                                        }
                                    }
                                }
                            });
                        }
                        NProgress.done();
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            } else {
                NProgress.done();
            }
            return items;
        }

        // ======================================
        // GET Item Id, Manual Code and Component
        // ======================================
        function getArticleItemForManualCodeAndComponent() {
            articleItems = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/1',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleItems.push({
                                ItemId: results[i]["Id"],
                                ItemCode: results[i]["ManualArticleCode"],
                                ItemDescription: results[i]["Article"],
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"],
                                Particulars: results[i]["Particulars"]
                            });
                        }
                        createCboForManualCode(articleItems);
                        createCboForItemDescription(articleItems);
                    } else {
                        createCboForManualCode(articleItems);
                        createCboForItemDescription(articleItems);
                    }
                }
            });
        }

        // ===============
        // CBO Manual Code
        // ===============
        function createCboForManualCode(articleItems) {
            var ManualCodeCollections = new wijmo.collections.CollectionView(articleItems);
            var ManualCodeList = new Array();
            for (var i = 0; i < ManualCodeCollections.items.length; i++) {
                ManualCodeList.push(ManualCodeCollections.items[i].ItemCode);
            }

            var disabled;
            if (articleItems == 0) {
                disabled = true;
            } else {
                if (document.getElementById('StockIn_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboManualCodeArticleItems.dispose();
            cboManualCodeArticleItems = new wijmo.input.ComboBox('#stockInItem_ItemCode', {
                disabled: disabled,
                placeholder: "Select Manual Code",
                itemsSource: ManualCodeList,
                isEditable: false,
                selectedValue: document.getElementById('stockInItem_ItemCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockInItem_ItemId_data").val(ManualCodeCollections.items[this.selectedIndex].ItemId);
                    $("#stockInItem_ItemCode_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemCode);
                    $("#stockInItem_ItemDescription_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemDescription);
                    //$("#stockInItem_Unit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
                    //$("#stockInItem_Unit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
                    //$("#stockInItem_BUCUnit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
                    //$("#stockInItem_BUCUnit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
                    $("#stockInItem_Particulars").val(ManualCodeCollections.items[this.selectedIndex].Particulars);

                    stockIns = new wijmo.collections.ObservableArray;
                    var stockInId = getParam("StockInId");
                    $.ajax({
                        url: '/api/stockIn/' + stockInId,
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        data: {},
                        success: function (Results) {
                            if (Results.length > 0) {
                                stockIns.push({
                                    Id: Results.Id,
                                    IsProduced: Results.IsProduced,
                                });
                            }

                            //document.getElementById('StockIn_Produce').checked = Results.IsProduced;

                            if (Results.IsProduced == true) {
                                var inventories = new wijmo.collections.ObservableArray();
                                var articleId = document.getElementById('stockInItem_ItemId_data').value;
                                var branchId = document.getElementById('StockIn_Branch_data').value;
                                $.ajax({
                                    url: '/api/listArticleInventoryByBranchIdAndArticleId/' + branchId + '/' + articleId,
                                    cache: false,
                                    type: 'GET',
                                    contentType: 'application/json; charset=utf-8',
                                    data: {},
                                    success: function (results) {
                                        if (results.length > 0) {
                                            for (i = 0; i < results.length; i++) {
                                                inventories.push({
                                                    Id: results[i]["Id"],
                                                    BranchId: results[i]["BranchId"],
                                                    ArticleId: results[i]["ArticleId"],
                                                    InventoryCode: results[i]["InventoryCode"],
                                                    Quantity: results[i]["Quantity"],
                                                    Cost: results[i]["Cost"],
                                                    Amount: results[i]["Amount"],
                                                    Particulars: results[i]["Particulars"]
                                                });
                                                //createCboForInventoryCode(inventories);
                                                if (document.getElementById('StockIn_Produce').checked) {
                                                    document.getElementById('stockInItem_Cost').value = Math.round((results[i]["Cost"]) * 100) / 100;
                                                } else {
                                                    document.getElementById('stockInItem_Cost').value = 0;
                                                }
                                            }
                                        } else {
                                            //createCboForInventoryCode(inventories);
                                        }
                                    }
                                });
                            } else {
                                document.getElementById('stockInItem_Cost').value = 0;
                            }
                        }
                    });

                    createCboForItemDescription(articleItems);
                }
            });

            if (articleItems == 0) {
                document.getElementById('stockInItem_ItemId_data').value = "";
                document.getElementById('stockInItem_ItemCode_selectedValue').value = "";
                document.getElementById('stockInItem_ItemDescription_selectedValue').value = "";
                document.getElementById('stockInItem_Unit_data').value = "";
                document.getElementById('stockInItem_Unit_selectedValue').value = "";
                document.getElementById('stockInItem_BUCUnit_data').value = "";
                document.getElementById('stockInItem_BUCUnit_selectedValue').value = "";
                document.getElementById('stockInItem_Particulars').value = "";
            } else {
                document.getElementById('stockInItem_ItemId_data').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemId;
                document.getElementById('stockInItem_ItemCode_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemCode;
                document.getElementById('stockInItem_ItemDescription_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemDescription;
                //document.getElementById('stockInItem_Unit_data').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].UnitId;
                //document.getElementById('stockInItem_Unit_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Unit;
                //document.getElementById('stockInItem_BUCUnit_data').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].UnitId;
                //document.getElementById('stockInItem_BUCUnit_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Unit;
                document.getElementById('stockInItem_Particulars').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Particulars;
            }
        }

        // ====================
        // CBO Item Description
        // ====================
        function createCboForItemDescription(articleItems) {
            var ItemDescriptionCollections = new wijmo.collections.CollectionView(articleItems);
            var ItemDescriptionList = new Array();
            for (var i = 0; i < ItemDescriptionCollections.items.length; i++) {
                ItemDescriptionList.push(ItemDescriptionCollections.items[i].ItemDescription);
            }

            var disabled;
            if (articleItems == 0) {
                disabled = true;
            } else {
                if (document.getElementById('StockIn_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboItemDescriptionArticleItems.dispose();
            cboItemDescriptionArticleItems = new wijmo.input.ComboBox('#stockInItem_ItemDescription', {
                disabled: disabled,
                placeholder: "Select Item Description",
                itemsSource: ItemDescriptionList,
                isEditable: false,
                selectedValue: document.getElementById('stockInItem_ItemDescription_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockInItem_ItemId_data").val(ItemDescriptionCollections.items[this.selectedIndex].ItemId);
                    $("#stockInItem_ItemCode_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].ItemCode);
                    $("#stockInItem_ItemDescription_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].ItemDescription);
                    //$("#stockInItem_Unit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
                    //$("#stockInItem_Unit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
                    //$("#stockInItem_BUCUnit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
                    //$("#stockInItem_BUCUnit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
                    $("#stockInItem_Particulars").val(ItemDescriptionCollections.items[this.selectedIndex].Particulars);
                    
                    getStockInItemUnitForComboBox(ItemDescriptionCollections.items[this.selectedIndex].ItemId);

                    stockIns = new wijmo.collections.ObservableArray;
                    var stockInId = getParam("StockInId");
                    $.ajax({
                        url: '/api/stockIn/' + stockInId,
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        data: {},
                        success: function (Results) {
                            if (Results.length > 0) {
                                stockIns.push({
                                    Id: Results.Id,
                                    IsProduced: Results.IsProduced,
                                });
                            }

                            //document.getElementById('StockIn_Produce').checked = Results.IsProduced;
                            if (Results.IsProduced == true) {
                                var inventories = new wijmo.collections.ObservableArray();
                                var articleId = document.getElementById('stockInItem_ItemId_data').value;
                                var branchId = document.getElementById('StockIn_Branch_data').value;
                                $.ajax({
                                    url: '/api/listArticleInventoryByBranchIdAndArticleId/' + branchId + '/' + articleId,
                                    cache: false,
                                    type: 'GET',
                                    contentType: 'application/json; charset=utf-8',
                                    data: {},
                                    success: function (results) {
                                        if (results.length > 0) {
                                            for (i = 0; i < results.length; i++) {
                                                inventories.push({
                                                    Id: results[i]["Id"],
                                                    BranchId: results[i]["BranchId"],
                                                    ArticleId: results[i]["ArticleId"],
                                                    InventoryCode: results[i]["InventoryCode"],
                                                    Quantity: results[i]["Quantity"],
                                                    Cost: results[i]["Cost"],
                                                    Amount: results[i]["Amount"],
                                                    Particulars: results[i]["Particulars"]
                                                });
                                                //createCboForInventoryCode(inventories);
                                                if (document.getElementById('StockIn_Produce').checked) {
                                                    document.getElementById('stockInItem_Cost').value = Math.round((results[i]["Cost"]) * 100) / 100;
                                                } else {
                                                    document.getElementById('stockInItem_Cost').value = 0;
                                                }
                                            }
                                        } else {
                                            //createCboForInventoryCode(inventories);
                                        }
                                    }
                                });
                            } else {
                                document.getElementById('stockInItem_Cost').value = 0;
                            }
                        }
                    });

                    createCboForManualCode(articleItems);
                }
            });

            if (articleItems == 0) {
                document.getElementById('stockInItem_ItemId_data').value = "";
                document.getElementById('stockInItem_ItemCode_selectedValue').value = "";
                document.getElementById('stockInItem_ItemDescription_selectedValue').value = "";
                document.getElementById('stockInItem_Unit_data').value = "";
                document.getElementById('stockInItem_Unit_selectedValue').value = "";
                document.getElementById('stockInItem_BUCUnit_data').value = "";
                document.getElementById('stockInItem_BUCUnit_selectedValue').value = "";
                document.getElementById('stockInItem_Particulars').value = "";
            } else {
                document.getElementById('stockInItem_ItemId_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemId;
                document.getElementById('stockInItem_ItemCode_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemCode;
                document.getElementById('stockInItem_ItemDescription_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemDescription;
                //document.getElementById('stockInItem_Unit_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].UnitId;
                //document.getElementById('stockInItem_Unit_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Unit;
                //document.getElementById('stockInItem_BUCUnit_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].UnitId;
                //document.getElementById('stockInItem_BUCUnit_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Unit;
                document.getElementById('stockInItem_Particulars').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Particulars;
            
                getStockInItemUnitForComboBox(ItemDescriptionCollections.items[cboManualCodeArticleItems.selectedIndex].ItemId);
            }
        }

        // =============
        // Get Item Unit
        // =============
        function getStockInItemUnitForComboBox(itemId) {
            var stockInUnits = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleUnitByArticleId/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            stockInUnits.push({
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"]
                            });
                        }
                        createCboForStockInUnit(stockInUnits);
                        createCboForStockInBaseUnit(stockInUnits);
                    } else {
                        createCboForStockInUnit(stockInUnits);
                        createCboForStockInBaseUnit(stockInUnits);
                    }
                }
            });

            return stockInUnits;
        }

        // =====================
        // CBO for Stock In Unit
        // =====================
        function createCboForStockInUnit(stockInUnits) {
            var StockInUnitCollection = new wijmo.collections.CollectionView(stockInUnits);
            var StockInUnitList = new Array();
            for (var i = 0; i < StockInUnitCollection.items.length; i++) {
                StockInUnitList.push(StockInUnitCollection.items[i].Unit);
            }

            cboStockInUnit.dispose();
            cboStockInUnit = new wijmo.input.ComboBox('#stockInItem_Unit', {
                placeholder: "Select Unit",
                itemsSource: StockInUnitList,
                isEditable: false,
                selectedValue: document.getElementById('stockInItem_Unit_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockInItem_Unit_data").val(StockInUnitCollection.items[this.selectedIndex].UnitId);
                    $("#stockInItem_Unit_selectedValue").val(StockInUnitCollection.items[this.selectedIndex].Unit);
                    $("#stockInItem_BUCUnit_data").val(StockInUnitCollection.items[this.selectedIndex].UnitId);
                    $("#stockInItem_BUCUnit_selectedValue").val(StockInUnitCollection.items[this.selectedIndex].Unit);

                    createCboForStockInBaseUnit(stockInUnits);
                }
            });
                        
            if(stockInUnits > 0) {
                document.getElementById('stockInItem_Unit_data').value = StockInUnitCollection.items[cboStockInUnit.selectedIndex].UnitId;
                document.getElementById('stockInItem_Unit_selectedValue').value = StockInUnitCollection.items[cboStockInUnit.selectedIndex].Unit;
                document.getElementById('stockInItem_BUCUnit_data').value = StockInUnitCollection.items[cboStockInUnit.selectedIndex].UnitId;
                document.getElementById('stockInItem_BUCUnit_selectedValue').value = StockInUnitCollection.items[cboStockInUnit.selectedIndex].Unit;
            } else {
                document.getElementById('stockInItem_Unit_data').value = 0;
                document.getElementById('stockInItem_Unit_selectedValue').value = 0;
                document.getElementById('stockInItem_BUCUnit_data').value = 0;
                document.getElementById('stockInItem_BUCUnit_selectedValue').value = 0;
            }

        }

        // ==========================
        // CBO for STock In Base Unit
        // ==========================
        function createCboForStockInBaseUnit(stockInUnits) {
            var StockInBaseUnitCollection = new wijmo.collections.CollectionView(stockInUnits);
            var StockInBaseUnitList = new Array();
            for (var i = 0; i < StockInBaseUnitCollection.items.length; i++) {
                StockInBaseUnitList.push(StockInBaseUnitCollection.items[i].Unit);
            }

            cboBaseUnit.dispose();
            cboBaseUnit = new wijmo.input.ComboBox('#stockInItem_BUCUnit', {
                disabled: true,
                placeholder: "Select Unit",
                itemsSource: StockInBaseUnitList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('stockInItem_BUCUnit_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockInItem_BUCUnit_data").val(StockInBaseUnitCollection.items[this.selectedIndex].UnitId);
                    $("#stockInItem_BUCUnit_selectedValue").val(StockInBaseUnitCollection.items[this.selectedIndex].Unit);
                    $("#stockInItem_Unit_data").val(StockInBaseUnitCollection.items[this.selectedIndex].UnitId);
                    $("#stockInItem_Unit_selectedValue").val(StockInBaseUnitCollection.items[this.selectedIndex].Unit);

                    createCboForStockInUnit(stockInUnits);
                }
            });
        }

        // =================
        // ADD Stock In Item
        // =================
        function cmdAddStockInItem_OnClick() {
            $('#stockInItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredStockInItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#cmdSaveStockInItemButton").prop("disabled", false);
            $("#cmdStockInItemDetailCloseButton").prop("disabled", false);

            getArticleItemForManualCodeAndComponent();
            //getStockInItemUnitForComboBox();

            document.getElementById('stockInItem_Id').value = 0;
            document.getElementById('stockInItem_ItemId_data').value = '';
            document.getElementById('stockInItem_ItemCode_selectedValue').value = '';
            document.getElementById('stockInItem_ItemDescription_selectedValue').value = '';
            document.getElementById('stockInItem_Particulars').value = '';
            document.getElementById('stockInItem_Quantity').value = 0;
            //document.getElementById('stockInItem_Unit_data').value = cboStockInUnit.selectedItem["UnitId"];
            //document.getElementById('stockInItem_Unit_selectedValue').value = '';
            document.getElementById('stockInItem_Cost').value = 0;
            document.getElementById('stockInItem_Amount').value = 0;
            document.getElementById('stockInItem_BUCUnit_data').value = '';
            document.getElementById('stockInItem_BUCUnit_selectedValue').value = '';
            document.getElementById('stockInItem_BUCQuantity').value = 0;
            document.getElementById('stockInItem_BUCCost').value = 0;
        }

        // ==================
        // Edit Stock In Item
        // ==================
        function btnEditStockInItem_Onclick() {
            items.editItem(items.currentItem);
            $('#stockInItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredStockInItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#cmdSaveStockInItemButton").prop("disabled", false);
            $("#cmdStockInItemDetailCloseButton").prop("disabled", false);

            getArticleItemForManualCodeAndComponent();
            //getStockInItemUnitForComboBox();

            var item = items.currentEditItem;
            document.getElementById('stockInItem_Id').value = item.Id;
            document.getElementById('stockInItem_ItemId_data').value = item.ItemId;
            document.getElementById('stockInItem_ItemCode_selectedValue').value = item.ItemCode;
            document.getElementById('stockInItem_ItemDescription_selectedValue').value = item.Item;
            document.getElementById('stockInItem_Particulars').value = item.Particulars;
            document.getElementById('stockInItem_Quantity').value = item.Quantity;
            document.getElementById('stockInItem_Unit_data').value = item.UnitId;
            document.getElementById('stockInItem_Unit_selectedValue').value = item.Unit;
            document.getElementById('stockInItem_Cost').value = item.Cost;
            document.getElementById('stockInItem_Amount').value = item.Amount;
            document.getElementById('stockInItem_BUCUnit_data').value = item.BaseUnitId;
            document.getElementById('stockInItem_BUCUnit_selectedValue').value = item.BaseUnit;
            document.getElementById('stockInItem_BUCQuantity').value = item.BaseQuantity;
            document.getElementById('stockInItem_BUCCost').value = item.BaseCost;
        }

        // ====================
        // Delete Stock In Item
        // ====================
        function btnDeleteStockInItem_Onclick() {
            $('#deletStockInItemsConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            $("#cmdConfirmDeleteStockInItems").prop("disabled", false);
            $("#cmdConfirmDeleteStockInItemsCloseButton").prop("disabled", false);
        }
        // confirm delete stock in items
        function cmdStockInItemsConfirmDeleteButton_OnClick() {
            $("#cmdConfirmDeleteStockInItems").prop("disabled", true);
            $("#cmdConfirmDeleteStockInItemsCloseButton").prop("disabled", true);

            items.editItem(items.currentItem);
            var item = items.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteStockInItem/' + item,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteStockInItems").prop("disabled", true);
                        $("#cmdConfirmDeleteStockInItemsCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");

                        $('#deletStockInItemsConfirm').modal('hide');

                        items = new wijmo.collections.CollectionView(getItem());

                        // Flex Grid for Items
                        itemGrid.itemsSource = items;
                        itemGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deletStockInItemsConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockInItems").prop("disabled", false);
                        $("#cmdConfirmDeleteStockInItemsCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deletStockInItemsConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockInItems").prop("disabled", false);
                        $("#cmdConfirmDeleteStockInItemsCloseButton").prop("disabled", false);
                    }
                }
            });
        }


        // ==================
        // SAVE Stock In Item
        // ==================
        function cmdStockInItemSaveButton_OnClick() {
            var stockInItmeObject = new Object();
            var stockInId = getParam("StockInId");

            var stockInItemId = document.getElementById('stockInItem_Id').value;
            stockInItmeObject.INId = stockInId;
            stockInItmeObject.ItemId = document.getElementById('stockInItem_ItemId_data').value;
            stockInItmeObject.Particulars = document.getElementById('stockInItem_Particulars').value;
            stockInItmeObject.UnitId = document.getElementById('stockInItem_Unit_data').value;
            stockInItmeObject.Quantity = document.getElementById('stockInItem_Quantity').value;
            stockInItmeObject.Cost = document.getElementById('stockInItem_Cost').value;
            stockInItmeObject.Amount = document.getElementById('stockInItem_Amount').value;
            stockInItmeObject.BaseUnitId = document.getElementById('stockInItem_BUCUnit_data').value;
            stockInItmeObject.BaseCost = document.getElementById('stockInItem_BUCCost').value;
            stockInItmeObject.BaseQuantity = document.getElementById('stockInItem_BUCQuantity').value;
            var stockInItemData = JSON.stringify(stockInItmeObject);

            if (document.getElementById('stockInItem_ItemId_data').value == '') {
                document.getElementById("stockInItem_ItemCode").style.border = "1px solid red";
                document.getElementById("stockInItem_ItemDescription").style.border = "1px solid red";
            } else {
                document.getElementById("stockInItem_ItemCode").style.border = "1px solid #C8C8C8";
                document.getElementById("stockInItem_ItemDescription").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('stockInItem_Unit_data').value == '') {
                document.getElementById("stockInItem_Unit").style.border = "1px solid red";
            } else {
                document.getElementById("stockInItem_Unit").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('stockInItem_BUCUnit_data').value == '') {
                document.getElementById("stockInItem_BUCUnit").style.border = "1px solid red";
            } else {
                document.getElementById("stockInItem_BUCUnit").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredStockInItem').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
            }
            else {
                $("#cmdSaveStockInItemButton").prop("disabled", true);
                $("#cmdStockInItemDetailCloseButton").prop("disabled", true);
                if (stockInItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addStockInItem',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockInItemData,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveStockInItemButton").prop("disabled", true);
                                $("#cmdStockInItemDetailCloseButton").prop("disabled", true);
                                toastr.success("Successfully Saved");

                                $('#stockInItemsEdit').modal('hide');

                                items = new wijmo.collections.CollectionView(getItem());

                                // Flex Grid for Items
                                itemGrid.itemsSource = items;
                                itemGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $('#stockInItemsEdit').modal('hide');
                                $("#cmdSaveStockInItemButton").prop("disabled", false);
                                $("#cmdStockInItemDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#stockInItemsEdit').modal('hide');
                                $("#cmdSaveStockInItemButton").prop("disabled", false);
                                $("#cmdStockInItemDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateStockInItem/' + stockInItemId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockInItemData,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveStockInItemButton").prop("disabled", true);
                                $("#cmdStockInItemDetailCloseButton").prop("disabled", true);
                                toastr.success("Successfully Updated");

                                $('#stockInItemsEdit').modal('hide');

                                items = new wijmo.collections.CollectionView(getItem());

                                // Flex Grid for Items
                                itemGrid.itemsSource = items;
                                itemGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Can't Update");
                                $('#stockInItemsEdit').modal('hide');
                                $("#cmdSaveStockInItemButton").prop("disabled", false);
                                $("#cmdStockInItemDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#stockInItemsEdit').modal('hide');
                                $("#cmdSaveStockInItemButton").prop("disabled", false);
                                $("#cmdStockInItemDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ======
        //  Items
        // ======
        function itemTab() {
            $("#stockInItem_Quantity").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#stockInItem_Cost").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#stockInItem_Amount").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#stockInItem_BUCQuantity").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#stockInItem_BUCCost").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $('#stockInItem_Quantity').keyup(function () {
                document.getElementById('stockInItem_BUCQuantity').value = this.value.replace(/\,/g, '');

                var stockIn_Quantity = document.getElementById('stockInItem_Quantity').value.replace(/\,/g, '');
                var stockIn_Cost = document.getElementById('stockInItem_Cost').value.replace(/\,/g, '');
                var stockInItemAmount = stockIn_Quantity * stockIn_Cost;

                document.getElementById('stockInItem_Amount').value = stockInItemAmount.toLocaleString();
                if (this.value == 0) {
                    document.getElementById('stockInItem_BUCCost').value = 0;
                } else {
                    document.getElementById('stockInItem_BUCCost').value = stockIn_Cost;
                }
            });

            $('#stockInItem_Cost').keyup(function () {
                document.getElementById('stockInItem_BUCCost').value = this.value.replace(/\,/g, '');

                var stockIn_Quantity = document.getElementById('stockInItem_Quantity').value.replace(/\,/g, '');
                var stockIn_Cost = document.getElementById('stockInItem_Cost').value.replace(/\,/g, '');
                var stockInItemAmount = stockIn_Quantity * stockIn_Cost;

                document.getElementById('stockInItem_Amount').value = stockInItemAmount.toLocaleString();
            });


            document.getElementById('stockInItem_BUCQuantity').disabled = true;
            document.getElementById('stockInItem_BUCCost').disabled = true;
            document.getElementById('stockInItem_Amount').disabled = true;
            //document.getElementById('stockInItem_Cost').disabled = true;

            cboManualCodeArticleItems = new wijmo.input.ComboBox('#stockInItem_ItemCode');
            cboItemDescriptionArticleItems = new wijmo.input.ComboBox('#stockInItem_ItemDescription');
            cboStockInUnit = new wijmo.input.ComboBox('#stockInItem_Unit');
            cboBaseUnit = new wijmo.input.ComboBox('#stockInItem_BUCUnit');

            items = new wijmo.collections.CollectionView(getItem());

            // Flex Grid for Items
            itemGrid = new wijmo.grid.FlexGrid('#ItemGrid');
            itemGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Code",
                                "binding": "ItemCode",
                                "allowSorting": true,
                                "width": 60
                            },
                            {
                                "header": "Item",
                                "binding": "Item",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": 90
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Cost",
                                "binding": "Cost",
                                "allowSorting": true,
                                "width": 100
                            },
                             {
                                 "header": "Amount",
                                 "binding": "Amount",
                                 "allowSorting": true,
                                 "width": 100
                             },
                             {
                                 "header": "Unit",
                                 "binding": "BaseUnit",
                                 "allowSorting": true,
                                 "width": 100
                             },
                            {
                                "header": "Quantity",
                                "binding": "BaseQuantity",
                                "allowSorting": true,
                                "width": 90
                            },
                           {
                               "header": "Cost",
                               "binding": "BaseCost",
                               "allowSorting": true,
                               "width": 100
                           },
                ],
                autoGenerateColumns: false,
                itemsSource: items,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            itemGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            itemGrid.columnHeaders.rows.push(hr);
            itemGrid.columnHeaders.rows[0].allowMerging = true;

            itemGrid.columnHeaders.columns[0].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 0, 'Edit');

            itemGrid.columnHeaders.columns[1].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 1, 'Delete');

            itemGrid.columnHeaders.columns[2].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 2, 'Code');

            itemGrid.columnHeaders.columns[3].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 3, 'Item');

            itemGrid.columnHeaders.columns[4].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 4, 'Particulars');

            itemGrid.columnHeaders.columns[5].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 5, 'Quantity');

            itemGrid.columnHeaders.columns[6].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 6, 'Unit');

            itemGrid.columnHeaders.columns[7].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 7, 'Cost');

            itemGrid.columnHeaders.columns[8].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 8, 'Amount');

            for (var columnBasicUnitConversion = 9; columnBasicUnitConversion <= 11; columnBasicUnitConversion++) {
                itemGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Basic Unit Conversion');
            }
        }
    </script>

    <!-- ========================= -->
    <!-- Inventory Entries Scripts -->
    <!-- ========================= -->
    <script type="text/javascript">
        // ======================================
        // Global Variables for Inventory Entries
        // ======================================
        var inventoryEntries;
        var inventoryEntryGrid;
        // ==================
        // GET Inventory List
        // ==================
        function getInventoryEntries() {
            var inventoryEntries = new wijmo.collections.ObservableArray;
            var stockInId = getParam("StockInId");
            NProgress.start();
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/listInventoryByINId/' + stockInId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            for (i = 0; i < Results.length; i++) {
                                inventoryEntries.push({
                                    EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                    Id: Results[i]["Id"],
                                    BranchId: Results[i]["BranchId"],
                                    Branch: Results[i]["Branch"],
                                    InventoryDate: Results[i]["InventoryDate"],
                                    ArticleId: Results[i]["ArticleId"],
                                    Article: Results[i]["Article"],
                                    ArticleInventoryId: Results[i]["ArticleInventoryId"],
                                    RRId: Results[i]["RRId"],
                                    SIId: Results[i]["SIId"],
                                    INId: Results[i]["INId"],
                                    OTId: Results[i]["OTId"],
                                    STId: Results[i]["STId"],
                                    QuantityIn: Results[i]["QuantityIn"],
                                    Quantity: Results[i]["Quantity"],
                                    QuantityOut: Results[i]["QuantityOut"],
                                    Amount: Results[i]["Amount"],
                                    Particulars: Results[i]["Particulars"],
                                    Code: Results[i]["Code"],
                                    Unit: Results[i]["Unit"]
                                });
                            }
                        }
                        NProgress.done();
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            } else {
                NProgress.done();
            }
            return inventoryEntries;
        }

        // ========================================
        // FlexGrid Selection for Inventory Entries
        // ========================================
        function updateDetailsInventoryEntry() {
            var item = inventoryEntries.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ==================================
        // On Page Load for Inventory Entries
        // ==================================
        function inventoryEntryTab() {
            inventoryEntries = new wijmo.collections.CollectionView(getInventoryEntries());

            // Flex Grid for Inventory Entries
            inventoryEntryGrid = new wijmo.grid.FlexGrid('#InventoryEntryGrid');
            inventoryEntryGrid.initialize({
                columns: [
                            {
                                "header": "Date",
                                "binding": "InventoryDate",
                                "allowSorting": true,
                                "width": 80,
                            },
                            {
                                "header": "Branch",
                                "binding": "Branch",
                                "allowSorting": true,
                                "width": 150,
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "align": "left",
                                "allowSorting": true,
                                "width": 165,
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "align": "left",
                                "allowSorting": true,
                                "width": 170,
                            },
                            {
                                "header": "Inventory Code",
                                "binding": "Code",
                                "allowSorting": true,
                                "width": 160,
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": 110,
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": 118,
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": 150,
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryEntries,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntryGrid.trackChanges = true;
        }
    </script>

    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        var journals;
        var journalListGrid;

        // ===========
        // Get Journal
        // ===========
        function getJournalListForStockIn() {
            var journals = new wijmo.collections.ObservableArray;
            var stockInId = getParam("StockInId");
            //$('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listJournalByINId/' + stockInId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    //$('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            journals.push({
                                //EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdJournalVoucherLineEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                //DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdJournalVoucherLineDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: Results[i]["Id"],
                                JournalDate: Results[i]["JournalDate"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                AccountId: Results[i]["AccountId"],
                                AccountCode: Results[i]["AccountCode"],
                                Account: Results[i]["Account"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                Particulars: Results[i]["Particulars"],
                                DebitAmount: Results[i]["DebitAmount"],
                                CreditAmount: Results[i]["CreditAmount"],
                                ORId: Results[i]["ORId"],
                                CVId: Results[i]["CVId"],
                                JVId: Results[i]["JVId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"],
                                DocumentReference: Results[i]["DocumentReference"],
                                APRRId: Results[i]["APRRId"],
                                ARSIId: Results[i]["ARSIId"]
                            });

                            var debitAmountTotal = 0;
                            var creditAmountTotal = 0;

                            var a = 0;
                            while (a < Results.length) {
                                debitAmountTotal += Results[a]["DebitAmount"];
                                creditAmountTotal += Results[a]["CreditAmount"];
                                a++;
                            }
                        }

                        document.getElementById('totalDebitInJournal').innerHTML = debitAmountTotal.toLocaleString();
                        document.getElementById('totalCreditInJournal').innerHTML = creditAmountTotal.toLocaleString();
                        var variance = debitAmountTotal - creditAmountTotal;
                        document.getElementById('variance').innerHTML = variance.toLocaleString();
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return journals;
        }

        // ============
        // Journal List
        // ============
        function stockInJournal_OnClick() {
            journals = new wijmo.collections.CollectionView(getJournalListForStockIn());

            document.getElementById("loadingJournalGridList").innerHTML = '<i class="fa fa-spinner fa-spin"></i> Loading Journal...';

            $("#loadingJournalGridList").show();
            $("#journal_Content").hide();
            setTimeout(function () {
                $("#loadingJournalGridList").hide();
                $("#journal_Content").show();
                // Flex Grid
                journalListGrid = new wijmo.grid.FlexGrid('#journalGrid');
                journalListGrid.initialize({
                    columns: [
                                 {
                                     "header": "Branch",
                                     "binding": "Branch",
                                     "allowSorting": true,
                                     "width": 150
                                 },
                                {
                                    "header": "Code",
                                    "binding": "AccountCode",
                                    "allowSorting": true,
                                    "width": 60
                                },
                                {
                                    "header": "Account",
                                    "binding": "Account",
                                    "allowSorting": true,
                                    "width": 200
                                },
                                {
                                    "header": "Article",
                                    "binding": "Article",
                                    "allowSorting": true,
                                    "width": 162
                                },
                                {
                                    "header": "Debit",
                                    "binding": "DebitAmount",
                                    "allowSorting": true,
                                    "width": 130
                                }
                                ,
                                {
                                    "header": "Credit",
                                    "binding": "CreditAmount",
                                    "allowSorting": true,
                                    "width": 130
                                },
                                {
                                    "header": "Date",
                                    "binding": "JournalDate",
                                    "allowSorting": true,
                                    "width": 80,
                                }
                    ],
                    autoGenerateColumns: false,
                    itemsSource: journals,
                    isReadOnly: true,
                    autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                    allowDragging: wijmo.grid.AllowDragging.None,
                    selectionMode: wijmo.grid.SelectionMode.Row
                });

                journalListGrid.trackChanges = true;
            }, 1000);
        }

        // journal detail
        $('#cmdStockInJournal').click(function () {
            $('#journalDetail').modal({
                show: true,
                backdrop: 'static'
            });

            window.stockInJournal_OnClick = function () {
                return true;
            };
        });


        // ====
        // TABS
        // ====
        $('#itemTabId').click(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            window.itemTab = function () {
                return true;
            };
        });

        $('#inventoryEntryTabId').click(function () {
            $('#Items').hide();
            $('#InventoryEntries').show();
            inventoryEntryTab();
            window.inventoryEntryTab = function () {
                return true;
            };
        });

        // On load page
        $(document).ready(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            itemTab();
        });
    </script>
</body>
</html>