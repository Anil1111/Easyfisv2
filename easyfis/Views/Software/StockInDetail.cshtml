@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock In Detail</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock In Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        =============================================
                        Options: Lock, Unlock, Print and Close Button
                        =============================================
                    -->
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-2">
                                <button class="btn btn-primary" id="btnStockInSave" onclick="btnStockInSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                            </div>
                            <div class="col-md-10" align="right">
                                <button class="btn btn-primary" id="btnStockInJournal" onclick="btnStockInJournalOnclick()"><i class="fa fa-book"></i> Journal</button>
                                @{
                                    if (canLock)
                                    {
                                        <button class="btn btn-primary" id="btnStockInLock" onclick="btnStockInLockOnclick()"><i class=" fa fa-lock"></i> Lock</button>
                                    }
                                    if (canUnlock)
                                    {
                                        <button class="btn btn-primary" id="btnStockInUnlock" onclick="btnStockInUnlockOnclick()"><i class=" fa fa-unlock"></i> Unlock</button>
                                    }
                                    if (canPrint)
                                    {
                                        <button class="btn btn-primary" id="btnStockInPrint" onclick="btnStockInPrintOnclick()"><i class="fa fa-print"></i> Print</button>
                                    }
                                }
                                <button class="btn btn-danger" id="btnStockInClose" onclick="window.location.href='/Software/StockIn'"><i class=" fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>

                    <!--
                        ======================================
                        Details, Fields and Other Informations
                        ======================================
                    -->
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Branch</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockInBranch"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">IN Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredStockIn" id="inpStockInINNumber" placeholder="IN Number" disabled />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">IN Date</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockInINDate"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Account</label>
                                        <div class="col-sm-8">
                                            <table style="width: 100%" border="0">
                                                <tr>
                                                    <td style="width: 30%">
                                                        <div class="" id="cboStockInAccountCode"></div>
                                                    </td>
                                                    <td style="width: 1%"></td>
                                                    <td style="width: 69%">
                                                        <div class="" id="cboStockInAccount"></div>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Article</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockInArticle"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Particulars</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredStockIn" id="inpStockInParticulars" placeholder="Particulars"></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Status</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockInStatus"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Manual IN Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control  requiredStockIn" id="cboStockInManualINNumber" placeholder="Manual IN Number">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Is Produce</label>
                                        <div class="col-sm-8">
                                            <input type="checkbox" id="inpStockInIsProduce">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Prepared by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockInPreparedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Checked by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockInCheckedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Approved by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockInApprovedBy"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <!--
                    ====================================
                    Stock In Items and Inventory Entries
                    ====================================
                -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#tabPaneStockInItems" id="tabStockInItems">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#tabPaneInventoryEntries" id="tabInventoryEntries">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">

                    <!--
                        =================
                        Stock In Item Tab
                        =================
                    -->
                    <div id="tabPaneStockInItems" class="tab-pane active">
                        <div class="panel panel-default">

                            <!--
                                ==================================================================
                                Stock In Item: Search, Filter, Display Number of Rows and  Buttons
                                ===================================================================
                            -->
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpStockInItemsSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboStockInItemsShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right">
                                            @{
                                                if (canAdd)
                                                {
                                                    <button class="btn btn-primary" id="btnStockInItemsAdd" onclick="btnStockInItemsAddOnclick()"><i class="fa fa-plus"></i> Add</button>
                                                    <button class="btn btn-primary" id="btnItemQuery" onclick="btnItemQueryOnclick()"><i class="fa fa-search-plus"></i> Item Query</button>
                                                }
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                ========================
                                Stock In Item: Flex Grid
                                ========================
                            -->
                            <div class="panel-body">
                                <div id="stockInItemsFlexGrid" class="grid"></div>
                            </div>

                            <!--
                                =================================
                                Stock In Item: Navigation Buttons
                                =================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="stockInItemsNavigationPageGridItem">
                                        <button type="button" class="btn btn-default border-custom" id="btnStockInItemsMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockInItemsMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnStockInItemsCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockInItemsMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockInItemsMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--
                            =====================
                            Stock In Item: Totals
                            =====================
                        -->
                        <div class="panel panel-default">
                            <div class="panel-body" style="padding-bottom: 0px;">
                                <div class="row">
                                    <div class="col-md-6"></div>
                                    <div class="col-md-6">
                                        <dl class="dl-horizontal">
                                            <dt>
                                                <b>Total Amount</b>
                                            </dt>
                                            <dd>
                                                <input type="text" class="form-control numberField" id="inpTotalStockInAmount" placeholder="0.00" disabled />
                                            </dd>
                                        </dl>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!--
                        =====================
                        Inventory Entries Tab
                        =====================
                    -->
                    <div id="tabPaneInventoryEntries" class="tab-pane">
                        <div class="panel panel-default">

                            <!--
                                ======================================================================
                                Inventory Entries: Search, Filter, Display Number of Rows and  Buttons
                                ======================================================================
                            -->
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpInventoryEntriesSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboInventoryEntriesShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right"></td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                ============================
                                Inventory Entries: Flex Grid
                                ============================
                            -->
                            <div class="panel-body">
                                <div id="inventoryEntriesFlexGrid" class="grid"></div>
                            </div>

                            <!--
                                =====================================
                                Inventory Entries: Navigation Buttons
                                =====================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="inventoryEntriesNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnInventoryEntriesCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ==========
                    User Stamp
                    ==========
                -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!--
        ===========================
        Stock In Item: Detail Modal
        ===========================
    -->
    <div class="modal fade" id="stockInItemsDetailModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="stockInItemsModalLabel">Stock In Item</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="stockInItemLoading"></span>
                    </center>
                    <div id="stockInItemContent">
                        <dl class="dl-horizontal">
                            <dt>Item</dt>
                            <dd>
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 30%">
                                            <div class="comboBox-wide" id="cboStockInItemCode"></div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 69%">
                                            <div class="comboBox-wide" id="cboStockInItemDescription"></div>
                                        </td>
                                    </tr>
                                </table>
                            </dd>
                            <dt>Particulars</dt>
                            <dd>
                                <textarea rows="5" class="form-control textarea-custom requiredStockInItem" id="inpStockInItemParticulars"></textarea>
                            </dd>
                            <dt>Quantity</dt>
                            <dd>
                                <input type="text" class="form-control  numberField  requiredStockInItem" id="inpStockInItemQuantity" placeholder="0.00" />
                            </dd>
                            <dt>Unit</dt>
                            <dd>
                                <div class="comboBox-wide" id="cboStockInItemUnit"></div>
                            </dd>
                            <dt>Cost</dt>
                            <dd>
                                <input type="text" class="form-control  numberField  requiredStockInItem" id="inpStockInItemCost" placeholder="0.00" />
                            </dd>
                            <dt>Amount</dt>
                            <dd>
                                <input type="text" class="form-control  numberField  requiredStockInItem" id="inpStockInItemAmount" placeholder="0.00" disabled />
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnStockInItemSave" class="btn btn-primary" onclick="btnStockInItemSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                    <button id="btnStockInItemCloseDetailModal" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ===================================
        Stock In Item: Delete Confirm Modal
        ===================================
    -->
    <div class="modal fade" id="stockInItemsConfirmDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Delete Stock In Item?
                </div>
                <div class="modal-footer">
                    <button id="btnStockInItemsConfirmDelete" class="btn btn-danger" onclick="btnStockInItemsConfirmDeleteOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="btnStockInItemsConfirmDeleteCloseModal" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        =====================
        Journal Entries Modal
        =====================
    -->
    <div class="modal fade" id="journalEntryModal" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"> Journal </h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="journalLoading"></span>
                    </center>
                    <div id="journalContent">
                        <div id="journalFlexGrid" style="max-height: 250px;"></div>
                        <br /><br />
                        <div class="row">
                            <div class="col-md-7"></div>
                            <div class="col-md-5">
                                <dl class="dl-horizontal">
                                    <dt>
                                        <b>Total Debit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpJournalTotalDebit" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Credit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpJournalTotalCredit" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Variance</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpJournalVariance" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ================
        Item Query Modal
        ================
    -->
    <div class="modal fade" id="itemQueryModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Item Query</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="itemQueryLoading"></span>
                    </center>
                    <div id="itemQueryContent">
                        <div class="panel panel-default">

                            <!--
                                =========================
                                Item Query: Search Filter
                                =========================
                            -->
                            <div class="panel-heading">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control" id="inpItemQuerySearchFilter" placeholder="Search">
                                </div>
                            </div>

                            <!--
                                =====================
                                Item Query: Flex Grid
                                =====================
                            -->
                            <div class="panel-body">
                                <div id="itemQueryFlexGrid"></div>
                            </div>

                            <!--
                                ==============================
                                Item Query: Navigation Buttons
                                ==============================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="ItemQueryNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnItemQueryCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // =====================================
        // Stock In Detail Combo Data and Fields
        // =====================================
        var cboStockInBranch = new wijmo.input.ComboBox('#cboStockInBranch');
        var cboStockInAccountCode = new wijmo.input.ComboBox('#cboStockInAccountCode');
        var cboStockInAccount = new wijmo.input.ComboBox('#cboStockInAccount');
        var isAccountChanged = false;
        var cboStockInArticle = new wijmo.input.ComboBox('#cboStockInArticle');
        var articleIdSelectedId = 0;
        var cboStockInPreparedBy = new wijmo.input.ComboBox('#cboStockInPreparedBy');
        var cboStockInCheckedBy = new wijmo.input.ComboBox('#cboStockInCheckedBy');
        var cboStockInApprovedBy = new wijmo.input.ComboBox('#cboStockInApprovedBy');
        var cboStockInStatus = new wijmo.input.ComboBox('#cboStockInStatus');
        var cboStockInINDate = new wijmo.input.InputDate('#cboStockInINDate');
        var isLocked = false;

        // ===============================================================
        // Stock In Item Collection View, Flex Grid and Navigation Buttons
        // ===============================================================
        var stockInItemsCollectionView;
        var stockInItemsFlexGrid;
        var cboStockInItemsShowNumberOfRows = new wijmo.input.ComboBox('#cboStockInItemsShowNumberOfRows');
        var btnStockInItemsMoveToFirstPageGrid = document.getElementById('btnStockInItemsMoveToFirstPageGrid');
        var btnStockInItemsMoveToPreviousPageGrid = document.getElementById('btnStockInItemsMoveToPreviousPageGrid');
        var btnStockInItemsMoveToNextPageGrid = document.getElementById('btnStockInItemsMoveToNextPageGrid');
        var btnStockInItemsMoveToLastPageGrid = document.getElementById('btnStockInItemsMoveToLastPageGrid');
        var btnStockInItemsCurrentPageGrid = document.getElementById('btnStockInItemsCurrentPageGrid');

        // ===================================
        // Stock In Item Combo Data and Fields
        // ===================================
        var stockInItemId = 0;
        var cboStockInItemCode = new wijmo.input.ComboBox('#cboStockInItemCode');
        var cboStockInItemDescription = new wijmo.input.ComboBox('#cboStockInItemDescription');
        var cboStockInItemUnit = new wijmo.input.ComboBox('#cboStockInItemUnit');

        // =============================================
        // Journal Entries Collection View and Flex Grid
        // =============================================
        var journalCollectionView;
        var journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');

        // ===================================================================
        // Inventory Entries Collection View, Flex Grid and Navigation Buttons
        // ===================================================================
        var inventoryCollectionView;
        var inventoryFlexGrid;
        var cboInventoryEntriesShowNumberOfRows = new wijmo.input.ComboBox('#cboInventoryEntriesShowNumberOfRows');
        var btnInventoryEntriesMoveToFirstPageGrid = document.getElementById('btnInventoryEntriesMoveToFirstPageGrid');
        var btnInventoryEntriesMoveToPreviousPageGrid = document.getElementById('btnInventoryEntriesMoveToPreviousPageGrid');
        var btnInventoryEntriesMoveToNextPageGrid = document.getElementById('btnInventoryEntriesMoveToNextPageGrid');
        var btnInventoryEntriesMoveToLastPageGrid = document.getElementById('btnInventoryEntriesMoveToLastPageGrid');

        // ============================================================
        // Item Query Collection View, Flex Grid and Navigation Buttons
        // ============================================================
        var itemQueryCollectionView;
        var itemQueryFlexGrid = new wijmo.grid.FlexGrid('#itemQueryFlexGrid');
        var btnItemQueryMoveToFirstPageGrid = document.getElementById('btnItemQueryMoveToFirstPageGrid');
        var btnItemQueryMoveToPreviousPageGrid = document.getElementById('btnItemQueryMoveToPreviousPageGrid');
        var btnItemQueryMoveToNextPageGrid = document.getElementById('btnItemQueryMoveToNextPageGrid');
        var btnItemQueryMoveToLastPageGrid = document.getElementById('btnItemQueryMoveToLastPageGrid');
        var btnItemQueryCurrentPageGrid = document.getElementById('btnItemQueryCurrentPageGrid');
        var isBtnItemQueryClicked = false;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getURLParameterValue(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ===================================
        // Create Stock In Detail Combo Branch
        // ===================================
        function createCboStockInDetailBranch() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockIn/dropdown/list/branch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branchesObservableArray.push({
                                Id: results[i]["Id"],
                                Branch: results[i]["Branch"]
                            });
                        }
                    }

                    cboStockInBranch.dispose();
                    cboStockInBranch = new wijmo.input.ComboBox('#cboStockInBranch', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id"
                    });

                    createCboStockInDetailAccount();
                }
            });
        }

        // ====================================
        // Create Stock In Detail Combo Account
        // ====================================
        function createCboStockInDetailAccount() {
            var accountsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockIn/dropdown/list/account',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accountsObservableArray.push({
                                Id: results[i]["Id"],
                                AccountCode: results[i]["AccountCode"],
                                Account: results[i]["Account"]
                            });
                        }
                    }

                    cboStockInAccountCode.dispose();
                    cboStockInAccountCode = new wijmo.input.ComboBox('#cboStockInAccountCode', {
                        isEditable: false,
                        placeholder: "Select Code",
                        itemsSource: accountsObservableArray,
                        displayMemberPath: "AccountCode",
                        selectedValuePath: "Id",
                        onSelectedIndexChanged: function () {
                            cboStockInAccount.selectedValue = this.selectedValue;
                        }
                    });

                    cboStockInAccount.dispose();
                    cboStockInAccount = new wijmo.input.ComboBox('#cboStockInAccount', {
                        isEditable: false,
                        placeholder: "Select Account",
                        itemsSource: accountsObservableArray,
                        displayMemberPath: "Account",
                        selectedValuePath: "Id",
                        onSelectedIndexChanged: function () {
                            cboStockInAccountCode.selectedValue = this.selectedValue;
                            isAccountChanged = true;

                            createCboStockInDetailArticle();
                        }
                    });

                    createCboStockInDetailArticle();
                }
            });
        }

        // ====================================
        // Create Stock In Detail Combo Article
        // ====================================
        function createCboStockInDetailArticle() {
            var articlesObservableArray = new wijmo.collections.ObservableArray();
            if (cboStockInAccount.selectedValue != null) {
                $.ajax({
                    url: '/api/stockIn/dropdown/list/article/' + cboStockInAccount.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                articlesObservableArray.push({
                                    Id: results[i]["Id"],
                                    Article: results[i]["Article"]
                                });
                            }
                        }

                        var disabled = true;
                        if (!isLocked) {
                            if (results.length > 0) {
                                disabled = false;
                            }
                        }

                        cboStockInArticle.dispose();
                        cboStockInArticle = new wijmo.input.ComboBox('#cboStockInArticle', {
                            disabled: disabled,
                            isEditable: false,
                            placeholder: "Select Article",
                            itemsSource: articlesObservableArray,
                            displayMemberPath: "Article",
                            selectedValuePath: "Id",
                            selectedValue: articleIdSelectedId
                        });

                        if (!isAccountChanged) {
                            createCboStockInDetailUsers();
                        }
                    }
                });
            } else {
                cboStockInArticle.dispose();
                cboStockInArticle = new wijmo.input.ComboBox('#cboStockInArticle', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: articlesObservableArray,
                });

                if (!isAccountChanged) {
                    createCboStockInDetailUsers();
                }
            }
        }

        // ==================================
        // Create Stock In Detail Combo Users
        // ==================================
        function createCboStockInDetailUsers() {
            var usersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockIn/dropdown/list/users',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            usersObservableArray.push({
                                Id: results[i]["Id"],
                                FullName: results[i]["FullName"]
                            });
                        }
                    }

                    cboStockInPreparedBy.dispose();
                    cboStockInPreparedBy = new wijmo.input.ComboBox('#cboStockInPreparedBy', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockInCheckedBy.dispose();
                    cboStockInCheckedBy = new wijmo.input.ComboBox('#cboStockInCheckedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockInApprovedBy.dispose();
                    cboStockInApprovedBy = new wijmo.input.ComboBox('#cboStockInApprovedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    createCboStockInDetailStatus();
                }
            });
        }

        // ===================================
        // Create Stock In Detail Combo Status
        // ===================================
        function createCboStockInDetailStatus() {
            var statusObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockIn/dropdown/list/status',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    var disabled = false;

                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            statusObservableArray.push({
                                Id: results[i]["Id"],
                                Status: results[i]["Status"]
                            });
                        }
                    } else {
                        disabled = true;
                    }

                    cboStockInStatus.dispose();
                    cboStockInStatus = new wijmo.input.ComboBox('#cboStockInStatus', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: statusObservableArray,
                        displayMemberPath: "Status",
                        selectedValuePath: "Status"
                    });

                    getStockInData();
                }
            });
        }

        // ========================
        // Get Stock In Detail Data
        // ========================
        function getStockInData() {
            if (document.location.search.length > 0) {
                var stockInId = getURLParameterValue("id");
                $.ajax({
                    url: '/api/stockIn/detail/' + stockInId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results != null) {
                            cboStockInBranch.selectedValue = results.BranchId;
                            document.getElementById('inpStockInINNumber').value = results.INNumber;
                            cboStockInINDate.dispose();
                            cboStockInINDate = new wijmo.input.InputDate('#cboStockInINDate', {
                                format: 'MM-dd-yyyy',
                                value: new Date(results.cboStockInINDate),
                            });
                            cboStockInAccountCode.selectedValue = results.AccountId;
                            cboStockInAccount.selectedValue = results.AccountId;
                            cboStockInArticle.selectedValue = results.ArticleId;
                            articleIdSelectedId = results.ArticleId;
                            document.getElementById('inpStockInParticulars').value = results.Particulars;
                            document.getElementById('cboStockInManualINNumber').value = results.ManualINNumber
                            document.getElementById('inpStockInIsProduce').checked = results.IsProduced;
                            cboStockInPreparedBy.selectedValue = results.PreparedById;
                            cboStockInCheckedBy.selectedValue = results.CheckedById;
                            cboStockInApprovedBy.selectedValue = results.ApprovedById;
                            cboStockInStatus.selectedValue = results.Status;

                            document.getElementById('createdBy').innerHTML = results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = results.UpdatedDateTime;

                            if (results.IsLocked) {
                                cboStockInBranch.disabled = true;
                                cboStockInINDate.disabled = true;
                                cboStockInAccountCode.disabled = true;
                                cboStockInAccount.disabled = true;
                                cboStockInArticle.disabled = true;
                                document.getElementById('inpStockInParticulars').disabled = true;
                                document.getElementById('cboStockInManualINNumber').disabled = true;
                                document.getElementById('inpStockInIsProduce').disabled = true;
                                cboStockInPreparedBy.disabled = true;
                                cboStockInCheckedBy.disabled = true;
                                cboStockInApprovedBy.disabled = true;
                                cboStockInStatus.disabled = true;

                                $("#btnStockInSave").prop("disabled", true);
                                $("#btnStockInLock").prop("disabled", true);
                                $("#btnStockInItemsAdd").prop("disabled", true);
                                $("#btnItemQuery").prop("disabled", true);

                                isLocked = true;
                            } else {
                                $("#btnStockInJournal").prop("disabled", true);
                                $("#btnStockInUnlock").prop("disabled", true);
                                $("#btnStockInPrint").prop("disabled", true);
                            }

                            createCboShowRows();
                            createStockInItemsFlexGrid();
                            createInventoryEntriesFlexGrid();
                        } else {
                            alert("No Data");
                            window.location = "/Software/StockIn";
                        }
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/StockIn";
            }
        }

        // =============
        // Save Stock In
        // =============
        function btnStockInSaveOnclick() {
            var stockInObject = new Object();
            stockInObject.BranchId = cboStockInBranch.selectedValue;
            stockInObject.INNumber = document.getElementById('inpStockInINNumber').value;
            stockInObject.INDate = cboStockInINDate.value.toLocaleDateString();
            stockInObject.AccountId = cboStockInAccount.selectedValue;
            stockInObject.ArticleId = cboStockInArticle.selectedValue;
            stockInObject.Particulars = document.getElementById('inpStockInParticulars').value;
            stockInObject.ManualINNumber = document.getElementById('cboStockInManualINNumber').value;
            stockInObject.IsProduced = document.getElementById('inpStockInIsProduce').checked;
            stockInObject.PreparedById = cboStockInPreparedBy.selectedValue;
            stockInObject.CheckedById = cboStockInCheckedBy.selectedValue;
            stockInObject.ApprovedById = cboStockInApprovedBy.selectedValue;
            stockInObject.Status = cboStockInStatus.selectedValue;
            var data = JSON.stringify(stockInObject);

            var isValid = true;
            $('.requiredStockIn').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                var id = getURLParameterValue("id");

                document.getElementById('btnStockInSave').innerHTML = "<i class='fa fa-save'></i> Saving...";
                $("#btnStockInSave").prop("disabled", true);
                $("#btnStockInJournal").prop("disabled", true);
                $("#btnStockInLock").prop("disabled", true);
                $("#btnStockInUnlock").prop("disabled", true);
                $("#btnStockInPrint").prop("disabled", true);
                $("#btnStockInClose").prop("disabled", true);

                $.ajax({
                    type: "PUT",
                    url: '/api/stockIn/save/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Save Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnStockInSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockInSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockInJournal").prop("disabled", false);
                                $("#btnStockInUnlock").prop("disabled", false);
                                $("#btnStockInPrint").prop("disabled", false);
                            } else {
                                $("#btnStockInLock").prop("disabled", false);
                            }

                            $("#btnStockInClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnStockInSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockInSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockInJournal").prop("disabled", false);
                                $("#btnStockInUnlock").prop("disabled", false);
                                $("#btnStockInPrint").prop("disabled", false);
                            } else {
                                $("#btnStockInLock").prop("disabled", false);
                            }

                            $("#btnStockInClose").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnStockInSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockInSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockInJournal").prop("disabled", false);
                                $("#btnStockInUnlock").prop("disabled", false);
                                $("#btnStockInPrint").prop("disabled", false);
                            } else {
                                $("#btnStockInLock").prop("disabled", false);
                            }

                            $("#btnStockInClose").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =============
        // Lock Stock In
        // =============
        function btnStockInLockOnclick() {
            var stockInObject = new Object();
            stockInObject.BranchId = cboStockInBranch.selectedValue;
            stockInObject.INNumber = document.getElementById('inpStockInINNumber').value;
            stockInObject.INDate = cboStockInINDate.value.toLocaleDateString();
            stockInObject.AccountId = cboStockInAccount.selectedValue;
            stockInObject.ArticleId = cboStockInArticle.selectedValue;
            stockInObject.Particulars = document.getElementById('inpStockInParticulars').value;
            stockInObject.ManualINNumber = document.getElementById('cboStockInManualINNumber').value;
            stockInObject.IsProduced = document.getElementById('inpStockInIsProduce').checked;
            stockInObject.PreparedById = cboStockInPreparedBy.selectedValue;
            stockInObject.CheckedById = cboStockInCheckedBy.selectedValue;
            stockInObject.ApprovedById = cboStockInApprovedBy.selectedValue;
            stockInObject.Status = cboStockInStatus.selectedValue;
            var data = JSON.stringify(stockInObject);

            var isValid = true;
            $('.requiredStockIn').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {

                var id = getURLParameterValue("id");

                document.getElementById('btnStockInLock').innerHTML = "<i class='fa fa-lock'></i> Locking...";
                $("#btnStockInSave").prop("disabled", true);
                $("#btnStockInJournal").prop("disabled", true);
                $("#btnStockInLock").prop("disabled", true);
                $("#btnStockInUnlock").prop("disabled", true);
                $("#btnStockInPrint").prop("disabled", true);
                $("#btnStockInClose").prop("disabled", true);

                $.ajax({
                    type: "PUT",
                    url: '/api/stockIn/lock/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnStockInLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockInSave").prop("disabled", false);
                            $("#btnStockInLock").prop("disabled", false);
                            $("#btnStockInClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnStockInLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockInSave").prop("disabled", false);
                            $("#btnStockInLock").prop("disabled", false);
                            $("#btnStockInClose").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnStockInLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockInSave").prop("disabled", false);
                            $("#btnStockInLock").prop("disabled", false);
                            $("#btnStockInClose").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ===============
        // Unlock Stock In
        // ===============
        function btnStockInUnlockOnclick() {
            document.getElementById('btnStockInUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlocking...";
            $("#btnStockInJournal").prop("disabled", true);
            $("#btnStockInLock").prop("disabled", true);
            $("#btnStockInUnlock").prop("disabled", true);
            $("#btnStockInPrint").prop("disabled", true);
            $("#btnStockInClose").prop("disabled", true);

            var id = getURLParameterValue("id");

            $.ajax({
                type: "PUT",
                url: '/api/stockIn/unlock/' + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnStockInUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockInJournal").prop("disabled", false);
                        $("#btnStockInUnlock").prop("disabled", false);
                        $("#btnStockInPrint").prop("disabled", false);
                        $("#btnStockInClose").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnStockInUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockInJournal").prop("disabled", false);
                        $("#btnStockInUnlock").prop("disabled", false);
                        $("#btnStockInPrint").prop("disabled", false);
                        $("#btnStockInClose").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnStockInUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockInJournal").prop("disabled", false);
                        $("#btnStockInUnlock").prop("disabled", false);
                        $("#btnStockInPrint").prop("disabled", false);
                        $("#btnStockInClose").prop("disabled", false);
                    }
                }
            });
        }

        // ==============
        // Print Stock In
        // ==============
        function btnStockInPrintOnclick() {
            var stockInId = getURLParameterValue("id");
            var pirntLink = "/RepStockIn/StockIn?StockInId=" + stockInId;
            window.open(pirntLink, '_blank');
        }

        // =======================
        // Get Stock In Items Data
        // =======================
        function getStockInItemsData() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                var INId = getURLParameterValue("id");
                NProgress.start();
                $.ajax({
                    url: '/api/stockInItem/list/' + INId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        var totalAmount = 0;
                        if (results.length > 0) {
                            var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnStockInItemEditOnclick()'><i class='fa fa-edit'></i> Edit</button>";
                            var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnStockInItemDeleteOnclick()'><i class='fa fa-trash'></i> Delete</button>";
                            if (isLocked) {
                                btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnStockInItemEditOnclick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnStockInItemDeleteOnclick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                            }

                            for (i = 0; i < results.length; i++) {
                                itemsObservableArray.push({
                                    EditId: btnEditId,
                                    DeleteId: btnDeleteId,
                                    Id: results[i]["Id"],
                                    INId: results[i]["INId"],
                                    ItemId: results[i]["ItemId"],
                                    ItemCode: results[i]["ItemCode"],
                                    ItemManualArticleOldCode: results[i]["ItemManualArticleOldCode"],
                                    ItemDescription: results[i]["ItemDescription"],
                                    Particulars: results[i]["Particulars"],
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"],
                                    Quantity: results[i]["Quantity"],
                                    QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    Cost: results[i]["Cost"],
                                    CostDisplay: parseFloat(results[i]["Cost"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    Amount: results[i]["Amount"],
                                    AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    BaseUnitId: results[i]["BaseUnitId"],
                                    BaseUnit: results[i]["BaseUnit"],
                                    BaseQuantity: results[i]["BaseQuantity"],
                                    BaseQuantityDisplay: parseFloat(results[i]["BaseQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    BaseCost: results[i]["BaseCost"],
                                    BaseCostDisplay: parseFloat(results[i]["BaseCost"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                });

                                totalAmount += results[i]["Amount"];
                            }
                        }

                        document.getElementById('inpTotalStockInAmount').value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        NProgress.done();
                    }
                });
            }

            return itemsObservableArray;
        }

        // ===============================
        // Create Stock In Items Flex Grid
        // ===============================
        function createStockInItemsFlexGrid() {
            stockInItemsCollectionView = new wijmo.collections.CollectionView(getStockInItemsData());
            stockInItemsCollectionView.canFilter = true;
            stockInItemsCollectionView.pageSize = cboStockInItemsShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpStockInItemsSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockInItemsCollectionView.refresh();
            });

            stockInItemsCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            stockInItemsCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateStockInItemsNavigationButtons();
            });

            stockInItemsFlexGrid = new wijmo.grid.FlexGrid('#stockInItemsFlexGrid');
            stockInItemsFlexGrid.initialize({
                columns: [
                    @{
                        if (canEdit)
                        {
                            <text>
                                {
                                    "header": "Edit",
                                    "binding": "EditId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                        if (canDelete)
                        {
                            <text>
                                {
                                    "header": "Delete",
                                    "binding": "DeleteId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                    }
                    {
                        "header": "Barcode",
                        "binding": "ItemCode",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ItemManualArticleOldCode",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Description",
                        "binding": "ItemDescription",
                        "allowSorting": true,
                        "width": 180
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": 160
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 110
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 110
                    },
                    {
                        "header": "Cost",
                        "binding": "CostDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 110
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 110
                    },
                    {
                        "header": "Unit",
                        "binding": "BaseUnit",
                        "allowSorting": true,
                        "width": 110
                    },
                    {
                        "header": "Quantity",
                        "binding": "BaseQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 110
                    },
                    {
                        "header": "Cost",
                        "binding": "BaseCostDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 110
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: stockInItemsCollectionView,
                isReadOnly: true,
                @{
                    if (canEdit)
                    {
                        if (canDelete)
                        {
                            <text>
                                frozenColumns: 2,
                            </text>
                        }
                        else
                        {
                            <text>
                                frozenColumns: 1,
                            </text>
                        }
                    }
                    else
                    {
                        if (canDelete)
                        {
                            <text>
                                frozenColumns: 1,
                            </text>
                        }
                        else
                        {
                            <text>
                                frozenColumns: 0,
                            </text>
                        }
                    }
                }
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockInItemsFlexGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            stockInItemsFlexGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            stockInItemsFlexGrid.columnHeaders.rows.push(hr);
            stockInItemsFlexGrid.columnHeaders.rows[0].allowMerging = true;

            @{
                if (canEdit)
                {
                    if (canDelete)
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 12; i++) {
                                if (i == 0) {
                                    columnName = "Edit";
                                } else if (i == 1) {
                                    columnName = "Delete";
                                } else if (i == 2) {
                                    columnName = "Barcode";
                                } else if (i == 3) {
                                    columnName = "SKU Code";
                                } else if (i == 4) {
                                    columnName = "Description";
                                } else if (i == 5) {
                                    columnName = "Particulars";
                                } else if (i == 6) {
                                    columnName = "Quantity";
                                } else if (i == 7) {
                                    columnName = "Unit";
                                } else if (i == 8) {
                                    columnName = "Cost";
                                } else if (i == 9) {
                                    columnName = "Amount";
                                } else {
                                    columnName = "Basic Unit Conversion";
                                }

                                stockInItemsFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                stockInItemsFlexGrid.columnHeaders.setCellData(0, i, columnName);
                            }
                        </text>
                    }
                    else
                    {
                         <text>
                            var columnName = "";
                            for (var i = 0; i <= 11; i++) {
                                if (i == 0) {
                                    columnName = "Edit";
                                } else if (i == 1) {
                                    columnName = "Barcode";
                                } else if (i == 2) {
                                    columnName = "SKU Code";
                                } else if (i == 3) {
                                    columnName = "Description";
                                } else if (i == 4) {
                                    columnName = "Particulars";
                                } else if (i == 5) {
                                    columnName = "Quantity";
                                } else if (i == 6) {
                                    columnName = "Unit";
                                } else if (i == 7) {
                                    columnName = "Cost";
                                } else if (i == 8) {
                                    columnName = "Amount";
                                } else {
                                    columnName = "Basic Unit Conversion";
                                }

                                stockInItemsFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                stockInItemsFlexGrid.columnHeaders.setCellData(0, i, columnName);
                            }
                        </text>
                    }
                }
                else
                {
                    if (canDelete)
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 11; i++) {
                                if (i == 0) {
                                    columnName = "Delete";
                                } else if (i == 1) {
                                    columnName = "Barcode";
                                } else if (i == 2) {
                                    columnName = "SKU Code";
                                } else if (i == 3) {
                                    columnName = "Description";
                                } else if (i == 4) {
                                    columnName = "Particulars";
                                } else if (i == 5) {
                                    columnName = "Quantity";
                                } else if (i == 6) {
                                    columnName = "Unit";
                                } else if (i == 7) {
                                    columnName = "Cost";
                                } else if (i == 8) {
                                    columnName = "Amount";
                                } else {
                                    columnName = "Basic Unit Conversion";
                                }

                                stockInItemsFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                stockInItemsFlexGrid.columnHeaders.setCellData(0, i, columnName);
                            }
                        </text>
                    }
                    else
                    {
                         <text>
                            var columnName = "";
                            for (var i = 0; i <= 10; i++) {
                                if (i == 0) {
                                    columnName = "Barcode";
                                } else if (i == 1) {
                                    columnName = "SKU Code";
                                } else if (i == 2) {
                                    columnName = "Description";
                                } else if (i == 3) {
                                    columnName = "Particulars";
                                } else if (i == 4) {
                                    columnName = "Quantity";
                                } else if (i == 5) {
                                    columnName = "Unit";
                                } else if (i == 6) {
                                    columnName = "Cost";
                                } else if (i == 7) {
                                    columnName = "Amount";
                                } else {
                                    columnName = "Basic Unit Conversion";
                                }

                                stockInItemsFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                stockInItemsFlexGrid.columnHeaders.setCellData(0, i, columnName);
                            }
                        </text>
                    }
                }
            }

            updateStockInItemsNavigationButtons();

            btnStockInItemsMoveToFirstPageGrid.addEventListener('click', function () {
                stockInItemsCollectionView.moveToFirstPage();
                updateStockInItemsNavigationButtons();
            });

            btnStockInItemsMoveToPreviousPageGrid.addEventListener('click', function () {
                stockInItemsCollectionView.moveToPreviousPage();
                updateStockInItemsNavigationButtons();
            });

            btnStockInItemsMoveToNextPageGrid.addEventListener('click', function () {
                stockInItemsCollectionView.moveToNextPage();
                updateStockInItemsNavigationButtons();
            });

            btnStockInItemsMoveToLastPageGrid.addEventListener('click', function () {
                stockInItemsCollectionView.moveToLastPage();
                updateStockInItemsNavigationButtons();
            });
        }

        // ========================================
        // Update Stock In Items Navigation Buttons
        // ========================================
        function updateStockInItemsNavigationButtons() {
            if (stockInItemsCollectionView.pageSize <= 0) {
                document.getElementById('stockInItemsNavigationPageGridItem').style.display = 'none';
                return;
            }
            document.getElementById('stockInItemsNavigationPageGridItem').style.display = 'block';
            if (stockInItemsCollectionView.pageIndex === 0) {
                btnStockInItemsMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnStockInItemsMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnStockInItemsMoveToNextPageGrid.removeAttribute('disabled');
                btnStockInItemsMoveToLastPageGrid.removeAttribute('disabled');
            } else if (stockInItemsCollectionView.pageIndex === (stockInItemsCollectionView.pageCount - 1)) {
                btnStockInItemsMoveToFirstPageGrid.removeAttribute('disabled');
                btnStockInItemsMoveToPreviousPageGrid.removeAttribute('disabled');
                btnStockInItemsMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnStockInItemsMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnStockInItemsMoveToFirstPageGrid.removeAttribute('disabled');
                btnStockInItemsMoveToPreviousPageGrid.removeAttribute('disabled');
                btnStockInItemsMoveToNextPageGrid.removeAttribute('disabled');
                btnStockInItemsMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnStockInItemsCurrentPageGrid.innerHTML = (stockInItemsCollectionView.pageIndex + 1) + ' / ' + stockInItemsCollectionView.pageCount;
        }

        // ================================
        // Refresh Stock In Items Flex Grid
        // ================================
        function refreshStockInItemsFlexGrid() {
            stockInItemsCollectionView = new wijmo.collections.CollectionView(getStockInItemsData());
            stockInItemsCollectionView.canFilter = true;
            stockInItemsCollectionView.pageSize = cboStockInItemsShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpStockInItemsSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockInItemsCollectionView.refresh();
            });

            stockInItemsCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            stockInItemsCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateStockInItemsNavigationButtons();
            });

            stockInItemsFlexGrid.itemsSource = stockInItemsCollectionView;
            stockInItemsFlexGrid.trackChanges = true;
        }

        // ===============
        // Show Rows Table
        // ===============
        function createCboShowRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboStockInItemsShowNumberOfRows.dispose();
            cboStockInItemsShowNumberOfRows = new wijmo.input.ComboBox('#cboStockInItemsShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboStockInItemsShowNumberOfRows.selectedValue;
                        stockInItemsCollectionView.pageSize = parseInt(numberOfRows);
                        stockInItemsCollectionView.refresh();
                        stockInItemsFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });

            cboInventoryEntriesShowNumberOfRows.dispose();
            cboInventoryEntriesShowNumberOfRows = new wijmo.input.ComboBox('#cboInventoryEntriesShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboInventoryEntriesShowNumberOfRows.selectedValue;
                        inventoryCollectionView.pageSize = parseInt(numberOfRows);
                        inventoryCollectionView.refresh();
                        inventoryFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });
        }

        // =============================
        // Create Combobox Stock In Item
        // =============================
        function createCboStockInItem(itemId, unitId) {
            var articleItemsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockInItem/dropdown/list/item',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleItemsObservableArray.push({
                                Id: results[i]["Id"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                ItemDescription: results[i]["Article"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                        $("#btnStockInItemSave").prop("disabled", false);
                    } else {
                        $("#btnStockInItemSave").prop("disabled", true);
                    }

                    cboStockInItemCode.dispose();
                    cboStockInItemCode = new wijmo.input.ComboBox('#cboStockInItemCode', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: articleItemsObservableArray,
                        displayMemberPath: "ManualArticleCode",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboStockInItemDescription.selectedValue = this.selectedValue;
                        }
                    });

                    cboStockInItemDescription.dispose();
                    cboStockInItemDescription = new wijmo.input.ComboBox('#cboStockInItemDescription', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: articleItemsObservableArray,
                        displayMemberPath: "ItemDescription",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboStockInItemCode.selectedValue = this.selectedValue;
                            createCboStockInItemUnit(unitId);

                            if (document.getElementById("inpStockInIsProduce").checked) {
                                getProducedItemInventoryCost(this.selectedItem["Id"]);
                            }
                        }
                    });

                    if (document.getElementById("inpStockInIsProduce").checked) {
                        getProducedItemInventoryCost(cboStockInItemDescription.selectedItem["Id"]);
                    }

                    createCboStockInItemUnit(unitId);
                }
            });
        }

        // ================================================
        // Get Item Inventory Cost if IsProduced is Checked
        // ================================================
        function getProducedItemInventoryCost(itemId) {
            $.ajax({
                url: '/api/stockInItem/getStockInItemsDataInventoryCost/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results > 0) {
                        document.getElementById('inpStockInItemCost').value = formatDecimalValues(results);
                    } else {
                        document.getElementById('inpStockInItemCost').value = formatDecimalValues(0);
                    }

                    computeAmount();
                }
            });
        }

        // ==================================
        // Create Combobox Stock In Item Unit
        // ==================================
        function createCboStockInItemUnit(unitId) {
            var stockInUnits = new wijmo.collections.ObservableArray();
            if (cboStockInItemDescription.selectedValue != null) {
                $.ajax({
                    url: '/api/stockInItem/dropdown/list/itemUnit/' + cboStockInItemDescription.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                stockInUnits.push({
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"]
                                });
                            }
                        }

                        var disabled = true;
                        if (results.length > 0) {
                            disabled = false;
                        } else {
                            $("#btnStockInItemSave").prop("disabled", true);
                        }

                        cboStockInItemUnit.dispose();
                        cboStockInItemUnit = new wijmo.input.ComboBox('#cboStockInItemUnit', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: stockInUnits,
                            displayMemberPath: "Unit",
                            selectedValuePath: "UnitId",
                            selectedValue: unitId,
                        });

                        $("#stockInItemLoading").hide();
                        $("#stockInItemContent").show();
                    }
                });
            } else {
                cboStockInItemUnit.dispose();
                cboStockInItemUnit = new wijmo.input.ComboBox('#cboStockInItemUnit', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: stockInUnits
                });

                $("#btnStockInItemSave").prop("disabled", true);
            }
        }

        // ==============
        // Compute Amount
        // ==============
        $('#inpStockInItemQuantity').keyup(function () { computeAmount(); });
        $('#inpStockInItemCost').keyup(function () { computeAmount(); });
        function computeAmount() {
            var stockInQuantity = document.getElementById('inpStockInItemQuantity').value.replace(/\,/g, '');
            var stockInCost = document.getElementById('inpStockInItemCost').value.replace(/\,/g, '');

            var stockInItemAmount = stockInQuantity * stockInCost;
            document.getElementById('inpStockInItemAmount').value = formatDecimalValues(stockInItemAmount);
        }

        // =================
        // Add Stock In Item
        // =================
        function btnStockInItemsAddOnclick() {
            $('#stockInItemsDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredStockInItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#stockInItemLoading").show();
            document.getElementById("stockInItemLoading").innerHTML = 'Loading...';
            $("#stockInItemContent").hide();

            document.getElementById('stockInItemsModalLabel').innerHTML = "Add Stock In Item";

            document.getElementById('btnStockInItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockInItemSave").prop("disabled", true);
            $("#btnStockInItemCloseDetailModal").prop("disabled", false);

            stockInItemId = 0;
            createCboStockInItem(0,0);
            document.getElementById('inpStockInItemParticulars').value = 'NA';
            document.getElementById('inpStockInItemQuantity').value = formatDecimalValues(1);
            document.getElementById('inpStockInItemCost').value = formatDecimalValues(0);
            document.getElementById('inpStockInItemAmount').value = formatDecimalValues(0);
        }

        // ==================
        // Edit Stock In Item
        // ==================
        function btnStockInItemEditOnclick() {
            $('#stockInItemsDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredStockInItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#stockInItemLoading").show();
            document.getElementById("stockInItemLoading").innerHTML = 'Loading...';
            $("#stockInItemContent").hide();

            document.getElementById('stockInItemsModalLabel').innerHTML = "Edit Stock In Item";

            document.getElementById('btnStockInItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockInItemSave").prop("disabled", true);
            $("#btnStockInItemCloseDetailModal").prop("disabled", false);

            stockInItemsCollectionView.editItem(stockInItemsCollectionView.currentItem);
            var item = stockInItemsCollectionView.currentEditItem;
            stockInItemId = item.Id;
            createCboStockInItem(item.ItemId, item.UnitId);
            document.getElementById('inpStockInItemParticulars').value = item.Particulars;
            document.getElementById('inpStockInItemQuantity').value = formatDecimalValues(item.Quantity);
            document.getElementById('inpStockInItemCost').value = formatDecimalValues(item.Cost);
            document.getElementById('inpStockInItemAmount').value = formatDecimalValues(item.Amount);
        }

        // ==================
        // Save Stock In Item
        // ==================
        function btnStockInItemSaveOnclick() {
            var stockInItmeObject = new Object();
            stockInItmeObject.ItemId = cboStockInItemDescription.selectedValue;
            stockInItmeObject.Particulars = document.getElementById('inpStockInItemParticulars').value;
            stockInItmeObject.UnitId = cboStockInItemUnit.selectedValue;
            stockInItmeObject.Quantity = document.getElementById('inpStockInItemQuantity').value;
            stockInItmeObject.Cost = document.getElementById('inpStockInItemCost').value;
            stockInItmeObject.Amount = document.getElementById('inpStockInItemAmount').value;
            var stockInItemData = JSON.stringify(stockInItmeObject);

            var isValid = true;
            $('.requiredStockInItem').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnStockInItemSave').innerHTML = "<i class='fa fa-save'></i> Saving...";
                $("#btnStockInItemSave").prop("disabled", true);
                $("#btnStockInItemCloseDetailModal").prop("disabled", true);

                var INId = getURLParameterValue("id");

                if (stockInItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/stockInItem/add/' + INId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockInItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");
                                $('#stockInItemsDetailModal').modal('hide');
                                refreshStockInItemsFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById('btnStockInItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockInItemSave").prop("disabled", false);
                                $("#btnStockInItemCloseDetailModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById('btnStockInItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockInItemSave").prop("disabled", false);
                                $("#btnStockInItemCloseDetailModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById('btnStockInItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockInItemSave").prop("disabled", false);
                                $("#btnStockInItemCloseDetailModal").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/stockInItem/update/' + stockInItemId + '/' + INId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockInItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#stockInItemsDetailModal').modal('hide');
                                refreshStockInItemsFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                $('#stockInItemsDetailModal').modal('hide');
                                document.getElementById('btnStockInItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockInItemSave").prop("disabled", false);
                                $("#btnStockInItemCloseDetailModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                $('#stockInItemsDetailModal').modal('hide');
                                document.getElementById('btnStockInItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockInItemSave").prop("disabled", false);
                                $("#btnStockInItemCloseDetailModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                $('#stockInItemsDetailModal').modal('hide');
                                document.getElementById('btnStockInItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockInItemSave").prop("disabled", false);
                                $("#btnStockInItemCloseDetailModal").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ====================
        // Delete Stock In Item
        // ====================
        function btnStockInItemDeleteOnclick() {
            $('#stockInItemsConfirmDeleteModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnStockInItemsConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#btnStockInItemsConfirmDelete").prop("disabled", false);
            $("#btnStockInItemsConfirmDeleteCloseModal").prop("disabled", false);
        }

        // ============================
        // Confirm Delete Stock In Item
        // ============================
        function btnStockInItemsConfirmDeleteOnclick() {
            document.getElementById('btnStockInItemsConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Deleting...";
            $("#btnStockInItemsConfirmDelete").prop("disabled", true);
            $("#btnStockInItemsConfirmDeleteCloseModal").prop("disabled", true);

            stockInItemsCollectionView.editItem(stockInItemsCollectionView.currentItem);
            var id = stockInItemsCollectionView.currentEditItem.Id;
            var INId = getURLParameterValue("id");

            $.ajax({
                url: '/api/stockInItem/delete/' + id + '/' + INId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#stockInItemsConfirmDeleteModal').modal('hide');
                        refreshStockInItemsFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#stockInItemsConfirmDeleteModal').modal('hide');
                        document.getElementById('btnStockInItemsConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockInItemsConfirmDelete").prop("disabled", false);
                        $("#btnStockInItemsConfirmDeleteCloseModal").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#stockInItemsConfirmDeleteModal').modal('hide');
                        document.getElementById('btnStockInItemsConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockInItemsConfirmDelete").prop("disabled", false);
                        $("#btnStockInItemsConfirmDeleteCloseModal").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#stockInItemsConfirmDeleteModal').modal('hide');
                        document.getElementById('btnStockInItemsConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockInItemsConfirmDelete").prop("disabled", false);
                        $("#btnStockInItemsConfirmDeleteCloseModal").prop("disabled", false);
                    }
                }
            });
        }

        // ==========================
        // Get Inventory Entries Data
        // ==========================
        function getInventoryEntriesData() {
            var INId = getURLParameterValue('id');
            var inventoryObservableArray = new wijmo.collections.ObservableArray;

            $.ajax({
                url: '/api/inventory/stockIn/list/' + INId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var InventoryDateResult = new Date(results[i]["InventoryDate"])
                            var InventoryDate = ('0' + (InventoryDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + InventoryDateResult.getDate()).slice(-2) + '-' + InventoryDateResult.getFullYear();

                            inventoryObservableArray.push({
                                Id: results[i]["Id"],
                                InventoryDate: InventoryDate,
                                Branch: results[i]["Branch"],
                                Article: results[i]["Article"],
                                Particulars: results[i]["Particulars"],
                                ArticleInventoryCode: results[i]["ArticleInventoryCode"],
                                Quantity: results[i]["Quantity"],
                                QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                ArticleUnit: results[i]["ArticleUnit"],
                                Amount: results[i]["Amount"],
                                AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return inventoryObservableArray;
        }

        // ==================================
        // Create Inventory Entries Flex Grid
        // ==================================
        function createInventoryEntriesFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntriesData());
            inventoryCollectionView.canFilter = true;
            inventoryCollectionView.pageSize = cboInventoryEntriesShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpInventoryEntriesSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryCollectionView.refresh();
            });

            inventoryCollectionView.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleUnit.toLowerCase().indexOf(filterText) > -1);
            }

            inventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });

            inventoryEntriesFlexGrid = new wijmo.grid.FlexGrid('#inventoryEntriesFlexGrid');
            inventoryEntriesFlexGrid.initialize({
                columns: [
                    {
                        "header": "Date",
                        "binding": "InventoryDate",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.7*",
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "ArticleInventoryCode",
                        "allowSorting": true,
                        "width": "1.3*",
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*",
                    },
                    {
                        "header": "Unit",
                        "binding": "ArticleUnit",
                        "allowSorting": true,
                        "width": "1*",
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*",
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntriesFlexGrid.trackChanges = true;

            updateNavigateButtonsInventoryEntry();

            btnInventoryEntriesMoveToFirstPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToFirstPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnInventoryEntriesMoveToPreviousPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToPreviousPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnInventoryEntriesMoveToNextPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToNextPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnInventoryEntriesMoveToLastPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToLastPage();
                updateNavigateButtonsInventoryEntry();
            });
        }

        // ===========================================
        // Update Enventory Entries Navigation Buttons
        // ===========================================
        function updateNavigateButtonsInventoryEntry() {
            if (inventoryCollectionView.pageSize <= 0) {
                document.getElementById('inventoryEntriesNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('inventoryEntriesNavigationPageGrid').style.display = 'block';
            if (inventoryCollectionView.pageIndex === 0) {
                btnInventoryEntriesMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToNextPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToLastPageGrid.removeAttribute('disabled');
            } else if (inventoryCollectionView.pageIndex === (inventoryCollectionView.pageCount - 1)) {
                btnInventoryEntriesMoveToFirstPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnInventoryEntriesMoveToFirstPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToNextPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnInventoryEntriesCurrentPageGrid.innerHTML = (inventoryCollectionView.pageIndex + 1) + ' / ' + inventoryCollectionView.pageCount;
        }

        // ===================================
        // Refresh Enventory Entries Flex Grid
        // ===================================
        function refreshInventoryEntriesFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntriesData());
            inventoryCollectionView.canFilter = true;
            inventoryCollectionView.pageSize = cboInventoryEntriesShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpInventoryEntriesSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryCollectionView.refresh();
            });

            inventoryCollectionView.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleUnit.toLowerCase().indexOf(filterText) > -1);
            }

            inventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });

            inventoryEntriesFlexGrid.itemsSource = inventoryCollectionView;
            inventoryEntriesFlexGrid.trackChanges = true;
        }

        // ================
        // Get Journal Data
        // ================
        function getJournalData() {
            var journalsObservableArray = new wijmo.collections.ObservableArray;
            var INId = getURLParameterValue('id');

            $.ajax({
                url: '/api/jounal/stockIn/list/' + INId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    var totalDebitAmount = 0;
                    var totalCreditAmount = 0;

                    var variance = 0;

                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var journalDateResult = new Date(results[i]["JournalDate"])
                            var journalDate = ('0' + (journalDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + journalDateResult.getDate()).slice(-2) + '-' + journalDateResult.getFullYear();

                            journalsObservableArray.push({
                                Branch: results[i]["Branch"],
                                JournalDate: journalDate,
                                AccountCode: results[i]["AccountCode"],
                                Account: results[i]["Account"],
                                Article: results[i]["Article"],
                                DebitAmountDisplay: parseFloat(results[i]["DebitAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                CreditAmountDisplay: parseFloat(results[i]["CreditAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                            });

                            var debit = parseFloat(Math.round(results[i]["DebitAmount"] * 100) / 100);
                            var credit = parseFloat(Math.round(results[i]["CreditAmount"] * 100) / 100);

                            totalDebitAmount += debit;
                            totalCreditAmount += credit;
                        }

                        variance = totalDebitAmount - totalCreditAmount;
                    }

                    document.getElementById('inpJournalTotalDebit').value = parseFloat(Math.round(totalDebitAmount * 100) / 100).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById('inpJournalTotalCredit').value = parseFloat(Math.round(totalCreditAmount * 100) / 100).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById('inpJournalVariance').value = parseFloat(Math.round(variance * 100) / 100).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

                    $("#journalLoading").hide();
                    $("#journalContent").show();
                }
            });

            return journalsObservableArray;
        }

        // ===============
        // Display Journal
        // ===============
        function btnStockInJournalOnclick() {
            $('#journalEntryModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#journalLoading").show();
            document.getElementById("journalLoading").innerHTML = 'Loading...';
            $("#journalContent").hide();

            setTimeout(function () {
                createJournalFlexGrid();
            }, 500)
        }

        // ========================
        // Create Journal Flex Grid
        // ========================
        function createJournalFlexGrid() {
            journalCollectionView = new wijmo.collections.CollectionView(getJournalData());

            journalFlexGrid.dispose();
            journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');
            journalFlexGrid.initialize({
                columns: [
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "2.5*"
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": "1.5*"
                    },
                    {
                        "header": "Code",
                        "binding": "AccountCode",
                        "allowSorting": true,
                        "width": "1.8*"
                    },
                    {
                        "header": "Account",
                        "binding": "Account",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Article",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*",
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalFlexGrid.trackChanges = true;
        }

        // ===================
        // Get Item Query Data
        // ===================
        function getItemQueryData() {
            var items = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockInItem/popUp/list/itemQuery',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            items.push({
                                Id: results[i]["Id"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                ManualArticleOldCode: results[i]["ManualArticleOldCode"],
                                Article: results[i]["Article"],
                                Particulars: results[i]["Particulars"],
                                Price: results[i]["Price"],
                                PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='btnItemQueryPickOnclick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                            });
                        }
                    }

                    $("#itemQueryContent").show();
                    $("#itemQueryLoading").hide();
                }
            });

            return items;
        }

        // ===========================
        // Create Item Query Flex Grid
        // ===========================
        function createItemQueryFlexGrid() {
            itemQueryCollectionView = new wijmo.collections.CollectionView(getItemQueryData());
            itemQueryCollectionView.canFilter = true;
            itemQueryCollectionView.pageSize = 10;

            var filterText = '';
            $('#inpItemQuerySearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryCollectionView.refresh();
            });

            itemQueryCollectionView.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            itemQueryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateItemQueryNavigationButtons();
            });

            itemQueryFlexGrid.dispose();
            itemQueryFlexGrid = new wijmo.grid.FlexGrid('#itemQueryFlexGrid');
            itemQueryFlexGrid.initialize({
                columns: [
                    {
                        "header": "Barcode",
                        "binding": "ManualArticleCode",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ManualArticleOldCode",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Price",
                        "binding": "PriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    },
                    {
                        "header": "Pick",
                        "binding": "Pick",
                        "width": "1*",
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryFlexGrid.trackChanges = true;

            if (!isBtnItemQueryClicked) {
                updateItemQueryNavigationButtons();

                btnItemQueryMoveToFirstPageGrid.addEventListener('click', function () {
                    itemQueryCollectionView.moveToFirstPage();
                    updateItemQueryNavigationButtons();
                });

                btnItemQueryMoveToPreviousPageGrid.addEventListener('click', function () {
                    itemQueryCollectionView.moveToPreviousPage();
                    updateItemQueryNavigationButtons();
                });

                btnItemQueryMoveToNextPageGrid.addEventListener('click', function () {
                    itemQueryCollectionView.moveToNextPage();
                    updateItemQueryNavigationButtons();
                });

                btnItemQueryMoveToLastPageGrid.addEventListener('click', function () {
                    itemQueryCollectionView.moveToLastPage();
                    updateItemQueryNavigationButtons();
                });

                isBtnItemQueryClicked = true;
            }
        }

        // ====================================
        // Update Item Query Navigation Buttons
        // ====================================
        function updateItemQueryNavigationButtons() {
            if (itemQueryCollectionView.pageSize <= 0) {
                document.getElementById('ItemQueryNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('ItemQueryNavigationPageGrid').style.display = 'block';
            if (itemQueryCollectionView.pageIndex === 0) {
                btnItemQueryMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToLastPageGrid.removeAttribute('disabled');
            } else if (itemQueryCollectionView.pageIndex === (itemQueryCollectionView.pageCount - 1)) {
                btnItemQueryMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnItemQueryMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnItemQueryCurrentPageGrid.innerHTML = (itemQueryCollectionView.pageIndex + 1) + ' / ' + itemQueryCollectionView.pageCount;
        }

        // =======================
        // Launch Item Query Modal
        // =======================
        function btnItemQueryOnclick() {
            $('#itemQueryModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#itemQueryLoading").show();
            document.getElementById("itemQueryLoading").innerHTML = "Loading...";
            $("#itemQueryContent").hide();

            setTimeout(function() {
                createItemQueryFlexGrid();
            }, 500)
        }

        // ===============
        // Pick Item Query
        // ===============
        function btnItemQueryPickOnclick() {
            $('#stockInItemsDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredStockInItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#stockInItemLoading").show();
            document.getElementById("stockInItemLoading").innerHTML = 'Loading...';
            $("#stockInItemContent").hide();

            document.getElementById('stockInItemsModalLabel').innerHTML = "Add Stock In Item";

            document.getElementById('btnStockInItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockInItemSave").prop("disabled", true);
            $("#btnStockInItemCloseDetailModal").prop("disabled", false);

            itemQueryCollectionView.editItem(itemQueryCollectionView.currentItem);
            var item = itemQueryCollectionView.currentEditItem;
            stockInItemId = 0;
            createCboStockInItem(item.Id, 0);
            document.getElementById('inpStockInItemParticulars').value = "NA";
            document.getElementById('inpStockInItemQuantity').value = formatDecimalValues(1);

            if (document.getElementById("inpStockInIsProduce").checked) {
                document.getElementById('inpStockInItemCost').value = formatDecimalValues(item.Cost);
                computeAmount();
            } else {
                document.getElementById('inpStockInItemCost').value = formatDecimalValues(0);
                computeAmount();
            }
        }

        // ====
        // TABS
        // ====
        $('#tabStockInItems').click(function () {
            $('#tabPaneStockInItems').show();
            $('#tabPaneInventoryEntries').hide();
            NProgress.start();
            refreshStockInItemsFlexGrid();
        });
        $('#tabInventoryEntries').click(function () {
            $('#tabPaneStockInItems').hide();
            $('#tabPaneInventoryEntries').show();
            NProgress.start();
            refreshInventoryEntriesFlexGrid();
        });

        // ======================
        // Launch Multiple Modals
        // ======================
        $(document).on('show.bs.modal', '.modal', function (event) {
            var zIndex = 1040 + (10 * $('.modal:visible').length);
            $(this).css('z-index', zIndex);
            setTimeout(function () {
                $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
            }, 0);
        });

        $(document).on('hidden.bs.modal', '.modal', function () {
            $('.modal:visible').length && $(document.body).addClass('modal-open');
        });

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            createCboStockInDetailBranch();
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>