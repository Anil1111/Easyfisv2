@{
    var branchId = Request.QueryString["BranchId"];
    var stockInId = Request.QueryString["StockInId"];
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Stock In Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Font-Awesome/css")
    @Styles.Render("~/Content/Software-css")
    @Styles.Render("~/WijmoCSS/Wijmo-css")
</head>
<body>
    <div id="wrapper" class="wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <br /><br /><br />
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        @*<h4><img src='~/images/Icons/iCompany.png'> Company - Detail</h4>*@
                        <h4><i class="fa fa-archive fa-2x"></i>  Stock In Detail</h4>
                        <br />
                        <div class="div_Current_Page">
                            @*<label id="currentBranchName"></label>*@
                            <span id="currentPage"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="stockInDetailLabel"></h4>
                    </div>
                    <div class="col-md-6" align="right">
                        <button class="btn btn-primary btn-sm"><i class="fa fa-book"></i> Journal</button>
                        <button class="btn btn-primary btn-sm"><i class="fa fa-save"></i> Save</button>
                        <button class="btn btn-primary btn-sm"><i class="fa fa-edit"></i> Edit</button>
                        <button class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                        <button onclick="window.location.href = '@Url.Action("StockIn", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</button>
                    </div>
                </div>
                @*<hr />*@
                <div class="well">
                    <form class="form-horizontal" role="form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Branch:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockIn_Branch"></div>

                                        <input type="hidden" id="StockIn_Branch_data" />
                                        <input type="hidden" id="StockIn_Branch_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">IN Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm" id="StockIn_INnumber" />
                                        <input type="hidden" id="StockIn_INnumber_Display" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">IN Date:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockIn_InDate"></div>
                                        <input type="hidden" id="StockIn_InDate_data" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Account:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockIn_Account"></div>

                                        <input type="hidden" id="StockIn_Account_data" />
                                        <input type="hidden" id="StockIn_Account_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Article:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockIn_Article"></div>

                                        <input type="hidden" id="StockIn_Article_data" />
                                        <input type="hidden" id="StockIn_Article_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Particulars:</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control textarea-custom" id="StockIn_Particulars"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Manual IN Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm" id="StockIn_ManualINNumber">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Produce:</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" id="StockIn_Produce">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Prepared by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockIn_PreparedBy"></div>

                                        <input type="hidden" id="StockIn_PreparedBy_data" />
                                        <input type="hidden" id="StockIn_PreparedBy_selectedValue" />
                                        <input type="hidden" id="userId_data" value="@userId" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Checked by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockIn_CheckedBy"></div>

                                        <input type="hidden" id="StockIn_CheckedBy_data" />
                                        <input type="hidden" id="StockIn_CheckedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Approved by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockIn_ApprovedBy"></div>

                                        <input type="hidden" id="StockIn_ApprovedBy_data" />
                                        <input type="hidden" id="StockIn_ApprovedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Lock:</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" id="StockIn_Lock">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-4"></div>
                                    <div class="col-sm-8">
                                        <input type="hidden" id="StockIn_IsLocked">
                                        <input type="hidden" id="StockIn_IsLocked_defaultTrue">
                                        <input type="hidden" id="StockIn_IsLocked_defaultFalse">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </section>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    <!-- Scripts JavaScripts -->
    @Scripts.Render("~/Scripts/Software-js")
    @Scripts.Render("~/WijmoScripts/Wijmo-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var stockIns;

        var branches;
        var users;
        var accounts;
        var articles;

        var INDate;

        var cboBranch;
        var cboForAccount;
        var cboArticle;
        var cboPreparedBy;
        var cboCheckedBy;
        var cboApprovedBy;

        // ================
        // GET Stock In List
        // ================
        function getStockIn() {
            stockIns = new wijmo.collections.ObservableArray;
            var stockInId = @stockInId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listStockInById/' + stockInId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        stockIns.push({
                            Id: Results.Id,
                            BranchId: Results.BranchId,
                            Branch: Results.Branch,
                            INNumber: Results.INNumber,
                            INDate: Results.INDate,
                            AccountId: Results.AccountId,
                            Account: Results.Account,
                            ArticleId: Results.ArticleId,
                            Article: Results.Article,
                            Particulars: Results.Particulars,
                            ManualINNumber: Results.ManualINNumber,
                            IsProduced: Results.IsProduced,
                            PreparedById: Results.PreparedById,
                            PreparedBy: Results.PreparedBy,
                            CheckedById: Results.CheckedById,
                            CheckedBy: Results.CheckedBy,
                            ApprovedById: Results.ApprovedById,
                            ApprovedBy: Results.ApprovedBy,
                            IsLocked: Results.IsLocked,
                            CreatedById: Results.CreatedById,
                            CreatedBy: Results.CreatedBy,
                            CreatedDateTime: Results.CreatedDateTime,
                            UpdatedById: Results.UpdatedById,
                            UpdatedBy: Results.UpdatedBy,
                            UpdatedDateTime: Results.UpdatedDateTime
                        });
                    }
                    document.getElementById('StockIn_Branch_data').value = Results.BranchId;
                    document.getElementById('StockIn_Branch_selectedValue').value = Results.Branch;

                    document.getElementById('StockIn_INnumber').value = Results.INNumber;
                    document.getElementById('StockIn_INnumber_Display').value = Results.INNumber;
                    document.getElementById('StockIn_InDate_data').value = Results.INDate;

                    var INDate_date = Results.INDate;
                    INDate.dispose();
                    INDate = new wijmo.input.InputDate('#StockIn_InDate', {
                        format: 'MM/dd/yyyy',
                        value: new Date(INDate_date),
                        mask: '99/99/9999',
                        onValueChanged: function () {
                            document.getElementById('StockIn_InDate_data').value = this.value.toLocaleDateString();
                        }
                    });

                    document.getElementById('StockIn_Account_data').value = Results.AccountId;
                    document.getElementById('StockIn_Account_selectedValue').value = Results.Account;

                    document.getElementById('StockIn_Article_data').value = Results.ArticleId;
                    document.getElementById('StockIn_Article_selectedValue').value = Results.Article;

                    document.getElementById('StockIn_Particulars').value = Results.Particulars;
                    document.getElementById('StockIn_ManualINNumber').value = Results.ManualINNumber
                    document.getElementById('StockIn_Produce').checked = Results.IsProduced;

                    document.getElementById('StockIn_PreparedBy_data').value = Results.PreparedById;
                    document.getElementById('StockIn_PreparedBy_selectedValue').value = Results.PreparedBy;

                    document.getElementById('StockIn_CheckedBy_data').value = Results.CheckedById;
                    document.getElementById('StockIn_CheckedBy_selectedValue').value = Results.CheckedBy;

                    document.getElementById('StockIn_ApprovedBy_data').value = Results.ApprovedById;
                    document.getElementById('StockIn_ApprovedBy_selectedValue').value = Results.ApprovedBy;

                    document.getElementById('StockIn_Lock').checked = Results.IsLocked;

                    document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                    document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                    document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                    document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                    getBranchesForComboBox();
                    getUsersForComboBox();
                    getAccountForComboBox();
                    getArticlesForComboBox();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return stockIns;
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var stockInId = @stockInId;
                        if(stockInId == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + @branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        branches.push({
                                            BranchId: results.Id,
                                            Branch: results.Branch
                                        });
                                    }
                                    document.getElementById('StockIn_Branch_data').value = results.Id;
                                    document.getElementById('StockIn_Branch_selectedValue').value = results.Branch;

                                    createCboBranch(branches);
                                }
                            });
                        } else {
                            createCboBranch(branches);
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
                );
            return branches;
        }

        // ======================
        // Combo Box for Branches
        // ======--==============
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#StockIn_Branch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('StockIn_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_Branch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });
        }

        // ====================
        // Get Stock In Account
        // ====================
        function getAccountForComboBox() {
            accounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accounts.push({
                                AccountId: results[i]["Id"],
                                AccountAccount: results[i]["Account"]
                            });
                        }
                        createCboForAccount(accounts);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
            );
        }
        // ===============
        // CBO for Account
        // ===============
        function  createCboForAccount(accounts) {
            var accountCollection = new wijmo.collections.CollectionView(accounts);
            var accountList = new Array();
            for (var i = 0; i < accountCollection.items.length; i++) {
                accountList.push(accountCollection.items[i].AccountAccount);
            }

            cboForAccount.dispose();
            cboForAccount = new wijmo.input.ComboBox('#StockIn_Account', {
                disabled: false,
                placeholder: "Select Account",
                itemsSource: accountList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('StockIn_Account_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_Account_data").val(accountCollection.items[this.selectedIndex].AccountId);
                }
            });
        }

        // ==================================================
        // GET Articles for Combo Box in Journal Voucher Line
        // ==================================================
        function getArticlesForComboBox() {
            articles = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticle',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articles.push({
                                ArticleId: results[i]["Id"],
                                ArticleArticle: results[i]["Article"]
                            });
                        }
                        createCboArticles(articles);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
            );
        }

        // ==============================================
        // Combo Box for Articles in Journal Voucher Line
        // ==============================================
        function createCboArticles(articles) {
            var articleCollections = new wijmo.collections.CollectionView(articles);
            var articleList = new Array();
            for (var i = 0; i < articleCollections.items.length; i++) {
                articleList.push(articleCollections.items[i].ArticleArticle);
            }

            cboArticle.dispose();
            cboArticle = new wijmo.input.ComboBox('#StockIn_Article', {
                placeholder: "Select Article",
                itemsSource: articleList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('StockIn_Article_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_Article_data").val(articleCollections.items[this.selectedIndex].ArticleId);
                }
            });
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        var stockInId = @stockInId;
                        if(stockInId == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        users.push({
                                            UserId: results.Id,
                                            UserFullName: results.FullName
                                        });
                                    }

                                    document.getElementById('StockIn_PreparedBy_data').value = results.Id;
                                    document.getElementById('StockIn_PreparedBy_selectedValue').value =  results.FullName;

                                    createCboUserPreparedBy(users);
                                    createCboUserCheckedBy(users);
                                    createCboUserApprovedBy(users);
                                }
                            });
                        } else {
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);

                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return users;
        }

        // ==================================
        // Combo Box for Users - Prepared By
        // ==================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#StockIn_PreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('StockIn_PreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_PreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // ==================================
        // Combo Box for Users - Checked By
        // ==================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboCheckedBy.dispose();
            cboCheckedBy = new wijmo.input.ComboBox('#StockIn_CheckedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('StockIn_CheckedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // ==================================
        // Combo Box for Users - Approved By
        // ==================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboApprovedBy.dispose();
            cboApprovedBy = new wijmo.input.ComboBox('#StockIn_ApprovedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('StockIn_ApprovedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockIn_ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // =====================================================
        // Function with leading zeroes to display the IN Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while(pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            document.getElementById('currentPage').innerHTML = '<a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Main Menu</a> > ' + ' <a href="@Url.Action("StockIn", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Sock In</a> ' + ' > Stock In Detail';
            document.getElementById('StockIn_INnumber').disabled = true;
            document.getElementById('StockIn_Lock').disabled = true;

            var stockInId = @stockInId;
            if(stockInId == 0) {
                if(document.getElementById('StockIn_INnumber').value == 0) {
                    document.getElementById('StockIn_INnumber_Display').value = "0000000001";
                }

                document.getElementById('StockIn_INnumber').value = 0;
                //document.getElementById('journalVoucher_No_Display').value = "000-000000";
                var stockIns = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/listStockInLast',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            stockIns.push({
                                Id: Results.Id,
                                INNumber: Results.INNumber
                            });
                        }
                        var IN_Number = parseInt(Results.INNumber);
                        var IN_Number_PlusOne = 0000000001;
                        var IN_Num_Results = IN_Number + IN_Number_PlusOne;
                        //var JV_Number_Display = JV_Num_Results.toString().replace(/(\d{3})(\d+)/, '$1-$2');

                        document.getElementById('StockIn_INnumber').value = zerofill(IN_Num_Results, 10);
                        document.getElementById('StockIn_INnumber_Display').value = zerofill(IN_Num_Results, 10);
                    }
                });
            }

            var d = new Date();
            document.getElementById("StockIn_InDate_data").value = [ d.getMonth()+1, d.getDate(), d.getFullYear()].join('/');
            INDate = new wijmo.input.InputDate('#StockIn_InDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('StockIn_InDate_data').value = this.value.toLocaleDateString();
                }
            });

            getStockIn();
            getBranchesForComboBox();
            getUsersForComboBox();
            getAccountForComboBox();
            getArticlesForComboBox();

            cboBranch = new wijmo.input.ComboBox('#StockIn_Branch');
            cboForAccount = new wijmo.input.ComboBox('#StockIn_Account');
            cboArticle = new wijmo.input.ComboBox('#StockIn_Article');
            cboPreparedBy = new wijmo.input.ComboBox('#StockIn_PreparedBy');
            cboCheckedBy = new wijmo.input.ComboBox('#StockIn_CheckedBy');
            cboApprovedBy = new wijmo.input.ComboBox('#StockIn_ApprovedBy');
        });
    </script>
</body>
</html>