@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Withdrawal Detail</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock Withdrawal Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        ======================================================
                        Options: Journal, Lock, Unlock, Print and Close Button
                        ======================================================
                    -->
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-2">
                                <button class="btn btn-primary" id="btnStockWithdrawalSave" onclick="btnStockWithdrawalSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                            </div>
                            <div class="col-md-10" align="right">
                                <button class="btn btn-primary" id="btnStockWithdrawalJournal" onclick="btnStockWithdrawalJournalOnclick()"><i class="fa fa-book"></i> Journal</button>
                                @{
                                    if (canLock)
                                    {
                                        <button class="btn btn-primary" id="btnStockWithdrawalLock" onclick="btnStockWithdrawalLockOnclick()"><i class="fa fa-lock"></i> Lock</button>
                                    }
                                    if (canUnlock)
                                    {
                                        <button class="btn btn-primary" id="btnStockWithdrawalUnlock" onclick="btnStockWithdrawalUnlockOnclick()"><i class="fa fa-unlock"></i> Unlock</button>
                                    }
                                    if (canPrint)
                                    {
                                        <button class="btn btn-primary" id="btnStockWithdrawalPrint" onclick="btnStockWithdrawalPrintOnclick()"><i class="fa fa-print"></i> Print</button>
                                    }
                                }
                                <button class="btn btn-danger" id="btnStockWithdrawalClose" onclick="window.location.href = '/Software/StockWithdrawal'"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>

                    <!--
                        ======================================
                        Details, Fields and Other Informations
                        ======================================
                    -->
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Branch</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockWithdrawalBranch"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SW Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredStockWithdrawal" id="inpStockWithdrawalSWNumber" placeholder="SW Number" disabled />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SW Date</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockWithdrawalSWDate"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Doc Reference</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredStockWithdrawal" id="inpStockWithdrawalDocumentReference" placeholder="Manual Document Reference">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Customer</label>
                                        <div class="col-sm-8">
                                            <div class="input-group">
                                                <div class="comboBox-wide" id="cboStockWithdrawalCustomer"></div>
                                                <div class="input-group-btn">
                                                    <button type="button" class="btn btn-primary" id="btnSalesInvoiceStatus" onclick="btnStockWithdrawalSalesInvoiceStatusOnclick()">SI</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SI Branch</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredStockWithdrawal" id="inpStockWithdrawalSIBranch" placeholder="SI Branch" disabled />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SI Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredStockWithdrawal" id="inpStockWithdrawalSINumber" disabled />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Remarks</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredStockWithdrawal" id="inpStockWithdrawalRemarks" placeholder="Remarks"></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Status</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockWithdrawalStatus"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Manual SW Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredRR" id="inpStockWithdrawalManualSWNumber" placeholder="Manual RR Number">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Contact Person</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredStockWithdrawal" id="inpStockWithdrawalContactPerson" placeholder="Contact Person">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Contact Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredStockWithdrawal" id="inpStockWithdrawalContactNumber" placeholder="Contact Number">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Address</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredStockWithdrawal" id="inpStockWithdrawalAddress" placeholder="Address"></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Received by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockWithdrawalReceivedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Prepared by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockWithdrawalPreparedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Checked by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockWithdrawalCheckedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Approved by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockWithdrawalApprovedBy"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <!--
                    ============================================
                    Stock Withdrawals Item and Inventory Entries
                    ============================================
                -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#stockWithdrawalsItemTabHref" id="stockWithdrawalsItemTab">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#stockWithdrawalsInventoryEntriesTabHref" id="stockWithdrawalsInventoryEntriesTab">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">

                    <!--
                        ==========================
                        Stock Withdrawals Item Tab
                        ==========================
                    -->
                    <div id="stockWithdrawalsItemTabHref" class="tab-pane active">
                        <div class="panel panel-default">

                            <!--
                                ===========================================================================
                                Stock Withdrawals Item: Search, Filter, Display Number of Rows and  Buttons
                                ===========================================================================
                            -->
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpStockWithdrawalItemSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboStockWithdrawalItemsShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right">
                                            @{
                                                if (canAdd)
                                                {
                                                    <button class="btn btn-primary" id="btnStockWithdrawalItemAdd" onclick="btnStockWithdrawalItemAddOnclick()"><i class="fa fa-plus"></i> Add</button>
                                                }
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                =================================
                                Stock Withdrawals Item: Flex Grid
                                =================================
                            -->
                            <div class="panel-body">
                                <div id="stockWithdrawalItemFlexGrid"></div>
                            </div>

                            <!--
                                ==========================================
                                Stock Withdrawals Item: Navigation Buttons
                                ==========================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="stockWithdrawalNavigationPageGridItem">
                                        <button type="button" class="btn btn-default border-custom" id="btnStockWithdrawalItemMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockWithdrawalItemMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnStockWithdrawalItemCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockWithdrawalItemMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockWithdrawalItemMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--
                            ==============================
                            Stock Withdrawals Item: Totals
                            ==============================
                        -->
                        <div class="panel panel-default">
                            <div class="panel-body" style="padding-bottom: 0px;">
                                <div class="row">
                                    <div class="col-md-6">

                                    </div>
                                    <div class="col-md-6">
                                        <dl class="dl-horizontal">
                                            <dt>
                                                <b>Total Amount</b>
                                            </dt>
                                            <dd>
                                                <input type="text" class="form-control numberField" id="totalSWAmount" placeholder="0.00" disabled />
                                            </dd>
                                        </dl>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!--
                        =====================
                        Inventory Entries Tab
                        =====================
                    -->
                    <div id="stockWithdrawalsInventoryEntriesTabHref" class="tab-pane">
                        <div class="panel panel-default">

                            <!--
                                ======================================================================
                                Inventory Entries: Search, Filter, Display Number of Rows and  Buttons
                                ======================================================================
                            -->
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpInventoryEntriesSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboInventoryEntriesShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right"></td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                ============================
                                Inventory Entries: Flex Grid
                                ============================
                            -->
                            <div class="panel-body">
                                <div id="inventoryEntriesFlexGrid"></div>
                            </div>

                            <!--
                                =====================================
                                Inventory Entries: Navigation Buttons
                                =====================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="inventoryEntriesNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnInventoryEntriesCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ==========
                    User Stamp
                    ==========
                -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!--
        ====================================
        Stock Withdrawals Item: Detail Modal
        ====================================
    -->
    <div class="modal fade" id="stockWithdrawalItemDetailModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="stockWithdrawalItemsModalTitle">Stock Withdrawal Item</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="stockWithdrawalItemLoading"></span>
                    </center>
                    <div id="stockWithdrawalItemContent">
                        <dl class="dl-horizontal">
                            <dt>Item</dt>
                            <dd>
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 30%">
                                            <div class="comboBox-wide" id="cboStockWithdrawalItemItemCode"></div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 69%">
                                            <div class="comboBox-wide" id="cboStockWithdrawalItemItemDescription"></div>
                                        </td>
                                    </tr>
                                </table>
                            </dd>
                            <dt>Particulars</dt>
                            <dd>
                                <textarea rows="5" class="form-control textarea-custom requiredStockWithdrawalItem" id="inpStockWithdrawalItemParticulars"></textarea>
                            </dd>
                            <dt>Inventory Code</dt>
                            <dd>
                                <div class="comboBox-wide" id="cboStockWithdrawalItemInventoryCode"></div>
                            </dd>
                            <dt>Quantity</dt>
                            <dd>
                                <input type="text" class="form-control numberField requiredStockWithdrawalItem" id="inpStockWithdrawalItemQuantity" placeholder="0.00" />
                            </dd>
                            <dt>Unit</dt>
                            <dd>
                                <div class="comboBox-wide" id="cboStockWithdrawalItemUnit"></div>
                            </dd>
                            <dt>Cost</dt>
                            <dd>
                                <input type="text" class="form-control numberField requiredStockWithdrawalItem" id="inpStockWithdrawalItemCost" placeholder="0.00" disabled />
                            </dd>
                            <dt>Amount</dt>
                            <dd>
                                <input type="text" class="form-control numberField requiredStockWithdrawalItem" id="inpStockWithdrawalItemAmount" placeholder="0.00" disabled />
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnStockWithdrawalItemSave" onclick="btnStockWithdrawalItemSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                    <button class="btn btn-danger" id="btnStockWithdrawalItemCloseModal" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ============================================
        Stock Withdrawals Item: Delete Confirm Modal
        ============================================
    -->
    <div class="modal fade" id="stockWithdrawaltemDeleteConfirmModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Delete Stock Withdrawal Item?
                </div>
                <div class="modal-footer">
                    <button id="btnStockWithdrawalItemConfirmDelete" class="btn btn-danger" onclick="btnStockWithdrawalItemConfirmDeleteOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="btnStockWithdrawalItemConfirmDeleteCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        =====================
        Journal Entries Modal
        =====================
    -->
    <div class="modal fade" id="journalEntryModal" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"> Journal </h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="journalLoading"></span>
                    </center>
                    <div id="journalContent">
                        <div id="journalFlexGrid" style="max-height: 250px;"></div>
                        <br /><br />
                        <div class="row">
                            <div class="col-md-7"></div>
                            <div class="col-md-5">
                                <dl class="dl-horizontal">
                                    <dt>
                                        <b>Total Debit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField" id="inpJournalTotalDebit" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Credit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField" id="inpJournalTotalCredit" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Variance</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField" id="inpJournalVariance" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ==================================================
        Stock Withdrawals Item: Sales Invoice Status Modal
        ==================================================
    -->
    <div class="modal fade" id="SIStatus" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Sales Invoice Status</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="salesInvoiceStatusLoading"></span>
                    </center>
                    <div id="salesInvoiceStatusContent">
                        <div class="panel panel-default">

                            <!--
                                ==========================================================
                                Stock Withdrawals Item: Sales Invoice Status Search Filter
                                ==========================================================
                            -->
                            <div class="panel-heading">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control" id="inpSalesInvoiceStatusSearchFilter" placeholder="Search">
                                </div>
                            </div>
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 24%">
                                            <div class="input-group ">
                                                <span class="input-group-addon"><b>Customer</b></span>
                                                <div class="comboBox-wide" id="cboSalesInvoiceStatusCustomerFilter"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group ">
                                                <span class="input-group-addon"><b>SI Branch</b></span>
                                                <div class="comboBox-wide" id="cboSalesInvoiceStatusSIBranchFilter"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 50%">
                                            <div class="input-group ">
                                                <span class="input-group-addon"><b>SI Number</b></span>
                                                <div class="comboBox-wide" id="cboSalesInvoiceStatusSINumberFilter"></div>
                                            </div>
                                        </td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                ======================================================
                                Stock Withdrawals Item: Sales Invoice Status Flex Grid
                                ======================================================
                            -->
                            <div class="panel-body">
                                <div id="salesInvoiceStatusFlexGrid"></div>
                            </div>

                            <!--
                                =================================================================
                                Stock Withdrawals Item: Sales Invoice Status Navigation Page Grid
                                =================================================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="salesInvoiceStatusNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceStatusMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceStatusMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnSalesInvoiceStatusCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceStatusMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceStatusMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnSalesInvoiceStatusApply" class="btn btn-primary" onclick="btnSalesInvoiceStatusApplyOnclick()"><i class="fa fa-check"></i> Apply</button>
                    <button id="btnSalesInvoiceStatusCloseModal" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ============================================================
        Stock Withdrawals Item: Sales Invoice Status Pick Item Modal
        ============================================================
    -->
    <div class="modal fade" id="salesInvoiceStatusPickModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Pick</h4>
                </div>
                <div class="modal-body">
                    <dl>
                        <dt>Quantity</dt>
                        <dd>
                            <input class="form-control numberField requiredPickedAmount" id="inpSalesInvoiceStatusPickedQuantity" placeholder="0.00" />
                        </dd>
                    </dl>
                </div>
                <div class="modal-footer">
                    <button id="btnSalesInvoiceStatusPerCustomerPickContinue" class="btn btn-primary" onclick="btnSalesInvoiceStatusPerCustomerPickContinueOnclick()"><i class="fa fa-arrow-right"></i> Continue</button>
                    <button id="btnSalesInvoiceStatusPerCustomerPickContinueCloseModal" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ================================================================
        Stock Withdrawals Item: Sales Invoice Status Apply Confirm Modal
        ================================================================
    -->
    <div class="modal fade" id="applyAllConfirmSIStatus" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Apply</h4>
                </div>
                <div class="modal-body">
                    Apply Picked Items?
                </div>
                <div class="modal-footer">
                    <button id="btnConfirmApplySalesInvoiceStatus" class="btn btn-primary" onclick="btnConfirmApplySalesInvoiceStatusOnclick()"><i class="fa fa-check"></i> Apply</button>
                    <button id="btnConfirmApplySalesInvoiceStatusCloseModal" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // =============================================
        // Stock Withdrawal Detail Combo Data and Fields
        // =============================================
        var cboStockWithdrawalBranch = new wijmo.input.ComboBox('#cboStockWithdrawalBranch');
        var cboStockWithdrawalSWDate = new wijmo.input.InputDate('#cboStockWithdrawalSWDate');
        var cboStockWithdrawalCustomer = new wijmo.input.ComboBox('#cboStockWithdrawalCustomer');
        var SIIdSelectedValue = 0;
        var SIBranchIdSelectedValue = 0;
        var cboStockWithdrawalReceivedBy = new wijmo.input.ComboBox('#cboStockWithdrawalReceivedBy');
        var cboStockWithdrawalPreparedBy = new wijmo.input.ComboBox('#cboStockWithdrawalPreparedBy');
        var cboStockWithdrawalCheckedBy = new wijmo.input.ComboBox('#cboStockWithdrawalCheckedBy');
        var cboStockWithdrawalApprovedBy = new wijmo.input.ComboBox('#cboStockWithdrawalApprovedBy');
        var cboStockWithdrawalStatus = new wijmo.input.ComboBox('#cboStockWithdrawalStatus');
        var isLocked = false;

        // =======================================================================
        // Stock Withdrawal Item Collection View, Flex Grid and Navigation Buttons
        // =======================================================================
        var stockWithdrawalItemCollectionView;
        var stockWithdrawalItemFlexGrid;
        var cboStockWithdrawalItemsShowNumberOfRows = new wijmo.input.ComboBox('#cboStockWithdrawalItemsShowNumberOfRows');
        var btnStockWithdrawalItemMoveToFirstPageGrid = document.getElementById('btnStockWithdrawalItemMoveToFirstPageGrid');
        var btnStockWithdrawalItemMoveToPreviousPageGrid = document.getElementById('btnStockWithdrawalItemMoveToPreviousPageGrid');
        var btnStockWithdrawalItemMoveToNextPageGrid = document.getElementById('btnStockWithdrawalItemMoveToNextPageGrid');
        var btnStockWithdrawalItemMoveToLastPageGrid = document.getElementById('btnStockWithdrawalItemMoveToLastPageGrid');
        var btnStockWithdrawalItemCurrentPageGrid = document.getElementById('btnStockWithdrawalItemCurrentPageGrid');

        // ===========================================
        // Stock Withdrawal Item Combo Data and Fields
        // ===========================================
        var stockWithdrawalItemId = 0;
        var cboStockWithdrawalItemItemCode = new wijmo.input.ComboBox('#cboStockWithdrawalItemItemCode');
        var cboStockWithdrawalItemItemDescription = new wijmo.input.ComboBox('#cboStockWithdrawalItemItemDescription');
        var cboStockWithdrawalItemInventoryCode = new wijmo.input.ComboBox('#cboStockWithdrawalItemInventoryCode');
        var cboStockWithdrawalItemUnit = new wijmo.input.ComboBox('#cboStockWithdrawalItemUnit');

        // =============================================
        // Journal Entries Collection View and Flex Grid
        // =============================================
        var journalCollectionView;
        var journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');

        // ===================================================================
        // Inventory Entries Collection View, Flex Grid and Navigation Buttons
        // ===================================================================
        var inventoryCollectionView;
        var inventoryEntriesFlexGrid = new wijmo.grid.FlexGrid('#inventoryEntriesFlexGrid');
        var cboInventoryEntriesShowNumberOfRows = new wijmo.input.ComboBox('#cboInventoryEntriesShowNumberOfRows');
        var btnInventoryEntriesMoveToFirstPageGrid = document.getElementById('btnInventoryEntriesMoveToFirstPageGrid');
        var btnInventoryEntriesMoveToPreviousPageGrid = document.getElementById('btnInventoryEntriesMoveToPreviousPageGrid');
        var btnInventoryEntriesMoveToNextPageGrid = document.getElementById('btnInventoryEntriesMoveToNextPageGrid');
        var btnInventoryEntriesMoveToLastPageGrid = document.getElementById('btnInventoryEntriesMoveToLastPageGrid');

        // ===============================================================================
        // Sales Invoice Status Filters, Collection View, Flex Grid and Navigation Buttons
        // ===============================================================================
        var cboSalesInvoiceStatusCustomerFilter = new wijmo.input.ComboBox('#cboSalesInvoiceStatusCustomerFilter');
        var cboSalesInvoiceStatusSIBranchFilter = new wijmo.input.ComboBox('#cboSalesInvoiceStatusSIBranchFilter');
        var cboSalesInvoiceStatusSINumberFilter = new wijmo.input.ComboBox('#cboSalesInvoiceStatusSINumberFilter');
        var salesInvoiceStatusCollectionView;
        var salesInvoiceStatusFlexGrid = new wijmo.grid.FlexGrid('#salesInvoiceStatusFlexGrid');
        var btnSalesInvoiceStatusMoveToFirstPageGrid = document.getElementById('btnSalesInvoiceStatusMoveToFirstPageGrid');
        var btnSalesInvoiceStatusMoveToPreviousPageGrid = document.getElementById('btnSalesInvoiceStatusMoveToPreviousPageGrid');
        var btnSalesInvoiceStatusMoveToNextPageGrid = document.getElementById('btnSalesInvoiceStatusMoveToNextPageGrid');
        var btnSalesInvoiceStatusMoveToLastPageGrid = document.getElementById('btnSalesInvoiceStatusMoveToLastPageGrid');
        var btnSalesInvoiceStatusCurrentPageGrid = document.getElementById('btnSalesInvoiceStatusCurrentPageGrid');
        var salesInvoiceStatusCurrentSIStatusPageIndex = 0;
        var isBtnSalesInvoiceStatusClicked = false;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getURLParameterValue(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ===========================================
        // Create Stock Withdrawal Detail Combo Branch
        // ===========================================
        function createCboStockWithdrawalDetailBranch() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockWithdrawal/dropdown/list/branch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branchesObservableArray.push({
                                Id: results[i]["Id"],
                                Branch: results[i]["Branch"]
                            });
                        }
                    }

                    cboStockWithdrawalBranch.dispose();
                    cboStockWithdrawalBranch = new wijmo.input.ComboBox('#cboStockWithdrawalBranch', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id"
                    });

                    createCboStockWithdrawalDetailCustomer();
                }
            });
        }

        // =============================================
        // Create Stock Withdrawal Detail Combo Customer
        // =============================================
        function createCboStockWithdrawalDetailCustomer() {
            var customerObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockWithdrawal/dropdown/list/customer',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            customerObservableArray.push({
                                Id: results[i]["Id"],
                                Article: results[i]["Article"],
                                ContactNumber: results[i]["ContactNumber"],
                                Address: results[i]["Address"]
                            });
                        }
                    }

                    cboStockWithdrawalCustomer.dispose();
                    cboStockWithdrawalCustomer = new wijmo.input.ComboBox('#cboStockWithdrawalCustomer', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select Customer",
                        itemsSource: customerObservableArray,
                        displayMemberPath: "Article",
                        selectedValuePath: "Id",
                        onSelectedIndexChanged: function () {
                            document.getElementById('inpStockWithdrawalContactPerson').value = this.selectedItem["Article"];
                            document.getElementById('inpStockWithdrawalContactNumber').value = this.selectedItem["ContactNumber"];
                            document.getElementById('inpStockWithdrawalAddress').value = this.selectedItem["Address"];

                            cboSalesInvoiceStatusCustomerFilter.selectedValue = this.selectedValue;
                        }
                    });

                    document.getElementById('inpStockWithdrawalContactPerson').value = cboStockWithdrawalCustomer.selectedItem["Article"];
                    document.getElementById('inpStockWithdrawalContactNumber').value = cboStockWithdrawalCustomer.selectedItem["ContactNumber"];
                    document.getElementById('inpStockWithdrawalAddress').value = cboStockWithdrawalCustomer.selectedItem["Address"];

                    cboSalesInvoiceStatusCustomerFilter.dispose();
                    cboSalesInvoiceStatusCustomerFilter = new wijmo.input.ComboBox('#cboSalesInvoiceStatusCustomerFilter', {
                        isEditable: false,
                        placeholder: "Select Customer",
                        itemsSource: customerObservableArray,
                        displayMemberPath: "Article",
                        selectedValuePath: "Id",
                        onSelectedIndexChanged: function () {
                            cboStockWithdrawalCustomer.selectedValue = this.selectedValue;

                            if (isBtnSalesInvoiceStatusClicked) {
                                NProgress.start();
                                createCboSalesInvoiceStatusSINumberFilter();
                            }
                        }
                    });

                    createCboStockWithdrawalDetailUsers();
                }
            });
        }

        // ==============================================
        // Create Stock Withdrawal Detail Combo SI Number
        // ==============================================
        function createCboStockWithdrawalDetailUsers() {
            var usersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockWithdrawal/dropdown/list/users',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            usersObservableArray.push({
                                Id: results[i]["Id"],
                                FullName: results[i]["FullName"]
                            });
                        }
                    }

                    cboStockWithdrawalReceivedBy.dispose();
                    cboStockWithdrawalReceivedBy = new wijmo.input.ComboBox('#cboStockWithdrawalReceivedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockWithdrawalPreparedBy.dispose();
                    cboStockWithdrawalPreparedBy = new wijmo.input.ComboBox('#cboStockWithdrawalPreparedBy', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockWithdrawalCheckedBy.dispose();
                    cboStockWithdrawalCheckedBy = new wijmo.input.ComboBox('#cboStockWithdrawalCheckedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockWithdrawalApprovedBy.dispose();
                    cboStockWithdrawalApprovedBy = new wijmo.input.ComboBox('#cboStockWithdrawalApprovedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    createCboStockWithdrawalDetailStatus();
                }
            });
        }

        // ===========================================
        // Create Stock Withdrawal Detail Combo Status
        // ===========================================
        function createCboStockWithdrawalDetailStatus() {
            var statusObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockWithdrawal/dropdown/list/status',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    var disabled = false;

                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            statusObservableArray.push({
                                Id: results[i]["Id"],
                                Status: results[i]["Status"]
                            });
                        }
                    } else {
                        disabled = true;
                    }

                    cboStockWithdrawalStatus.dispose();
                    cboStockWithdrawalStatus = new wijmo.input.ComboBox('#cboStockWithdrawalStatus', {
                        disabled: disabled,
                        isEditable: false,
                        //placeholder: "Select Status",
                        itemsSource: statusObservableArray,
                        displayMemberPath: "Status",
                        selectedValuePath: "Status"
                    });

                    getStockWithdrawalData();
                }
            });
        }

        // ================================
        // Get Stock Withdrawal Detail Data
        // ================================
        function getStockWithdrawalData() {
            if (document.location.search.length > 0) {
                var id = getURLParameterValue("id");
                $.ajax({
                    url: '/api/stockWithdrawal/detail/' + id,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results != null) {
                            cboStockWithdrawalBranch.selectedValue = results.BranchId;
                            document.getElementById('inpStockWithdrawalSWNumber').value = results.SWNumber;
                            cboStockWithdrawalSWDate.dispose();
                            cboStockWithdrawalSWDate = new wijmo.input.InputDate('#cboStockWithdrawalSWDate', {
                                format: 'MM-dd-yyyy',
                                value: new Date(results.SWDate),
                            });
                            document.getElementById('inpStockWithdrawalDocumentReference').value = results.DocumentReference;
                            cboStockWithdrawalCustomer.selectedValue = results.CustomerId;
                            cboSalesInvoiceStatusSIBranchFilter.selectedValue = results.SIBranchId;
                            cboSalesInvoiceStatusSINumberFilter.selectedValue = results.SIId;
                            SIIdSelectedValue = results.SIId;
                            SIBranchIdSelectedValue = results.SIBranchId;
                            document.getElementById('inpStockWithdrawalSIBranch').value = results.SIBranch;
                            document.getElementById('inpStockWithdrawalSINumber').value = results.SINumber + " - (" + results.SIDate.replace("/", "-") + ")";
                            document.getElementById('inpStockWithdrawalRemarks').value = results.Remarks;
                            document.getElementById('inpStockWithdrawalManualSWNumber').value = results.ManualSWNumber;
                            document.getElementById('inpStockWithdrawalContactPerson').value = results.ContactPerson;
                            document.getElementById('inpStockWithdrawalContactNumber').value = results.ContactNumber;
                            document.getElementById('inpStockWithdrawalAddress').value = results.Address;
                            cboStockWithdrawalReceivedBy.selectedValue = results.ReceivedById;
                            cboStockWithdrawalPreparedBy.selectedValue = results.PreparedById;
                            cboStockWithdrawalCheckedBy.selectedValue = results.CheckedById;
                            cboStockWithdrawalApprovedBy.selectedValue = results.ApprovedById;
                            cboStockWithdrawalStatus.selectedValue = results.Status;

                            if (results.IsLocked == true) {
                                cboStockWithdrawalSWDate.disabled = true;
                                cboStockWithdrawalCustomer.disabled = true;
                                cboSalesInvoiceStatusSIBranchFilter.disabled = true;
                                cboSalesInvoiceStatusSINumberFilter.disabled = true;
                                document.getElementById('inpStockWithdrawalRemarks').disabled = true;
                                document.getElementById('inpStockWithdrawalDocumentReference').disabled = true;
                                document.getElementById('inpStockWithdrawalManualSWNumber').disabled = true;
                                document.getElementById('inpStockWithdrawalContactPerson').disabled = true;
                                document.getElementById('inpStockWithdrawalContactNumber').disabled = true;
                                document.getElementById('inpStockWithdrawalAddress').disabled = true;
                                cboStockWithdrawalReceivedBy.disabled = true;
                                cboStockWithdrawalCheckedBy.disabled = true;
                                cboStockWithdrawalApprovedBy.disabled = true;
                                cboStockWithdrawalStatus.disabled = true;

                                $("#btnStockWithdrawalLock").prop("disabled", true);
                                $('#btnStockWithdrawalItemAdd').prop('disabled', true);
                                $("#btnSalesInvoiceStatus").prop("disabled", true);

                                isLocked = true;
                            } else {
                                $("#btnStockWithdrawalJournal").prop("disabled", true);
                                $("#btnStockWithdrawalUnlock").prop("disabled", true);
                                $("#btnStockWithdrawalPrint").prop("disabled", true);
                            }

                            createCboShowRows();
                            createStockWithdrawalItemsFlexgrid();
                            createInventoryEntriesFlexGrid();
                        } else {
                            alert("No Data.");
                            window.location = "/Software/StockWithdrawal";
                        }
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/StockWithdrawal";
            }
        }

        // =====================
        // Save Stock Withdrawal
        // =====================
        function btnStockWithdrawalSaveOnclick() {
            var stockWithdrawalObject = new Object();
            stockWithdrawalObject.SWDate = cboStockWithdrawalSWDate.value.toLocaleDateString();
            stockWithdrawalObject.CustomerId = cboStockWithdrawalCustomer.selectedValue;
            stockWithdrawalObject.SIBranchId = SIBranchIdSelectedValue;
            stockWithdrawalObject.SIId = SIIdSelectedValue;
            stockWithdrawalObject.Remarks = document.getElementById('inpStockWithdrawalRemarks').value;
            stockWithdrawalObject.DocumentReference = document.getElementById('inpStockWithdrawalDocumentReference').value;
            stockWithdrawalObject.ManualSWNumber = document.getElementById('inpStockWithdrawalManualSWNumber').value;
            stockWithdrawalObject.ContactPerson = document.getElementById('inpStockWithdrawalContactPerson').value;
            stockWithdrawalObject.ContactNumber = document.getElementById('inpStockWithdrawalContactNumber').value;
            stockWithdrawalObject.Address = document.getElementById('inpStockWithdrawalAddress').value;
            stockWithdrawalObject.ReceivedById = cboStockWithdrawalReceivedBy.selectedValue;
            stockWithdrawalObject.PreparedById = cboStockWithdrawalPreparedBy.selectedValue;
            stockWithdrawalObject.CheckedById = cboStockWithdrawalCheckedBy.selectedValue;
            stockWithdrawalObject.ApprovedById = cboStockWithdrawalApprovedBy.selectedValue;
            stockWithdrawalObject.Status = cboStockWithdrawalStatus.selectedValue;
            var stockWithdrawalData = JSON.stringify(stockWithdrawalObject);

            var isValid = true;
            $('.requiredStockWithdrawal').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnStockWithdrawalSave').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $("#btnStockWithdrawalSave").prop("disabled", true);
                $("#btnStockWithdrawalJournal").prop("disabled", true);
                $("#btnStockWithdrawalLock").prop("disabled", true);
                $("#btnStockWithdrawalUnlock").prop("disabled", true);
                $("#btnStockWithdrawalPrint").prop("disabled", true);
                $("#btnStockWithdrawalClose").prop("disabled", true);

                var id = getURLParameterValue("id");

                $.ajax({
                    type: "PUT",
                    url: '/api/stockWithdrawal/save/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: stockWithdrawalData,
                    statusCode: {
                        200: function () {
                            toastr.success("Save Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnStockWithdrawalSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockWithdrawalSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockWithdrawalJournal").prop("disabled", false);
                                $("#btnStockWithdrawalUnlock").prop("disabled", false);
                                $("#btnStockWithdrawalPrint").prop("disabled", false);
                            } else {
                                $("#btnStockWithdrawalLock").prop("disabled", false);
                            }

                            $("#btnStockWithdrawalClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnStockWithdrawalSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockWithdrawalSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockWithdrawalJournal").prop("disabled", false);
                                $("#btnStockWithdrawalUnlock").prop("disabled", false);
                                $("#btnStockWithdrawalPrint").prop("disabled", false);
                            } else {
                                $("#btnStockWithdrawalLock").prop("disabled", false);
                            }

                            $("#btnStockWithdrawalClose").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnStockWithdrawalSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockWithdrawalSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockWithdrawalJournal").prop("disabled", false);
                                $("#btnStockWithdrawalUnlock").prop("disabled", false);
                                $("#btnStockWithdrawalPrint").prop("disabled", false);
                            } else {
                                $("#btnStockWithdrawalLock").prop("disabled", false);
                            }

                            $("#btnStockWithdrawalClose").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =====================
        // Lock Stock Withdrawal
        // =====================
        function btnStockWithdrawalLockOnclick() {
            var stockWithdrawalObject = new Object();
            stockWithdrawalObject.SWDate = cboStockWithdrawalSWDate.value.toLocaleDateString();
            stockWithdrawalObject.CustomerId = cboStockWithdrawalCustomer.selectedValue;
            stockWithdrawalObject.SIBranchId = SIBranchIdSelectedValue;
            stockWithdrawalObject.SIId = SIIdSelectedValue;
            stockWithdrawalObject.Remarks = document.getElementById('inpStockWithdrawalRemarks').value;
            stockWithdrawalObject.DocumentReference = document.getElementById('inpStockWithdrawalDocumentReference').value;
            stockWithdrawalObject.ManualSWNumber = document.getElementById('inpStockWithdrawalManualSWNumber').value;
            stockWithdrawalObject.ContactPerson = document.getElementById('inpStockWithdrawalContactPerson').value;
            stockWithdrawalObject.ContactNumber = document.getElementById('inpStockWithdrawalContactNumber').value;
            stockWithdrawalObject.Address = document.getElementById('inpStockWithdrawalAddress').value;
            stockWithdrawalObject.ReceivedById = cboStockWithdrawalReceivedBy.selectedValue;
            stockWithdrawalObject.PreparedById = cboStockWithdrawalPreparedBy.selectedValue;
            stockWithdrawalObject.CheckedById = cboStockWithdrawalCheckedBy.selectedValue;
            stockWithdrawalObject.ApprovedById = cboStockWithdrawalApprovedBy.selectedValue;
            stockWithdrawalObject.Status = cboStockWithdrawalStatus.selectedValue;
            var stockWithdrawalData = JSON.stringify(stockWithdrawalObject);

            var isValid = true;
            $('.requiredStockWithdrawal').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnStockWithdrawalLock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $("#btnStockWithdrawalSave").prop("disabled", true);
                $("#btnStockWithdrawalJournal").prop("disabled", true);
                $("#btnStockWithdrawalLock").prop("disabled", true);
                $("#btnStockWithdrawalUnlock").prop("disabled", true);
                $("#btnStockWithdrawalPrint").prop("disabled", true);
                $("#btnStockWithdrawalClose").prop("disabled", true);

                var id = getURLParameterValue("id");

                $.ajax({
                    type: "PUT",
                    url: '/api/stockWithdrawal/lock/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: stockWithdrawalData,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnStockWithdrawalLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockWithdrawalSave").prop("disabled", false);
                            $("#btnStockWithdrawalLock").prop("disabled", false);
                            $("#btnStockWithdrawalClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnStockWithdrawalLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockWithdrawalSave").prop("disabled", false);
                            $("#btnStockWithdrawalLock").prop("disabled", false);
                            $("#btnStockWithdrawalClose").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnStockWithdrawalLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockWithdrawalSave").prop("disabled", false);
                            $("#btnStockWithdrawalLock").prop("disabled", false);
                            $("#btnStockWithdrawalClose").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =======================
        // Unlock Stock Withdrawal
        // =======================
        function btnStockWithdrawalUnlockOnclick() {
            document.getElementById('btnStockWithdrawalUnlock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $("#btnStockWithdrawalJournal").prop("disabled", true);
            $("#btnStockWithdrawalLock").prop("disabled", true);
            $("#btnStockWithdrawalUnlock").prop("disabled", true);
            $("#btnStockWithdrawalPrint").prop("disabled", true);
            $("#btnStockWithdrawalClose").prop("disabled", true);

            var id = getURLParameterValue("id");

            $.ajax({
                type: "PUT",
                url: '/api/stockWithdrawal/unlock/' + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnStockWithdrawalUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockWithdrawalUnlock").prop("disabled", false);
                        $("#btnStockWithdrawalJournal").prop("disabled", false);
                        $("#btnStockWithdrawalPrint").prop("disabled", false);
                        $("#btnStockWithdrawalClose").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnStockWithdrawalUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockWithdrawalUnlock").prop("disabled", false);
                        $("#btnStockWithdrawalJournal").prop("disabled", false);
                        $("#btnStockWithdrawalPrint").prop("disabled", false);
                        $("#btnStockWithdrawalClose").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnStockWithdrawalUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockWithdrawalUnlock").prop("disabled", false);
                        $("#btnStockWithdrawalJournal").prop("disabled", false);
                        $("#btnStockWithdrawalPrint").prop("disabled", false);
                        $("#btnStockWithdrawalClose").prop("disabled", false);
                    }
                }
            });
        }

        // ======================
        // Print Stock Withdrawal
        // ======================
        function btnStockWithdrawalPrintOnclick() {
            var stockWithdrawalId = getURLParameterValue("id");
            var pirntLink = "/RepStockWithdrawal/StockWithdrawal?StockWithdrawalId=" + stockWithdrawalId;
            window.open(pirntLink, '_blank');
        }

        // ==============================
        // Get Stock Withdrawal Item Data
        // ==============================
        function getStockWithdrawalItemData() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                var SWId = getURLParameterValue("id");
                $.ajax({
                    url: '/api/stockWithdrawalItem/list/' + SWId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        var totalAmount = 0;
                        if (results.length > 0) {
                            var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnStockWithdrawalItemEditOnclick()'><i class='fa fa-edit'></i> Edit</button>";
                            var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnStockWithdrawalItemDeleteOnclick()'><i class='fa fa-trash'></i> Delete</button>";
                            if (isLocked) {
                                btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnStockWithdrawalItemEditOnclick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnStockWithdrawalItemDeleteOnclick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                            }

                            for (i = 0; i < results.length; i++) {
                                itemsObservableArray.push({
                                    EditId: btnEditId,
                                    DeleteId: btnDeleteId,
                                    Id: results[i]["Id"],
                                    SWId: results[i]["SWId"],
                                    ItemId: results[i]["ItemId"],
                                    ItemCode: results[i]["ItemManualCode"],
                                    ItemManualArticleOldCode: results[i]["ItemSKUCode"],
                                    ItemDescription: results[i]["ItemDescription"],
                                    ItemInventoryId: results[i]["ItemInventoryId"],
                                    ItemInventoryCode: results[i]["ItemInventoryCode"],
                                    Particulars: results[i]["Particulars"],
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"],
                                    Quantity: results[i]["Quantity"],
                                    QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    Cost: results[i]["Cost"],
                                    CostDisplay: parseFloat(results[i]["Cost"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    Amount: results[i]["Amount"],
                                    AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    BaseUnitId: results[i]["BaseUnitId"],
                                    BaseUnit: results[i]["BaseUnit"],
                                    BaseQuantity: results[i]["BaseQuantity"],
                                    BaseQuantityDisplay: parseFloat(results[i]["BaseQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    BaseCost: results[i]["BaseCost"],
                                    BaseCostDisplay: parseFloat(results[i]["BaseCost"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                });

                                totalAmount += results[i]["Amount"];
                            }
                        }

                        document.getElementById('totalSWAmount').value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        NProgress.done();
                    }
                });
            }

            return itemsObservableArray;
        }

        // ======================================
        // Create Stock Withdrawal Item Flex Grid
        // ======================================
        function createStockWithdrawalItemsFlexgrid() {
            stockWithdrawalItemCollectionView = new wijmo.collections.CollectionView(getStockWithdrawalItemData());
            stockWithdrawalItemCollectionView.canFilter = true;
            stockWithdrawalItemCollectionView.pageSize = cboStockWithdrawalItemsShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpStockWithdrawalItemSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockWithdrawalItemCollectionView.refresh();
            });

            stockWithdrawalItemCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            stockWithdrawalItemCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateStockWithdrawaltemNavigationButtons();
            });

            stockWithdrawalItemFlexGrid = new wijmo.grid.FlexGrid('#stockWithdrawalItemFlexGrid');
            stockWithdrawalItemFlexGrid.initialize({
                columns: [
                   @{
                        if (canEdit)
                        {
                            <text>
                                {
                                    "header": "Edit",
                                    "binding": "EditId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                        if (canDelete)
                        {
                            <text>
                                {
                                    "header": "Delete",
                                    "binding": "DeleteId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                    }
                    {
                        "header": "Barcode",
                        "binding": "ItemCode",
                        "allowSorting": true,
                        "width": 110
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ItemManualArticleOldCode",
                        "allowSorting": true,
                        "width": 110
                    },
                    {
                        "header": "Description",
                        "binding": "ItemDescription",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": 120
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "ItemInventoryCode",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Cost",
                        "binding": "CostDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                    {
                        "header": "Unit",
                        "binding": "BaseUnit",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Quantity",
                        "binding": "BaseQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                    {
                        "header": "Cost",
                        "binding": "BaseCostDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: stockWithdrawalItemCollectionView,
                isReadOnly: true,
                @{
                    if (canEdit)
                    {
                        if (canDelete)
                        {
                            <text>
                                frozenColumns: 2,
                            </text>
                        }
                        else
                        {
                            <text>
                                frozenColumns: 1,
                            </text>
                        }
                    }
                    else
                    {
                        if (canDelete)
                        {
                            <text>
                                frozenColumns: 1,
                            </text>
                        }
                        else
                        {
                            <text>
                                frozenColumns: 0,
                            </text>
                        }
                    }
                }
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockWithdrawalItemFlexGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            stockWithdrawalItemFlexGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            stockWithdrawalItemFlexGrid.columnHeaders.rows.push(hr);
            stockWithdrawalItemFlexGrid.columnHeaders.rows[0].allowMerging = true;

            @{
                if (canEdit)
                {
                    if (canDelete)
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 13; i++) {
                                if (i == 0) {
                                    columnName = "Edit";
                                } else if (i == 1) {
                                    columnName = "Delete";
                                } else if (i == 2) {
                                    columnName = "Barcode";
                                } else if (i == 3) {
                                    columnName = "SKU Code";
                                } else if (i == 4) {
                                    columnName = "Description";
                                } else if (i == 5) {
                                    columnName = "Particulars";
                                } else if (i == 6) {
                                    columnName = "Inventory Code";
                                } else if (i == 7) {
                                    columnName = "Quantity";
                                } else if (i == 8) {
                                    columnName = "Unit";
                                } else if (i == 9) {
                                    columnName = "Cost";
                                } else if (i == 10) {
                                    columnName = "Amount";
                                } else {
                                    if (i >= 11) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 11; j <= 13; j++) {
                                            stockWithdrawalItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            stockWithdrawalItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 10) {
                                    stockWithdrawalItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    stockWithdrawalItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                    else
                    {
                         <text>
                            var columnName = "";
                            for (var i = 0; i <= 12; i++) {
                                if (i == 0) {
                                    columnName = "Edit";
                                } else if (i == 1) {
                                    columnName = "Barcode";
                                } else if (i == 2) {
                                    columnName = "SKU Code";
                                } else if (i == 3) {
                                    columnName = "Description";
                                } else if (i == 4) {
                                    columnName = "Particulars";
                                } else if (i == 5) {
                                    columnName = "Inventory Code";
                                } else if (i == 6) {
                                    columnName = "Quantity";
                                } else if (i == 7) {
                                    columnName = "Unit";
                                } else if (i == 8) {
                                    columnName = "Cost";
                                } else if (i == 9) {
                                    columnName = "Amount";
                                } else {
                                    if (i >= 10) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 10; j <= 12; j++) {
                                            stockWithdrawalItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            stockWithdrawalItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 9) {
                                    stockWithdrawalItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    stockWithdrawalItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                }
                else
                {
                    if (canDelete)
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 12; i++) {
                                if (i == 0) {
                                    columnName = "Delete";
                                } else if (i == 1) {
                                    columnName = "Barcode";
                                } else if (i == 2) {
                                    columnName = "SKU Code";
                                } else if (i == 3) {
                                    columnName = "Description";
                                } else if (i == 4) {
                                    columnName = "Particulars";
                                } else if (i == 5) {
                                    columnName = "Inventory Code";
                                } else if (i == 6) {
                                    columnName = "Quantity";
                                } else if (i == 7) {
                                    columnName = "Unit";
                                } else if (i == 8) {
                                    columnName = "Cost";
                                } else if (i == 9) {
                                    columnName = "Amount";
                                } else {
                                    if (i >= 10) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 10; j <= 12; j++) {
                                            stockWithdrawalItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            stockWithdrawalItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 9) {
                                    stockWithdrawalItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    stockWithdrawalItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                    else
                    {
                         <text>
                            var columnName = "";
                            for (var i = 0; i <= 11; i++) {
                                if (i == 0) {
                                    columnName = "Barcode";
                                } else if (i == 1) {
                                    columnName = "SKU Code";
                                } else if (i == 2) {
                                    columnName = "Description";
                                } else if (i == 3) {
                                    columnName = "Particulars";
                                } else if (i == 4) {
                                    columnName = "Inventory Code";
                                } else if (i == 5) {
                                    columnName = "Quantity";
                                } else if (i == 6) {
                                    columnName = "Unit";
                                } else if (i == 7) {
                                    columnName = "Cost";
                                } else if (i == 8) {
                                    columnName = "Amount";
                                } else {
                                    if (i >= 9) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 9; j <= 11; j++) {
                                            stockWithdrawalItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            stockWithdrawalItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 8) {
                                    stockWithdrawalItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    stockWithdrawalItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                }
            }

            updateStockWithdrawaltemNavigationButtons();

            btnStockWithdrawalItemMoveToFirstPageGrid.addEventListener('click', function () {
                stockWithdrawalItemCollectionView.moveToFirstPage();
                updateStockWithdrawaltemNavigationButtons();
            });

            btnStockWithdrawalItemMoveToPreviousPageGrid.addEventListener('click', function () {
                stockWithdrawalItemCollectionView.moveToPreviousPage();
                updateStockWithdrawaltemNavigationButtons();
            });

            btnStockWithdrawalItemMoveToNextPageGrid.addEventListener('click', function () {
                stockWithdrawalItemCollectionView.moveToNextPage();
                updateStockWithdrawaltemNavigationButtons();
            });

            btnStockWithdrawalItemMoveToLastPageGrid.addEventListener('click', function () {
                stockWithdrawalItemCollectionView.moveToLastPage();
                updateStockWithdrawaltemNavigationButtons();
            });
        }

        // ===============================================
        // Update Stock Withdrawal Item Navigation Buttons
        // ===============================================
        function updateStockWithdrawaltemNavigationButtons() {
            if (stockWithdrawalItemCollectionView.pageSize <= 0) {
                document.getElementById('stockWithdrawalNavigationPageGridItem').style.display = 'none';
                return;
            }
            document.getElementById('stockWithdrawalNavigationPageGridItem').style.display = 'block';
            if (stockWithdrawalItemCollectionView.pageIndex === 0) {
                btnStockWithdrawalItemMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnStockWithdrawalItemMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnStockWithdrawalItemMoveToNextPageGrid.removeAttribute('disabled');
                btnStockWithdrawalItemMoveToLastPageGrid.removeAttribute('disabled');
            } else if (stockWithdrawalItemCollectionView.pageIndex === (stockWithdrawalItemCollectionView.pageCount - 1)) {
                btnStockWithdrawalItemMoveToFirstPageGrid.removeAttribute('disabled');
                btnStockWithdrawalItemMoveToPreviousPageGrid.removeAttribute('disabled');
                btnStockWithdrawalItemMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnStockWithdrawalItemMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnStockWithdrawalItemMoveToFirstPageGrid.removeAttribute('disabled');
                btnStockWithdrawalItemMoveToPreviousPageGrid.removeAttribute('disabled');
                btnStockWithdrawalItemMoveToNextPageGrid.removeAttribute('disabled');
                btnStockWithdrawalItemMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnStockWithdrawalItemCurrentPageGrid.innerHTML = (stockWithdrawalItemCollectionView.pageIndex + 1) + ' / ' + stockWithdrawalItemCollectionView.pageCount;
        }

        // =======================================
        // Refresh Stock Withdrawal Item Flex Grid
        // =======================================
        function refreshStockWithdrawalItemsFlexgrid() {
            stockWithdrawalItemCollectionView = new wijmo.collections.CollectionView(getStockWithdrawalItemData());
            stockWithdrawalItemCollectionView.canFilter = true;
            stockWithdrawalItemCollectionView.pageSize = cboStockWithdrawalItemsShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpStockWithdrawalItemSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockWithdrawalItemCollectionView.refresh();
            });

            stockWithdrawalItemCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            stockWithdrawalItemCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateStockWithdrawaltemNavigationButtons();
            });

            stockWithdrawalItemFlexGrid.itemsSource = stockWithdrawalItemCollectionView;
            stockWithdrawalItemFlexGrid.trackChanges = true;
        }

        // =======================================
        // Create Stock Withdrawal Item Combo Item
        // =======================================
        function createCboStockWithdrawalItem(itemId, inventoryId, unitId) {
            var salesInvoiceItem = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockWithdrawalItem/dropdown/list/salesInvoice/item/' + SIIdSelectedValue,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            salesInvoiceItem.push({
                                ItemId: results[i]["ItemId"],
                                ItemCode: results[i]["ItemCode"],
                                ItemDescription: results[i]["ItemDescription"],
                                UnitId: results[i]["UnitId"],
                                Quantity: results[i]["Quantity"],
                                Price: results[i]["Price"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                        $("#btnStockWithdrawalItemSave").prop("disabled", false);
                    } else {
                        $("#btnStockWithdrawalItemSave").prop("disabled", true);
                    }

                    cboStockWithdrawalItemItemCode.dispose();
                    cboStockWithdrawalItemItemCode = new wijmo.input.ComboBox('#cboStockWithdrawalItemItemCode', {
                        disabled: disabled,
                        isEditable: false,
                        placeholder: "Select Code",
                        itemsSource: salesInvoiceItem,
                        displayMemberPath: "ItemCode",
                        selectedValuePath: "ItemId",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboStockWithdrawalItemItemDescription.selectedValue = this.selectedValue;
                        }
                    });

                    cboStockWithdrawalItemItemDescription.dispose();
                    cboStockWithdrawalItemItemDescription = new wijmo.input.ComboBox('#cboStockWithdrawalItemItemDescription', {
                        disabled: disabled,
                        isEditable: false,
                        placeholder: "Select Item",
                        itemsSource: salesInvoiceItem,
                        displayMemberPath: "ItemDescription",
                        selectedValuePath: "ItemId",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            createCboReceivingReceiptItemInventoryCode(inventoryId, unitId);
                            document.getElementById("inpStockWithdrawalItemQuantity").value = formatDecimalValues(this.selectedItem["Quantity"]);
                        }
                    });

                    createCboReceivingReceiptItemInventoryCode(inventoryId, unitId);
                }
            });
        }

        // =================================================
        // Create Stock Withdrawal Item Combo Inventory Code
        // =================================================
        function createCboReceivingReceiptItemInventoryCode(inventoryId, unitId) {
            var articleInventoriesObservableArray = new wijmo.collections.ObservableArray();
            var itemId = cboStockWithdrawalItemItemDescription.selectedValue;
            $.ajax({
                url: '/api/stockWithdrawalItem/dropdown/list/itemInventoryCode/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleInventoriesObservableArray.push({
                                Id: results[i]["Id"],
                                InventoryCode: results[i]["InventoryCode"],
                                Cost: results[i]["Cost"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        var InventoryType = "@ViewData["InventoryType"]";
                        if (InventoryType == "Moving Average") {
                            disabled = true;
                        } else {
                            disabled = false;
                        }
                    } else {
                        $("#btnStockWithdrawalItemSave").prop("disabled", true);
                    }

                    cboStockWithdrawalItemInventoryCode.dispose();
                    cboStockWithdrawalItemInventoryCode = new wijmo.input.ComboBox('#cboStockWithdrawalItemInventoryCode', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: articleInventoriesObservableArray,
                        displayMemberPath: "InventoryCode",
                        selectedValuePath: "Id",
                        selectedValue: inventoryId,
                        onSelectedIndexChanged: function () {
                            if (cboStockWithdrawalItemInventoryCode.selectedValue != null) {
                                document.getElementById("inpStockWithdrawalItemCost").value = formatDecimalValues(cboStockWithdrawalItemInventoryCode.selectedItem["Cost"]);
                                computeStockWithdrawalItemAmount();
                            }
                        }
                    });

                    if (cboStockWithdrawalItemInventoryCode.selectedValue != null) {
                        document.getElementById("inpStockWithdrawalItemCost").value = formatDecimalValues(cboStockWithdrawalItemInventoryCode.selectedItem["Cost"]);
                        computeStockWithdrawalItemAmount();
                    }

                    createCboReceivingReceiptItemUnit(unitId);
                }
            });
        }

        // =======================================
        // Create Stock Withdrawal Item Combo Unit
        // =======================================
        function createCboReceivingReceiptItemUnit(unitId) {
            var stockWithdrawalUnitsObservableArray = new wijmo.collections.ObservableArray();
            var itemId = cboStockWithdrawalItemItemDescription.selectedValue;
            $.ajax({
                url: '/api/stockWithdrawalItem/dropdown/list/itemUnit/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            stockWithdrawalUnitsObservableArray.push({
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"],
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                    } else {
                        $("#btnStockWithdrawalItemSave").prop("disabled", true);
                    }

                    cboStockWithdrawalItemUnit.dispose();
                    cboStockWithdrawalItemUnit = new wijmo.input.ComboBox('#cboStockWithdrawalItemUnit', {
                        isEditable: false,
                        placeholder: "Select Unit",
                        itemsSource: stockWithdrawalUnitsObservableArray,
                        displayMemberPath: "Unit",
                        selectedValuePath: "UnitId",
                        selectedValue: unitId
                    });

                    $("#stockWithdrawalItemLoading").hide();
                    $("#stockWithdrawalItemContent").show();
                }
            });
        }

        // =========================
        // Add Stock Withdrawal Item
        // =========================
        function btnStockWithdrawalItemAddOnclick() {
            $('#stockWithdrawalItemDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnStockWithdrawalItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockWithdrawalItemSave").prop("disabled", true);
            $("#btnStockWithdrawalItemCloseModal").prop("disabled", false);

            $('.requiredStockWithdrawal').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#stockWithdrawalItemLoading").show();
            document.getElementById("stockWithdrawalItemLoading").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#stockWithdrawalItemContent").hide();

            stockWithdrawalItemId = 0;
            createCboStockWithdrawalItem(0, 0, 0);
            document.getElementById('inpStockWithdrawalItemParticulars').value = "NA";
            document.getElementById('inpStockWithdrawalItemQuantity').value = formatDecimalValues(1);
            document.getElementById('inpStockWithdrawalItemCost').value = formatDecimalValues(0);
            document.getElementById('inpStockWithdrawalItemAmount').value = formatDecimalValues(0);
        }

        // ==========================
        // Edit Stock Withdrawal Item
        // ==========================
        function btnStockWithdrawalItemEditOnclick() {
            $('#stockWithdrawalItemDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#stockWithdrawalItemLoading").show();
            document.getElementById("stockWithdrawalItemLoading").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#stockWithdrawalItemContent").hide();

            document.getElementById('btnStockWithdrawalItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockWithdrawalItemSave").prop("disabled", true);
            $("#btnStockWithdrawalItemCloseModal").prop("disabled", false);

            $('.requiredStockWithdrawal').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            stockWithdrawalItemCollectionView.editItem(stockWithdrawalItemCollectionView.currentItem);
            var item = stockWithdrawalItemCollectionView.currentEditItem;
            stockWithdrawalItemId = item.Id;
            createCboStockWithdrawalItem(item.ItemId, item.ItemInventoryId, item.UnitId);
            document.getElementById('inpStockWithdrawalItemParticulars').value = item.Particulars;
            document.getElementById('inpStockWithdrawalItemQuantity').value = formatDecimalValues(item.Quantity);
            document.getElementById('inpStockWithdrawalItemCost').value = formatDecimalValues(item.Cost);
            document.getElementById('inpStockWithdrawalItemAmount').value = formatDecimalValues(item.Amount);
        }

        // ==========================
        // Save Stock Withdrawal Item
        // ==========================
        function btnStockWithdrawalItemSaveOnclick() {
            var SWId = getURLParameterValue("id");
            var stockWithdrawalItemObject = new Object();
            stockWithdrawalItemObject.ItemId = cboStockWithdrawalItemItemDescription.selectedValue;
            stockWithdrawalItemObject.ItemInventoryId = cboStockWithdrawalItemInventoryCode.selectedValue;
            stockWithdrawalItemObject.Particulars = document.getElementById('inpStockWithdrawalItemParticulars').value;
            stockWithdrawalItemObject.UnitId = cboStockWithdrawalItemUnit.selectedValue;
            stockWithdrawalItemObject.Quantity = document.getElementById('inpStockWithdrawalItemQuantity').value;
            stockWithdrawalItemObject.Cost = document.getElementById('inpStockWithdrawalItemCost').value;
            stockWithdrawalItemObject.Amount = document.getElementById('inpStockWithdrawalItemAmount').value;
            var stockWithdrawalItemData = JSON.stringify(stockWithdrawalItemObject);

            var isValid = true;
            $('.requiredStockWithdrawal').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnStockWithdrawalItemSave').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $("#btnStockWithdrawalItemSave").prop("disabled", true);
                $("#btnStockWithdrawalItemCloseModal").prop("disabled", true);

                if (stockWithdrawalItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/stockWithdrawalItem/add/' + SWId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockWithdrawalItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");
                                $('#stockWithdrawalItemDetailModal').modal('hide');

                                stockWithdrawalItemCollectionView = new wijmo.collections.CollectionView(getStockWithdrawalItemData());
                                stockWithdrawalItemFlexGrid.itemsSource = stockWithdrawalItemCollectionView;
                                stockWithdrawalItemFlexGrid.trackChanges = true;
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById('btnStockWithdrawalItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockWithdrawalItemSave").prop("disabled", false);
                                $("#btnStockWithdrawalItemCloseModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById('btnStockWithdrawalItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockWithdrawalItemSave").prop("disabled", false);
                                $("#btnStockWithdrawalItemCloseModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById('btnStockWithdrawalItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockWithdrawalItemSave").prop("disabled", false);
                                $("#btnStockWithdrawalItemCloseModal").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/stockWithdrawalItem/update/' + stockWithdrawalItemId + '/' + SWId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockWithdrawalItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");

                                $('#stockWithdrawalItemDetailModal').modal('hide');

                                stockWithdrawalItemCollectionView = new wijmo.collections.CollectionView(getStockWithdrawalItemData());
                                stockWithdrawalItemFlexGrid.itemsSource = stockWithdrawalItemCollectionView;
                                stockWithdrawalItemFlexGrid.trackChanges = true;
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                $('#stockWithdrawalItemDetailModal').modal('hide');
                                document.getElementById('btnStockWithdrawalItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockWithdrawalItemSave").prop("disabled", false);
                                $("#btnStockWithdrawalItemCloseModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                $('#stockWithdrawalItemDetailModal').modal('hide');
                                document.getElementById('btnStockWithdrawalItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockWithdrawalItemSave").prop("disabled", false);
                                $("#btnStockWithdrawalItemCloseModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                $('#stockWithdrawalItemDetailModal').modal('hide');
                                document.getElementById('btnStockWithdrawalItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockWithdrawalItemSave").prop("disabled", false);
                                $("#btnStockWithdrawalItemCloseModal").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ============================
        // Delete Stock Withdrawal Item
        // ============================
        function btnStockWithdrawalItemDeleteOnclick() {
            $('#stockWithdrawaltemDeleteConfirmModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnStockWithdrawalItemConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#btnStockWithdrawalItemConfirmDelete").prop("disabled", false);
            $("#btnStockWithdrawalItemConfirmDeleteCloseButton").prop("disabled", false);
        }

        // ====================================
        // Confirm Delete Stock Withdrawal Item
        // ====================================
        function btnStockWithdrawalItemConfirmDeleteOnclick() {
            document.getElementById('btnStockWithdrawalItemConfirmDelete').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $("#btnStockWithdrawalItemConfirmDelete").prop("disabled", true);
            $("#btnStockWithdrawalItemConfirmDeleteCloseButton").prop("disabled", true);

            stockWithdrawalItemCollectionView.editItem(stockWithdrawalItemCollectionView.currentItem);
            var id = stockWithdrawalItemCollectionView.currentEditItem.Id;
            var SWId = getURLParameterValue("id");

            $.ajax({
                url: '/api/stockWithdrawalItem/delete/' + id + '/' + SWId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#stockWithdrawaltemDeleteConfirmModal').modal('hide');

                        stockWithdrawalItemCollectionView = new wijmo.collections.CollectionView(getStockWithdrawalItemData());
                        stockWithdrawalItemFlexGrid.itemsSource = stockWithdrawalItemCollectionView;
                        stockWithdrawalItemFlexGrid.trackChanges = true;
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#stockWithdrawaltemDeleteConfirmModal').modal('hide');
                        document.getElementById('btnStockWithdrawalItemConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockWithdrawalItemConfirmDelete").prop("disabled", false);
                        $("#btnStockWithdrawalItemConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#stockWithdrawaltemDeleteConfirmModal').modal('hide');
                        document.getElementById('btnStockWithdrawalItemConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockWithdrawalItemConfirmDelete").prop("disabled", false);
                        $("#btnStockWithdrawalItemConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#stockWithdrawaltemDeleteConfirmModal').modal('hide');
                        document.getElementById('btnStockWithdrawalItemConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockWithdrawalItemConfirmDelete").prop("disabled", false);
                        $("#btnStockWithdrawalItemConfirmDeleteCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ==============
        // Compute Amount
        // ==============
        $('#inpStockWithdrawalItemQuantity').keyup(function () {
            computeStockWithdrawalItemAmount();
        });
        $('#inpStockWithdrawalItemCost').keyup(function () {
            computeStockWithdrawalItemAmount();
        });
        function computeStockWithdrawalItemAmount() {
            var quantity = document.getElementById('inpStockWithdrawalItemQuantity').value.replace(/\,/g, '');
            var cost = document.getElementById('inpStockWithdrawalItemCost').value.replace(/\,/g, '');
            var totalAmount = quantity * cost;
            document.getElementById('inpStockWithdrawalItemAmount').value = formatDecimalValues(totalAmount);
        }

        // ====================
        // Sales Invoice Status
        // ====================
        function btnStockWithdrawalSalesInvoiceStatusOnclick() {
            $('#SIStatus').modal({
                show: true,
                backdrop: 'static'
            });

            $('#salesInvoiceStatusLoading').show();
            document.getElementById("salesInvoiceStatusLoading").innerHTML = "<b><i class='fa fa-spinner fa-spin'></i></b>";
            $('#salesInvoiceStatusContent').hide();
            $('#btnSalesInvoiceStatusApply').prop("disabled", true);

            setTimeout(function () {
                createCboSalesInvoiceStatusSIBranchFilter();
            }, 500);
        }

        // ==================================================
        // Create Sales Invoice Status Combo SI Branch Filter
        // ==================================================
        function createCboSalesInvoiceStatusSIBranchFilter() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockWithdrawal/dropdown/list/salesInvoice/branch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branchesObservableArray.push({
                                Id: results[i]["Id"],
                                Branch: results[i]["Branch"]
                            });
                        }
                    }

                    cboSalesInvoiceStatusSIBranchFilter.dispose();
                    cboSalesInvoiceStatusSIBranchFilter = new wijmo.input.ComboBox('#cboSalesInvoiceStatusSIBranchFilter', {
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id",
                        selectedValue: SIBranchIdSelectedValue,
                        onSelectedIndexChanged: function () {
                            if (this.selectedValue != null) {
                                document.getElementById('inpStockWithdrawalSIBranch').value = this.selectedItem["Branch"];
                                SIBranchIdSelectedValue = this.selectedValue;
                            } else {
                                document.getElementById('inpStockWithdrawalSIBranch').value = "";
                                SIBranchIdSelectedValue = 0;
                            }

                            createCboSalesInvoiceStatusSINumberFilter();
                        }
                    });

                    if (cboSalesInvoiceStatusSIBranchFilter.selectedValue != null) {
                        document.getElementById('inpStockWithdrawalSIBranch').value = cboSalesInvoiceStatusSIBranchFilter.selectedItem["Branch"];
                        SIBranchIdSelectedValue = cboSalesInvoiceStatusSIBranchFilter.selectedValue;
                    } else {
                        document.getElementById('inpStockWithdrawalSIBranch').value = "";
                        SIBranchIdSelectedValue = 0;
                    }

                    createCboSalesInvoiceStatusSINumberFilter();
                }
            });
        }

        // ==================================================
        // Create Sales Invoice Status Combo SI Number Filter
        // ==================================================
        function createCboSalesInvoiceStatusSINumberFilter() {
            var articlesObservableArray = new wijmo.collections.ObservableArray();
            if (cboStockWithdrawalCustomer.selectedValue != null) {
                if (cboSalesInvoiceStatusSIBranchFilter.selectedValue != null) {
                    $.ajax({
                        url: '/api/stockWithdrawal/dropdown/list/salesInvoice/' + cboSalesInvoiceStatusSIBranchFilter.selectedValue + "/" + cboStockWithdrawalCustomer.selectedValue,
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        success: function (results) {
                            if (results.length > 0) {
                                for (i = 0; i < results.length; i++) {
                                    articlesObservableArray.push({
                                        Id: results[i]["Id"],
                                        SINumber: results[i]["SINumber"],
                                        SIDetails: results[i]["SINumber"] + " (" + results[i]["SIDate"] + ")"
                                    });
                                }
                            }

                            var disabled = true;

                            if (!isLocked) {
                                if (results.length > 0) {
                                    disabled = false;
                                }
                            }

                            cboSalesInvoiceStatusSINumberFilter.dispose();
                            cboSalesInvoiceStatusSINumberFilter = new wijmo.input.ComboBox('#cboSalesInvoiceStatusSINumberFilter', {
                                disabled: disabled,
                                isEditable: false,
                                itemsSource: articlesObservableArray,
                                displayMemberPath: "SIDetails",
                                selectedValuePath: "Id",
                                selectedValue: SIIdSelectedValue,
                                onSelectedIndexChanged: function () {
                                    if (this.selectedValue != null) {
                                        document.getElementById('inpStockWithdrawalSINumber').value = this.selectedItem["SIDetails"];
                                        SIIdSelectedValue = this.selectedValue;
                                    } else {
                                        document.getElementById('inpStockWithdrawalSINumber').value = "";
                                        SIIdSelectedValue = 0;
                                    }

                                    createSalesInvoiceStatusFlexGrid();
                                }
                            });

                            if (cboSalesInvoiceStatusSINumberFilter.selectedValue != null) {
                                document.getElementById('inpStockWithdrawalSINumber').value = cboSalesInvoiceStatusSINumberFilter.selectedItem["SIDetails"];
                                SIIdSelectedValue = cboSalesInvoiceStatusSINumberFilter.selectedValue;
                            } else {
                                document.getElementById('inpStockWithdrawalSINumber').value = "";
                                SIIdSelectedValue = 0;
                            }

                            createSalesInvoiceStatusFlexGrid();
                        }
                    });
                } else {
                    cboSalesInvoiceStatusSINumberFilter.dispose();
                    cboSalesInvoiceStatusSINumberFilter = new wijmo.input.ComboBox('#cboSalesInvoiceStatusSINumberFilter', {
                        disabled: true,
                        isEditable: false,
                        itemsSource: articlesObservableArray,
                    });

                    if (cboSalesInvoiceStatusSINumberFilter.selectedValue != null) {
                        document.getElementById('inpStockWithdrawalSINumber').value = cboSalesInvoiceStatusSINumberFilter.selectedItem["SIDetails"];
                        SIIdSelectedValue = cboSalesInvoiceStatusSINumberFilter.selectedValue;
                    } else {
                        document.getElementById('inpStockWithdrawalSINumber').value = "";
                        SIIdSelectedValue = 0;
                    }

                    createSalesInvoiceStatusFlexGrid();
                }
            } else {
                cboSalesInvoiceStatusSINumberFilter.dispose();
                cboSalesInvoiceStatusSINumberFilter = new wijmo.input.ComboBox('#cboSalesInvoiceStatusSINumberFilter', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: articlesObservableArray,
                });

                if (cboSalesInvoiceStatusSINumberFilter.selectedValue != null) {
                    document.getElementById('inpStockWithdrawalSINumber').value = cboSalesInvoiceStatusSINumberFilter.selectedItem["SIDetails"];
                    SIIdSelectedValue = cboSalesInvoiceStatusSINumberFilter.selectedValue;
                } else {
                    document.getElementById('inpStockWithdrawalSINumber').value = "";
                    SIIdSelectedValue = 0;
                }

                createSalesInvoiceStatusFlexGrid();
            }
        }

        // =============================
        // Get Sales Invoice Status Data
        // =============================
        function getSalesInvoiceStatusData() {
            var salesInvoiceStatusObservableArray = new wijmo.collections.ObservableArray;
            if (cboSalesInvoiceStatusSINumberFilter.selectedValue != null) {
                var SIId = cboSalesInvoiceStatusSINumberFilter.selectedValue;
                $.ajax({
                    url: '/api/stockWithdrawalItem/popUp/list/salesInvoiceStatus/' + SIId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (results) {
                        $('#btnSalesInvoiceStatusApply').prop("disabled", false);
                        if (results != null) {
                            if (results.length > 0) {
                                for (i = 0; i < results.length; i++) {
                                    salesInvoiceStatusObservableArray.push({
                                        SIId: results[i]["SIId"],
                                        ItemId: results[i]["ItemId"],
                                        ItemCode: results[i]["ItemCode"],
                                        ItemDescription: results[i]["ItemDescription"],
                                        Particulars: results[i]["Particulars"],
                                        BaseUnitId: results[i]["BaseUnitId"],
                                        BaseUnit: results[i]["BaseUnit"],
                                        BaseQuantity: results[i]["BaseQuantity"],
                                        BaseQuantityDisplay: parseFloat(results[i]["BaseQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        WithdrawnQuantity: results[i]["WithdrawnQuantity"],
                                        WithdrawnQuantityDisplay: parseFloat(results[i]["WithdrawnQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        BalanceQuantity: results[i]["BalanceQuantity"],
                                        BalanceQuantityDisplay: parseFloat(results[i]["BalanceQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                        PickButton: "<button class='btn btn-primary btn-xs btn-block' onclick='btnSalesInvoiceStatusPickOnclick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                                        Pick: (results[i]["BaseQuantity"] - results[i]["WithdrawnQuantity"]) == 0 ? "<button class='btn btn-primary btn-xs' onclick='pickQuantity_OnClick()'><i class='fa fa-arrow-right'></i></button>" : "<button class='btn btn-warning btn-xs' onclick='pickReverseQuantity_OnClick()'><i class='fa fa-arrow-left'></i></button>",
                                        Balance: results[i]["BaseQuantity"] - results[i]["WithdrawnQuantity"],
                                        BalanceDisplay: parseFloat(results[i]["BaseQuantity"] - results[i]["WithdrawnQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    });
                                }
                            } else {
                                $('#btnSalesInvoiceStatusApply').prop("disabled", true);
                            }
                        } else {
                            $('#btnSalesInvoiceStatusApply').prop("disabled", true);
                        }

                        $('#salesInvoiceStatusLoading').hide();
                        $('#salesInvoiceStatusContent').show();

                        NProgress.done();
                    }
                });
            } else {
                $('#btnSalesInvoiceStatusApply').prop("disabled", true);
                $('#salesInvoiceStatusLoading').hide();
                $('#salesInvoiceStatusContent').show();

                NProgress.done();
            }

            return salesInvoiceStatusObservableArray;
        }

        // =====================================
        // Create Sales Invoice Status Flex Grid
        // =====================================
        function createSalesInvoiceStatusFlexGrid() {
            salesInvoiceStatusCollectionView = new wijmo.collections.CollectionView(getSalesInvoiceStatusData());
            salesInvoiceStatusCollectionView.canFilter = true;
            salesInvoiceStatusCollectionView.pageSize = 10;

            var filterText = '';
            $('#inpSalesInvoiceStatusSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                salesInvoiceStatusCollectionView.refresh();
            });

            salesInvoiceStatusCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1);
            }

            salesInvoiceStatusCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateSalesInvoiceStatusNavigateButtons();
            });

            salesInvoiceStatusFlexGrid.dispose();
            salesInvoiceStatusFlexGrid = new wijmo.grid.FlexGrid('#salesInvoiceStatusFlexGrid');
            salesInvoiceStatusFlexGrid.initialize({
                columns: [
                    {
                        "header": "Code",
                        "binding": "ItemCode",
                        "allowSorting": true,
                        "width": "1.5*",
                        "isReadOnly": true,
                    },
                    {
                        "header": "Description",
                        "binding": "ItemDescription",
                        "allowSorting": true,
                        "isReadOnly": true,
                        "width": "2*"
                    },
                    {
                        "header": "Unit",
                        "binding": "BaseUnit",
                        "allowSorting": true,
                        "isReadOnly": true,
                        "width": "0.7*"
                    },
                    {
                        "header": "Sold",
                        "binding": "BaseQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "isReadOnly": true,
                        "width": "1*"
                    },
                    {
                        "header": "Withdrawn",
                        "binding": "WithdrawnQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "isReadOnly": true,
                        "width": "1*",
                    },
                    {
                        "header": "Balance",
                        "binding": "BalanceQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "isReadOnly": true,
                        "width": "1*"
                    },
                    {
                        "header": "Pick",
                        "binding": "PickButton",
                        "width": 60,
                        "align": "center",
                        "isReadOnly": true,
                        "isContentHtml": true
                    },
                    {
                        "header": "Quantity",
                        "binding": "BalanceDisplay",
                        "allowSorting": true,
                        "width": "1*",
                        "align": "right",
                        "isReadOnly": true,
                        "isContentHtml": true
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: salesInvoiceStatusCollectionView,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row,
            });

            salesInvoiceStatusFlexGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            salesInvoiceStatusFlexGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            salesInvoiceStatusFlexGrid.columnHeaders.rows.push(hr);
            salesInvoiceStatusFlexGrid.columnHeaders.rows[0].allowMerging = true;

            salesInvoiceStatusFlexGrid.columnHeaders.columns[0].allowMerging = true;
            salesInvoiceStatusFlexGrid.columnHeaders.setCellData(0, 0, 'Code');

            salesInvoiceStatusFlexGrid.columnHeaders.columns[1].allowMerging = true;
            salesInvoiceStatusFlexGrid.columnHeaders.setCellData(0, 1, 'Description');

            salesInvoiceStatusFlexGrid.columnHeaders.columns[2].allowMerging = true;
            salesInvoiceStatusFlexGrid.columnHeaders.setCellData(0, 2, 'Unit');

            for (var columnQuantityTopAssigned = 3; columnQuantityTopAssigned <= 5; columnQuantityTopAssigned++) {
                salesInvoiceStatusFlexGrid.columnHeaders.setCellData(0, columnQuantityTopAssigned, 'Quantities');
            }

            salesInvoiceStatusFlexGrid.columnHeaders.columns[6].allowMerging = true;
            salesInvoiceStatusFlexGrid.columnHeaders.setCellData(0, 6, 'Pick');

            salesInvoiceStatusFlexGrid.columnHeaders.columns[7].allowMerging = true;
            salesInvoiceStatusFlexGrid.columnHeaders.setCellData(0, 7, 'Quantity');

            if (!isBtnSalesInvoiceStatusClicked) {
                updateSalesInvoiceStatusNavigateButtons();

                btnSalesInvoiceStatusMoveToFirstPageGrid.addEventListener('click', function () {
                    salesInvoiceStatusCollectionView.moveToFirstPage();
                    salesInvoiceStatusCurrentSIStatusPageIndex = salesInvoiceStatusCollectionView.pageIndex + 1;
                    updateSalesInvoiceStatusNavigateButtons();
                });

                btnSalesInvoiceStatusMoveToPreviousPageGrid.addEventListener('click', function () {
                    salesInvoiceStatusCollectionView.moveToPreviousPage();
                    salesInvoiceStatusCurrentSIStatusPageIndex = salesInvoiceStatusCollectionView.pageIndex + 1;
                    updateSalesInvoiceStatusNavigateButtons();
                });

                btnSalesInvoiceStatusMoveToNextPageGrid.addEventListener('click', function () {
                    salesInvoiceStatusCollectionView.moveToNextPage();
                    salesInvoiceStatusCurrentSIStatusPageIndex = salesInvoiceStatusCollectionView.pageIndex + 1;
                    updateSalesInvoiceStatusNavigateButtons();
                });

                btnSalesInvoiceStatusMoveToLastPageGrid.addEventListener('click', function () {
                    salesInvoiceStatusCollectionView.moveToLastPage();
                    salesInvoiceStatusCurrentSIStatusPageIndex = salesInvoiceStatusCollectionView.pageIndex + 1;
                    updateSalesInvoiceStatusNavigateButtons();
                });

                isBtnSalesInvoiceStatusClicked = true;
            }
        }

        // ==============================================
        // Update Sales Invoice Status Navigation Buttons
        // ==============================================
        function updateSalesInvoiceStatusNavigateButtons() {
            if (salesInvoiceStatusCollectionView.pageSize <= 0) {
                document.getElementById('salesInvoiceStatusNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('salesInvoiceStatusNavigationPageGrid').style.display = 'block';
            if (salesInvoiceStatusCollectionView.pageIndex === 0) {
                btnSalesInvoiceStatusMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnSalesInvoiceStatusMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnSalesInvoiceStatusMoveToNextPageGrid.removeAttribute('disabled');
                btnSalesInvoiceStatusMoveToLastPageGrid.removeAttribute('disabled');
            } else if (salesInvoiceStatusCollectionView.pageIndex === (salesInvoiceStatusCollectionView.pageCount - 1)) {
                btnSalesInvoiceStatusMoveToFirstPageGrid.removeAttribute('disabled');
                btnSalesInvoiceStatusMoveToPreviousPageGrid.removeAttribute('disabled');
                btnSalesInvoiceStatusMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnSalesInvoiceStatusMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnSalesInvoiceStatusMoveToFirstPageGrid.removeAttribute('disabled');
                btnSalesInvoiceStatusMoveToPreviousPageGrid.removeAttribute('disabled');
                btnSalesInvoiceStatusMoveToNextPageGrid.removeAttribute('disabled');
                btnSalesInvoiceStatusMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnSalesInvoiceStatusCurrentPageGrid.innerHTML = (salesInvoiceStatusCollectionView.pageIndex + 1) + ' / ' + salesInvoiceStatusCollectionView.pageCount;
        }

        // =========================
        // Pick Sales Invoice Status
        // =========================
        function btnSalesInvoiceStatusPickOnclick() {
            $('#salesInvoiceStatusPickModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#btnSalesInvoiceStatusPerCustomerPickContinue").prop("disabled", false);
            $("#btnSalesInvoiceStatusPerCustomerPickContinueCloseModal").prop("disabled", false);

            salesInvoiceStatusCollectionView.editItem(salesInvoiceStatusCollectionView.currentItem);
            var poStatusCollectionView = salesInvoiceStatusCollectionView.currentEditItem;
            var balance = poStatusCollectionView.BalanceQuantity;
            document.getElementById("inpSalesInvoiceStatusPickedQuantity").value = parseFloat(balance).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        // ==================================
        // Continue Pick Sales Invoice Status
        // ==================================
        function btnSalesInvoiceStatusPerCustomerPickContinueOnclick() {
            $("#btnSalesInvoiceStatusPerCustomerPickContinue").prop("disabled", true);
            $("#btnSalesInvoiceStatusPerCustomerPickContinueCloseModal").prop("disabled", true);

            var isValid = true;
            $('.requiredPickedAmount').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                salesInvoiceStatusCollectionView.editItem(salesInvoiceStatusCollectionView.currentItem);
                var poStatusCollectionView = salesInvoiceStatusCollectionView.currentEditItem;
                var balance = document.getElementById("inpSalesInvoiceStatusPickedQuantity").value.split(",").join("");

                if (isNaN(balance)) {
                    toastr.error("Invalid Entry");

                    $("#btnSalesInvoiceStatusPerCustomerPickContinue").prop("disabled", false);
                    $("#btnSalesInvoiceStatusPerCustomerPickContinueCloseModal").prop("disabled", false);
                } else {
                    poStatusCollectionView.Balance = balance;
                    poStatusCollectionView.BalanceDisplay = parseFloat(balance).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    salesInvoiceStatusCollectionView.refresh();
                    salesInvoiceStatusFlexGrid.refresh();

                    $('#salesInvoiceStatusPickModal').modal('hide');
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ==========================
        // Apply Sales Invoice Status
        // ==========================
        function btnSalesInvoiceStatusApplyOnclick() {
            $('#applyAllConfirmSIStatus').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnConfirmApplySalesInvoiceStatus').innerHTML = "<i class='fa fa-check'></i> Apply";
            $("#btnConfirmApplySalesInvoiceStatus").prop("disabled", false);
            $("#btnConfirmApplySalesInvoiceStatusCloseModal").prop("disabled", false);
        }

        // ==================================
        // Confirm Apply Sales Invoice Status
        // ==================================
        function btnConfirmApplySalesInvoiceStatusOnclick() {
            document.getElementById('btnConfirmApplySalesInvoiceStatus').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Applying";
            $("#btnConfirmApplySalesInvoiceStatus").prop("disabled", true);
            $("#btnConfirmApplySalesInvoiceStatusCloseModal").prop("disabled", true);

            var salesInvoiceArrays = new Array();

            salesInvoiceStatusCollectionView.moveToFirstPage();

            for (var p = 1; p <= salesInvoiceStatusCollectionView.pageCount; p++) {
                for (var i = 0; i < salesInvoiceStatusCollectionView.items.length; i++) {
                    var item = salesInvoiceStatusCollectionView.items[i];
                    if (item.Balance > 0) {
                        salesInvoiceArrays.push({
                            SWId: item.SWId,
                            Particulars: item.Particulars,
                            ItemId: item.ItemId,
                            UnitId: item.BaseUnitId,
                            Quantity: item.Balance
                        });
                    }
                }

                salesInvoiceStatusCollectionView.moveToNextPage();
                if (p == salesInvoiceStatusCollectionView.pageCount) {
                    salesInvoiceStatusCollectionView.moveToPage(salesInvoiceStatusCurrentSIStatusPageIndex - 1);
                }
            }

            var SWItemObject = new Object();
            var SWItemObjectData = JSON.stringify(salesInvoiceArrays);

            var SWId = getURLParameterValue('id');

            $.ajax({
                url: '/api/stockWithdrawalItem/popUp/apply/salesInvoiceStatus/' + SWId,
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: SWItemObjectData,
                statusCode: {
                    200: function () {
                        toastr.success("Apply Successful");
                        $("#btnConfirmApplySalesInvoiceStatus").prop("disabled", true);
                        $("#btnConfirmApplySalesInvoiceStatusCloseModal").prop("disabled", true);

                        $('#applyAllConfirmSIStatus').modal('hide');
                        $('#SIStatus').modal('hide');

                        refreshStockWithdrawalItemsFlexgrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#applyAllConfirmSIStatus').modal('hide');
                        $('#SIStatus').modal('hide');
                        document.getElementById('btnConfirmApplySalesInvoiceStatus').innerHTML = "<i class='fa fa-check'></i> Apply";
                        $("#btnConfirmApplySalesInvoiceStatus").prop("disabled", false);
                        $("#btnConfirmApplySalesInvoiceStatusCloseModal").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#applyAllConfirmSIStatus').modal('hide');
                        $('#SIStatus').modal('hide');
                        document.getElementById('btnConfirmApplySalesInvoiceStatus').innerHTML = "<i class='fa fa-check'></i> Apply";
                        $("#btnConfirmApplySalesInvoiceStatus").prop("disabled", false);
                        $("#btnConfirmApplySalesInvoiceStatusCloseModal").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#applyAllConfirmSIStatus').modal('hide');
                        $('#SIStatus').modal('hide');
                        document.getElementById('btnConfirmApplySalesInvoiceStatus').innerHTML = "<i class='fa fa-check'></i> Apply";
                        $("#btnConfirmApplySalesInvoiceStatus").prop("disabled", false);
                        $("#btnConfirmApplySalesInvoiceStatusCloseModal").prop("disabled", false);
                    }
                }
            });
        }

        // ==========================
        // Get Inventory Entries Data
        // ==========================
        function getInventoryEntriesData() {
            var SWId = getURLParameterValue('id');
            var inventoryObservableArray = new wijmo.collections.ObservableArray;

            $.ajax({
                url: '/api/inventory/stockWithdrawal/list/' + SWId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var InventoryDateResult = new Date(results[i]["InventoryDate"])
                            var InventoryDate = ('0' + (InventoryDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + InventoryDateResult.getDate()).slice(-2) + '-' + InventoryDateResult.getFullYear();

                            inventoryObservableArray.push({
                                Id: results[i]["Id"],
                                InventoryDate: InventoryDate,
                                Branch: results[i]["Branch"],
                                Article: results[i]["Article"],
                                Particulars: results[i]["Particulars"],
                                ArticleInventoryCode: results[i]["ArticleInventoryCode"],
                                Quantity: results[i]["Quantity"],
                                QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                ArticleUnit: results[i]["ArticleUnit"],
                                Amount: results[i]["Amount"],
                                AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return inventoryObservableArray;
        }

        // ==================================
        // Create Inventory Entries Flex Grid
        // ==================================
        function createInventoryEntriesFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntriesData());
            inventoryCollectionView.canFilter = true;
            inventoryCollectionView.pageSize = cboInventoryEntriesShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpInventoryEntriesSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryCollectionView.refresh();
            });

            inventoryCollectionView.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleUnit.toLowerCase().indexOf(filterText) > -1);
            }

            inventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });

            inventoryEntriesFlexGrid.dispose();
            inventoryEntriesFlexGrid = new wijmo.grid.FlexGrid('#inventoryEntriesFlexGrid');
            inventoryEntriesFlexGrid.initialize({
                columns: [
                    {
                        "header": "Date",
                        "binding": "InventoryDate",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.7*",
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "ArticleInventoryCode",
                        "allowSorting": true,
                        "width": "1.3*",
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*",
                    },
                    {
                        "header": "Unit",
                        "binding": "ArticleUnit",
                        "allowSorting": true,
                        "width": "1*",
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*",
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntriesFlexGrid.trackChanges = true;

            updateNavigateButtonsInventoryEntry();

            btnInventoryEntriesMoveToFirstPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToFirstPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnInventoryEntriesMoveToPreviousPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToPreviousPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnInventoryEntriesMoveToNextPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToNextPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnInventoryEntriesMoveToLastPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToLastPage();
                updateNavigateButtonsInventoryEntry();
            });
        }

        // ===========================================
        // Update Enventory Entries Navigation Buttons
        // ===========================================
        function updateNavigateButtonsInventoryEntry() {
            if (inventoryCollectionView.pageSize <= 0) {
                document.getElementById('inventoryEntriesNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('inventoryEntriesNavigationPageGrid').style.display = 'block';
            if (inventoryCollectionView.pageIndex === 0) {
                btnInventoryEntriesMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToNextPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToLastPageGrid.removeAttribute('disabled');
            } else if (inventoryCollectionView.pageIndex === (inventoryCollectionView.pageCount - 1)) {
                btnInventoryEntriesMoveToFirstPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnInventoryEntriesMoveToFirstPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToNextPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnInventoryEntriesCurrentPageGrid.innerHTML = (inventoryCollectionView.pageIndex + 1) + ' / ' + inventoryCollectionView.pageCount;
        }

        // ===================================
        // Refresh Enventory Entries Flex Grid
        // ===================================
        function refreshInventoryEntriesFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntriesData());
            inventoryCollectionView.canFilter = true;
            inventoryCollectionView.pageSize = cboInventoryEntriesShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpInventoryEntriesSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryCollectionView.refresh();
            });

            inventoryCollectionView.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleUnit.toLowerCase().indexOf(filterText) > -1);
            }

            inventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });

            inventoryEntriesFlexGrid.itemsSource = inventoryCollectionView;
            inventoryEntriesFlexGrid.trackChanges = true;
        }

        // ================
        // Get Journal Data
        // ================
        function getJournalData() {
            var journalsObservableArray = new wijmo.collections.ObservableArray;
            var SWId = getURLParameterValue('id');

            $.ajax({
                url: '/api/jounal/stockWithdrawal/list/' + SWId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var journalDateResult = new Date(results[i]["JournalDate"])
                            var journalDate = ('0' + (journalDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + journalDateResult.getDate()).slice(-2) + '-' + journalDateResult.getFullYear();

                            journalsObservableArray.push({
                                Branch: results[i]["Branch"],
                                JournalDate: journalDate,
                                AccountCode: results[i]["AccountCode"],
                                Account: results[i]["Account"],
                                Article: results[i]["Article"],
                                DebitAmountDisplay: parseFloat(results[i]["DebitAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                CreditAmountDisplay: parseFloat(results[i]["CreditAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                            });

                            var debitAmountTotal = 0;
                            var creditAmountTotal = 0;

                            var a = 0;
                            while (a < results.length) {
                                debitAmountTotal += results[a]["DebitAmount"];
                                creditAmountTotal += results[a]["CreditAmount"];
                                a++;
                            }
                        }

                        document.getElementById('inpJournalTotalDebit').value = debitAmountTotal.toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        document.getElementById('inpJournalTotalCredit').value = creditAmountTotal.toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        var inpJournalVariance = debitAmountTotal - creditAmountTotal;
                        document.getElementById('inpJournalVariance').value = inpJournalVariance.toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    }

                    $("#journalLoading").hide();
                    $("#journalContent").show();
                }
            });

            return journalsObservableArray;
        }

        // ===============
        // Display Journal
        // ===============
        function btnStockWithdrawalJournalOnclick() {
            $('#journalEntryModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#journalLoading").show();
            document.getElementById("journalLoading").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#journalContent").hide();

            setTimeout(function () {
                createJournalFlexgrid();
            }, 500)
        }

        // ========================
        // Create Journal Flex Grid
        // ========================
        function createJournalFlexgrid() {
            journalCollectionView = new wijmo.collections.CollectionView(getJournalData());

            journalFlexGrid.dispose();
            journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');
            journalFlexGrid.initialize({
                columns: [
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "2.5*"
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": "1.5*"
                    },
                    {
                        "header": "Code",
                        "binding": "AccountCode",
                        "allowSorting": true,
                        "width": "1.8*"
                    },
                    {
                        "header": "Account",
                        "binding": "Account",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Article",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*",
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalFlexGrid.trackChanges = true;
        }

        // ===============
        // Show Rows Table
        // ===============
        function createCboShowRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboStockWithdrawalItemsShowNumberOfRows.dispose();
            cboStockWithdrawalItemsShowNumberOfRows = new wijmo.input.ComboBox('#cboStockWithdrawalItemsShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboStockWithdrawalItemsShowNumberOfRows.selectedValue;
                        stockWithdrawalItemCollectionView.pageSize = parseInt(numberOfRows);
                        stockWithdrawalItemCollectionView.refresh();
                        stockWithdrawalItemFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });

            cboInventoryEntriesShowNumberOfRows.dispose();
            cboInventoryEntriesShowNumberOfRows = new wijmo.input.ComboBox('#cboInventoryEntriesShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboInventoryEntriesShowNumberOfRows.selectedValue;
                        inventoryCollectionView.pageSize = parseInt(numberOfRows);
                        inventoryCollectionView.refresh();
                        inventoryEntriesFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });
        }

        // ====
        // Tabs
        // ====
        $('#stockWithdrawalsItemTab').click(function () {
            NProgress.start();

            $('#Items').show();
            $('#InventoryEntries').hide();

            refreshStockWithdrawalItemsFlexgrid();
        });
        $('#stockWithdrawalsInventoryEntriesTab').click(function () {
            NProgress.start();

            $('#Items').hide();
            $('#InventoryEntries').show();

            refreshInventoryEntriesFlexGrid();
        });

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            createCboStockWithdrawalDetailBranch();

            $('#Items').show();
            $('#InventoryEntries').hide();

            $(document).on('show.bs.modal', '.modal', function (event) {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () {
                    $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
                }, 0);
            });

            $(document).on('hidden.bs.modal', '.modal', function () {
                $('.modal:visible').length && $(document.body).addClass('modal-open');
            });
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>