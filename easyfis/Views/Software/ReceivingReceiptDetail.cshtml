@{
    var id = Request.QueryString["CompanyId"];
    var branchId = Request.QueryString["BranchId"];
    var RRId = Request.QueryString["RRId"];
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Receiving Receipt Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Font-Awesome/css")
    @Styles.Render("~/Content/Software-css")
    @Styles.Render("~/WijmoCSS/Wijmo-css")
</head>
<body>
    <div id="wrapper" class="wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <br /><br /><br />
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <h4><i class="fa fa-file-text fa-2x"></i>  Receiving Receipt Detail</h4>
                        <br />
                        <div class="div_Current_Page">
                            <span id="currentPage"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="RRDetailLabel"></h4>
                    </div>
                    <div class="col-md-6" align="right">
                        <button class="btn btn-primary btn-sm" id="cmdRRJournal"><i class="fa fa-book"></i> Journal</button>
                        <button class="btn btn-primary btn-sm" id="cmdRRSave" onclick="RRSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button class="btn btn-primary btn-sm" id="cmdRREdit"><i class="fa fa-edit"></i> Edit</button>
                        <button class="btn btn-primary btn-sm" id="cmdRRPrint" onclick="window.location.href ='@Url.Action("ReceivingReceiptPDF", "Software", new { RRId = RRId })'"><i class="fa fa-print"></i> Print</button>
                        <button id="cmdRRClose" onclick="window.location.href = '@Url.Action("ReceivingReceipt", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id=""><i class="fa fa-times"></i> Close</button>
                    </div>
                </div>

                <div class="well">
                    <form class="form-horizontal" role="form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Branch:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="RRbranch"></div>

                                        <input type="hidden" id="RRbranch_data" class="requiredRR" />
                                        <input type="hidden" id="RRbranch_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">RR Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredRR" id="RRRRNumber" />
                                        <input type="hidden" id="RRRRNumber_Display" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">RR Date:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="RRRRDate"></div>
                                        <input type="hidden" id="RRRRDate_data" class="requiredRR" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Doc Reference:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredRR" id="RRDocReference">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Supplier:</label>
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                            <div class="comboBox-wide" id="RRSupplier"></div>

                                            <input type="text" id="RRSupplier_data" class="requiredRR" />
                                            <input type="text" id="RRSupplier_selectedValue" />
                                            <div class="input-group-btn">
                                                <button type="button" class="btn btn-primary btn-sm" id="cmdRRForPOSupplier" onclick="RRForPOSupplier_OnClick()">PO</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Term:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="RRTerm"></div>

                                        <input type="hidden" id="RRTerm_data" class="requiredRR" />
                                        <input type="hidden" id="RRTerm_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Remarks:</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control textarea-custom requiredRR" id="RRRemarks"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Manual RR Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredRR" id="RRManualRRNumber">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Received by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="RRReceivedBy"></div>

                                        <input type="hidden" id="RRReceivedBy_data" class="requiredRR" />
                                        <input type="hidden" id="RRReceivedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Prepared by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="RRPreparedBy"></div>

                                        <input type="hidden" id="RRPreparedBy_data" class="requiredRR" />
                                        <input type="hidden" id="RRPreparedBy_selectedValue" />
                                        <input type="hidden" id="userId_data" value="@userId" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Checked by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="RRCheckedBy"></div>

                                        <input type="hidden" id="RRCheckedBy_data" class="requiredRR" />
                                        <input type="hidden" id="RRCheckedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Approved by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="RRApprovedBy"></div>

                                        <input type="hidden" id="RRApprovedBy_data" class="requiredRR" />
                                        <input type="hidden" id="RRApprovedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Lock:</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" id="RR_Lock">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-4"></div>
                                    <div class="col-sm-8">
                                        <input type="hidden" id="RR_IsLocked">
                                        <input type="hidden" id="RR_IsLocked_defaultTrue">
                                        <input type="hidden" id="RR_IsLocked_defaultFalse">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <h4>Receiving Receipt Line</h4>
                    </div>
                </div>
                <br />
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#Item" id="itemTabId">Items</a></li>
                    @*<li role="presentation"><a data-toggle="tab" href="#InventoryEntry" id="inventoryEntryTabId">Inventory Entries</a></li>*@
                </ul>
                <br />
                <div class="tab-content">
                    <div id="Item" class="tab-pane fade in active">
                        <!-- Item List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Items</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterItem" placeholder="Search">
                                </div>
                            </div>
                            <div class="col-lg-8" align="right">
                                <button class="btn btn-primary btn-sm" onclick="cmdaddnewaccount_onclick()"><i class="fa fa-plus"></i> add</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="ItemGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="navigationPageGridItem">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridItem">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridItem">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridItem"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridItem">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridItem">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="InventoryEntry" class="tab-pane fade in active">
                        <!-- Inventory Entry List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Inventory Entries</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterInventoryEntry" placeholder="Search">
                                </div>
                            </div>
                            <div class="col-lg-8" align="right">
                                <button class="btn btn-primary btn-sm" onclick="cmdAddNewAccount_OnClick()"><i class="fa fa-plus"></i> Add</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="InventoryEntryGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="navigationPageGridInventoryEntry">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridInventoryEntry"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
        </section>

        <!-- RR for PO Modal -->
        <div class="modal fade" id="POStatus" role="dialog">
            <div class="modal-dialog modal-lg">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="POStatusModalLabel">Purchase Order Status</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-8">
                                <form id="POLinesDetailForm">
                                    <dl class="dl-horizontal">
                                        <dt>Supplier:</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="POStatus_Supplier"></div>

                                            <input type="text" id="POStatus_Supplier_data" class="requiredPOLine">
                                            <input type="text" id="POStatus_Supplier_selectedValue" />
                                        </dd>
                                        <dt>PO Number:</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="POStatus_PONumber"></div>

                                            <input type="hidden" id="POStatus_PONumber_data" class="requiredPOLine">
                                            <input type="hidden" id="POStatus_PONumber_selectedValue" />
                                        </dd>
                                    </dl>
                                </form>
                            </div>
                            <div class="col-md-4"></div>
                        </div>
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <center>
                                    <h3>
                                        <span id="loadingPOStatusGridList"></span>
                                    </h3>
                                </center>

                                <div id="POStatusGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row" id="footerModalPOStatusNavigationButtons">
                            <div class="btn-group col-md-7" id="navigationPageGridPOStatus">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridPOStatus">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridPOStatus">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridPOStatus"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridPOStatus">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridPOStatus">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary btn-sm" id="cmdApplyPOStatusButton" onclick="cmdApplyPOStatusButton_OnClick()"><i class="fa fa-check"></i> Apply</button>
                        <button type="button" id="cmdPOStatusCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">
                        <h4>Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    <!-- Scripts JavaScripts -->
    @Scripts.Render("~/Scripts/Software-js")
    @Scripts.Render("~/WijmoScripts/Wijmo-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var RRs;

        var branches;
        var users;
        var suppliers;
        var terms;
        var RRDate;
        var cboBranch;
        var cboSupplier;
        var cboTerm;

        var cboReceivedBy;
        var cboPreparedBy;
        var cboCheckedBy;
        var cboApprovedBy;

        var POStatussuppliers;
        var POsPOStatus;
        var cboSuppliersPOStatus;
        var cboPONumberPOStatus;

        var POStatus;

        // =================
        // GET RR List By Id
        // =================
        function getRRById() {
            var RRs = new wijmo.collections.ObservableArray;
            var RRId = @RRId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/receivingReceipt/' + RRId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        RRs.push({
                            Id: Results.Id,
                            BranchId: Results.BranchId,
                            Branch: Results.Branch,
                            RRNumber: Results.RRNumber,
                            RRDate: Results.RRDate,
                            SupplierId: Results.SupplierId,
                            Supplier: Results.Supplier,
                            TermId: Results.TermId,
                            Term: Results.Term,
                            DocumentReference: Results.DocumentReference,
                            ManualRRNumber: Results.ManualRRNumber,
                            Remarks: Results.Remarks,
                            Amount: Results.Amount,
                            WTaxAmount: Results.WTaxAmount,
                            PaidAmount: Results.PaidAmount,
                            AdjustmentAmount: Results.AdjustmentAmount,
                            BalanceAmount: Results.BalanceAmount,
                            ReceivedById: Results.ReceivedById,
                            ReceivedBy: Results.ReceivedBy,
                            PreparedById: Results.PreparedById,
                            PreparedBy: Results.PreparedBy,
                            CheckedById: Results.CheckedById,
                            CheckedBy: Results.CheckedBy,
                            ApprovedById: Results.ApprovedById,
                            ApprovedBy: Results.ApprovedBy,
                            IsLocked: Results.IsLocked,
                            CreatedById: Results.CreatedById,
                            CreatedBy: Results.CreatedBy,
                            CreatedDateTime: Results.CreatedDateTime,
                            UpdatedById: Results.UpdatedById,
                            UpdatedBy: Results.UpdatedBy,
                            UpdatedDateTime: Results.UpdatedDateTime
                        });
                    }
                    document.getElementById('RRbranch_data').value = Results.BranchId;
                    document.getElementById('RRbranch_selectedValue').value = Results.Branch;

                    document.getElementById('RRRRNumber').value = Results.RRNumber;
                    document.getElementById('RRRRDate_data').value = Results.RRDate;

                    var RRdate_date = Results.RRDate;
                    RRDate.dispose();
                    RRDate = new wijmo.input.InputDate('#RRRRDate', {
                        format: 'MM/dd/yyyy',
                        value: new Date(RRdate_date),
                        mask: '99/99/9999',
                        onValueChanged: function () {
                            document.getElementById('RRRRDate_data').value = this.value.toLocaleDateString();
                        }
                    });

                    document.getElementById('RRDocReference').value = Results.DocumentReference;
                    document.getElementById('RRSupplier_data').value = Results.SupplierId;
                    document.getElementById('RRSupplier_selectedValue').value = Results.Supplier;
                    document.getElementById('RRTerm_data').value = Results.TermId;
                    document.getElementById('RRTerm_selectedValue').value = Results.Term;
                    document.getElementById('RRRemarks').value = Results.Remarks;
                    document.getElementById('RRManualRRNumber').value = Results.ManualRRNumber;
                    document.getElementById('RRReceivedBy_data').value = Results.ReceivedById;
                    document.getElementById('RRReceivedBy_selectedValue').value = Results.ReceivedBy;
                    document.getElementById('RRPreparedBy_data').value = Results.PreparedById;
                    document.getElementById('RRPreparedBy_selectedValue').value = Results.PreparedBy;
                    document.getElementById('RRCheckedBy_data').value = Results.CheckedById;
                    document.getElementById('RRCheckedBy_selectedValue').value = Results.CheckedBy;
                    document.getElementById('RRApprovedBy_data').value = Results.ApprovedById;
                    document.getElementById('RRApprovedBy_selectedValue').value = Results.ApprovedBy;
                    document.getElementById('RR_Lock').checked = Results.IsLocked;

                    document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                    document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                    document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                    document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                    document.getElementById('POStatus_Supplier_data').value = Results.SupplierId;
                    document.getElementById('POStatus_Supplier_selectedValue').value = Results.Supplier;

                    getBranchesForComboBox();
                    getSupplierForComboBox();
                    getTermForComboBox();
                    getUsersForComboBox();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return RRs;
        }

        // ==============
        // GET RR Last Id
        // ========-======
        function getRRLastInsertedIdById() {
            var RRs = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/receivingReceiptLastId',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        RRs.push({
                            Id: Results.Id,
                            RRNumber: Results.RRNumber
                        });
                    }
                    window.location = '/Software/ReceivingReceiptDetail?RRId=' + Results.Id + '&BranchId=' + @branchId;
                    window.setTimeout(function () { location.reload() }, 1000);
                }
            });
            return RRs;
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var RRId = @RRId;
                        if(RRId == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + @branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        branches.push({
                                            BranchId: results.Id,
                                            Branch: results.Branch
                                        });
                                    }
                                    document.getElementById('RRbranch_data').value = results.Id;
                                    document.getElementById('RRbranch_selectedValue').value = results.Branch;

                                    createCboBranch(branches);
                                }
                            });
                        } else {
                            createCboBranch(branches);
                        }
                    }
                }
            });
            return branches;
        }

        // ======================
        // Combo Box for Branches
        // ======--==============
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#RRbranch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('RRbranch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#RRbranch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });
        }

        // ==========================
        // GET Supplier for Combo Box
        // ==========================
        function getSupplierForComboBox() {
            suppliers = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/3',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            suppliers.push({
                                SupplierId: results[i]["Id"],
                                Supplier: results[i]["Article"]
                            });
                        }
                        createCbosupplier(suppliers);
                    }
                }
            });
            return suppliers;
        }

        // =======================
        // Combo Box for Suppliers
        // =======================
        function createCbosupplier(suppliers) {
            var supplierCollection = new wijmo.collections.CollectionView(suppliers);
            var supplierList = new Array();
            for (var i = 0; i < supplierCollection.items.length; i++) {
                supplierList.push(supplierCollection.items[i].Supplier);
            }

            cboSupplier.dispose();
            cboSupplier = new wijmo.input.ComboBox('#RRSupplier', {
                placeholder: "Select Supplier",
                itemsSource: supplierList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('RRSupplier_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#RRSupplier_data").val(supplierCollection.items[this.selectedIndex].SupplierId);
                    $("#RRSupplier_selectedValue").val(supplierCollection.items[this.selectedIndex].Supplier);
                    document.getElementById('POStatus_Supplier_data').value = supplierCollection.items[this.selectedIndex].SupplierId;
                    document.getElementById('POStatus_Supplier_selectedValue').value = supplierCollection.items[this.selectedIndex].Supplier;
                    
                    getSupplierInPOStatusForComboBox();
                    getPOInPOStatusForComboBox();
                }
            });
        }

        // =======================
        // GET Terms for Combo Box
        // =======================
        function getTermForComboBox() {
            terms = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTerm',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            terms.push({
                                TermId: results[i]["Id"],
                                Term: results[i]["Term"]
                            });
                        }
                        createCboTerm(terms);
                    }
                }
            });
            return terms;
        }

        // ===================
        // Combo Box for Terms
        // ===================
        function createCboTerm(terms) {
            var termCollections = new wijmo.collections.CollectionView(terms);
            var termList = new Array();
            for (var i = 0; i < termCollections.items.length; i++) {
                termList.push(termCollections.items[i].Term);
            }

            cboTerm.dispose();
            cboTerm = new wijmo.input.ComboBox('#RRTerm', {
                placeholder: "Select Term",
                itemsSource: termList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('RRTerm_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#RRTerm_data").val(termCollections.items[this.selectedIndex].TermId);
                }
            });
        }


        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        var RRId = @RRId;
                        if(RRId == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        users.push({
                                            UserId: results.Id,
                                            UserFullName: results.FullName
                                        });
                                    }

                                    document.getElementById('RRPreparedBy_data').value = results.Id;
                                    document.getElementById('RRPreparedBy_selectedValue').value =  results.FullName;

                                    createCboUserReceivedBy(users);
                                    createCboUserPreparedBy(users);
                                    createCboUserCheckedBy(users);
                                    createCboUserApprovedBy(users);
                                }
                            });
                        } else {
                            createCboUserReceivedBy(users);
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);
                        }
                    }
                }
            });
            return users;
        }

        // ==================================
        // Combo Box for Users - Received By
        // ==================================
        function createCboUserReceivedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboReceivedBy.dispose();
            cboReceivedBy = new wijmo.input.ComboBox('#RRReceivedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('RRReceivedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#RRReceivedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // =================================
        // Combo Box for Users - Prepared By
        // =================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#RRPreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('RRPreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#RRPreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // =================================
        // Combo Box for Users - Checked By
        // =================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboCheckedBy.dispose();
            cboCheckedBy = new wijmo.input.ComboBox('#RRCheckedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('RRCheckedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#RRCheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // =================================
        // Combo Box for Users - Approved By
        // =================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboApprovedBy.dispose();
            cboApprovedBy = new wijmo.input.ComboBox('#RRApprovedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('RRApprovedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#RRApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // =====================================================
        // Function with leading zeroes to display the RR Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while(pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // ======
        // ADD RR
        // ======
        function RRSaveButton_OnClick() {
            var RRObject = new Object();
            var RRId = @RRId;
            RRObject.BranchId = document.getElementById('RRbranch_data').value;
            RRObject.RRDate = document.getElementById('RRRRDate_data').value;
            RRObject.RRNumber = document.getElementById('RRRRNumber').value;
            RRObject.SupplierId = document.getElementById('RRSupplier_data').value;
            RRObject.TermId = document.getElementById('RRTerm_data').value;
            RRObject.DocumentReference = document.getElementById('RRDocReference').value;
            RRObject.ManualRRNumber = document.getElementById('RRManualRRNumber').value;
            RRObject.Remarks = document.getElementById('RRRemarks').value;
            RRObject.Amount = 0;
            RRObject.WTaxAmount = 0;
            RRObject.PaidAmount = 0;
            RRObject.AdjustmentAmount = 0;
            RRObject.BalanceAmount = 0;
            RRObject.ReceivedById = document.getElementById('RRReceivedBy_data').value;
            RRObject.PreparedById = document.getElementById('RRPreparedBy_data').value;
            RRObject.CheckedById = document.getElementById('RRCheckedBy_data').value;
            RRObject.ApprovedById = document.getElementById('RRApprovedBy_data').value;
            var data = JSON.stringify(RRObject);

            if( document.getElementById('RRbranch_data').value == '') {
                document.getElementById("RRbranch").style.border = "1px solid red";
            } else {
                document.getElementById("RRbranch").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('RRSupplier_data').value == '') {
                document.getElementById("RRSupplier").style.border = "1px solid red";
            } else {
                document.getElementById("RRSupplier").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('RRTerm_data').value == '') {
                document.getElementById("RRTerm").style.border = "1px solid red";
            } else {
                document.getElementById("RRTerm").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('RRReceivedBy_data').value == '') {
                document.getElementById("RRReceivedBy").style.border = "1px solid red";
            } else {
                document.getElementById("RRReceivedBy").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('RRPreparedBy_data').value == '') {
                document.getElementById("RRPreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("RRPreparedBy").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('RRCheckedBy_data').value == '') {
                document.getElementById("RRCheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("RRCheckedBy").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('RRApprovedBy_data').value == '') {
                document.getElementById("RRApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("RRApprovedBy").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredRR').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                if (RRId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addReceivingReceipt',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdRRJournal").prop("disabled", true);
                                $("#cmdRRSave").prop("disabled", true);
                                $("#cmdRREdit").prop("disabled", true);
                                $("#cmdRRPrint").prop("disabled", true);
                                $("#cmdRRClose").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getRRLastInsertedIdById, 1000)
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdRRJournal").prop("disabled", true);
                                $("#cmdRRSave").prop("disabled", true);
                                $("#cmdRREdit").prop("disabled", true);
                                $("#cmdRRPrint").prop("disabled", true);
                                $("#cmdRRClose").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdRRJournal").prop("disabled", true);
                                $("#cmdRRSave").prop("disabled", true);
                                $("#cmdRREdit").prop("disabled", true);
                                $("#cmdRRPrint").prop("disabled", true);
                                $("#cmdRRClose").prop("disabled", true);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateReceivingReceipt/' + RRId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdRRJournal").prop("disabled", true);
                                $("#cmdRRSave").prop("disabled", true);
                                $("#cmdRREdit").prop("disabled", true);
                                $("#cmdRRPrint").prop("disabled", true);
                                $("#cmdRRClose").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdRRJournal").prop("disabled", true);
                                $("#cmdRRSave").prop("disabled", true);
                                $("#cmdRREdit").prop("disabled", true);
                                $("#cmdRRPrint").prop("disabled", true);
                                $("#cmdRRClose").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdRRJournal").prop("disabled", true);
                                $("#cmdRRSave").prop("disabled", true);
                                $("#cmdRREdit").prop("disabled", true);
                                $("#cmdRRPrint").prop("disabled", true);
                                $("#cmdRRClose").prop("disabled", true);
                            }
                        }
                    });
                }
            }
        }

        // =========
        // PO Status
        // =========
        function RRForPOSupplier_OnClick() {
            $('#POStatus').modal({
                show: true,
                backdrop: 'static'
            });

            getSupplierInPOStatusForComboBox();
            getPOInPOStatusForComboBox();
            document.getElementById("loadingPOStatusGridList").innerHTML = '<i class="fa fa-spinner fa-spin"></i> Loading PO Status...';
            $('#loadingPOStatusGridList').show();
            $('#POLinesDetailForm').hide();
            $('#footerModalPOStatusNavigationButtons').hide();
            
            setTimeout(function() {
                $('#loadingPOStatusGridList').hide();
                $('#footerModalPOStatusNavigationButtons').show();
                $('#POLinesDetailForm').show();

                getPOBySupplierInPOStatus();
            }, 1000);

        }

        // ===============
        // OnLoad Function
        // ===============
        $(document).ready(function () {
            $('#cmdRRForPOSupplier').click(function () {
                $('#POStatus').modal({
                    show: true,
                    backdrop: 'static'
                });

                window.RRForPOSupplier_OnClick = function () {
                    return true;
                };
            });

            document.getElementById('currentPage').innerHTML = '<a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Main Menu</a> > ' + ' <a href="@Url.Action("ReceivingReceipt", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Receiving Receipt</a> ' + ' > Receiving Receipt Detail';
            document.getElementById('RR_Lock').disabled = true;
            document.getElementById('RRRRNumber').disabled = true;

            cboBranch = new wijmo.input.ComboBox('#RRbranch');

            var d = new Date();
            document.getElementById("RRRRDate_data").value = [ d.getMonth()+1, d.getDate(), d.getFullYear()].join('/');
            RRDate = new wijmo.input.InputDate('#RRRRDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('RRRRDate_data').value = this.value.toLocaleDateString();
                }
            });

            cboSupplier = new wijmo.input.ComboBox('#RRSupplier');
            cboTerm = new wijmo.input.ComboBox('#RRTerm');
            cboReceivedBy  = new wijmo.input.ComboBox('#RRReceivedBy');
            cboPreparedBy  = new wijmo.input.ComboBox('#RRPreparedBy');
            cboCheckedBy  = new wijmo.input.ComboBox('#RRCheckedBy');
            cboApprovedBy  = new wijmo.input.ComboBox('#RRApprovedBy');

            getRRById();

            var RRId = @RRId;
            if(RRId == 0) {
                getBranchesForComboBox();
                getSupplierForComboBox();
                getTermForComboBox();
                getUsersForComboBox();

                if(document.getElementById('RRRRNumber').value == 0) {
                    document.getElementById('RRRRNumber_Display').value = "0000000001";
                }

                document.getElementById('RRRRNumber').value = 0;
                //document.getElementById('journalVoucher_No_Display').value = "000-000000";
                var RRs = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/receivingReceiptLastRRNumber',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            RRs.push({
                                Id: Results.Id,
                                RRNumber: Results.RRNumber
                            });
                        }
                        var RR_Number = parseInt(Results.RRNumber);
                        var RR_Number_PlusOne = 0000000001;
                        var RR_Num_Results = RR_Number + RR_Number_PlusOne;
                        //var JV_Number_Display = JV_Num_Results.toString().replace(/(\d{3})(\d+)/, '$1-$2');

                        document.getElementById('RRRRNumber').value = zerofill(RR_Num_Results, 10);
                        document.getElementById('RRRRNumber_Display').value = zerofill(RR_Num_Results, 10);
                    }
                });
            }

        });
    </script>

    <!-- ============ -->
    <!-- Item Scripts -->
    <!-- ============ -->
    <script type="text/javascript">
    // =========================
    // Global Variables for Item
    // =========================
    var items;
    var itemGrid;
    var btnFirstPageGridItem;
    var btnPreviousPageGridItem;
    var btnNextPageGridItem;
    var btnLastPageGridItem;
    var btnCurrentPageGridItem;

    var POstatusGrid;

    var btnFirstPageGridPOStatus;
    var btnPreviousPageGridPOStatus;
    var btnNextPageGridPOStatus;
    var btnLastPageGridPOStatus;
    var btnCurrentPageGridPOStatus;

    // ===========
    // GET RR Item
    // ===========
    function getRRItem() {
        var items = new wijmo.collections.ObservableArray;
        RRId = @RRId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listReceivingReceiptItemByRRId/' + RRId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            items.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' onclick=''><i class='fa fa-edit'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick=''><i class='fa fa-trash'></i> Delete</button>",
                                Id: Results[i]["Id"],
                                RRId: Results[i]["RRId"],
                                RR: Results[i]["RR"],
                                POId: Results[i]["POId"],
                                PO: Results[i]["PO"],
                                ItemId: Results[i]["ItemId"],
                                Item: Results[i]["Item"],
                                ItemCode: Results[i]["ItemCode"],
                                Particulars: Results[i]["Particulars"],
                                UnitId: Results[i]["UnitId"],
                                Unit: Results[i]["Unit"],
                                Quantity: Results[i]["Quantity"],
                                Cost: Results[i]["Cost"],
                                Amount: Results[i]["Amount"],
                                VATId: Results[i]["VATId"],
                                VAT: Results[i]["VAT"],
                                VATPercentage: Results[i]["VATPercentage"],
                                VATAmount: Results[i]["VATAmount"],
                                WTAXId: Results[i]["WTAXId"],
                                WTAX: Results[i]["WTAX"],
                                WTAXPercentage: Results[i]["WTAXPercentage"],
                                WTAXAmount: Results[i]["WTAXAmount"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                BaseUnitId: Results[i]["BaseUnitId"],
                                BaseUnit: Results[i]["BaseUnit"],
                                BaseQuantity: Results[i]["BaseQuantity"],
                                BaseCost: Results[i]["BaseCost"]
                            });
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return items;
        }

        // ====================================
        // GET Supplier PO Status for Combo Box
        // ====================================
        function getSupplierInPOStatusForComboBox() {
            POStatussuppliers = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/3',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            POStatussuppliers.push({
                                SupplierId: results[i]["Id"],
                                Supplier: results[i]["Article"]
                            });
                        }
                        createCbosupplierPOStatus(POStatussuppliers);
                    }
                }
            });
            return suppliers;
        }

        // =================================
        // Combo Box for Suppliers PO Status
        // =================================
        function createCbosupplierPOStatus(POStatussuppliers) {
            var supplierCollection = new wijmo.collections.CollectionView(POStatussuppliers);
            var supplierList = new Array();
            for (var i = 0; i < supplierCollection.items.length; i++) {
                supplierList.push(supplierCollection.items[i].Supplier);
            }

            cboSuppliersPOStatus.dispose();
            cboSuppliersPOStatus = new wijmo.input.ComboBox('#POStatus_Supplier', {
                disabled: true,
                placeholder: "Select Supplier",
                itemsSource: supplierList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('POStatus_Supplier_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#POStatus_Supplier_data").val(supplierCollection.items[this.selectedIndex].SupplierId);
                    document.getElementById('POStatus_PONumber_data').value = "";
                    getPOInPOStatusForComboBox();
                }
            });
        }


        // ==================================
        // GET PO for PO Status for Combo Box
        // ==================================
        function getPOInPOStatusForComboBox() {
            POsPOStatus = new wijmo.collections.ObservableArray();
            var POSupplierId = document.getElementById('POStatus_Supplier_data').value;
            $.ajax({
                url: '/api/listPurchaseOrderBySupplierId/' + POSupplierId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            POsPOStatus.push({
                                POId: results[i]["Id"],
                                PONumber: results[i]["PONumber"],
                                PODate: results[i]["PODate"]
                            });
                        }
                        createCboPONumberPOStatus(POsPOStatus);
                    }
                }
            });
            return suppliers;
        }

        // =============================
        // Combo Box for PO -  PO Status
        // =============================
        function createCboPONumberPOStatus(POsPOStatus) {
            var POCollection = new wijmo.collections.CollectionView(POsPOStatus);
            var POList = new Array();
            for (var i = 0; i < POCollection.items.length; i++) {
                POList.push(POCollection.items[i].PONumber + " - " + POCollection.items[i].PODate);
            }

            cboPONumberPOStatus.dispose();
            cboPONumberPOStatus = new wijmo.input.ComboBox('#POStatus_PONumber', {
                placeholder: "Select PO Number",
                itemsSource: POList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('POStatus_PONumber_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#POStatus_PONumber_data").val(POCollection.items[this.selectedIndex].POId);
                    
                    $('#loadingPOStatusGridList').show();

                    POStatus = new wijmo.collections.CollectionView(getPurchaseOrderItemForPOSTatus());
                    POStatus.canFilter = true;
                    POStatus.pageSize = 15;

                    POStatus.collectionChanged.addHandler(function (sender, args) {
                        updateNavigateButtonsPOSTatus();
                    });
                    POstatusGrid.itemsSource = POStatus;

                    //POStatus =

                }
            });
        }

        // ========================================
        // Purchase Order Line / Item for PO Status
        // ========================================
        function getPurchaseOrderItemForPOSTatus() {
            //document.getElementById("loadingPOStatusGridList").innerHTML = '<i class="fa fa-spinner fa-spin"></i> Loading PO Status...';
            //$('#loadingPOStatusGridList').show();
            //$('#POLinesDetailForm').hide();
            //$('#footerModalPOStatusNavigationButtons').hide();
            
            //setTimeout(function() {
            //    $('#loadingPOStatusGridList').hide();
            //    $('#footerModalPOStatusNavigationButtons').show();
            //    $('#POLinesDetailForm').show();

            //    getPOBySupplierInPOStatus();
            //}, 1000);



            var POStatus = new wijmo.collections.ObservableArray;
            var POId = document.getElementById('POStatus_PONumber_data').value;
            $.ajax({
                url: '/api/listPurchaseOrderItemByPOId/' + POId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingPOStatusGridList').hide();
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            POStatus.push({
                                Id: Results[i]["Id"],
                                ItemId: Results[i]["ItemId"],
                                Item: Results[i]["Item"],
                                ItemCode: Results[i]["ItemCode"],
                                POId: Results[i]["POId"],
                                Quantity: Results[i]["Quantity"],
                                UnitId: Results[i]["UnitId"],
                                Unit: Results[i]["Unit"],
                                Particulars: Results[i]["Particulars"],
                                Cost: Results[i]["Cost"],
                                Amount: Results[i]["Amount"]
                            });
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return POStatus;
        }

        // ===============
        // PO In PO Status
        // ===============
        function getPOBySupplierInPOStatus() {
            POStatus = new wijmo.collections.CollectionView(getPurchaseOrderItemForPOSTatus());
            POStatus.canFilter = true;
            POStatus.pageSize = 15;

            POStatus.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsPOSTatus();
            });
            // Flex Grid for Item
            POstatusGrid = new wijmo.grid.FlexGrid('#POStatusGrid');
            POstatusGrid.initialize({
                columns: [
                            {
                                "header": "Code",
                                "binding": "ItemCode",
                                "align": "left",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Item",
                                "binding": "Item",
                                "align": "left",
                                "allowSorting": true,
                                "width": 300
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "align": "left",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "PO",
                                "binding": "Quantity",
                                "align": "right",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Received",
                                //"binding": "BaseCost",
                                "align": "right",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Balance",
                                //"binding": "BaseCost",
                                "align": "right",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "P",
                                //"binding": "BaseCost",
                                "align": "center",
                                "allowSorting": true,
                                "width": 50
                            },
                            {
                                "header": "Quantity",
                                //"binding": "BaseCost",
                                "align": "right",
                                "allowSorting": true,
                                "width": 130
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: POStatus,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            POstatusGrid.trackChanges = true;
            var hr = new wijmo.grid.Row();
            POstatusGrid.allowMerging = wijmo.grid.AllowMerging.All;
            POstatusGrid.columnHeaders.rows.push(hr);
            POstatusGrid.columnHeaders.rows[0].allowMerging = true;
            POstatusGrid.columnHeaders.rows[0].wordWrap = true;

            for (var c = 3; c <= 5; c++) {
                POstatusGrid.columnHeaders.setCellData(0, c, 'Quantity');
            }

            //Navigation button for Item
            btnFirstPageGridPOStatus = document.getElementById('btnMoveToFirstPageGridPOStatus');
            btnPreviousPageGridPOStatus = document.getElementById('btnMoveToPreviousPageGridPOStatus');
            btnNextPageGridPOStatus = document.getElementById('btnMoveToNextPageGridPOStatus');
            btnLastPageGridPOStatus = document.getElementById('btnMoveToLastPageGridPOStatus');
            btnCurrentPageGridPOStatus = document.getElementById('btnCurrentPageGridPOStatus');

            updateNavigateButtonsPOSTatus();

            btnFirstPageGridPOStatus.addEventListener('click', function () {
                POStatus.moveToFirstPage();
                updateNavigateButtonsPOSTatus();
            });
            btnPreviousPageGridPOStatus.addEventListener('click', function () {
                POStatus.moveToPreviousPage();
                updateNavigateButtonsPOSTatus();
            });
            btnNextPageGridPOStatus.addEventListener('click', function () {
                POStatus.moveToNextPage();
                updateNavigateButtonsPOSTatus();
            });
            btnLastPageGridPOStatus.addEventListener('click', function () {
                POStatus.moveToLastPage();
                updateNavigateButtonsPOSTatus();
            });
        }


        // ===============================
        // Navigation Buttons for POSTatus
        // ===============================
        function updateNavigateButtonsPOSTatus() {
            if (POStatus.pageSize <= 0) {
                document.getElementById('navigationPageGridPOStatus').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridPOStatus').style.display = 'block';
            if (POStatus.pageIndex === 0) {
                btnFirstPageGridPOStatus.setAttribute('disabled', 'disabled');
                btnPreviousPageGridPOStatus.setAttribute('disabled', 'disabled');
                btnNextPageGridPOStatus.removeAttribute('disabled');
                btnLastPageGridPOStatus.removeAttribute('disabled');
            } else if (POStatus.pageIndex === (POStatus.pageCount - 1)) {
                btnFirstPageGridPOStatus.removeAttribute('disabled');
                btnPreviousPageGridPOStatus.removeAttribute('disabled');
                btnLastPageGridPOStatus.setAttribute('disabled', 'disabled');
                btnNextPageGridPOStatus.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridPOStatus.removeAttribute('disabled');
                btnPreviousPageGridPOStatus.removeAttribute('disabled');
                btnNextPageGridPOStatus.removeAttribute('disabled');
                btnLastPageGridPOStatus.removeAttribute('disabled');
            }
            btnCurrentPageGridPOStatus.innerHTML = (POStatus.pageIndex + 1) + ' / ' + POStatus.pageCount;
        }

        // ===========================
        // Navigation Buttons for Item
        // ===========================
        function updateNavigateButtonsItem() {
            if (items.pageSize <= 0) {
                document.getElementById('navigationPageGridItem').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridItem').style.display = 'block';
            if (items.pageIndex === 0) {
                btnFirstPageGridItem.setAttribute('disabled', 'disabled');
                btnPreviousPageGridItem.setAttribute('disabled', 'disabled');
                btnNextPageGridItem.removeAttribute('disabled');
                btnLastPageGridItem.removeAttribute('disabled');
            } else if (items.pageIndex === (items.pageCount - 1)) {
                btnFirstPageGridItem.removeAttribute('disabled');
                btnPreviousPageGridItem.removeAttribute('disabled');
                btnLastPageGridItem.setAttribute('disabled', 'disabled');
                btnNextPageGridItem.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridItem.removeAttribute('disabled');
                btnPreviousPageGridItem.removeAttribute('disabled');
                btnNextPageGridItem.removeAttribute('disabled');
                btnLastPageGridItem.removeAttribute('disabled');
            }
            btnCurrentPageGridItem.innerHTML = (items.pageIndex + 1) + ' / ' + items.pageCount;
        }

        // =====
        //  Item
        // =====
        function itemTab() {
            cboSuppliersPOStatus = new wijmo.input.ComboBox('#POStatus_Supplier');
            cboPONumberPOStatus = new wijmo.input.ComboBox('#POStatus_PONumber');

            items = new wijmo.collections.CollectionView(getRRItem());
            items.canFilter = true;
            items.pageSize = 15;

            var filterTextItem = '';
            $('#InputFilterItem').keyup(function () {
                filterTextItem = this.value.toLowerCase();
                items.refresh();
            });
            items.filter = function (item) {
                return !filterTextItem || (item.item.toLowerCase().indexOf(filterTextItem) > -1);
            }
            items.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItem();
            });

            // Flex Grid for Item
            itemGrid = new wijmo.grid.FlexGrid('#ItemGrid');
            itemGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Purchase Order",
                                "binding": "PO",
                                "align": "left",
                                "allowSorting": true,
                                "width": 200
                            },
                            {
                                "header": "Item Code",
                                "binding": "ItemCode",
                                "align": "left",
                                "allowSorting": true,
                                "width": 150
                            },
                            {
                                "header": "Item Description",
                                "binding": "Item",
                                "align": "left",
                                "allowSorting": true,
                                "width": 350
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "align": "left",
                                "allowSorting": true,
                                "width": 300
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "align": "right",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "align": "right",
                                "allowSorting": true,
                                "width": 200
                            },
                             {
                                 "header": "Cost",
                                 "binding": "Cost",
                                 "align": "right",
                                 "allowSorting": true,
                                 "width": 130
                             },
                             {
                                 "header": "Amount",
                                 "binding": "Amount",
                                 "align": "right",
                                 "allowSorting": true,
                                 "width": 130
                             },
                             {
                                 "header": "Branch",
                                 "binding": "Branch",
                                 "align": "left",
                                 "allowSorting": true,
                                 "width": 250
                             },
                             {
                                 "header": "VAT Rate",
                                 "binding": "VATPercentage",
                                 "align": "right",
                                 "allowSorting": true,
                                 "width": 130
                             },
                             {
                                 "header": "VAT Amount",
                                 "binding": "VATAmount",
                                 "align": "right",
                                 "allowSorting": true,
                                 "width": 130
                             },
                             {
                                 "header": "WTAX Rate",
                                 "binding": "WTAXPercentage",
                                 "align": "right",
                                 "allowSorting": true,
                                 "width": 130
                             },
                             {
                                 "header": "WTAX Amount",
                                 "binding": "WTAXAmount",
                                 "align": "right",
                                 "allowSorting": true,
                                 "width": 130
                             },
                             {
                                 "header": "Unit",
                                 "binding": "BaseUnit",
                                 "align": "right",
                                 "allowSorting": true,
                                 "width": 100
                             },
                             {
                                 "header": "Quantity",
                                 "binding": "BaseQuantity",
                                 "align": "right",
                                 "allowSorting": true,
                                 "width": 130
                             },
                             {
                                 "header": "Cost",
                                 "binding": "BaseCost",
                                 "align": "right",
                                 "allowSorting": true,
                                 "width": 130
                             },
                ],
                autoGenerateColumns: false,
                itemsSource: items,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemGrid.trackChanges = true;
            var hr = new wijmo.grid.Row();
            itemGrid.allowMerging = wijmo.grid.AllowMerging.All;
            itemGrid.columnHeaders.rows.push(hr);
            itemGrid.columnHeaders.rows[0].allowMerging = true;
            itemGrid.columnHeaders.rows[0].wordWrap = true;

            for (var c = 11; c <= 11; c++) {
                itemGrid.columnHeaders.setCellData(0, c, 'VAT');

                for (var cc = 13; cc <= 13; cc++) {
                    itemGrid.columnHeaders.setCellData(0, cc, 'WTAX');
                }

                for (var ccc = 15; ccc <= 17; ccc++) {
                    itemGrid.columnHeaders.setCellData(0, ccc, 'Basic Unit Conversion');
                }
            }

            //Navigation button for Item
            btnFirstPageGridItem = document.getElementById('btnMoveToFirstPageGridItem');
            btnPreviousPageGridItem = document.getElementById('btnMoveToPreviousPageGridItem');
            btnNextPageGridItem = document.getElementById('btnMoveToNextPageGridItem');
            btnLastPageGridItem = document.getElementById('btnMoveToLastPageGridItem');
            btnCurrentPageGridItem = document.getElementById('btnCurrentPageGridItem');

            updateNavigateButtonsItem();

            btnFirstPageGridItem.addEventListener('click', function () {
                items.moveToFirstPage();
                updateNavigateButtonsItem();
            });
            btnPreviousPageGridItem.addEventListener('click', function () {
                items.moveToPreviousPage();
                updateNavigateButtonsItem();
            });
            btnNextPageGridItem.addEventListener('click', function () {
                items.moveToNextPage();
                updateNavigateButtonsItem();
            });
            btnLastPageGridItem.addEventListener('click', function () {
                items.moveToLastPage();
                updateNavigateButtonsItem();
            });
        }
    </script>

    <!-- =========================== -->
    <!-- Inventory Entry Scripts -->
    <!-- =========================== -->
    <script type="text/javascript">
        // ====================================
        // Global Variables for Inventory Entry
        // ====================================
        var inventoryEntries;
        var inventoryEntryGrid;

        var btnFirstPageGridInventoryEntry;
        var btnPreviousPageGridInventoryEntry;
        var btnNextPageGridInventoryEntry;
        var btnLastPageGridInventoryEntry;
        var btnCurrentPageGridInventoryEntry;

        // ===========================
        // GET Contact Inventory Entry
        // ===========================
        function getInventoryEntry() {
            var inventoryEntries = new wijmo.collections.ObservableArray;
            //$('#loadingModal').modal('show');
            //$.ajax({
            //    url: '/api/listAccount',
            //    cache: false,
            //    type: 'GET',
            //    contentType: 'application/json; charset=utf-8',
            //    data: {},
            //    success: function (Results) {
            //        $('#loadingModal').modal('hide');
            //        if (Results.length > 0) {
            //            for (i = 0; i < Results.length; i++) {
            //                journalLedger.push({
            //                    EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
            //                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
            //                    Id: Results[i]["Id"],
            //                    AccountCode: Results[i]["AccountCode"],
            //                    Account: Results[i]["Account"],
            //                    AccountTypeId: Results[i]["AccountTypeId"],
            //                    AccountType: Results[i]["AccountType"],
            //                    AccountCashFlowId: Results[i]["AccountCashFlowId"],
            //                    AccountCashFlow: Results[i]["AccountCashFlow"],
            //                    IsLocked: Results[i]["IsLocked"],
            //                    CreatedById: Results[i]["CreatedById"],
            //                    CreatedBy: Results[i]["CreatedBy"],
            //                    CreatedDateTime: Results[i]["CreatedDateTime"],
            //                    UpdatedById: Results[i]["UpdatedById"],
            //                    UpdatedBy: Results[i]["UpdatedBy"],
            //                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
            //                });
            //            }
            //        }
            //    }
            //}).fail(function (xhr, textStatus, err) {
            //    alert(err);
            //});
            return inventoryEntries;
        }

        // ======================================
        // FlexGrid Selection for Inventory Entry
        // ======================================
        function updateDetailsInventoryEntry() {
            var item = inventoryEntries.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ======================================
        // Navigation Buttons for Inventory Entry
        // ======================================
        function updateNavigateButtonsInventoryEntry() {
            if (inventoryEntries.pageSize <= 0) {
                document.getElementById('navigationPageGridInventoryEntry').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridInventoryEntry').style.display = 'block';
            if (inventoryEntries.pageIndex === 0) {
                btnFirstPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnPreviousPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnNextPageGridInventoryEntry.removeAttribute('disabled');
                btnLastPageGridInventoryEntry.removeAttribute('disabled');
            } else if (inventoryEntries.pageIndex === (inventoryEntries.pageCount - 1)) {
                btnFirstPageGridInventoryEntry.removeAttribute('disabled');
                btnPreviousPageGridInventoryEntry.removeAttribute('disabled');
                btnLastPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnNextPageGridInventoryEntry.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridInventoryEntry.removeAttribute('disabled');
                btnPreviousPageGridInventoryEntry.removeAttribute('disabled');
                btnNextPageGridInventoryEntry.removeAttribute('disabled');
                btnLastPageGridInventoryEntry.removeAttribute('disabled');
            }
            btnCurrentPageGridInventoryEntry.innerHTML = (inventoryEntries.pageIndex + 1) + ' / ' + inventoryEntries.pageCount;
        }

        // ================================
        // On Page Load for Inventory Entry
        // ================================
        function inventoryEntryTab() {
            inventoryEntries = new wijmo.collections.CollectionView();
            inventoryEntries.canFilter = true;
            inventoryEntries.pageSize = 15;

            var filterTextInventoryEntry = '';
            $('#InputFilterInventoryEntry').keyup(function () {
                filterTextInventoryEntry = this.value.toLowerCase();
                inventoryEntries.refresh();
            });
            inventoryEntries.filter = function (item) {
                return !filterTextInventoryEntry || (item.inventoryEntry.toLowerCase().indexOf(filterTextInventoryEntry) > -1);
            }
            inventoryEntries.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });
            inventoryEntries.currentChanged.addHandler(function (sender, args) {
                updateDetailsInventoryEntry();
            });

            // Flex Grid for Inventory Entry
            inventoryEntryGrid = new wijmo.grid.FlexGrid('#InventoryEntryGrid');
            inventoryEntryGrid.initialize({
                columns: [
                            {
                                "header": "Contact",
                                "binding": "Contact",
                                "width": 120,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Contact Number(s)",
                                //"binding": "ContactNumbers",
                                "width": 200,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Remarks",
                                //"binding": "Remarks",
                                "align": "left",
                                "allowSorting": true,
                                "width": "1*",
                            },
                ],
                autoGenerateColumns: false,
                //itemsSource: inventoryEntries,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntryGrid.trackChanges = true;

            //Navigation button for Inventory Entry
            btnFirstPageGridInventoryEntry = document.getElementById('btnMoveToFirstPageGridInventoryEntry');
            btnPreviousPageGridInventoryEntry = document.getElementById('btnMoveToPreviousPageGridInventoryEntry');
            btnNextPageGridInventoryEntry = document.getElementById('btnMoveToNextPageGridInventoryEntry');
            btnLastPageGridInventoryEntry = document.getElementById('btnMoveToLastPageGridInventoryEntry');
            btnCurrentPageGridInventoryEntry = document.getElementById('btnCurrentPageGridInventoryEntry');

            updateNavigateButtonsInventoryEntry();

            btnFirstPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToFirstPage();
                updateNavigateButtonsInventoryEntry();
            });
            btnPreviousPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToPreviousPage();
                updateNavigateButtonsInventoryEntry();
            });
            btnNextPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToNextPage();
                updateNavigateButtonsInventoryEntry();
            });
            btnLastPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToLastPage();
                updateNavigateButtonsInventoryEntry();
            });
        }
    </script>

    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        // ====
        // TABS
        // ====
        $('#itemTabId').click(function () {
            $('#Item').show();
            $('#InventoryEntry').hide();
            window.itemTab = function () {
                return true;
            };
        });
        $('#inventoryEntryTabId').click(function () {
            $('#Item').hide();
            $('#InventoryEntry').show();
            inventoryEntryTab();
            window.inventoryEntryTab = function () {
                return true;
            };
        });
        $(document).ready(function () {
            $('#Item').show();
            $('#InventoryEntry').hide();
            itemTab();
        });

    </script>
</body>
</html>