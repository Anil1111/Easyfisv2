@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Purchase Order</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Purchase Order
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        ===============
                        Search / Filter
                        ===============
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control" id="inpPurchaseOrderFilterSearch" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 40%" align="right">
                                    @{
                                        if (canAdd)
                                        {
                                            <button class="btn btn-primary" id="btnPurchaseOrderAdd" onclick="btnPurchaseOrderAddOnclick()"><i class="fa fa-plus"></i> Add</button>
                                        }
                                    }
                                    <button class="btn btn-danger" id="btnPurchaseOrderClose" onclick="btnPurchaseOrderCloseOnclick()"><i class=" fa fa-times"></i> Close</button>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        ==================
                        Date Range Filters
                        ==================
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 29%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Start Date</b></span>
                                        <div id="cboPurchaseOrderStartDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 29%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>End Date</b></span>
                                        <div id="cboPurchaseOrderEndDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 41%"></td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        =========
                        Flex Grid
                        =========
                    -->
                    <div class="panel-body">
                        <div id="purchaseOrderFlexGrid" class="grid" align="left"></div>
                    </div>

                    <!--
                        ==================
                        Navigation Buttons
                        ==================
                    -->
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="purchaseOrderNavigationPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnPurchaseOrderMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnPurchaseOrderMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnPurchaseOrderCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnPurchaseOrderMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnPurchaseOrderMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ==========
                    User Stamp
                    ==========
                -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!--
        =====================================
        Purchase Order Confirm Delete (Modal)
        =====================================
    -->
    <div class="modal fade" id="purchaseOrderConfirmDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Delete Purchase Order?
                </div>
                <div class="modal-footer">
                    <button id="btnPurchaseOrderConfirmDelete" class="btn btn-danger" onclick="btnPurchaseOrderConfirmDeleteOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="btnPurchaseOrderConfirmDeleteCloseModal" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // =================================
        // Purchase Order Date Range Filters
        // =================================
        var cboPurchaseOrderStartDateFilter = new wijmo.input.InputDate('#cboPurchaseOrderStartDateFilter');
        var cboPurchaseOrderEndDateFilter = new wijmo.input.InputDate('#cboPurchaseOrderEndDateFilter');
        var isCboPurchaseOrderStartDateFilterSelected = true;
        var isCboPurchaseOrderEndDateFilterSelected = true;

        // ============================================
        // Purchase Order Collection View and Flex Grid
        // ============================================
        var purchaseOrderCollectionView;
        var purchaseOrderFlexGrid;

        // =================================
        // Purchase Order Navigation Buttons
        // =================================
        var btnPurchaseOrderMoveToFirstPageGrid;
        var btnPurchaseOrderMoveToPreviousPageGrid;
        var btnPurchaseOrderMoveToNextPageGrid;
        var btnPurchaseOrderMoveToLastPageGrid;
        var btnPurchaseOrderCurrentPageGrid;

        // ===============================
        // Create Combo Date Range Filters
        // ===============================
        function createCboDateRangeFilters() {
            cboPurchaseOrderStartDateFilter.dispose();
            cboPurchaseOrderStartDateFilter = new wijmo.input.InputDate('#cboPurchaseOrderStartDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                onValueChanged: function () {
                    if (!isCboPurchaseOrderStartDateFilterSelected) {
                        refreshPurchaseOrderFlexGrid();
                    } else {
                        isCboPurchaseOrderStartDateFilterSelected = false;
                    }
                }
            });

            cboPurchaseOrderEndDateFilter.dispose();
            cboPurchaseOrderEndDateFilter = new wijmo.input.InputDate('#cboPurchaseOrderEndDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                onValueChanged: function () {
                    if (!isCboPurchaseOrderEndDateFilterSelected) {
                        refreshPurchaseOrderFlexGrid();
                    } else {
                        isCboPurchaseOrderEndDateFilterSelected = false;
                    }
                }
            });
        }

        // =======================
        // Get Purchase Order Data
        // =======================
        function getPurchaseOrderData() {
            NProgress.start();
            var startDate = cboPurchaseOrderStartDateFilter.value.toLocaleDateString().replace(/\//g, '-');
            var endDate = cboPurchaseOrderEndDateFilter.value.toLocaleDateString().replace(/\//g, '-');

            var purchaseOrderObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/purchaseOrder/list/' + startDate + '/' + endDate,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            var PODateResult = new Date(results[i]["PODate"])
                            var PODate = ('0' + (PODateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + PODateResult.getDate()).slice(-2) + '-' + PODateResult.getFullYear();

                            purchaseOrderObservableArray.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='POEditButton' onclick='btnPurchaseOrderEditOnclick()'><i class='fa fa-edit'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnPurchaseOrderDeleteOnclick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: results[i]["Id"],
                                PONumber: results[i]["PONumber"],
                                PODate: PODate,
                                ManualPONumber: results[i]["ManualPONumber"],
                                Supplier: results[i]["Supplier"],
                                Remarks: results[i]["Remarks"],
                                Amount: results[i]["Amount"],
                                AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                IsClose: results[i]["IsClose"],
                                IsLocked: results[i]["IsLocked"],
                                CreatedBy: results[i]["CreatedBy"],
                                CreatedDateTime: results[i]["CreatedDateTime"],
                                UpdatedBy: results[i]["UpdatedBy"],
                                UpdatedDateTime: results[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return purchaseOrderObservableArray;
        }

        // ==============================
        // Create Purchase Order FlexGrid
        // ==============================
        function createPurchaseOrderFlexGrid() {
            createCboDateRangeFilters();
            purchaseOrderCollectionView = new wijmo.collections.CollectionView(getPurchaseOrderData());
            purchaseOrderCollectionView.canFilter = true;
            purchaseOrderCollectionView.pageSize = 15;

            var filterText = '';
            $('#inpPurchaseOrderFilterSearch').keyup(function () {
                filterText = this.value.toLowerCase();
                purchaseOrderCollectionView.refresh();
            });

            purchaseOrderCollectionView.filter = function (item) {
                return !filterText || (item.PONumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualPONumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.Remarks.toLowerCase().indexOf(filterText) > -1)
                    || (item.Supplier.toLowerCase().indexOf(filterText) > -1);
            }

            purchaseOrderCollectionView.collectionChanged.addHandler(function (sender, args) {
                updatePurchaseOrderNavigationButtons();
            });

            purchaseOrderCollectionView.currentChanged.addHandler(function (sender, args) {
                updatePurchaseOrderDetailsFlexGridSelection();
            });

            purchaseOrderFlexGrid = new wijmo.grid.FlexGrid('#purchaseOrderFlexGrid');
            purchaseOrderFlexGrid.initialize({
                columns: [
                    @{
                        if (canEdit)
                        {
                            <text>
                                {
                                    "header": "Edit",
                                    "binding": "EditId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                        if (canDelete)
                        {
                            <text>
                                {
                                    "header": "Delete",
                                    "binding": "DeleteId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                    }
                    {
                        "header": "PO Number",
                        "binding": "PONumber",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "PO Date",
                        "binding": "PODate",
                        "allowSorting": true,
                        "width": 90
                    },
                    {
                        "header": "Manual PO No.",
                        "binding": "ManualPONumber",
                        "allowSorting": true,
                        "width": 120
                    },
                    {
                        "header": "Supplier",
                        "binding": "Supplier",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Remarks",
                        "binding": "Remarks",
                        "allowSorting": true,
                        "width": "2.5*"
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    },
                    {
                        "header": "C",
                        "binding": "IsClose",
                        "allowSorting": true,
                        "width": 50
                    },
                    {
                        "header": "L",
                        "binding": "IsLocked",
                        "allowSorting": true,
                        "width": 50
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: purchaseOrderCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            purchaseOrderFlexGrid.trackChanges = true;

            btnPurchaseOrderMoveToFirstPageGrid = document.getElementById('btnPurchaseOrderMoveToFirstPageGrid');
            btnPurchaseOrderMoveToPreviousPageGrid = document.getElementById('btnPurchaseOrderMoveToPreviousPageGrid');
            btnPurchaseOrderMoveToNextPageGrid = document.getElementById('btnPurchaseOrderMoveToNextPageGrid');
            btnPurchaseOrderMoveToLastPageGrid = document.getElementById('btnPurchaseOrderMoveToLastPageGrid');
            btnPurchaseOrderCurrentPageGrid = document.getElementById('btnPurchaseOrderCurrentPageGrid');

            updatePurchaseOrderNavigationButtons();

            btnPurchaseOrderMoveToFirstPageGrid.addEventListener('click', function () {
                purchaseOrderCollectionView.moveToFirstPage();
                updatePurchaseOrderNavigationButtons();
            });

            btnPurchaseOrderMoveToPreviousPageGrid.addEventListener('click', function () {
                purchaseOrderCollectionView.moveToPreviousPage();
                updatePurchaseOrderNavigationButtons();
            });

            btnPurchaseOrderMoveToNextPageGrid.addEventListener('click', function () {
                purchaseOrderCollectionView.moveToNextPage();
                updatePurchaseOrderNavigationButtons();
            });

            btnPurchaseOrderMoveToLastPageGrid.addEventListener('click', function () {
                purchaseOrderCollectionView.moveToLastPage();
                updatePurchaseOrderNavigationButtons();
            });
        }

        // =================================================
        // Update Purchase Order Details Flex Grid Selection
        // =================================================
        function updatePurchaseOrderDetailsFlexGridSelection() {
            var item = purchaseOrderCollectionView.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ========================================
        // Update Purchase Order Navigation Buttons
        // ========================================
        function updatePurchaseOrderNavigationButtons() {
            if (purchaseOrderCollectionView.pageSize <= 0) {
                document.getElementById('purchaseOrderNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('purchaseOrderNavigationPageGrid').style.display = 'block';
            if (purchaseOrderCollectionView.pageIndex === 0) {
                btnPurchaseOrderMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPurchaseOrderMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnPurchaseOrderMoveToNextPageGrid.removeAttribute('disabled');
                btnPurchaseOrderMoveToLastPageGrid.removeAttribute('disabled');
            } else if (purchaseOrderCollectionView.pageIndex === (purchaseOrderCollectionView.pageCount - 1)) {
                btnPurchaseOrderMoveToFirstPageGrid.removeAttribute('disabled');
                btnPurchaseOrderMoveToPreviousPageGrid.removeAttribute('disabled');
                btnPurchaseOrderMoveToLastPageGrid.setAttribute('disabled', 'disabled');
                btnPurchaseOrderMoveToNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnPurchaseOrderMoveToFirstPageGrid.removeAttribute('disabled');
                btnPurchaseOrderMoveToPreviousPageGrid.removeAttribute('disabled');
                btnPurchaseOrderMoveToNextPageGrid.removeAttribute('disabled');
                btnPurchaseOrderMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnPurchaseOrderCurrentPageGrid.innerHTML = (purchaseOrderCollectionView.pageIndex + 1) + ' / ' + purchaseOrderCollectionView.pageCount;
        }

        // ===============================
        // Refresh Purchase Order FlexGrid
        // ===============================
        function refreshPurchaseOrderFlexGrid() {
            purchaseOrderCollectionView = new wijmo.collections.CollectionView(getPurchaseOrderData());
            purchaseOrderCollectionView.canFilter = true;
            purchaseOrderCollectionView.pageSize = 15;

            var filterText = '';
            $('#inpPurchaseOrderFilterSearch').keyup(function () {
                filterText = this.value.toLowerCase();
                purchaseOrderCollectionView.refresh();
            });

            purchaseOrderCollectionView.filter = function (item) {
                return !filterText || (item.PONumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualPONumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.Remarks.toLowerCase().indexOf(filterText) > -1)
                    || (item.Supplier.toLowerCase().indexOf(filterText) > -1);
            }

            purchaseOrderCollectionView.collectionChanged.addHandler(function (sender, args) {
                updatePurchaseOrderNavigationButtons();
            });

            purchaseOrderCollectionView.currentChanged.addHandler(function (sender, args) {
                updatePurchaseOrderDetailsFlexGridSelection();
            });

            purchaseOrderFlexGrid.itemsSource = purchaseOrderCollectionView;
            purchaseOrderFlexGrid.trackChanges = true;
        }

        // ==================
        // Add Purchase Order
        // ==================
        function btnPurchaseOrderAddOnclick() {
            document.getElementById('btnPurchaseOrderAdd').innerHTML = "<i class='fa fa-plus'></i> Adding...";
            $('#btnPurchaseOrderAdd').prop('disabled', true);
            $('#btnPurchaseOrderClose').prop('disabled', true);

            $.ajax({
                type: "POST",
                url: '/api/purchaseOrder/add',
                contentType: "application/json; charset=utf-8",
                statusCode: {
                    200: function (id) {
                        window.location = '/Software/PurchaseOrderDetail?id=' + id;
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnPurchaseOrderAdd').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnPurchaseOrderAdd').prop('disabled', false);
                        $('#btnPurchaseOrderClose').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnPurchaseOrderAdd').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnPurchaseOrderAdd').prop('disabled', false);
                        $('#btnPurchaseOrderClose').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnPurchaseOrderAdd').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnPurchaseOrderAdd').prop('disabled', false);
                        $('#btnPurchaseOrderClose').prop('disabled', false);
                    }
                }
            });
        }

        // ===================
        // Edit Purchase Order
        // ===================
        function btnPurchaseOrderEditOnclick() {
            purchaseOrderCollectionView.editItem(purchaseOrderCollectionView.currentItem);
            var PO = purchaseOrderCollectionView.currentEditItem;
            var PurchaseOrderId = PO.Id;
            window.location = '/Software/PurchaseOrderDetail?id=' + PurchaseOrderId;
        }

        // =====================
        // Delete Purchase Order
        // =====================
        function btnPurchaseOrderDeleteOnclick() {
            purchaseOrderCollectionView.editItem(purchaseOrderCollectionView.currentItem);
            var PO = purchaseOrderCollectionView.currentEditItem;
            if (PO.IsLocked) {
                toastr.error("Delete is not allowed when the selected record is locked!");
            } else {
                $('#purchaseOrderConfirmDeleteModal').modal({
                    show: true,
                    backdrop: 'static'
                });

                document.getElementById('btnPurchaseOrderConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                $("#btnPurchaseOrderConfirmDelete").prop("disabled", false);
                $("#btnPurchaseOrderConfirmDeleteCloseModal").prop("disabled", false);
            }
        }

        // =============================
        // Confirm Delete Purchase Order
        // =============================
        function btnPurchaseOrderConfirmDeleteOnclick() {
            document.getElementById('btnPurchaseOrderConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Deleting...";
            $("#btnPurchaseOrderConfirmDelete").prop("disabled", true);
            $("#btnPurchaseOrderConfirmDeleteCloseModal").prop("disabled", true);

            purchaseOrderCollectionView.editItem(purchaseOrderCollectionView.currentItem);
            var id = purchaseOrderCollectionView.currentEditItem.Id;

            $.ajax({
                url: '/api/purchaseOrder/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#purchaseOrderConfirmDeleteModal').modal('hide');
                        refreshPurchaseOrderFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#purchaseOrderConfirmDeleteModal').modal('hide');
                        document.getElementById('btnPurchaseOrderConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnPurchaseOrderConfirmDelete").prop("disabled", false);
                        $("#btnPurchaseOrderConfirmDeleteCloseModal").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#purchaseOrderConfirmDeleteModal').modal('hide');
                        document.getElementById('btnPurchaseOrderConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnPurchaseOrderConfirmDelete").prop("disabled", false);
                        $("#btnPurchaseOrderConfirmDeleteCloseModal").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#purchaseOrderConfirmDeleteModal').modal('hide');
                        document.getElementById('btnPurchaseOrderConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnPurchaseOrderConfirmDelete").prop("disabled", false);
                        $("#btnPurchaseOrderConfirmDeleteCloseModal").prop("disabled", false);
                    }
                }
            });
        }

        // ====================
        // Close Purchase Order
        // ====================
        function btnPurchaseOrderCloseOnclick() {
            window.location = '/Software';
        }

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            createPurchaseOrderFlexGrid();
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>