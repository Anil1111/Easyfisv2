@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canCancel = Model.CanCancel;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Sales Detail</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Sales Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        =============================================
                        Options: Lock, Unlock, Print and Close Button
                        =============================================
                    -->
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-2">
                                <button class="btn btn-primary" id="btnSalesInvoiceSave" onclick="btnSalesInvoiceSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                            </div>
                            <div class="col-md-10" align="right">
                                <button class="btn btn-primary" id="btnJournalSalesInvoice" onclick="btnSalesInvoiceJournalOnclick()"><i class="fa fa-book"></i> Journal</button>
                                @{
                                    if (canLock)
                                    {
                                        <button class="btn btn-primary" id="btnLockSalesInvoice" onclick="btnSalesInvoiceLockOnclick()"><i class="fa fa-lock"></i> Lock</button>
                                    }
                                    if (canUnlock)
                                    {
                                        <button class="btn btn-primary" id="btnUnlockSalesInvoice" onclick="btnSalesInvoiceUnlockOnclick()"><i class="fa fa-unlock"></i> Unlock</button>
                                    }
                                    if (canPrint)
                                    {
                                        <button class="btn btn-primary" id="btnPrintSalesInvoice" onclick="btnSalesInvoicePrintOnclick()"><i class="fa fa-print"></i> Print</button>
                                    }
                                    if (canCancel)
                                    {
                                        <button class="btn btn-warning" id="btnCancelSalesInvoice" onclick="btnSalesInvoiceCancelOnclick()"><i class="fa fa-times-circle-o"></i> Cancel</button>
                                    }
                                }
                                <button class="btn btn-danger" id="btnCloseSalesInvoice" onclick="window.location.href = '/Software/Sales'"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>

                    <!--
                        ======================================
                        Details, Fields and Other Informations
                        ======================================
                    -->
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Branch</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSalesInvoiceBranch"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SI Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSales" id="inpSalesInvoiceSINumber" disabled>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SI Date</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSalesInvoiceSIDate"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Doc. Ref. No.</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSales" id="inpSalesInvoiceDocumentReference" placeholder="Document Reference">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SI Ref. No.</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSales" id="inpSalesInvoiceManualSINumber" placeholder="Manual SI Number">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Customer</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSalesInvoiceCustomer"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Term</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSalesInvoiceTerm"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Status</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSalesInvoiceStatus"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Remarks</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredSales" id="inpSalesInvoiceRemarks" placeholder="Remarks"></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Sold by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSalesInvoiceSoldBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Prepared by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSalesInvoicePreparedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Checked by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSalesInvoiceCheckedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Approved by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSalesInvoiceApprovedBy"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <!--
                    ========================================
                    Sales Invoice Item and Inventory Entries
                    ========================================
                -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#salesInvoiceItemTabHref" id="salesInvoiceItemTab">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#salesInvoiceInventoryEntriesTabHref" id="salesInvoiceInventoryEntriesTab">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">

                    <!--
                        ======================
                        Sales Invoice Item Tab
                        ======================
                    -->
                    <div id="salesInvoiceItemTabHref" class="tab-pane active">
                        <div class="panel panel-default">

                            <!--
                                =======================================================================
                                Sales Invoice Item: Search, Filter, Display Number of Rows and  Buttons
                                =======================================================================
                            -->
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpSalesInvoiceItemItemSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboSalesInvoiceItemShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right">
                                            @{
                                                if (canAdd)
                                                {
                                                    <button class="btn btn-primary" id="btnSalesInvoiceItemAdd" onclick="btnSalesInvoiceItemAddOnclick()"><i class="fa fa-plus"></i> Add</button>
                                                    <button class="btn btn-primary" id="btnSalesInvoiceItemItemQuery" onclick="btnSalesInvoiceItemItemQueryOnclick()"><i class="fa fa-search-plus"></i> Item Query</button>
                                                }
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                =============================
                                Sales Invoice Item: Flex Grid
                                =============================
                            -->
                            <div class="panel-body">
                                <div id="salesInvoiceItemFlexGrid"></div>
                            </div>

                            <!--
                                ======================================
                                Sales Invoice Item: Navigation Buttons
                                ======================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="salesInvoiceItemNaviagtionPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceItemMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceItemMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnSalesInvoiceItemCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceItemMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceItemMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--
                            ==========================
                            Sales Invoice Item: Totals
                            ==========================
                        -->
                        <div class="panel panel-default">
                            <div class="panel-body" style="padding-bottom: 0px;">
                                <div class="row">
                                    <div class="col-md-6"></div>
                                    <div class="col-md-6">
                                        <dl class="dl-horizontal">
                                            <dt>
                                                <b>Total Amount</b>
                                            </dt>
                                            <dd>
                                                <input type="text" class="form-control numberField" id="inpTotalSalesInvoiceAmount" placeholder="0.00" disabled />
                                            </dd>
                                            <dt>
                                                <b>Total Discount Amount</b>
                                            </dt>
                                            <dd>
                                                <input type="text" class="form-control numberField" id="inpTotalSalesInvoiceDiscountAmount" placeholder="0.00" disabled />
                                            </dd>
                                            <dt>
                                                <b>Total VAT Amount</b>
                                            </dt>
                                            <dd>
                                                <input type="text" class="form-control numberField" id="inpTotalSalesInvoiceVATtAmount" placeholder="0.00" disabled />
                                            </dd>
                                        </dl>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!--
                        =====================
                        Inventory Entries Tab
                        =====================
                    -->
                    <div id="salesInvoiceInventoryEntriesTabHref" class="tab-pane">
                        <div class="panel panel-default">

                            <!--
                                ======================================================================
                                Inventory Entries: Search, Filter, Display Number of Rows and  Buttons
                                ======================================================================
                            -->
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpInventoryEntriesSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboInventoryEntriesShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right"></td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                ============================
                                Inventory Entries: Flex Grid
                                ============================
                            -->
                            <div class="panel-body">
                                <div id="inventoryEntriesFlexGrid"></div>
                            </div>

                            <!--
                                =====================================
                                Inventory Entries: Navigation Buttons
                                =====================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="inventoryEntriesNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnInventoryEntriesCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ==========
                    User Stamp
                    ==========
                -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!--
        ================================
        Sales Invoice Item: Detail Modal
        ================================
    -->
    <div class="modal fade" id="saleItemsEdit" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="salesInvoiceItemModalTitle">Sale Invoice Item</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="salesInvoiceItemLoading"></span>
                    </center>
                    <div id="salesInvoiceItemContent">
                        <ul class="nav nav-tabs" role="tablist" id="myTab">
                            <li role="presentation" class="active"><a data-toggle="tab" href="#salesInvoiceItemModalItemTab">Item</a></li>
                            <li role="presentation"><a data-toggle="tab" href="#salesInvoiceItemModalTaxTab">Tax</a></li>
                        </ul>
                        <br />
                        <div class="tab-content">
                            <div id="salesInvoiceItemModalItemTab" class="tab-pane active">
                                <dl class="dl-horizontal">
                                    <dt>Item</dt>
                                    <dd>
                                        <table style="width: 100%" border="0">
                                            <tr>
                                                <td style="width: 30%">
                                                    <div class="comboBox-wide" id="cboSalesInvoiceItemCode"></div>
                                                </td>
                                                <td style="width: 1%"></td>
                                                <td style="width: 69%">
                                                    <div class="comboBox-wide" id="cboSalesInvoiceItemDescription"></div>
                                                </td>
                                            </tr>
                                        </table>
                                    </dd>
                                    <dt>Particulars</dt>
                                    <dd>
                                        <textarea rows="5" class="form-control textarea-custom requiredSaleItem" id="inpSalesInvoiceItemParticulars"></textarea>
                                    </dd>
                                    <dt>Inventory Code</dt>
                                    <dd>
                                        <div class="comboBox-wide" id="cboSalesInvoiceItemInventoryCode"></div>
                                    </dd>
                                    <dt>Quantity</dt>
                                    <dd>
                                        <input type="text" class="form-control numberField requiredSaleItem" id="inpSalesInvoiceItemQuantity" placeholder="0.00" />
                                    </dd>
                                    <dt>Unit</dt>
                                    <dd>
                                        <div class="comboBox-wide" id="cboSalesInvoiceItemUnit"></div>
                                    </dd>
                                    <dt>Price</dt>
                                    <dd>
                                        <div class="comboBox-wide" id="cboSalesInvoiceItemPrice"></div>
                                    </dd>
                                    <dt></dt>
                                    <dd>
                                        <input type="text" class="form-control numberField requiredSaleItem" id="inpSalesInvoiceItemPrice" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>Discount</dt>
                                    <dd>
                                        <div class="comboBox-wide" id="cboSalesInvoiceItemDiscount"></div>
                                    </dd>
                                    <dt>Discount Rate</dt>
                                    <dd>
                                        <input type="text" class="form-control numberField requiredSaleItem" id="inpSalesInvoiceItemDiscountRate" placeholder="0.00" />
                                    </dd>
                                    <dt>Discount Amount</dt>
                                    <dd>
                                        <input type="text" class="form-control numberField requiredSaleItem" id="inpSalesInvoiceItemDiscountAmount" placeholder="0.00" />
                                    </dd>
                                    <dt>Net Price</dt>
                                    <dd>
                                        <input type="text" class="form-control numberField requiredSaleItem" id="inpSalesInvoiceItemNetPrice" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>Amount</dt>
                                    <dd>
                                        <input type="text" class="form-control numberField requiredSaleItem" id="inpSalesInvoiceItemAmount" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                            <div id="salesInvoiceItemModalTaxTab" class="tab-pane">
                                <dl class="dl-horizontal">
                                    <dt>VAT</dt>
                                    <dd>
                                        <div class="comboBox-wide" id="cboSalesInvoiceItemVAT"></div>
                                    </dd>
                                    <dt>VAT Rate</dt>
                                    <dd>
                                        <input type="text" class="form-control numberField requiredSaleItem" id="inpSalesInvoiceItemVATRate" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>VAT Amount</dt>
                                    <dd>
                                        <input type="text" class="form-control numberField requiredSaleItem" id="inpSalesInvoiceItemVATAmount" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="btnSalesInvoiceItemSave" class="btn btn-primary" onclick="btnSalesInvoiceItemSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                    <button id="btnSalesInvoiceItemCloseModal" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ========================================
        Sales Invoice Item: Delete Confirm Modal
        ========================================
    -->
    <div class="modal fade" id="salesInvoiceItemDeleteConfirmModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Delete Sales Invoice Item?
                </div>
                <div class="modal-footer">
                    <button id="btnSalelsInvoiceItemDeleteConfirm" class="btn btn-danger" onclick="btnSalelsInvoiceItemDeleteConfirmOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="btnSalelsInvoiceItemDeleteConfirmCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        =====================
        Journal Entries Modal
        =====================
    -->
    <div class="modal fade" id="journalEntryModal" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"> Journal </h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="journalLoading"></span>
                    </center>
                    <div id="journalContent">
                        <div id="journalFlexGrid" style="max-height: 250px;"></div>
                        <br /><br />
                        <div class="row">
                            <div class="col-md-7"></div>
                            <div class="col-md-5">
                                <dl class="dl-horizontal">
                                    <dt>
                                        <b>Total Debit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpJournalTotalDebit" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Credit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpJournalTotalCredit" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Variance</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpJournalVariance" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ====================================
        Sales Invoice Item: Item Query Modal
        ====================================
    -->
    <div class="modal fade" id="itemQueryModal" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Item Query</h4>
                </div>
                <div class="modal-body">
                    <ul class="nav nav-tabs" role="tablist" id="myTab">
                        <li role="presentation" class="active"><a data-toggle="tab" href="#itemQueryInventoryItems" id="itemQueryInventoryItemsTab">Inventory Items</a></li>
                        <li role="presentation"><a data-toggle="tab" href="#itemQueryNonInventoryItems" id="itemQueryNonInventoryItemsTab">Non-Inventory Items</a></li>
                        <li role="presentation"><a data-toggle="tab" href="#itemQueryPackageItems" id="itemQueryPackageItemsTab">Package Items</a></li>
                    </ul>
                    <br />
                    <div class="tab-content">

                        <!--
                            ===============================
                            Item Query Tab: Inventory Items
                            ===============================
                        -->
                        <div id="itemQueryInventoryItems" class="tab-pane active">
                            <center>
                                <span id="itemQueryInventoryItemsLoading"></span>
                            </center>
                            <div id="itemQueryInventoryItemsContent">
                                <div class="panel panel-default">

                                    <!--
                                        ==============================================
                                        Item Query Inventory Items: Search and Filters
                                        ==============================================
                                    -->
                                    <div class="panel-heading">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control" id="inpItemQueryInventoryItemsFilterSearch" placeholder="Search...">
                                        </div>
                                    </div>

                                    <!--
                                        =====================================
                                        Item Query Inventory Items: Flex Grid
                                        =====================================
                                    -->
                                    <div class="panel-body">
                                        <div id="itemQueryInventoryItemsFlexGrid" class="grid"></div>
                                    </div>

                                    <!--
                                        ==============================================
                                        Item Query Inventory Items: Navigation Buttons
                                        ==============================================
                                    -->
                                    <div class="panel-footer">
                                        <div class="row">
                                            <div class="btn-group col-md-7" id="itemQueryInventoryItemsNaviagtionPageGrid">
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryInventoryItemsMoveToFirstPageGrid">
                                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryInventoryItemsMoveToPreviousPageGrid">
                                                    <span class="glyphicon glyphicon-step-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnItemQueryInventoryItemsCurrentPageGrid"></button>
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryInventoryItemsMoveToNextPageGrid">
                                                    <span class="glyphicon glyphicon-step-forward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryInventoryItemsMoveToLastPageGrid">
                                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--
                            ===================================
                            Item Query Tab: Non Inventory Items
                            ===================================
                        -->
                        <div id="itemQueryNonInventoryItems" class="tab-pane">
                            <center>
                                <span id="itemQueryNonInventoryItemsLoading"></span>
                            </center>
                            <div id="itemQueryNonInventoryItemsContent">
                                <div class="panel panel-default">

                                    <!--
                                        ==================================================
                                        Item Query Non Inventory Items: Search and Filters
                                        ==================================================
                                    -->
                                    <div class="panel-heading">
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control" id="inpItemQueryNonInventoryItemsFilterSearch" placeholder="Search...">
                                        </div>
                                    </div>

                                    <!--
                                        =========================================
                                        Item Query Non Inventory Items: Flex Grid
                                        =========================================
                                    -->
                                    <div class="panel-body">
                                        <div id="itemQueryNonInventoryItemsFlexGrid" class="grid"></div>
                                    </div>

                                    <!--
                                        ==================================================
                                        Item Query Non Inventory Items: Navigation Buttons
                                        ==================================================
                                    -->
                                    <div class="panel-footer">
                                        <div class="row">
                                            <div class="btn-group col-md-7" id="itemQueryNonInventoryItemsNaviagtionPageGrid">
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryNonInventoryItemsMoveToFirstPageGrid">
                                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryNonInventoryItemsMoveToPreviousPageGrid">
                                                    <span class="glyphicon glyphicon-step-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnItemQueryNonInventoryItemsCurrentPageGrid"></button>
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryNonInventoryItemsMoveToNextPageGrid">
                                                    <span class="glyphicon glyphicon-step-forward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryNonInventoryItemsMoveToLastPageGrid">
                                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--
                            =============================
                            Item Query Tab: Package Items
                            =============================
                        -->
                        <div id="itemQueryPackageItems" class="tab-pane">
                            <center>
                                <span id="itemQueryPackageItemsLoading"></span>
                            </center>
                            <div id="itemQueryPackageItemsContent">
                                <div class="panel panel-default">

                                    <!--
                                        ============================================
                                        Item Query Package Items: Search and Filters
                                        ============================================
                                    -->
                                    <div class="panel-heading">
                                        <div class="input-group  ">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control " id="inpItemQueryPackageItemsFilterSearch" placeholder="Search...">
                                        </div>
                                    </div>

                                    <!--
                                        ===================================
                                        Item Query Package Items: Flex Grid
                                        ===================================
                                    -->
                                    <div class="panel-body">
                                        <div id="itemQueryPackageItemsFlexGrid" class="grid"></div>
                                    </div>

                                    <!--
                                        ============================================
                                        Item Query Package Items: Navigation Buttons
                                        ============================================
                                    -->
                                    <div class="panel-footer">
                                        <div class="row">
                                            <div class="btn-group col-md-7" id="itemQueryPackageItemsNaviagtionPageGrid">
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryPackageItemsMoveToFirstPageGrid">
                                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryPackageItemsMoveToPreviousPageGrid">
                                                    <span class="glyphicon glyphicon-step-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnItemQueryPackageItemsCurrentPageGrid"></button>
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryPackageItemsMoveToNextPageGrid">
                                                    <span class="glyphicon glyphicon-step-forward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnItemQueryPackageItemsMoveToLastPageGrid">
                                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ===================================
        Sales Invoice: Cancel Confirm Modal
        ===================================
    -->
    <div class="modal fade" id="salesInvoiceCancelConfirmModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Cancel</h4>
                </div>
                <div class="modal-body">
                    Cancel Sales Invoice?
                </div>
                <div class="modal-footer">
                    <button id="btnSalesInvoiceCancelConfirm" class="btn btn-warning" onclick="btnSalesInvoiceCancelConfirmOnclick()"><i class="fa fa-times-circle-o"></i> Cancel</button>
                    <button id="btnSalesInvoiceCancelConfirmCloseModal" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ==========================================
        // Sales Invoice Detail Combo Data and Fields
        // ==========================================
        var cboSalesInvoiceBranch = new wijmo.input.ComboBox('#cboSalesInvoiceBranch');
        var cboSalesInvoiceCustomer = new wijmo.input.ComboBox('#cboSalesInvoiceCustomer');
        var cboSalesInvoiceTerm = new wijmo.input.ComboBox('#cboSalesInvoiceTerm');
        var cboSalesInvoiceStatus = new wijmo.input.ComboBox('#cboSalesInvoiceStatus');
        var cboSalesInvoiceSoldBy = new wijmo.input.ComboBox('#cboSalesInvoiceSoldBy');
        var cboSalesInvoicePreparedBy = new wijmo.input.ComboBox('#cboSalesInvoicePreparedBy');
        var cboSalesInvoiceCheckedBy = new wijmo.input.ComboBox('#cboSalesInvoiceCheckedBy');
        var cboSalesInvoiceApprovedBy = new wijmo.input.ComboBox('#cboSalesInvoiceApprovedBy');
        var cboSalesInvoiceSIDate = new wijmo.input.InputDate('#cboSalesInvoiceSIDate');
        var isLocked = false;

        // ====================================================================
        // Sales Invoice Item Collection View, Flex Grid and Navigation Buttons
        // ====================================================================
        var salesInvoiceItemsCollectionView;
        var salesInvoiceItemFlexGrid;
        var cboSalesInvoiceItemShowNumberOfRows = new wijmo.input.ComboBox('#cboSalesInvoiceItemShowNumberOfRows');
        var btnSalesInvoiceItemMoveToFirstPageGrid = document.getElementById('btnSalesInvoiceItemMoveToFirstPageGrid');
        var btnSalesInvoiceItemMoveToPreviousPageGrid = document.getElementById('btnSalesInvoiceItemMoveToPreviousPageGrid');
        var btnSalesInvoiceItemMoveToNextPageGrid = document.getElementById('btnSalesInvoiceItemMoveToNextPageGrid');
        var btnSalesInvoiceItemMoveToLastPageGrid = document.getElementById('btnSalesInvoiceItemMoveToLastPageGrid');
        var btnSalesInvoiceItemCurrentPageGrid = document.getElementById('btnSalesInvoiceItemCurrentPageGrid');

        // ========================================
        // Sales Invoice Item Combo Data and Fields
        // ========================================
        var salesItemId = 0;
        var cboSalesInvoiceItemCode = new wijmo.input.ComboBox('#cboSalesInvoiceItemCode');
        var cboSalesInvoiceItemDescription = new wijmo.input.ComboBox('#cboSalesInvoiceItemDescription');
        var cboSalesInvoiceItemInventoryCode = new wijmo.input.ComboBox('#cboSalesInvoiceItemInventoryCode');
        var cboSalesInvoiceItemUnit = new wijmo.input.ComboBox('#cboSalesInvoiceItemUnit');
        var cboSalesInvoiceItemPrice = new wijmo.input.ComboBox('#cboSalesInvoiceItemPrice');
        var cboSalesInvoiceItemDiscount = new wijmo.input.ComboBox('#cboSalesInvoiceItemDiscount');
        var cboSalesInvoiceItemVAT = new wijmo.input.ComboBox('#cboSalesInvoiceItemVAT');

        // =============================================
        // Journal Entries Collection View and Flex Grid
        // =============================================
        var journalCollectionView;
        var journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');

        // ===================================================================
        // Inventory Entries Collection View, Flex Grid and Navigation Buttons
        // ===================================================================
        var inventoryCollectionView;
        var inventoryEntriesFlexGrid;
        var cboInventoryEntriesShowNumberOfRows = new wijmo.input.ComboBox('#cboInventoryEntriesShowNumberOfRows');
        var btnInventoryEntriesMoveToFirstPageGrid = document.getElementById('btnInventoryEntriesMoveToFirstPageGrid');
        var btnInventoryEntriesMoveToPreviousPageGrid = document.getElementById('btnInventoryEntriesMoveToPreviousPageGrid');
        var btnInventoryEntriesMoveToNextPageGrid = document.getElementById('btnInventoryEntriesMoveToNextPageGrid');
        var btnInventoryEntriesMoveToLastPageGrid = document.getElementById('btnInventoryEntriesMoveToLastPageGrid');
        var btnInventoryEntriesCurrentPageGrid = document.getElementById('btnInventoryEntriesCurrentPageGrid');

        // =============================================================================
        // Item Query: Inventory Items Collection View, Flex Grid and Navigation Buttons
        // =============================================================================
        var itemQueryInventoryItemsCollectionView;
        var itemQueryInventoryItemsFlexGrid = new wijmo.grid.FlexGrid('#itemQueryInventoryItemsFlexGrid');
        var btnItemQueryInventoryItemsMoveToFirstPageGrid = document.getElementById('btnItemQueryInventoryItemsMoveToFirstPageGrid');
        var btnItemQueryInventoryItemsMoveToPreviousPageGrid = document.getElementById('btnItemQueryInventoryItemsMoveToPreviousPageGrid');
        var btnItemQueryInventoryItemsMoveToNextPageGrid = document.getElementById('btnItemQueryInventoryItemsMoveToNextPageGrid');
        var btnItemQueryInventoryItemsMoveToLastPageGrid = document.getElementById('btnItemQueryInventoryItemsMoveToLastPageGrid');
        var btnItemQueryInventoryItemsCurrentPageGrid = document.getElementById('btnItemQueryInventoryItemsCurrentPageGrid');
        var isBtnItemQueryInventoryItemsClicked = false;

        // =================================================================================
        // Item Query: Non Inventory Items Collection View, Flex Grid and Navigation Buttons
        // =================================================================================
        var itemQueryNonInventoryItemsCollectionView;
        var itemQueryNonInventoryItemsFlexGrid = new wijmo.grid.FlexGrid('#itemQueryNonInventoryItemsFlexGrid');
        var btnItemQueryNonInventoryItemsMoveToFirstPageGrid = document.getElementById('btnItemQueryNonInventoryItemsMoveToFirstPageGrid');
        var btnItemQueryNonInventoryItemsMoveToPreviousPageGrid = document.getElementById('btnItemQueryNonInventoryItemsMoveToPreviousPageGrid');
        var btnItemQueryNonInventoryItemsMoveToNextPageGrid = document.getElementById('btnItemQueryNonInventoryItemsMoveToNextPageGrid');
        var btnItemQueryNonInventoryItemsMoveToLastPageGrid = document.getElementById('btnItemQueryNonInventoryItemsMoveToLastPageGrid');
        var btnItemQueryNonInventoryItemsCurrentPageGrid = document.getElementById('btnItemQueryNonInventoryItemsCurrentPageGrid');
        var isBtnItemQueryNonInventoryItemsClicked = false;

        // ===========================================================================
        // Item Query: Package Items Collection View, Flex Grid and Navigation Buttons
        // ===========================================================================
        var itemQueryPackageItemsCollectionView;
        var itemQueryPackageItemsFlexGrid = new wijmo.grid.FlexGrid('#itemQueryPackageItemsFlexGrid');
        var btnItemQueryPackageItemsMoveToFirstPageGrid = document.getElementById('btnItemQueryPackageItemsMoveToFirstPageGrid');
        var btnItemQueryPackageItemsMoveToPreviousPageGrid = document.getElementById('btnItemQueryPackageItemsMoveToPreviousPageGrid');
        var btnItemQueryPackageItemsMoveToNextPageGrid = document.getElementById('btnItemQueryPackageItemsMoveToNextPageGrid');
        var btnItemQueryPackageItemsMoveToLastPageGrid = document.getElementById('btnItemQueryPackageItemsMoveToLastPageGrid');
        var btnItemQueryPackageItemsCurrentPageGrid = document.getElementById('btnItemQueryPackageItemsCurrentPageGrid');
        var isBtnItemQueryPackageItemsClicked = false;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getURLParameterValue(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ========================================
        // Create Sales Invoice Detail Combo Branch
        // ========================================
        function createCboSalesInvoiceDetailBranch() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoice/dropdown/list/branch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branchesObservableArray.push({
                                Id: results[i]["Id"],
                                Branch: results[i]["Branch"]
                            });
                        }
                    }

                    cboSalesInvoiceBranch.dispose();
                    cboSalesInvoiceBranch = new wijmo.input.ComboBox('#cboSalesInvoiceBranch', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id"
                    });

                    createCboSalesInvoiceDetailCustomer();
                }
            });
        }

        // ==========================================
        // Create Sales Invoice Detail Combo Customer
        // ==========================================
        function createCboSalesInvoiceDetailCustomer() {
            var customersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoice/dropdown/list/customer',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            customersObservableArray.push({
                                Id: results[i]["Id"],
                                Customer: results[i]["Article"]
                            });
                        }
                    }

                    cboSalesInvoiceCustomer.dispose();
                    cboSalesInvoiceCustomer = new wijmo.input.ComboBox('#cboSalesInvoiceCustomer', {
                        isEditable: false,
                        placeholder: "Select Customer",
                        itemsSource: customersObservableArray,
                        displayMemberPath: "Customer",
                        selectedValuePath: "Id"
                    });

                    createCboSalesInvoiceDetailTerm();
                }
            });
        }

        // ======================================
        // Create Sales Invoice Detail Combo Term
        // ======================================
        function createCboSalesInvoiceDetailTerm() {
            var termsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoice/dropdown/list/term',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            termsObservableArray.push({
                                Id: results[i]["Id"],
                                Term: results[i]["Term"]
                            });
                        }
                    }

                    cboSalesInvoiceTerm.dispose();
                    cboSalesInvoiceTerm = new wijmo.input.ComboBox('#cboSalesInvoiceTerm', {
                        isEditable: false,
                        placeholder: "Select Term",
                        itemsSource: termsObservableArray,
                        displayMemberPath: "Term",
                        selectedValuePath: "Id"
                    });

                    createCboSalesInvoiceDetailUsers();
                }
            });
        }

        // =======================================
        // Create Sales Invoice Detail Combo Users
        // =======================================
        function createCboSalesInvoiceDetailUsers() {
            var usersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoice/dropdown/list/users',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            usersObservableArray.push({
                                Id: results[i]["Id"],
                                FullName: results[i]["FullName"]
                            });
                        }
                    }

                    cboSalesInvoiceSoldBy.dispose();
                    cboSalesInvoiceSoldBy = new wijmo.input.ComboBox('#cboSalesInvoiceSoldBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSalesInvoicePreparedBy.dispose();
                    cboSalesInvoicePreparedBy = new wijmo.input.ComboBox('#cboSalesInvoicePreparedBy', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSalesInvoiceCheckedBy.dispose();
                    cboSalesInvoiceCheckedBy = new wijmo.input.ComboBox('#cboSalesInvoiceCheckedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSalesInvoiceApprovedBy.dispose();
                    cboSalesInvoiceApprovedBy = new wijmo.input.ComboBox('#cboSalesInvoiceApprovedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    createCboSalesInvoiceDetailStatus();
                }
            });
        }

        // ========================================
        // Create Sales Invoice Detail Combo Status
        // ========================================
        function createCboSalesInvoiceDetailStatus() {
            var statusObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoice/dropdown/list/status',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    var disabled = false;

                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            statusObservableArray.push({
                                Id: results[i]["Id"],
                                Status: results[i]["Status"]
                            });
                        }
                    } else {
                        disabled = true;
                    }

                    cboSalesInvoiceStatus.dispose();
                    cboSalesInvoiceStatus = new wijmo.input.ComboBox('#cboSalesInvoiceStatus', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: statusObservableArray,
                        displayMemberPath: "Status",
                        selectedValuePath: "Status"
                    });

                    getSalesInvoiceDetailData();
                }
            });
        }

        // =============================
        // Get Sales Invoice Detail Data
        // =============================
        function getSalesInvoiceDetailData() {
            if (document.location.search.length > 0) {
                var id = getURLParameterValue('id');

                $.ajax({
                    url: '/api/salesInvoice/detail/' + id,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results != null) {
                            cboSalesInvoiceBranch.selectedValue = results.BranchId;
                            document.getElementById('inpSalesInvoiceSINumber').value = results.SINumber;
                            cboSalesInvoiceSIDate.dispose();
                            cboSalesInvoiceSIDate = new wijmo.input.InputDate('#cboSalesInvoiceSIDate', {
                                format: 'MM-dd-yyyy',
                                value: new Date(results.SIDate)
                            });
                            document.getElementById('inpSalesInvoiceDocumentReference').value = results.DocumentReference;
                            cboSalesInvoiceCustomer.selectedValue = results.CustomerId;
                            cboSalesInvoiceTerm.selectedValue = results.TermId;
                            document.getElementById('inpSalesInvoiceRemarks').value = results.Remarks;
                            document.getElementById('inpSalesInvoiceManualSINumber').value = results.ManualSINumber;
                            cboSalesInvoiceSoldBy.selectedValue = results.SoldById;
                            cboSalesInvoicePreparedBy.selectedValue = results.PreparedById;
                            cboSalesInvoiceCheckedBy.selectedValue = results.CheckedById;
                            cboSalesInvoiceApprovedBy.selectedValue = results.ApprovedById;
                            cboSalesInvoiceStatus.selectedValue = results.Status;
                            document.getElementById('createdBy').innerHTML = results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = results.UpdatedDateTime;

                            if (results.IsLocked) {
                                cboSalesInvoiceSIDate.disabled = true;
                                document.getElementById('inpSalesInvoiceDocumentReference').disabled = true;
                                cboSalesInvoiceCustomer.disabled = true;
                                cboSalesInvoiceTerm.disabled = true;
                                document.getElementById('inpSalesInvoiceRemarks').disabled = true;
                                document.getElementById('inpSalesInvoiceManualSINumber').disabled = true;
                                cboSalesInvoiceSoldBy.disabled = true;
                                cboSalesInvoicePreparedBy.disabled = true;
                                cboSalesInvoiceCheckedBy.disabled = true;
                                cboSalesInvoiceApprovedBy.disabled = true;
                                cboSalesInvoiceStatus.disabled = true;

                                $("#btnSalesInvoiceSave").prop("disabled", true);
                                $("#btnLockSalesInvoice").prop("disabled", true);
                                $("#btnSalesInvoiceItemAdd").prop("disabled", true);
                                $("#btnSalesInvoiceItemItemQuery").prop("disabled", true);

                                isLocked = true;

                                if (results.IsCancelled) {
                                    $("#btnUnlockSalesInvoice").prop("disabled", true);
                                    $("#btnCancelSalesInvoice").prop("disabled", true);
                                }
                            } else {
                                $("#btnJournalSalesInvoice").prop("disabled", true);
                                $("#btnUnlockSalesInvoice").prop("disabled", true);
                                $("#btnCancelSalesInvoice").prop("disabled", true);
                                $("#btnPrintSalesInvoice").prop("disabled", true);
                            }

                            createCboShowRows();
                            createSalesInvoiceItemFlexGrid();
                            createInventoryEntriesFlexGrid();
                        } else {
                            alert("No Data");
                            window.location = "/Software/Sales";
                        }
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/Sales";
            }
        }

        // ==================
        // Save Sales Invoice
        // ==================
        function btnSalesInvoiceSaveOnclick() {
            document.getElementById('btnSalesInvoiceSave').innerHTML = "<i class='fa fa-save'></i> Saving...";
            $("#btnSalesInvoiceSave").prop("disabled", true);
            $("#btnJournalSalesInvoice").prop("disabled", true);
            $("#btnLockSalesInvoice").prop("disabled", true);
            $("#btnUnlockSalesInvoice").prop("disabled", true);
            $("#btnCancelSalesInvoice").prop("disabled", true);
            $("#btnPrintSalesInvoice").prop("disabled", true);
            $("#btnCloseSalesInvoice").prop("disabled", true);

            var salesObject = new Object();
            salesObject.SIDate = cboSalesInvoiceSIDate.value.toLocaleDateString();
            salesObject.CustomerId = cboSalesInvoiceCustomer.selectedValue;
            salesObject.TermId = cboSalesInvoiceTerm.selectedValue;
            salesObject.DocumentReference = document.getElementById('inpSalesInvoiceDocumentReference').value;
            salesObject.ManualSINumber = document.getElementById('inpSalesInvoiceManualSINumber').value;
            salesObject.Remarks = document.getElementById('inpSalesInvoiceRemarks').value;
            salesObject.SoldById = cboSalesInvoiceSoldBy.selectedValue;
            salesObject.CheckedById = cboSalesInvoiceCheckedBy.selectedValue;
            salesObject.ApprovedById = cboSalesInvoiceApprovedBy.selectedValue;
            salesObject.Status = cboSalesInvoiceStatus.selectedValue;
            var salesData = JSON.stringify(salesObject);

            var isValid = true;
            $('.requiredSales').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                var id = getURLParameterValue('id');

                $.ajax({
                    type: "PUT",
                    url: '/api/salesInvoice/save/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: salesData,
                    statusCode: {
                        200: function () {
                            toastr.success("Save Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnSalesInvoiceSave').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnSalesInvoiceSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnJournalSalesInvoice").prop("disabled", false);
                                $("#btnUnlockSalesInvoice").prop("disabled", false);
                                $("#btnCancelSalesInvoice").prop("disabled", false);
                                $("#btnPrintSalesInvoice").prop("disabled", false);
                            } else {
                                $("#btnLockSalesInvoice").prop("disabled", false);
                            }

                            $("#btnCloseSalesInvoice").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnSalesInvoiceSave').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnSalesInvoiceSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnJournalSalesInvoice").prop("disabled", false);
                                $("#btnUnlockSalesInvoice").prop("disabled", false);
                                $("#btnCancelSalesInvoice").prop("disabled", false);
                                $("#btnPrintSalesInvoice").prop("disabled", false);
                            } else {
                                $("#btnLockSalesInvoice").prop("disabled", false);
                            }

                            $("#btnCloseSalesInvoice").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnSalesInvoiceSave').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnSalesInvoiceSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnJournalSalesInvoice").prop("disabled", false);
                                $("#btnUnlockSalesInvoice").prop("disabled", false);
                                $("#btnCancelSalesInvoice").prop("disabled", false);
                                $("#btnPrintSalesInvoice").prop("disabled", false);
                            } else {
                                $("#btnLockSalesInvoice").prop("disabled", false);
                            }

                            $("#btnCloseSalesInvoice").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ==================
        // Lock Sales Invoice
        // ==================
        function btnSalesInvoiceLockOnclick() {
            document.getElementById('btnLockSalesInvoice').innerHTML = "<i class='fa fa-lock'></i> Locking...";
            $("#btnSalesInvoiceSave").prop("disabled", true);
            $("#btnJournalSalesInvoice").prop("disabled", true);
            $("#btnLockSalesInvoice").prop("disabled", true);
            $("#btnUnlockSalesInvoice").prop("disabled", true);
            $("#btnCancelSalesInvoice").prop("disabled", true);
            $("#btnPrintSalesInvoice").prop("disabled", true);
            $("#btnCloseSalesInvoice").prop("disabled", true);

            var salesObject = new Object();
            salesObject.SIDate = cboSalesInvoiceSIDate.value.toLocaleDateString();
            salesObject.CustomerId = cboSalesInvoiceCustomer.selectedValue;
            salesObject.TermId = cboSalesInvoiceTerm.selectedValue;
            salesObject.DocumentReference = document.getElementById('inpSalesInvoiceDocumentReference').value;
            salesObject.ManualSINumber = document.getElementById('inpSalesInvoiceManualSINumber').value;
            salesObject.Remarks = document.getElementById('inpSalesInvoiceRemarks').value;
            salesObject.SoldById = cboSalesInvoiceSoldBy.selectedValue;
            salesObject.CheckedById = cboSalesInvoiceCheckedBy.selectedValue;
            salesObject.ApprovedById = cboSalesInvoiceApprovedBy.selectedValue;
            salesObject.Status = cboSalesInvoiceStatus.selectedValue;
            var salesData = JSON.stringify(salesObject);

            var isValid = true;
            $('.requiredSales').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                var id = getURLParameterValue('id');

                $.ajax({
                    type: "PUT",
                    url: '/api/salesInvoice/lock/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: salesData,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnLockSalesInvoice').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnLockSalesInvoice").prop("disabled", false);
                            $("#btnCloseSalesInvoice").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnLockSalesInvoice').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnLockSalesInvoice").prop("disabled", false);
                            $("#btnCloseSalesInvoice").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnLockSalesInvoice').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnLockSalesInvoice").prop("disabled", false);
                            $("#btnCloseSalesInvoice").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ====================
        // Unlock Sales Invoice
        // ====================
        function btnSalesInvoiceUnlockOnclick() {
            document.getElementById('btnUnlockSalesInvoice').innerHTML = "<i class='fa fa-unlock'></i> Unlocking...";
            $("#btnJournalSalesInvoice").prop("disabled", true);
            $("#btnLockSalesInvoice").prop("disabled", true);
            $("#btnUnlockSalesInvoice").prop("disabled", true);
            $("#btnCancelSalesInvoice").prop("disabled", true);
            $("#btnPrintSalesInvoice").prop("disabled", true);
            $("#btnCloseSalesInvoice").prop("disabled", true);

            var id = getURLParameterValue('id');

            $.ajax({
                type: "PUT",
                url: '/api/salesInvoice/unlock/' + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnUnlockSalesInvoice').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnJournalSalesInvoice").prop("disabled", false);
                        $("#btnUnlockSalesInvoice").prop("disabled", false);
                        $("#btnCancelSalesInvoice").prop("disabled", false);
                        $("#btnPrintSalesInvoice").prop("disabled", false);
                        $("#btnCloseSalesInvoice").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnUnlockSalesInvoice').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnJournalSalesInvoice").prop("disabled", false);
                        $("#btnUnlockSalesInvoice").prop("disabled", false);
                        $("#btnCancelSalesInvoice").prop("disabled", false);
                        $("#btnPrintSalesInvoice").prop("disabled", false);
                        $("#btnCloseSalesInvoice").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnUnlockSalesInvoice').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnJournalSalesInvoice").prop("disabled", false);
                        $("#btnUnlockSalesInvoice").prop("disabled", false);
                        $("#btnCancelSalesInvoice").prop("disabled", false);
                        $("#btnPrintSalesInvoice").prop("disabled", false);
                        $("#btnCloseSalesInvoice").prop("disabled", false);
                    }
                }
            });
        }

        // ====================
        // Cancel Sales Invoice
        // ====================
        function btnSalesInvoiceCancelOnclick() {
            $('#salesInvoiceCancelConfirmModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnSalesInvoiceCancelConfirm').innerHTML = "<i class='fa fa-times-circle-o'></i> Cancel";
            $("#btnSalesInvoiceCancelConfirm").prop("disabled", false);
            $("#btnSalesInvoiceCancelConfirmCloseModal").prop("disabled", false);
        }

        // ============================
        // Confirm Cancel Sales Invoice
        // ============================
        function btnSalesInvoiceCancelConfirmOnclick() {
            document.getElementById('btnSalesInvoiceCancelConfirm').innerHTML = "<i class='fa fa-times-circle-o'></i> Cancelling...";
            $("#btnSalesInvoiceCancelConfirm").prop("disabled", true);
            $("#btnSalesInvoiceCancelConfirmCloseModal").prop("disabled", true);

            document.getElementById('btnCancelSalesInvoice').innerHTML = "<i class='fa fa-times-circle-o'></i> Cancelling...";
            $("#btnJournalSalesInvoice").prop("disabled", true);
            $("#btnLockSalesInvoice").prop("disabled", true);
            $("#btnUnlockSalesInvoice").prop("disabled", true);
            $("#btnCancelSalesInvoice").prop("disabled", true);
            $("#btnPrintSalesInvoice").prop("disabled", true);
            $("#btnCloseSalesInvoice").prop("disabled", true);

            var id = getURLParameterValue('id');

            $.ajax({
                type: "PUT",
                url: '/api/salesInvoice/cancel/' + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnCancelSalesInvoice').innerHTML = "<i class='fa fa-times-circle-o'></i> Cancel";
                        $("#btnJournalSalesInvoice").prop("disabled", false);
                        $("#btnUnlockSalesInvoice").prop("disabled", false);
                        $("#btnCancelSalesInvoice").prop("disabled", false);
                        $("#btnPrintSalesInvoice").prop("disabled", false);
                        $("#btnCloseSalesInvoice").prop("disabled", false);

                        document.getElementById('btnSalesInvoiceCancelConfirm').innerHTML = "<i class='fa fa-times-circle-o'></i> Cancel";
                        $("#btnSalesInvoiceCancelConfirm").prop("disabled", false);
                        $("#btnSalesInvoiceCancelConfirmCloseModal").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnCancelSalesInvoice').innerHTML = "<i class='fa fa-times-circle-o'></i> Cancel";
                        $("#btnJournalSalesInvoice").prop("disabled", false);
                        $("#btnUnlockSalesInvoice").prop("disabled", false);
                        $("#btnCancelSalesInvoice").prop("disabled", false);
                        $("#btnPrintSalesInvoice").prop("disabled", false);
                        $("#btnCloseSalesInvoice").prop("disabled", false);

                        document.getElementById('btnSalesInvoiceCancelConfirm').innerHTML = "<i class='fa fa-times-circle-o'></i> Cancel";
                        $("#btnSalesInvoiceCancelConfirm").prop("disabled", false);
                        $("#btnSalesInvoiceCancelConfirmCloseModal").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnCancelSalesInvoice').innerHTML = "<i class='fa fa-times-circle-o'></i> Cancel";
                        $("#btnJournalSalesInvoice").prop("disabled", false);
                        $("#btnUnlockSalesInvoice").prop("disabled", false);
                        $("#btnCancelSalesInvoice").prop("disabled", false);
                        $("#btnPrintSalesInvoice").prop("disabled", false);
                        $("#btnCloseSalesInvoice").prop("disabled", false);

                        document.getElementById('btnSalesInvoiceCancelConfirm').innerHTML = "<i class='fa fa-times-circle-o'></i> Cancel";
                        $("#btnSalesInvoiceCancelConfirm").prop("disabled", false);
                        $("#btnSalesInvoiceCancelConfirmCloseModal").prop("disabled", false);
                    }
                }
            });
        }

        // ===================
        // Print Sales Invoice
        // ===================
        function btnSalesInvoicePrintOnclick() {
            var salesId = getURLParameterValue('id');
            var pirntLink = "/RepSales/Sales?SalesId=" + salesId;
            window.open(pirntLink, '_blank');
        }

        // ======================
        // Get Sales Invoice Item
        // ======================
        function getSalesInvoiceItemData() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                var SIId = getURLParameterValue('id');

                $.ajax({
                    url: '/api/salesInvoiceItem/list/' + SIId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        var totalAmount = 0;
                        var totalDiscountAmount = 0;
                        var totalVATAmount = 0;

                        if (results.length > 0) {
                            var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnSalesInvoiceItemEditOnclick()'><i class='fa fa-edit'></i> Edit</button>";
                            var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnSalesInvoiceItemDeleteOnclick()'><i class='fa fa-trash'></i> Delete</button>";
                            if (isLocked == true) {
                                var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnSalesInvoiceItemEditOnclick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnSalesInvoiceItemDeleteOnclick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                            }

                            for (i = 0; i < results.length; i++) {
                                itemsObservableArray.push({
                                    EditId: btnEditId,
                                    DeleteId: btnDeleteId,
                                    Id: results[i]["Id"],
                                    SIId: results[i]["SIId"],
                                    ItemId: results[i]["ItemId"],
                                    ItemCode: results[i]["ItemCode"],
                                    ItemManualArticleOldCode: results[i]["ItemManualArticleOldCode"],
                                    ItemDescription: results[i]["ItemDescription"],
                                    Particulars: results[i]["Particulars"],
                                    ItemInventoryId: results[i]["ItemInventoryId"],
                                    ItemInventoryCode: results[i]["ItemInventoryCode"],
                                    Quantity: results[i]["Quantity"],
                                    QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"],
                                    Price: results[i]["Price"],
                                    PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    DiscountId: results[i]["DiscountId"],
                                    Discount: results[i]["Discount"],
                                    DiscountRate: results[i]["DiscountRate"],
                                    DiscountRateDisplay: parseFloat(results[i]["DiscountRate"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    DiscountAmount: results[i]["DiscountAmount"],
                                    DiscountAmountDisplay: parseFloat(results[i]["DiscountAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    NetPrice: results[i]["NetPrice"],
                                    NetPriceDisplay: parseFloat(results[i]["NetPrice"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    Amount: results[i]["Amount"],
                                    AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    VATId: results[i]["VATId"],
                                    VAT: results[i]["VAT"],
                                    VATRate: results[i]["VATPercentage"],
                                    VATRateDisplay: parseFloat(results[i]["VATPercentage"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    VATAmount: results[i]["VATAmount"],
                                    VATAmountDisplay: parseFloat(results[i]["VATAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    BaseUnitId: results[i]["BaseUnitId"],
                                    BaseUnit: results[i]["BaseUnit"],
                                    BaseQuantity: results[i]["BaseQuantity"],
                                    BaseQuantityDisplay: parseFloat(results[i]["BaseQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    BasePrice: results[i]["BasePrice"],
                                    BasePriceDisplay: parseFloat(results[i]["BasePrice"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                });

                                totalAmount += results[i]["Amount"];
                                totalDiscountAmount += results[i]["DiscountAmount"] * results[i]["Quantity"];
                                totalVATAmount += results[i]["VATAmount"];
                            }
                        }

                        document.getElementById('inpTotalSalesInvoiceAmount').value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        document.getElementById('inpTotalSalesInvoiceDiscountAmount').value = parseFloat(totalDiscountAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        document.getElementById('inpTotalSalesInvoiceVATtAmount').value = parseFloat(totalVATAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

                        NProgress.done();
                    }
                });
            } else {
                NProgress.done();
            }

            return itemsObservableArray;
        }

        // ===================================
        // Create Sales Invoice Item Flex Grid
        // ===================================
        function createSalesInvoiceItemFlexGrid() {
            salesInvoiceItemsCollectionView = new wijmo.collections.CollectionView(getSalesInvoiceItemData());
            salesInvoiceItemsCollectionView.canFilter = true;
            salesInvoiceItemsCollectionView.pageSize = cboSalesInvoiceItemShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpSalesInvoiceItemItemSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                salesInvoiceItemsCollectionView.refresh();
            });

            salesInvoiceItemsCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.VAT.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Discount.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            salesInvoiceItemsCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateSalesInvoiceItemNavigationButtons();
            });

            salesInvoiceItemFlexGrid = new wijmo.grid.FlexGrid('#salesInvoiceItemFlexGrid');
            salesInvoiceItemFlexGrid.initialize({
                columns: [
                    @{
                        if (canEdit)
                        {
                            <text>
                                {
                                    "header": "Edit",
                                    "binding": "EditId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                        if (canDelete)
                        {
                            <text>
                                {
                                    "header": "Delete",
                                    "binding": "DeleteId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                    }
                    {
                        "header": "Barcode",
                        "binding": "ItemCode",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ItemManualArticleOldCode",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Description",
                        "binding": "ItemDescription",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "ItemInventoryCode",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Price",
                        "binding": "PriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Type",
                        "binding": "Discount",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Rate",
                        "binding": "DiscountRateDisplay",
                        "allowSorting": true,
                        "width": 100,
                        "align": "right",
                        "isContentHtml": true
                    },
                    {
                        "header": "Amount",
                        "binding": "DiscountAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Net Price",
                        "binding": "NetPriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Type",
                        "binding": "VAT",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Rate",
                        "binding": "VATRateDisplay",
                        "allowSorting": true,
                        "width": 100,
                        "align": "right",
                        "isContentHtml": true
                    },
                    {
                        "header": "Amount",
                        "binding": "VATAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Unit",
                        "binding": "BaseUnit",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Quantity",
                        "binding": "BaseQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                    {
                        "header": "Price",
                        "binding": "BasePriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: salesInvoiceItemsCollectionView,
                isReadOnly: true,
                @{
                    if (canEdit)
                    {
                        if (canDelete)
                        {
                            <text>
                                frozenColumns: 2,
                            </text>
                        }
                        else
                        {
                            <text>
                                frozenColumns: 1,
                            </text>
                        }
                    }
                    else
                    {
                        if (canDelete)
                        {
                            <text>
                                frozenColumns: 1,
                            </text>
                        }
                        else
                        {
                            <text>
                                frozenColumns: 0,
                            </text>
                        }
                    }
                }
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            salesInvoiceItemFlexGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            salesInvoiceItemFlexGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            salesInvoiceItemFlexGrid.columnHeaders.rows.push(hr);
            salesInvoiceItemFlexGrid.columnHeaders.rows[0].allowMerging = true;

            @{
                if (canEdit)
                {
                    if (canDelete)
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 20; i++) {
                                if (i == 0) {
                                    columnName = "Edit";
                                } else if (i == 1) {
                                    columnName = "Delete";
                                } else if (i == 2) {
                                    columnName = "Barcode";
                                } else if (i == 3) {
                                    columnName = "SKU Code";
                                } else if (i == 4) {
                                    columnName = "Description";
                                } else if (i == 5) {
                                    columnName = "Particulars";
                                } else if (i == 6) {
                                    columnName = "Inventory Code";
                                } else if (i == 7) {
                                    columnName = "Quantity";
                                } else if (i == 8) {
                                    columnName = "Unit";
                                } else if (i == 9) {
                                    columnName = "Price";
                                } else {
                                    if (i >= 10) {
                                        columnName = "Discount";
                                        for (var j = 10; j <= 12; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 13 && i <= 14) {
                                        if (i == 13) {
                                            columnName = "Net Price";
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        } else if (i == 14) {
                                            columnName = "Amount";
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        }

                                    }

                                    if (i >= 15) {
                                        columnName = "VAT";
                                        for (var j = 15; j <= 17; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 18) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 18; j <= 20; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 9) {
                                    salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                    else
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 19; i++) {
                                if (i == 0) {
                                    columnName = "Edit";
                                } else if (i == 1) {
                                    columnName = "Barcode";
                                } else if (i == 2) {
                                    columnName = "SKU Code";
                                } else if (i == 3) {
                                    columnName = "Description";
                                } else if (i == 4) {
                                    columnName = "Particulars";
                                } else if (i == 5) {
                                    columnName = "Inventory Code";
                                } else if (i == 6) {
                                    columnName = "Quantity";
                                } else if (i == 7) {
                                    columnName = "Unit";
                                } else if (i == 8) {
                                    columnName = "Price";
                                } else {
                                    if (i >= 9) {
                                        columnName = "Discount";
                                        for (var j = 9; j <= 11; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 12 && i <= 13) {
                                        if (i == 12) {
                                            columnName = "Net Price";
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        } else if (i == 13) {
                                            columnName = "Amount";
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        }

                                    }

                                    if (i >= 14) {
                                        columnName = "VAT";
                                        for (var j = 14; j <= 16; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 17) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 17; j <= 19; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 8) {
                                    salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                }
                else
                {
                    if (canDelete)
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 19; i++) {
                                if (i == 0) {
                                    columnName = "Delete";
                                } else if (i == 1) {
                                    columnName = "Barcode";
                                } else if (i == 2) {
                                    columnName = "SKU Code";
                                } else if (i == 3) {
                                    columnName = "Description";
                                } else if (i == 4) {
                                    columnName = "Particulars";
                                } else if (i == 5) {
                                    columnName = "Inventory Code";
                                } else if (i == 6) {
                                    columnName = "Quantity";
                                } else if (i == 7) {
                                    columnName = "Unit";
                                } else if (i == 8) {
                                    columnName = "Price";
                                } else {
                                    if (i >= 9) {
                                        columnName = "Discount";
                                        for (var j = 9; j <= 11; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 12 && i <= 13) {
                                        if (i == 12) {
                                            columnName = "Net Price";
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        } else if (i == 13) {
                                            columnName = "Amount";
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        }

                                    }

                                    if (i >= 14) {
                                        columnName = "VAT";
                                        for (var j = 14; j <= 16; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 17) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 17; j <= 19; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 8) {
                                    salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                    else
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 18; i++) {
                                if (i == 0) {
                                    columnName = "Barcode";
                                } else if (i == 1) {
                                    columnName = "SKU Code";
                                } else if (i == 2) {
                                    columnName = "Description";
                                } else if (i == 3) {
                                    columnName = "Particulars";
                                } else if (i == 4) {
                                    columnName = "Inventory Code";
                                } else if (i == 5) {
                                    columnName = "Quantity";
                                } else if (i == 6) {
                                    columnName = "Unit";
                                } else if (i == 7) {
                                    columnName = "Price";
                                } else {
                                    if (i >= 8) {
                                        columnName = "Discount";
                                        for (var j = 8; j <= 10; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 11 && i <= 12) {
                                        if (i == 11) {
                                            columnName = "Net Price";
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        } else if (i == 12) {
                                            columnName = "Amount";
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        }

                                    }

                                    if (i >= 13) {
                                        columnName = "VAT";
                                        for (var j = 13; j <= 15; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 16) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 16; j <= 18; j++) {
                                            salesInvoiceItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 7) {
                                    salesInvoiceItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    salesInvoiceItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                }
            }

            updateSalesInvoiceItemNavigationButtons();

            btnSalesInvoiceItemMoveToFirstPageGrid.addEventListener('click', function () {
                salesInvoiceItemsCollectionView.moveToFirstPage();
                updateSalesInvoiceItemNavigationButtons();
            });

            btnSalesInvoiceItemMoveToPreviousPageGrid.addEventListener('click', function () {
                salesInvoiceItemsCollectionView.moveToPreviousPage();
                updateSalesInvoiceItemNavigationButtons();
            });

            btnSalesInvoiceItemMoveToNextPageGrid.addEventListener('click', function () {
                salesInvoiceItemsCollectionView.moveToNextPage();
                updateSalesInvoiceItemNavigationButtons();
            });

            btnSalesInvoiceItemMoveToLastPageGrid.addEventListener('click', function () {
                salesInvoiceItemsCollectionView.moveToLastPage();
                updateSalesInvoiceItemNavigationButtons();
            });
        }

        // ============================================
        // Update Sales Invoice Item Navigation Buttons
        // ============================================
        function updateSalesInvoiceItemNavigationButtons() {
            if (salesInvoiceItemsCollectionView.pageSize <= 0) {
                document.getElementById('salesInvoiceItemNaviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('salesInvoiceItemNaviagtionPageGrid').style.display = 'block';
            if (salesInvoiceItemsCollectionView.pageIndex === 0) {
                btnSalesInvoiceItemMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnSalesInvoiceItemMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnSalesInvoiceItemMoveToNextPageGrid.removeAttribute('disabled');
                btnSalesInvoiceItemMoveToLastPageGrid.removeAttribute('disabled');
            } else if (salesInvoiceItemsCollectionView.pageIndex === (salesInvoiceItemsCollectionView.pageCount - 1)) {
                btnSalesInvoiceItemMoveToFirstPageGrid.removeAttribute('disabled');
                btnSalesInvoiceItemMoveToPreviousPageGrid.removeAttribute('disabled');
                btnSalesInvoiceItemMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnSalesInvoiceItemMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnSalesInvoiceItemMoveToFirstPageGrid.removeAttribute('disabled');
                btnSalesInvoiceItemMoveToPreviousPageGrid.removeAttribute('disabled');
                btnSalesInvoiceItemMoveToNextPageGrid.removeAttribute('disabled');
                btnSalesInvoiceItemMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnSalesInvoiceItemCurrentPageGrid.innerHTML = (salesInvoiceItemsCollectionView.pageIndex + 1) + ' / ' + salesInvoiceItemsCollectionView.pageCount;
        }

        // ====================================
        // Refresh Sales Invoice Item Flex Grid
        // ====================================
        function refreshSalesInvoiceItemFlexGrid() {
            salesInvoiceItemsCollectionView = new wijmo.collections.CollectionView(getSalesInvoiceItemData());
            salesInvoiceItemsCollectionView.canFilter = true;
            salesInvoiceItemsCollectionView.pageSize = cboSalesInvoiceItemShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpSalesInvoiceItemItemSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                salesInvoiceItemsCollectionView.refresh();
            });

            salesInvoiceItemsCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.VAT.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Discount.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            salesInvoiceItemsCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateSalesInvoiceItemNavigationButtons();
            });

            salesInvoiceItemFlexGrid.itemsSource = salesInvoiceItemsCollectionView;
            salesInvoiceItemFlexGrid.trackChanges = true;
        }

        // ====================================
        // Create Sales Invoice Item Combo Item
        // ====================================
        function createCboSalesInvoiceItem(itemId, inventoryCodeId, unitId, priceValue, discountId, VATId) {
            var articleItemsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoiceItem/dropdown/list/item',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleItemsObservableArray.push({
                                Id: results[i]["Id"],
                                ItemCode: results[i]["ManualArticleCode"],
                                ItemDescription: results[i]["Article"],
                                InputTaxId: results[i]["InputTaxId"],
                                OutputTaxId: results[i]["OutputTaxId"],
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        if (!isLocked) {
                            disabled = false;
                            $("#btnSalesInvoiceItemSave").prop("disabled", false);
                        }
                    } else {
                        $("#btnSalesInvoiceItemSave").prop("disabled", true);
                    }

                    cboSalesInvoiceItemCode.dispose();
                    cboSalesInvoiceItemCode = new wijmo.input.ComboBox('#cboSalesInvoiceItemCode', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: articleItemsObservableArray,
                        displayMemberPath: "ItemCode",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboSalesInvoiceItemDescription.selectedValue = this.selectedValue;
                        }
                    });

                    cboSalesInvoiceItemDescription.dispose();
                    cboSalesInvoiceItemDescription = new wijmo.input.ComboBox('#cboSalesInvoiceItemDescription', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: articleItemsObservableArray,
                        displayMemberPath: "ItemDescription",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            $("#btnSalesInvoiceItemSave").prop("disabled", false);
                            cboSalesInvoiceItemCode.selectedValue = this.selectedValue;

                            createCboSalesInvoiceItemInventoryCode(inventoryCodeId, unitId, 0, discountId, VATId);

                            computeAmount();
                        }
                    });

                    createCboSalesInvoiceItemInventoryCode(inventoryCodeId, unitId, priceValue, discountId, VATId);
                }
            });
        }

        // ==============================================
        // Create Sales Invoice Item Combo Inventory Code
        // ==============================================
        function createCboSalesInvoiceItemInventoryCode(inventoryCodeId, unitId, priceValue, discountId, VATId) {
            var inventoryCodesObservableArray = new wijmo.collections.ObservableArray();
            if (cboSalesInvoiceItemDescription.selectedValue != null) {
                var articleId = cboSalesInvoiceItemDescription.selectedValue;
                $.ajax({
                    url: '/api/salesInvoiceItem/dropdown/list/itemInventoryCode/' + articleId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                inventoryCodesObservableArray.push({
                                    Id: results[i]["Id"],
                                    InventoryCode: results[i]["InventoryCode"]
                                });
                            }
                        }

                        var disabled = true;
                        if (results.length > 0) {
                            var InventoryType = "@ViewData["InventoryType"]";
                            if (InventoryType == "Moving Average") {
                                disabled = true;
                            } else {
                                if (!isLocked) {
                                    disabled = false;
                                }
                            }
                        }

                        cboSalesInvoiceItemInventoryCode.dispose();
                        cboSalesInvoiceItemInventoryCode = new wijmo.input.ComboBox('#cboSalesInvoiceItemInventoryCode', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: inventoryCodesObservableArray,
                            displayMemberPath: "InventoryCode",
                            selectedValuePath: "Id",
                            selectedValue: inventoryCodeId
                        });

                        createCboSalesInvoiceItemUnit(unitId, priceValue, discountId, VATId);
                    }
                });
            } else {
                cboSalesInvoiceItemInventoryCode.dispose();
                cboSalesInvoiceItemInventoryCode = new wijmo.input.ComboBox('#cboSalesInvoiceItemInventoryCode', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: inventoryCodesObservableArray,
                    displayMemberPath: "InventoryCode",
                    selectedValuePath: "Id",
                    selectedValue: inventoryCodeId
                });

                createCboSalesInvoiceItemUnit(unitId, priceValue, discountId, VATId);
            }
        }

        // ====================================
        // Create Sales Invoice Item Combo Unit
        // ====================================
        function createCboSalesInvoiceItemUnit(unitId, priceValue, discountId, VATId) {
            var itemUnitsObservableArray = new wijmo.collections.ObservableArray();
            if (cboSalesInvoiceItemDescription.selectedValue != null) {
                var itemId = cboSalesInvoiceItemDescription.selectedValue;
                $.ajax({
                    url: '/api/salesInvoiceItem/dropdown/list/itemUnit/' + itemId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                itemUnitsObservableArray.push({
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"]
                                });
                            }
                        }

                        var disabled = true;
                        if (results.length > 0) {
                            if (!isLocked) {
                                disabled = false;
                            }
                        } else {
                            $("#btnSalesInvoiceItemSave").prop("disabled", true);
                        }

                        cboSalesInvoiceItemUnit.dispose();
                        cboSalesInvoiceItemUnit = new wijmo.input.ComboBox('#cboSalesInvoiceItemUnit', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: itemUnitsObservableArray,
                            displayMemberPath: "Unit",
                            selectedValuePath: "UnitId",
                            selectedValue: unitId
                        });

                        createCboSalesInvoiceItemPrice(priceValue, discountId, VATId);
                    }
                });
            } else {
                cboSalesInvoiceItemUnit.dispose();
                cboSalesInvoiceItemUnit = new wijmo.input.ComboBox('#cboSalesInvoiceItemUnit', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: itemUnitsObservableArray,
                    displayMemberPath: "Unit",
                    selectedValuePath: "UnitId",
                    selectedValue: unitId
                });

                createCboSalesInvoiceItemPrice(priceValue, discountId, VATId);
                $("#btnSalesInvoiceItemSave").prop("disabled", true);
            }
        }

        // =====================================
        // Create Sales Invoice Item Combo Price
        // =====================================
        function createCboSalesInvoiceItemPrice(priceValue, discountId, VATId) {
            var itemPricesObservableArray = new wijmo.collections.ObservableArray();
            if (cboSalesInvoiceItemDescription.selectedValue != null) {
                var itemId = cboSalesInvoiceItemDescription.selectedValue;
                $.ajax({
                    url: '/api/salesInvoiceItem/dropdown/list/itemPrice/' + itemId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (itemPriceListresults) {
                        if (itemPriceListresults.length > 0) {
                            for (i = 0; i < itemPriceListresults.length; i++) {
                                itemPricesObservableArray.push({
                                    Id: itemPriceListresults[i]["Id"],
                                    ArticleId: itemPriceListresults[i]["ArticleId"],
                                    Article: itemPriceListresults[i]["Article"],
                                    PriceDescription: itemPriceListresults[i]["PriceDescription"] + " (" + formatDecimalValues(itemPriceListresults[i]["Price"]) + ")",
                                    PriceDescriptionName: itemPriceListresults[i]["PriceDescription"],
                                    Price: itemPriceListresults[i]["Price"]
                                });
                            }
                        }

                        var disabled = true;
                        if (itemPriceListresults.length > 0) {
                            if (!isLocked) {
                                disabled = false;
                            }
                        } else {
                            $("#btnSalesInvoiceItemSave").prop("disabled", true);
                        }

                        cboSalesInvoiceItemPrice.dispose();
                        cboSalesInvoiceItemPrice = new wijmo.input.ComboBox('#cboSalesInvoiceItemPrice', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: itemPricesObservableArray,
                            displayMemberPath: "PriceDescription",
                            selectedValuePath: "Price",
                            selectedValue: priceValue,
                            onSelectedIndexChanged: function () {
                                if (cboSalesInvoiceItemPrice.selectedValue != null) {
                                    var isPriceValueFound = false;
                                    for (var i = 0; i < itemPricesObservableArray.length; i++) {
                                        if (itemPricesObservableArray[i]["Price"] === parseFloat(priceValue)) {
                                            isPriceValueFound = true;
                                            break;
                                        }
                                    }

                                    if (!isPriceValueFound) {
                                        var upperCaseVariablePrice = "VARIABLE";
                                        var lowerCaseVariablePrice = "variable";
                                        var standardCaseVariablePrice = "Variable";

                                        if ((cboSalesInvoiceItemPrice.selectedItem["PriceDescriptionName"] === upperCaseVariablePrice || cboSalesInvoiceItemPrice.selectedItem["PriceDescriptionName"] === lowerCaseVariablePrice) || cboSalesInvoiceItemPrice.selectedItem["PriceDescriptionName"] === standardCaseVariablePrice) {
                                            if (cboSalesInvoiceItemPrice.selectedItem["Price"] === parseFloat(1)) {

                                                if (!isLocked) {
                                                    document.getElementById("inpSalesInvoiceItemPrice").disabled = false;
                                                }

                                                if (parseFloat(priceValue) != 0) {
                                                    document.getElementById("inpSalesInvoiceItemPrice").value = formatDecimalValues(priceValue);
                                                } else {
                                                    document.getElementById("inpSalesInvoiceItemPrice").value = formatDecimalValues(cboSalesInvoiceItemPrice.selectedItem["Price"]);
                                                }
                                            }
                                        } else {
                                            document.getElementById("inpSalesInvoiceItemPrice").disabled = true;
                                            document.getElementById("inpSalesInvoiceItemPrice").value = formatDecimalValues(cboSalesInvoiceItemPrice.selectedItem["Price"]);
                                        }
                                    } else {
                                        document.getElementById("inpSalesInvoiceItemPrice").disabled = true;
                                        document.getElementById("inpSalesInvoiceItemPrice").value = formatDecimalValues(cboSalesInvoiceItemPrice.selectedItem["Price"]);
                                    }
                                } else {
                                    document.getElementById("inpSalesInvoiceItemPrice").value = formatDecimalValues(0);
                                }

                                computeAmount();
                            }
                        });

                        if (cboSalesInvoiceItemPrice.selectedValue != null) {
                            var isPriceValueFound = false;
                            for (var i = 0; i < itemPricesObservableArray.length; i++) {
                                if (itemPricesObservableArray[i]["Price"] === parseFloat(priceValue)) {
                                    isPriceValueFound = true;
                                    break;
                                }
                            }

                            if (!isPriceValueFound) {
                                var upperCaseVariablePrice = "VARIABLE";
                                var lowerCaseVariablePrice = "variable";
                                var standardCaseVariablePrice = "Variable";

                                var isPriceDescriptionFound = false;
                                var priceDescriptionName = "";
                                var priceDescription = "";

                                for (var i = 0; i < itemPricesObservableArray.length; i++) {
                                    if ((itemPricesObservableArray[i].PriceDescriptionName === upperCaseVariablePrice || itemPricesObservableArray[i].PriceDescriptionName === lowerCaseVariablePrice) || itemPricesObservableArray[i].PriceDescriptionName === standardCaseVariablePrice) {
                                        priceDescriptionName = itemPricesObservableArray[i].PriceDescriptionName;

                                        if (itemPricesObservableArray[i].Price === parseFloat(1)) {
                                            isPriceDescriptionFound = true;
                                            priceDescription = priceDescriptionName + " (" + formatDecimalValues(1) + ")";

                                            break;
                                        }
                                    }
                                }

                                if (!isPriceDescriptionFound) {
                                    priceDescription = priceDescriptionName;
                                }

                                if (isPriceDescriptionFound) {
                                    cboSalesInvoiceItemPrice.selectedValuePath = "PriceDescription";
                                } else {
                                    cboSalesInvoiceItemPrice.selectedValuePath = "PriceDescriptionName";
                                }

                                setTimeout(function () {
                                    cboSalesInvoiceItemPrice.selectedValue = priceDescription;

                                    if (parseFloat(priceValue) != 0) {
                                        document.getElementById("inpSalesInvoiceItemPrice").value = formatDecimalValues(priceValue);
                                    } else {
                                        document.getElementById("inpSalesInvoiceItemPrice").value = formatDecimalValues(cboSalesInvoiceItemPrice.selectedItem["Price"]);
                                    }
                                }, 50);

                                if (isPriceDescriptionFound) {
                                    if (!isLocked) {
                                        document.getElementById("inpSalesInvoiceItemPrice").disabled = false;
                                    }
                                } else {
                                    document.getElementById("inpSalesInvoiceItemPrice").disabled = true;
                                }
                            } else {
                                document.getElementById("inpSalesInvoiceItemPrice").disabled = true;
                                document.getElementById("inpSalesInvoiceItemPrice").value = formatDecimalValues(cboSalesInvoiceItemPrice.selectedItem["Price"]);
                            }
                        } else {
                            document.getElementById("inpSalesInvoiceItemPrice").value = formatDecimalValues(0);
                        }

                        createCboSalesInvoiceItemDiscount(discountId, VATId);
                    }
                });
            } else {
                cboSalesInvoiceItemPrice.dispose();
                cboSalesInvoiceItemPrice = new wijmo.input.ComboBox('#cboSalesInvoiceItemPrice', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: itemPricesObservableArray,
                    displayMemberPath: "PriceDescription",
                    selectedValuePath: "Price",
                    selectedValue: priceValue
                });

                document.getElementById("inpSalesInvoiceItemPrice").value = formatDecimalValues(0);

                createCboSalesInvoiceItemDiscount(discountId, VATId);
                $("#btnSalesInvoiceItemSave").prop("disabled", true);
            }
        }

        // ========================================
        // Create Sales Invoice Item Combo Discount
        // ========================================
        function createCboSalesInvoiceItemDiscount(discountId, VATId) {
            var discountsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoiceItem/dropdown/list/discount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            discountsObservableArray.push({
                                Id: results[i]["Id"],
                                Discount: results[i]["IsInclusive"] != false ? results[i]["Discount"] + " (Inclusive)" : results[i]["Discount"] + " (Not Inclusive)",
                                DiscountName: results[i]["Discount"],
                                DiscountRate: results[i]["DiscountRate"],
                                IsInclusive: results[i]["IsInclusive"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        if (!isLocked) {
                            disabled = false;
                        }
                    } else {
                        $("#btnSalesInvoiceItemSave").prop("disabled", true);
                    }

                    var defaultDiscount = discountId;
                    if (salesItemId == 0) {
                        defaultDiscount = "@ViewData["defaultSalesInvoiceDiscountId"]";
                    }

                    cboSalesInvoiceItemDiscount.dispose();
                    cboSalesInvoiceItemDiscount = new wijmo.input.ComboBox('#cboSalesInvoiceItemDiscount', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: discountsObservableArray,
                        displayMemberPath: "Discount",
                        selectedValuePath: "Id",
                        selectedValue: defaultDiscount,
                        onSelectedIndexChanged: function () {
                            document.getElementById("inpSalesInvoiceItemDiscountRate").value = formatDecimalValues(this.selectedItem["DiscountRate"]);
                            computeAmount();
                        }
                    });

                    if (salesItemId == 0) {
                        document.getElementById("inpSalesInvoiceItemDiscountRate").value = formatDecimalValues(0);
                        if (cboSalesInvoiceItemDiscount.selectedValue != null) {
                            document.getElementById("inpSalesInvoiceItemDiscountRate").value = formatDecimalValues(cboSalesInvoiceItemDiscount.selectedItem["DiscountRate"]);
                        }
                    }

                    createCboSalesInvoiceItemTaxType(VATId);
                }
            });
        }

        // ========================================
        // Create Sales Invoice Item Combo Tax Type
        // ========================================
        function createCboSalesInvoiceItemTaxType(VATId) {
            var taxTypesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoiceItem/dropdown/list/TAX',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (taxTypeListresults) {
                    if (taxTypeListresults.length > 0) {
                        for (i = 0; i < taxTypeListresults.length; i++) {
                            taxTypesObservableArray.push({
                                Id: taxTypeListresults[i]["Id"],
                                TaxType: taxTypeListresults[i]["TaxType"],
                                TaxRate: taxTypeListresults[i]["TaxRate"],
                                IsInclusive: taxTypeListresults[i]["IsInclusive"],
                            });
                        }
                    }

                    var disabled = true;
                    if (taxTypeListresults.length > 0) {
                        if (!isLocked) {
                            disabled = false;
                        }
                    } else {
                        $("#btnSalesInvoiceItemSave").prop("disabled", true);
                    }

                    var VATIdValue = VATId;
                    if (salesItemId == 0) {
                        if (cboSalesInvoiceItemDescription.selectedValue != null) {
                            VATIdValue = cboSalesInvoiceItemDescription.selectedItem["OutputTaxId"];
                        } else {
                            VATIdValue = 0;
                        }
                    }

                    cboSalesInvoiceItemVAT.dispose();
                    cboSalesInvoiceItemVAT = new wijmo.input.ComboBox('#cboSalesInvoiceItemVAT', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: taxTypesObservableArray,
                        displayMemberPath: "TaxType",
                        selectedValuePath: "Id",
                        selectedValue: VATIdValue,
                        onSelectedIndexChanged: function () {
                            document.getElementById("inpSalesInvoiceItemVATRate").value = formatDecimalValues(this.selectedItem["TaxRate"]);

                            var amount = document.getElementById('inpSalesInvoiceItemAmount').value.replace(/\,/g, '');
                            computeVAT(amount);
                        }
                    });

                    if (salesItemId == 0) {
                        document.getElementById("inpSalesInvoiceItemVATRate").value = formatDecimalValues(0);
                        if (cboSalesInvoiceItemVAT.selectedValue != null) {
                            document.getElementById("inpSalesInvoiceItemVATRate").value = formatDecimalValues(cboSalesInvoiceItemVAT.selectedItem["TaxRate"]);
                        }
                    }

                    computeAmount();

                    $("#salesInvoiceItemLoading").hide();
                    $("#salesInvoiceItemContent").show();
                }
            });
        }

        // ==============
        // Compute Amount
        // ==============
        function computeAmount() {
            var price = document.getElementById('inpSalesInvoiceItemPrice').value.replace(/\,/g, '');
            if (cboSalesInvoiceItemDiscount.selectedItem["Discount"] === "Senior Citizen Discount (Inclusive)" || cboSalesInvoiceItemDiscount.selectedItem["Discount"] === "PWD (Inclusive)") {
                price = price - ((price / 1.12) * .12);

                cboSalesInvoiceItemVAT.selectedValuePath = "TaxType";
                cboSalesInvoiceItemVAT.selectedValue = "VAT Exempt";

                cboSalesInvoiceItemVAT.selectedValuePath = "Id";
            }

            var discountRate = document.getElementById('inpSalesInvoiceItemDiscountRate').value.replace(/\,/g, '');
            var discountAmount = price * (discountRate / 100);

            document.getElementById('inpSalesInvoiceItemDiscountAmount').value = formatDecimalValues(discountAmount);

            var netPrice = price - discountAmount;
            var quantity = document.getElementById('inpSalesInvoiceItemQuantity').value.replace(/\,/g, '');

            var amount = netPrice * quantity;

            document.getElementById('inpSalesInvoiceItemNetPrice').value = formatDecimalValues(netPrice);
            document.getElementById('inpSalesInvoiceItemAmount').value = formatDecimalValues(amount);

            computeVAT(amount);
        }

        // ===========
        // Compute VAT
        // ===========
        function computeVAT(amount) {
            var VATPercentage = document.getElementById('inpSalesInvoiceItemVATRate').value.replace(/\,/g, '');
            if (cboSalesInvoiceItemVAT.selectedItem["IsInclusive"]) { VATAmount = amount / (1 + (VATPercentage / 100)) * (VATPercentage / 100); }
            else { VATAmount = amount * (VATPercentage / 100); }

            document.getElementById('inpSalesInvoiceItemVATAmount').value = formatDecimalValues(VATAmount);
        }

        $("#inpSalesInvoiceItemQuantity").keyup(function (e) { computeAmount(); });
        $("#inpSalesInvoiceItemPrice").keyup(function (e) { computeAmount(); });
        $("#inpSalesInvoiceItemDiscountRate").keyup(function (e) { computeAmount(); });
        $("#inpSalesInvoiceItemDiscountAmount").keyup(function (e) {
            var price = document.getElementById('inpSalesInvoiceItemPrice').value.replace(/\,/g, '');
            if (cboSalesInvoiceItemDiscount.selectedItem["Discount"] === "Senior Citizen Discount (Inclusive)" || cboSalesInvoiceItemDiscount.selectedItem["Discount"] === "PWD (Inclusive)") {
                price = price - ((price / 1.12) * .12);
            }

            var discountAmount = document.getElementById('inpSalesInvoiceItemDiscountAmount').value.replace(/\,/g, '');
            var discountRate = (discountAmount / price) * 100;

            document.getElementById('inpSalesInvoiceItemDiscountRate').value = formatDecimalValues(discountRate);

            var netPrice = price - discountAmount;
            var quantity = document.getElementById('inpSalesInvoiceItemQuantity').value.replace(/\,/g, '');

            var amount = netPrice * quantity;

            document.getElementById('inpSalesInvoiceItemNetPrice').value = formatDecimalValues(netPrice);
            document.getElementById('inpSalesInvoiceItemAmount').value = formatDecimalValues(amount);

            computeVAT(amount);
        });

        // =====================
        // Add Sale Invoice Item
        // =====================
        function btnSalesInvoiceItemAddOnclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#salesInvoiceItemLoading").show();
            document.getElementById("salesInvoiceItemLoading").innerHTML = 'Loading...';
            $("#salesInvoiceItemContent").hide();

            document.getElementById("salesInvoiceItemModalTitle").innerHTML = 'Add Sale Invoice Item';

            document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnSalesInvoiceItemSave").prop("disabled", true);
            $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            salesItemId = 0;
            createCboSalesInvoiceItem(0,0,0,0,0,0,0);
            document.getElementById('inpSalesInvoiceItemParticulars').value = "NA";
            document.getElementById('inpSalesInvoiceItemQuantity').value = formatDecimalValues(1);
        }

        // ======================
        // Edit Sale Invoice Item
        // ======================
        function btnSalesInvoiceItemEditOnclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#salesInvoiceItemLoading").show();
            document.getElementById("salesInvoiceItemLoading").innerHTML = 'Loading...';
            $("#salesInvoiceItemContent").hide();

            document.getElementById("salesInvoiceItemModalTitle").innerHTML = 'Edit Sale Invoice Item';

            document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnSalesInvoiceItemSave").prop("disabled", true);
            $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            salesInvoiceItemsCollectionView.editItem(salesInvoiceItemsCollectionView.currentItem);
            var item = salesInvoiceItemsCollectionView.currentEditItem;
            createCboSalesInvoiceItem(item.ItemId, item.ItemInventoryId, item.UnitId, item.Price, item.DiscountId, item.VATId);
            salesItemId = item.Id;
            document.getElementById('inpSalesInvoiceItemParticulars').value = item.Particulars;
            document.getElementById('inpSalesInvoiceItemQuantity').value = formatDecimalValues(item.Quantity);
            document.getElementById('inpSalesInvoiceItemPrice').value = formatDecimalValues(item.Price);
            document.getElementById('inpSalesInvoiceItemDiscountRate').value = formatDecimalValues(item.DiscountRate);
            document.getElementById('inpSalesInvoiceItemDiscountAmount').value = formatDecimalValues(item.DiscountAmount);
            document.getElementById('inpSalesInvoiceItemNetPrice').value = formatDecimalValues(item.NetPrice);
            document.getElementById('inpSalesInvoiceItemAmount').value = formatDecimalValues(item.Amount);
            document.getElementById('inpSalesInvoiceItemVATRate').value = formatDecimalValues(item.VATRate);
            document.getElementById('inpSalesInvoiceItemVATAmount').value = formatDecimalValues(item.VATAmount);
        }

        // ======================
        // Save Sale Invoice Item
        // ======================
        function btnSalesInvoiceItemSaveOnclick() {
            var saleItemObject = new Object();
            var SIId = getURLParameterValue('id');
            saleItemObject.SIId = SIId;
            saleItemObject.ItemId = cboSalesInvoiceItemDescription.selectedValue;
            saleItemObject.ItemInventoryId = cboSalesInvoiceItemInventoryCode.selectedValue;
            saleItemObject.Particulars = document.getElementById('inpSalesInvoiceItemParticulars').value;
            saleItemObject.UnitId = cboSalesInvoiceItemUnit.selectedValue;
            saleItemObject.Quantity = document.getElementById('inpSalesInvoiceItemQuantity').value;
            saleItemObject.Price = document.getElementById('inpSalesInvoiceItemPrice').value;
            saleItemObject.DiscountId = cboSalesInvoiceItemDiscount.selectedValue;
            saleItemObject.DiscountRate = document.getElementById('inpSalesInvoiceItemDiscountRate').value;
            saleItemObject.DiscountAmount = document.getElementById('inpSalesInvoiceItemDiscountAmount').value;
            saleItemObject.NetPrice = document.getElementById('inpSalesInvoiceItemNetPrice').value;
            saleItemObject.Amount = document.getElementById('inpSalesInvoiceItemAmount').value;
            saleItemObject.VATId = cboSalesInvoiceItemVAT.selectedValue;
            saleItemObject.VATPercentage = document.getElementById('inpSalesInvoiceItemVATRate').value;
            saleItemObject.VATAmount = document.getElementById('inpSalesInvoiceItemVATAmount').value;
            var saleItemData = JSON.stringify(saleItemObject);

            var isValid = true;
            $('.requiredSaleItem').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Saving...";
                $("#btnSalesInvoiceItemSave").prop("disabled", true);
                $("#btnSalesInvoiceItemCloseModal").prop("disabled", true);

                if (salesItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/salesInvoiceItem/add/' + SIId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: saleItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Succesful");
                                $('#saleItemsEdit').modal('hide');
                                refreshSalesInvoiceItemFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnSalesInvoiceItemSave").prop("disabled", false);
                                $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnSalesInvoiceItemSave").prop("disabled", false);
                                $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnSalesInvoiceItemSave").prop("disabled", false);
                                $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/salesInvoiceItem/update/' + salesItemId + '/' + SIId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: saleItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#saleItemsEdit').modal('hide');
                                refreshSalesInvoiceItemFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnSalesInvoiceItemSave").prop("disabled", false);
                                $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnSalesInvoiceItemSave").prop("disabled", false);
                                $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnSalesInvoiceItemSave").prop("disabled", false);
                                $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ========================
        // Delete Sale Invoice Item
        // ========================
        function btnSalesInvoiceItemDeleteOnclick() {
            $('#salesInvoiceItemDeleteConfirmModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnSalelsInvoiceItemDeleteConfirm').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#btnSalelsInvoiceItemDeleteConfirm").prop("disabled", false);
            $("#btnSalelsInvoiceItemDeleteConfirmCloseButton").prop("disabled", false);
        }

        // ================================
        // Delete Confirm Sale Invoice Item
        // ================================
        function btnSalelsInvoiceItemDeleteConfirmOnclick() {
            document.getElementById('btnSalelsInvoiceItemDeleteConfirm').innerHTML = "<i class='fa fa-trash'></i> Deleting...";
            $("#btnSalelsInvoiceItemDeleteConfirm").prop("disabled", true);
            $("#btnSalelsInvoiceItemDeleteConfirmCloseButton").prop("disabled", true);

            salesInvoiceItemsCollectionView.editItem(salesInvoiceItemsCollectionView.currentItem);
            var id = salesInvoiceItemsCollectionView.currentEditItem.Id;
            var SIId = salesInvoiceItemsCollectionView.currentEditItem.SIId;

            $.ajax({
                url: '/api/salesInvoiceItem/delete/' + id + '/' + SIId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#salesInvoiceItemDeleteConfirmModal').modal('hide');
                        refreshSalesInvoiceItemFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnSalelsInvoiceItemDeleteConfirm').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnSalelsInvoiceItemDeleteConfirm").prop("disabled", false);
                        $("#btnSalelsInvoiceItemDeleteConfirmCloseButton").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnSalelsInvoiceItemDeleteConfirm').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnSalelsInvoiceItemDeleteConfirm").prop("disabled", false);
                        $("#btnSalelsInvoiceItemDeleteConfirmCloseButton").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnSalelsInvoiceItemDeleteConfirm').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnSalelsInvoiceItemDeleteConfirm").prop("disabled", false);
                        $("#btnSalelsInvoiceItemDeleteConfirmCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ==========================
        // Get Inventory Entries Data
        // ==========================
        function getInventoryEntriesData() {
            var SIId = getURLParameterValue('id');
            var inventoryObservableArray = new wijmo.collections.ObservableArray;

            $.ajax({
                url: '/api/inventory/salesInvoice/list/' + SIId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var InventoryDateResult = new Date(results[i]["InventoryDate"])
                            var InventoryDate = ('0' + (InventoryDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + InventoryDateResult.getDate()).slice(-2) + '-' + InventoryDateResult.getFullYear();

                            inventoryObservableArray.push({
                                Id: results[i]["Id"],
                                InventoryDate: InventoryDate,
                                Branch: results[i]["Branch"],
                                Article: results[i]["Article"],
                                Particulars: results[i]["Particulars"],
                                ArticleInventoryCode: results[i]["ArticleInventoryCode"],
                                Quantity: results[i]["Quantity"],
                                QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                ArticleUnit: results[i]["ArticleUnit"],
                                Amount: results[i]["Amount"],
                                AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return inventoryObservableArray;
        }

        // ==================================
        // Create Inventory Entries Flex Grid
        // ==================================
        function createInventoryEntriesFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntriesData());
            inventoryCollectionView.canFilter = true;
            inventoryCollectionView.pageSize = cboInventoryEntriesShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpInventoryEntriesSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryCollectionView.refresh();
            });

            inventoryCollectionView.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleUnit.toLowerCase().indexOf(filterText) > -1);
            }

            inventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });

            inventoryEntriesFlexGrid = new wijmo.grid.FlexGrid('#inventoryEntriesFlexGrid');
            inventoryEntriesFlexGrid.initialize({
                columns: [
                    {
                        "header": "Date",
                        "binding": "InventoryDate",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.7*",
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "ArticleInventoryCode",
                        "allowSorting": true,
                        "width": "1.3*",
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*",
                    },
                    {
                        "header": "Unit",
                        "binding": "ArticleUnit",
                        "allowSorting": true,
                        "width": "1*",
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*",
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntriesFlexGrid.trackChanges = true;

            updateNavigateButtonsInventoryEntry();

            btnInventoryEntriesMoveToFirstPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToFirstPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnInventoryEntriesMoveToPreviousPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToPreviousPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnInventoryEntriesMoveToNextPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToNextPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnInventoryEntriesMoveToLastPageGrid.addEventListener('click', function () {
                inventoryCollectionView.moveToLastPage();
                updateNavigateButtonsInventoryEntry();
            });
        }

        // ===========================================
        // Update Enventory Entries Navigation Buttons
        // ===========================================
        function updateNavigateButtonsInventoryEntry() {
            if (inventoryCollectionView.pageSize <= 0) {
                document.getElementById('inventoryEntriesNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('inventoryEntriesNavigationPageGrid').style.display = 'block';
            if (inventoryCollectionView.pageIndex === 0) {
                btnInventoryEntriesMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToNextPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToLastPageGrid.removeAttribute('disabled');
            } else if (inventoryCollectionView.pageIndex === (inventoryCollectionView.pageCount - 1)) {
                btnInventoryEntriesMoveToFirstPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnInventoryEntriesMoveToFirstPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToNextPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnInventoryEntriesCurrentPageGrid.innerHTML = (inventoryCollectionView.pageIndex + 1) + ' / ' + inventoryCollectionView.pageCount;
        }

        // ===================================
        // Refresh Enventory Entries Flex Grid
        // ===================================
        function refreshInventoryEntriesFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntriesData());
            inventoryCollectionView.canFilter = true;
            inventoryCollectionView.pageSize = cboInventoryEntriesShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpInventoryEntriesSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryCollectionView.refresh();
            });

            inventoryCollectionView.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleUnit.toLowerCase().indexOf(filterText) > -1);
            }

            inventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });

            inventoryEntriesFlexGrid.itemsSource = inventoryCollectionView;
            inventoryEntriesFlexGrid.trackChanges = true;
        }

        // ================
        // Get Journal Data
        // ================
        function getJournalData() {
            var journalsObservableArray = new wijmo.collections.ObservableArray;
            var SIId = getURLParameterValue('id');

            $.ajax({
                url: '/api/jounal/salesInvoice/list/' + SIId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    var totalDebitAmount = 0;
                    var totalCreditAmount = 0;

                    var variance = 0;

                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var journalDateResult = new Date(results[i]["JournalDate"])
                            var journalDate = ('0' + (journalDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + journalDateResult.getDate()).slice(-2) + '-' + journalDateResult.getFullYear();

                            journalsObservableArray.push({
                                Branch: results[i]["Branch"],
                                JournalDate: journalDate,
                                AccountCode: results[i]["AccountCode"],
                                Account: results[i]["Account"],
                                Article: results[i]["Article"],
                                DebitAmountDisplay: parseFloat(results[i]["DebitAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                CreditAmountDisplay: parseFloat(results[i]["CreditAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                            });

                            var debit = parseFloat(Math.round(results[i]["DebitAmount"] * 100) / 100);
                            var credit = parseFloat(Math.round(results[i]["CreditAmount"] * 100) / 100);

                            totalDebitAmount += debit;
                            totalCreditAmount += credit;
                        }

                        variance = totalDebitAmount - totalCreditAmount;
                    }

                    document.getElementById('inpJournalTotalDebit').value = parseFloat(Math.round(totalDebitAmount * 100) / 100).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById('inpJournalTotalCredit').value = parseFloat(Math.round(totalCreditAmount * 100) / 100).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById('inpJournalVariance').value = parseFloat(Math.round(variance * 100) / 100).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

                    $("#journalLoading").hide();
                    $("#journalContent").show();
                }
            });

            return journalsObservableArray;
        }

        // ===============
        // Display Journal
        // ===============
        function btnSalesInvoiceJournalOnclick() {
            $('#journalEntryModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#journalLoading").show();
            document.getElementById("journalLoading").innerHTML = 'Loading...';
            $("#journalContent").hide();

            setTimeout(function () {
                createJournalFlexGrid();
            }, 500)
        }

        // =================
        // Journal FlexGrid
        // ================
        function createJournalFlexGrid() {
            journalCollectionView = new wijmo.collections.CollectionView(getJournalData());

            journalFlexGrid.dispose();
            journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');
            journalFlexGrid.initialize({
                columns: [
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "2.5*"
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": "1.5*"
                    },
                    {
                        "header": "Code",
                        "binding": "AccountCode",
                        "allowSorting": true,
                        "width": "1.8*"
                    },
                    {
                        "header": "Account",
                        "binding": "Account",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Article",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*",
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalFlexGrid.trackChanges = true;
        }

        // ===============
        // Show Rows Table
        // ===============
        function createCboShowRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboSalesInvoiceItemShowNumberOfRows.dispose();
            cboSalesInvoiceItemShowNumberOfRows = new wijmo.input.ComboBox('#cboSalesInvoiceItemShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboSalesInvoiceItemShowNumberOfRows.selectedValue;
                        salesInvoiceItemsCollectionView.pageSize = parseInt(numberOfRows);
                        salesInvoiceItemsCollectionView.refresh();
                        salesInvoiceItemFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });

            cboInventoryEntriesShowNumberOfRows.dispose();
            cboInventoryEntriesShowNumberOfRows = new wijmo.input.ComboBox('#cboInventoryEntriesShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboInventoryEntriesShowNumberOfRows.selectedValue;
                        inventoryCollectionView.pageSize = parseInt(numberOfRows);
                        inventoryCollectionView.refresh();
                        inventoryEntriesFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });
        }

        // ====
        // TABS
        // ====
        $('#salesInvoiceItemTab').click(function () {
            NProgress.start();

            $('#salesInvoiceItemTabHref').show();
            $('#salesInvoiceInventoryEntriesTabHref').hide();

            refreshSalesInvoiceItemFlexGrid();
        });
        $('#salesInvoiceInventoryEntriesTab').click(function () {
            NProgress.start();

            $('#salesInvoiceItemTabHref').hide();
            $('#salesInvoiceInventoryEntriesTabHref').show();

            refreshInventoryEntriesFlexGrid();
        });

        // ===============================
        // Get Item Query: Inventory Items
        // ===============================
        function getItemQueryInventoryItems() {
            var inventoryItemsObservableArray = new wijmo.collections.ObservableArray();

            $.ajax({
                url: '/api/salesInvoiceItem/popUp/list/itemQuery/inventoryItems',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            inventoryItemsObservableArray.push({
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='btnItemQueryInventoryItemsPickOnclick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                                Id: results[i]["Id"],
                                InventoryCode: results[i]["InventoryCode"],
                                ArticleId: results[i]["ArticleId"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                ManualArticleOldCode: results[i]["ManualArticleOldCode"],
                                Article: results[i]["Article"],
                                Price: results[i]["Price"],
                                PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Quantity: results[i]["Quantity"],
                                QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Cost: results[i]["Cost"],
                                Amount: results[i]["Amount"],
                                Particulars: results[i]["Particulars"],
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"]
                            });
                        }
                    }

                    $("#itemQueryInventoryItemsLoading").hide();
                    $("#itemQueryInventoryItemsContent").show();
                }
            });

            return inventoryItemsObservableArray;
        }

        // ============================================
        // Create Item Query Flex Grid: Inventory Items
        // ============================================
        function createItemQueryInventoryItemsFlexGrid() {
            itemQueryInventoryItemsCollectionView = new wijmo.collections.CollectionView(getItemQueryInventoryItems());
            itemQueryInventoryItemsCollectionView.canFilter = true;
            itemQueryInventoryItemsCollectionView.pageSize = 10;

            var filterText = '';
            $('#inpItemQueryInventoryItemsFilterSearch').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryInventoryItemsCollectionView.refresh();
            });

            itemQueryInventoryItemsCollectionView.filter = function (item) {
                return !filterText || (item.InventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            itemQueryInventoryItemsCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateItemQueryInventoryItemsNavigationButtons();
            });

            itemQueryInventoryItemsFlexGrid.dispose();
            itemQueryInventoryItemsFlexGrid = new wijmo.grid.FlexGrid('#itemQueryInventoryItemsFlexGrid');
            itemQueryInventoryItemsFlexGrid.initialize({
                columns: [
                    {
                        "header": "Inventory Code",
                        "binding": "InventoryCode",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Barcode",
                        "binding": "ManualArticleCode",
                        "allowSorting": true,
                        "width": "2*",
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ManualArticleOldCode",
                        "allowSorting": true,
                        "width": "2*",
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "3*",
                    },
                    {
                        "header": "Price",
                        "binding": "PriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*",
                    },
                    {
                        "header": "On Hand Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*",
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": "1*",
                    },
                    {
                        "header": "Pick",
                        "binding": "Pick",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryInventoryItemsCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryInventoryItemsFlexGrid.trackChanges = true;

            if (!isBtnItemQueryInventoryItemsClicked) {
                updateItemQueryInventoryItemsNavigationButtons();

                btnItemQueryInventoryItemsMoveToFirstPageGrid.addEventListener('click', function () {
                    itemQueryInventoryItemsCollectionView.moveToFirstPage();
                    updateItemQueryInventoryItemsNavigationButtons();
                });

                btnItemQueryInventoryItemsMoveToPreviousPageGrid.addEventListener('click', function () {
                    itemQueryInventoryItemsCollectionView.moveToPreviousPage();
                    updateItemQueryInventoryItemsNavigationButtons();
                });

                btnItemQueryInventoryItemsMoveToNextPageGrid.addEventListener('click', function () {
                    itemQueryInventoryItemsCollectionView.moveToNextPage();
                    updateItemQueryInventoryItemsNavigationButtons();
                });

                btnItemQueryInventoryItemsMoveToLastPageGrid.addEventListener('click', function () {
                    itemQueryInventoryItemsCollectionView.moveToLastPage();
                    updateItemQueryInventoryItemsNavigationButtons();
                });

                isBtnItemQueryInventoryItemsClicked = true;
            }
        }

        // ====================================================
        // Update Item Query Inventory Items Navigation Buttons
        // ====================================================
        function updateItemQueryInventoryItemsNavigationButtons() {
            if (itemQueryInventoryItemsCollectionView.pageSize <= 0) {
                document.getElementById('itemQueryInventoryItemsNaviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('itemQueryInventoryItemsNaviagtionPageGrid').style.display = 'block';
            if (itemQueryInventoryItemsCollectionView.pageIndex === 0) {
                btnItemQueryInventoryItemsMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryInventoryItemsMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryInventoryItemsMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryInventoryItemsMoveToLastPageGrid.removeAttribute('disabled');
            } else if (itemQueryInventoryItemsCollectionView.pageIndex === (itemQueryInventoryItemsCollectionView.pageCount - 1)) {
                btnItemQueryInventoryItemsMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryInventoryItemsMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryInventoryItemsMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryInventoryItemsMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnItemQueryInventoryItemsMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryInventoryItemsMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryInventoryItemsMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryInventoryItemsMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnItemQueryInventoryItemsCurrentPageGrid.innerHTML = (itemQueryInventoryItemsCollectionView.pageIndex + 1) + ' / ' + itemQueryInventoryItemsCollectionView.pageCount;
        }

        // ==============================
        // Pick Item Query Inventory Item
        // ==============================
        function btnItemQueryInventoryItemsPickOnclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#salesInvoiceItemLoading").show();
            document.getElementById("salesInvoiceItemLoading").innerHTML = 'Loading...';
            $("#salesInvoiceItemContent").hide();

            document.getElementById("salesInvoiceItemModalTitle").innerHTML = 'Add Sale Invoice Item';

            document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnSalesInvoiceItemSave").prop("disabled", true);
            $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemQueryInventoryItemsCollectionView.editItem(itemQueryInventoryItemsCollectionView.currentItem);
            var item = itemQueryInventoryItemsCollectionView.currentEditItem;
            salesItemId = 0;
            createCboSalesInvoiceItem(item.ArticleId, item.Id, 0, 0, 0, 0);
            document.getElementById('inpSalesInvoiceItemParticulars').value = item.Particulars;
            document.getElementById('inpSalesInvoiceItemQuantity').value = formatDecimalValues(1);
        }

        // ===================================
        // Get Item Query: Non Inventory Items
        // ===================================
        function getItemQueryNonInventoryItems() {
            var nonInventoryItemsObservableArray = new wijmo.collections.ObservableArray;

            $.ajax({
                url: '/api/salesInvoiceItem/popUp/list/itemQuery/nonInventoryItems',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            nonInventoryItemsObservableArray.push({
                                Id: results[i]["Id"],
                                ArticleCode: results[i]["ArticleCode"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                ManualArticleOldCode: results[i]["ManualArticleOldCode"],
                                Article: results[i]["Article"],
                                Price: results[i]["Price"],
                                PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Particulars: results[i]["Particulars"],
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='btnItemQueryNonInventoryItemsPickOnclick()'><i class='fa fa-hand-o-right'></i> Pick</button>"
                            });
                        }
                    }

                    $("#itemQueryNonInventoryItemsLoading").hide();
                    $("#itemQueryNonInventoryItemsContent").show();
                }
            });

            return nonInventoryItemsObservableArray;
        }

        // ================================================
        // Create Item Query Flex Grid: Non Inventory Items
        // ================================================
        function createItemQueryNonInventoryItemsFlexGrid() {
            itemQueryNonInventoryItemsCollectionView = new wijmo.collections.CollectionView(getItemQueryNonInventoryItems());
            itemQueryNonInventoryItemsCollectionView.canFilter = true;
            itemQueryNonInventoryItemsCollectionView.pageSize = 10;

            var filterText = '';
            $('#inpItemQueryNonInventoryItemsFilterSearch').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryNonInventoryItemsCollectionView.refresh();
            });

            itemQueryNonInventoryItemsCollectionView.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            itemQueryNonInventoryItemsCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateItemQueryNonInventoryItemsNavigationButtons();
            });

            itemQueryNonInventoryItemsFlexGrid.dispose();
            itemQueryNonInventoryItemsFlexGrid = new wijmo.grid.FlexGrid('#itemQueryNonInventoryItemsFlexGrid');
            itemQueryNonInventoryItemsFlexGrid.initialize({
                columns: [
                    {
                        "header": "Barcode",
                        "binding": "ManualArticleCode",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ManualArticleOldCode",
                        "allowSorting": true,
                        "width": "2*",
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Price",
                        "binding": "PriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    },
                    {
                        "header": "Pick",
                        "binding": "Pick",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryNonInventoryItemsCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryNonInventoryItemsFlexGrid.trackChanges = true;

            if (!isBtnItemQueryNonInventoryItemsClicked) {
                updateItemQueryNonInventoryItemsNavigationButtons();

                btnItemQueryNonInventoryItemsMoveToFirstPageGrid.addEventListener('click', function () {
                    itemQueryNonInventoryItemsCollectionView.moveToFirstPage();
                    updateItemQueryNonInventoryItemsNavigationButtons();
                });

                btnItemQueryNonInventoryItemsMoveToPreviousPageGrid.addEventListener('click', function () {
                    itemQueryNonInventoryItemsCollectionView.moveToPreviousPage();
                    updateItemQueryNonInventoryItemsNavigationButtons();
                });

                btnItemQueryNonInventoryItemsMoveToNextPageGrid.addEventListener('click', function () {
                    itemQueryNonInventoryItemsCollectionView.moveToNextPage();
                    updateItemQueryNonInventoryItemsNavigationButtons();
                });

                btnItemQueryNonInventoryItemsMoveToLastPageGrid.addEventListener('click', function () {
                    itemQueryNonInventoryItemsCollectionView.moveToLastPage();
                    updateItemQueryNonInventoryItemsNavigationButtons();
                });

                isBtnItemQueryNonInventoryItemsClicked = true;
            }
        }

        // ========================================================
        // Update Item Query Non Inventory Items Navigation Buttons
        // ========================================================
        function updateItemQueryNonInventoryItemsNavigationButtons() {
            if (itemQueryNonInventoryItemsCollectionView.pageSize <= 0) {
                document.getElementById('itemQueryNonInventoryItemsNaviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('itemQueryNonInventoryItemsNaviagtionPageGrid').style.display = 'block';
            if (itemQueryNonInventoryItemsCollectionView.pageIndex === 0) {
                btnItemQueryNonInventoryItemsMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryNonInventoryItemsMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryNonInventoryItemsMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryNonInventoryItemsMoveToLastPageGrid.removeAttribute('disabled');
            } else if (itemQueryNonInventoryItemsCollectionView.pageIndex === (itemQueryNonInventoryItemsCollectionView.pageCount - 1)) {
                btnItemQueryNonInventoryItemsMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryNonInventoryItemsMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryNonInventoryItemsMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryNonInventoryItemsMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnItemQueryNonInventoryItemsMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryNonInventoryItemsMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryNonInventoryItemsMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryNonInventoryItemsMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnItemQueryNonInventoryItemsCurrentPageGrid.innerHTML = (itemQueryNonInventoryItemsCollectionView.pageIndex + 1) + ' / ' + itemQueryNonInventoryItemsCollectionView.pageCount;
        }

        // ==================================
        // Pick Item Query Non Inventory Item
        // ==================================
        function btnItemQueryNonInventoryItemsPickOnclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#salesInvoiceItemLoading").show();
            document.getElementById("salesInvoiceItemLoading").innerHTML = 'Loading...';
            $("#salesInvoiceItemContent").hide();

            document.getElementById("salesInvoiceItemModalTitle").innerHTML = 'Add Sale Invoice Item';

            document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnSalesInvoiceItemSave").prop("disabled", true);
            $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemQueryNonInventoryItemsCollectionView.editItem(itemQueryNonInventoryItemsCollectionView.currentItem);
            var item = itemQueryNonInventoryItemsCollectionView.currentEditItem;
            salesItemId = 0;
            createCboSalesInvoiceItem(item.Id, null, 0, 0, 0, 0);
            document.getElementById('inpSalesInvoiceItemParticulars').value = item.Particulars;
            document.getElementById('inpSalesInvoiceItemQuantity').value = formatDecimalValues(1);
        }

        // =============================
        // Get Item Query: Package Items
        // =============================
        function getItemQueryPackageItems() {
            var packageItemsObservableArray = new wijmo.collections.ObservableArray;

            $.ajax({
                url: '/api/salesInvoiceItem/popUp/list/itemQuery/packageItems',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            packageItemsObservableArray.push({
                                Id: results[i]["Id"],
                                ArticleCode: results[i]["ArticleCode"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                ManualArticleOldCode: results[i]["ManualArticleOldCode"],
                                Article: results[i]["Article"],
                                Price: results[i]["Price"],
                                PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Particulars: results[i]["Particulars"],
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='btnItemQueryPackageItemsPickOnclick()'><i class='fa fa-hand-o-right'></i> Pick</button>"
                            });
                        }
                    }

                    $("#itemQueryPackageItemsLoading").hide();
                    $("#itemQueryPackageItemsContent").show();
                }
            });

            return packageItemsObservableArray;
        }

        // ==========================================
        // Create Item Query Flex Grid: Package Items
        // ==========================================
        function createItemQueryPackageItemsFlexGrid() {
            itemQueryPackageItemsCollectionView = new wijmo.collections.CollectionView(getItemQueryPackageItems());
            itemQueryPackageItemsCollectionView.canFilter = true;
            itemQueryPackageItemsCollectionView.pageSize = 10;

            var filterText = '';
            $('#inpItemQueryPackageItemsFilterSearch').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryPackageItemsCollectionView.refresh();
            });

            itemQueryPackageItemsCollectionView.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            itemQueryPackageItemsCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateItemQueryPackageItemsNavigationButtons();
            });

            itemQueryPackageItemsFlexGrid.dispose();
            itemQueryPackageItemsFlexGrid = new wijmo.grid.FlexGrid('#itemQueryPackageItemsFlexGrid');
            itemQueryPackageItemsFlexGrid.initialize({
                columns: [
                    {
                        "header": "Barcode",
                        "binding": "ManualArticleCode",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ManualArticleOldCode",
                        "allowSorting": true,
                        "width": "2*",
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Price",
                        "binding": "PriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    },
                    {
                        "header": "Pick",
                        "binding": "Pick",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryPackageItemsCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryPackageItemsFlexGrid.trackChanges = true;

            if (!isBtnItemQueryPackageItemsClicked) {
                updateItemQueryPackageItemsNavigationButtons();

                btnItemQueryPackageItemsMoveToFirstPageGrid.addEventListener('click', function () {
                    itemQueryPackageItemsCollectionView.moveToFirstPage();
                    updateItemQueryPackageItemsNavigationButtons();
                });

                btnItemQueryPackageItemsMoveToPreviousPageGrid.addEventListener('click', function () {
                    itemQueryPackageItemsCollectionView.moveToPreviousPage();
                    updateItemQueryPackageItemsNavigationButtons();
                });

                btnItemQueryPackageItemsMoveToNextPageGrid.addEventListener('click', function () {
                    itemQueryPackageItemsCollectionView.moveToNextPage();
                    updateItemQueryPackageItemsNavigationButtons();
                });

                btnItemQueryPackageItemsMoveToLastPageGrid.addEventListener('click', function () {
                    itemQueryPackageItemsCollectionView.moveToLastPage();
                    updateItemQueryPackageItemsNavigationButtons();
                });

                isBtnItemQueryPackageItemsClicked = true;
            }
        }

        // ==================================================
        // Update Item Query Package Items Navigation Buttons
        // ==================================================
        function updateItemQueryPackageItemsNavigationButtons() {
            if (itemQueryNonInventoryItemsCollectionView.pageSize <= 0) {
                document.getElementById('itemQueryPackageItemsNaviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('itemQueryPackageItemsNaviagtionPageGrid').style.display = 'block';
            if (itemQueryNonInventoryItemsCollectionView.pageIndex === 0) {
                btnItemQueryPackageItemsMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryPackageItemsMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryPackageItemsMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryPackageItemsMoveToLastPageGrid.removeAttribute('disabled');
            } else if (itemQueryNonInventoryItemsCollectionView.pageIndex === (itemQueryNonInventoryItemsCollectionView.pageCount - 1)) {
                btnItemQueryPackageItemsMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryPackageItemsMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryPackageItemsMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryPackageItemsMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnItemQueryPackageItemsMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryPackageItemsMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryPackageItemsMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryPackageItemsMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnItemQueryPackageItemsCurrentPageGrid.innerHTML = (itemQueryNonInventoryItemsCollectionView.pageIndex + 1) + ' / ' + itemQueryNonInventoryItemsCollectionView.pageCount;
        }

        // ============================
        // Pick Item Query Package Item
        // ============================
        function btnItemQueryPackageItemsPickOnclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#salesInvoiceItemLoading").show();
            document.getElementById("salesInvoiceItemLoading").innerHTML = 'Loading...';
            $("#salesInvoiceItemContent").hide();

            document.getElementById("salesInvoiceItemModalTitle").innerHTML = 'Add Sale Invoice Item';

            document.getElementById('btnSalesInvoiceItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnSalesInvoiceItemSave").prop("disabled", true);
            $("#btnSalesInvoiceItemCloseModal").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemQueryPackageItemsCollectionView.editItem(itemQueryPackageItemsCollectionView.currentItem);
            var item = itemQueryPackageItemsCollectionView.currentEditItem;
            salesItemId = 0;
            createCboSalesInvoiceItem(item.Id, null, 0, 0, 0, 0);
            document.getElementById('inpSalesInvoiceItemParticulars').value = "NA";
            document.getElementById('inpSalesInvoiceItemQuantity').value = formatDecimalValues(1);
        }

        // =================
        // Launch Item Query
        // =================
        function btnSalesInvoiceItemItemQueryOnclick() {
            $('#itemQueryModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#itemQueryInventoryItemsLoading").show();
            document.getElementById("itemQueryInventoryItemsLoading").innerHTML = 'Loading...';
            $("#itemQueryInventoryItemsContent").hide();

            $("#itemQueryNonInventoryItemsLoading").show();
            document.getElementById("itemQueryNonInventoryItemsLoading").innerHTML = 'Loading...';
            $("#itemQueryNonInventoryItemsContent").hide();

            $("#itemQueryPackageItemsLoading").show();
            document.getElementById("itemQueryPackageItemsLoading").innerHTML = 'Loading...';
            $("#itemQueryPackageItemsContent").hide();

            setTimeout(function () {
                createItemQueryInventoryItemsFlexGrid();
                createItemQueryNonInventoryItemsFlexGrid();
                createItemQueryPackageItemsFlexGrid();
            }, 500);
        }

        // ===============
        // Item Query Tabs
        // ===============
        $('#itemQueryInventoryItemsTab').click(function () {
            $("#itemQueryInventoryItemsLoading").show();
            document.getElementById("itemQueryInventoryItemsLoading").innerHTML = 'Loading...';
            $("#itemQueryInventoryItemsContent").hide();

            setTimeout(function () {
                createItemQueryInventoryItemsFlexGrid();
            }, 500);
        });
        $('#itemQueryNonInventoryItemsTab').click(function () {
            $("#itemQueryNonInventoryItemsLoading").show();
            document.getElementById("itemQueryNonInventoryItemsLoading").innerHTML = 'Loading...';
            $("#itemQueryNonInventoryItemsContent").hide();

            setTimeout(function () {
                createItemQueryNonInventoryItemsFlexGrid();
            }, 500);
        });
        $('#itemQueryPackageItemsTab').click(function () {
            $("#itemQueryPackageItemsLoading").show();
            document.getElementById("itemQueryPackageItemsLoading").innerHTML = 'Loading...';
            $("#itemQueryPackageItemsContent").hide();

            setTimeout(function () {
                createItemQueryPackageItemsFlexGrid();
            }, 500);
        });

        // ================
        // On Load Function
        // ================
        $(document).ready(function () {
            createCboSalesInvoiceDetailBranch();

            $('#Item').show();
            $('#InventoryEntry').hide();

            $(document).on('show.bs.modal', '.modal', function (event) {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () {
                    $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
                }, 0);
            });

            $(document).on('hidden.bs.modal', '.modal', function () {
                $('.modal:visible').length && $(document.body).addClass('modal-open');
            });
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>