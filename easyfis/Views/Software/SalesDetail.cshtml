@{
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Sales Invoice Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Sales Invoice Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-12" align="right">
                                <button class="btn btn-primary " id="cmdSalesJournal" onclick="btnJournalDetail_OnClick()"><i class="fa fa-book"></i> Journal</button>
                                <button class="btn btn-primary " id="cmdSalesSaveLock" onclick="btnSaveLockSales_OnClick()"><i class="fa fa-lock"></i> Lock</button>
                                <button class="btn btn-primary " id="cmdSalesEdit" onclick="btnSalesEdit_OnClick()"><i class="fa fa-unlock"></i> Unlock</button>
                                <button class="btn btn-primary " id="cmdSalesPrint" onclick="btnSalesPrint_OnClick()"><i class="fa fa-print"></i> Print</button>
                                <button onclick="window.location.href = '/Software/Sales'" class="btn btn-danger " id="cmdSalesClose"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Branch</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSIBranch"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SI Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSales" id="SI_SINumber" disabled>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SI Date</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSIDate"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Doc Reference</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control  requiredSales" id="SI_DocReference" placeholder="Document Reference">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Customer</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSICustomer"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Term</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSITerm"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Remarks</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredSales" id="SI_SIRemarks" placeholder="Remarks"></textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Manual SI Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSales" id="SI_ManualSINumber" placeholder="Manual SI Number">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Sold by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSISoldBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Prepared by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSIPreparedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Checked by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSICheckedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Approved by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSIApprovedBy"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#Items" id="itemTabId">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#InventoryEntries" id="inventoryEntryTabId">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="Items" class="tab-pane fade in active">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-lg-12" align="right">
                                        <button class="btn btn-primary " id="btnAddSaleItem" onclick="cmdAddSaleItem_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                        <button class="btn btn-primary " id="btnItemQuery" onclick="cmdItemQuery_OnClick()"><i class="fa fa-search-plus"></i> Item Query</button>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div id="ItemGrid"></div>
                            </div>
                        </div>
                    </div>
                    <div id="InventoryEntries" class="tab-pane fade in" style="margin-bottom: 15px;">
                        <div id="inventoryFlexGrid"></div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!-- Sales Items Detail -->
    <div class="modal fade" id="saleItemsEdit" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="saleItemsModalLabel">Sale Invoice Item</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingModalItem"></span>
                    </center>
                    <div id="salesLineDetailForm">
                        <ul class="nav nav-tabs" role="tablist" id="myTab">
                            <li role="presentation" class="active"><a data-toggle="tab" href="#SIItem" id="SIItemTabId">Items</a></li>
                            <li role="presentation"><a data-toggle="tab" href="#SITax" id="SITaxTabId">Tax</a></li>
                        </ul>
                        <br />
                        <div class="tab-content">
                            <div id="SIItem" class="tab-pane fade in active">
                                <dl class="dl-horizontal">
                                    <dt>Item</dt>
                                    <dd>
                                        <table style="width: 100%" border="0">
                                            <tr>
                                                <td style="width: 30%">
                                                    <div class="comboBox-wide" id="cboItemCode"></div>
                                                </td>
                                                <td style="width: 1%"></td>
                                                <td style="width: 69%">
                                                    <div class="comboBox-wide" id="cboItemDescription"></div>
                                                </td>
                                            </tr>
                                        </table>
                                    </dd>
                                    <dt>Particulars</dt>
                                    <dd><textarea rows="5" class="form-control textarea-custom requiredSaleItem" id="saleItem_Particulars"></textarea></dd>
                                    <dt>Inventory Code</dt>
                                    <dd><div class="comboBox-wide" id="cboInventoryCode"></div></dd>
                                    <dt>Quantity</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_Quantity" placeholder="0.00" /></dd>
                                    <dt>Unit</dt>
                                    <dd><div class="comboBox-wide" id="cboItemUnit"></div></dd>
                                    <dt>Price</dt>
                                    <dd>
                                        <table style="width: 100%" border="0">
                                            <tr>
                                                <td style="width: 50%">
                                                    <div class="comboBox-wide" id="cboItemPrice"></div>
                                                </td>
                                                <td style="width: 1%"></td>
                                                <td style="width: 49%">
                                                    <input type="text" class="form-control numberField requiredSaleItem" id="saleItem_Price" placeholder="0.00" disabled />
                                                </td>
                                            </tr>
                                        </table>
                                    </dd>
                                    <dt>Discount</dt>
                                    <dd><div class="comboBox-wide" id="cboItemDiscount"></div></dd>
                                    <dt>Discount Rate</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_DiscountRate" placeholder="0.00" /></dd>
                                    <dt>Discount Amount</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_DiscountAmount" placeholder="0.00" /></dd>
                                    <dt>Net Price</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_NetPrice" placeholder="0.00" disabled /></dd>
                                    <dt>Amount</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_Amount" placeholder="0.00" disabled /></dd>
                                </dl>
                            </div>
                            <div id="SITax" class="tab-pane fade in">
                                <dl class="dl-horizontal">
                                    <dt>VAT</dt>
                                    <dd><div class="comboBox-wide" id="cboItemVAT"></div></dd>
                                    <dt>VAT Rate</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_VATRate" placeholder="0.00" disabled /></dd>
                                    <dt>VAT Amount</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_VATAmount" placeholder="0.00" disabled /></dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdSaveSaleItemsButton" class="btn btn-primary" onclick="cmdSaleItemsSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdSaleItemsDetailCloseButton" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Item Query -->
    <div class="modal fade" id="itemQueryModal" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="saleItemsModalLabel">Item Query</h4>
                </div>
                <div class="modal-body">
                    <ul class="nav nav-tabs" role="tablist" id="myTab">
                        <li role="presentation" class="active"><a data-toggle="tab" href="#SIItemInventory" id="idSIItemInventory">Inventory Items</a></li>
                        <li role="presentation"><a data-toggle="tab" href="#SIItemNonInventory" id="idSIItemNonInventory">Non-Inventory Items</a></li>
                        <li role="presentation"><a data-toggle="tab" href="#SIItemPackage" id="idSIItemPackage">Package Items</a></li>
                    </ul>
                    <br />
                    <div class="tab-content">
                        <div id="SIItemInventory" class="tab-pane fade in active">
                            <center>
                                <span id="loadingItemInventory"></span>
                            </center>
                            <div id="ItemInventoryGridDetail">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <div class="input-group  ">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control " id="InputFilterItemQueryGrid" placeholder="Search...">
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div id="itemInventoryFlexGrid" class="grid" style="max-height: 250px;"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="SIItemNonInventory" class="tab-pane fade in">
                            <center>
                                <span id="loadingItemNonInventory"></span>
                            </center>
                            <div id="ItemNonInventoryGridDetail">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <div class="input-group  ">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control " id="InputFilterItemQueryGridNonInventory" placeholder="Search...">
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div id="itemNonInventoryFlexGrid" class="grid" style="max-height: 250px;"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="SIItemPackage" class="tab-pane fade in">
                            <center>
                                <span id="loadingPackageItems"></span>
                            </center>
                            <div id="packageItemsGridDetail">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <div class="input-group  ">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control " id="InputFilterItemQueryGridPackage" placeholder="Search...">
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div id="itemPackageFlexGrid" class="grid" style="max-height: 250px;"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="" class="btn btn-danger " data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Journal Detail -->
    <div class="modal fade" id="journalDetail" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="journalModalLabel"> Journal</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingJournalGridList"></span>
                    </center>
                    <div id="journal_Content">
                        <div id="journalFlexGrid" style="max-height: 250px;"></div>
                        <br /><br />
                        <div class="row">
                            <div class="col-md-7"></div>
                            <div class="col-md-5">
                                <dl class="dl-horizontal">
                                    <dt>
                                        <b>Total Debit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField" id="totalDebitInJournal" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Credit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField" id="totalCreditInJournal" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Variance</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField" id="variance" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdJournalDetailCloseButton" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Sales Items Delete Modal Confirmation -->
    <div class="modal fade" id="deletSaleItemsConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this sales item?
                </div>
                <div class="modal-footer">
                    <button id="cmdConfirmDeleteSaleItems" class="btn btn-danger" onclick="cmdSaleItemsConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteSaleItemsCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var cboSIBranch = new wijmo.input.ComboBox('#cboSIBranch');
        var cboSICustomer = new wijmo.input.ComboBox('#cboSICustomer');
        var cboSITerm = new wijmo.input.ComboBox('#cboSITerm');
        var cboSISoldBy = new wijmo.input.ComboBox('#cboSISoldBy');
        var cboSIPreparedBy = new wijmo.input.ComboBox('#cboSIPreparedBy');
        var cboSICheckedBy = new wijmo.input.ComboBox('#cboSICheckedBy');
        var cboSIApprovedBy = new wijmo.input.ComboBox('#cboSIApprovedBy');
        var cboSIDate = new wijmo.input.InputDate('#cboSIDate');
        var SIItemsCollectionView;
        var SIItemFlexGrid;
        var isLocked = false;
        var cboItemCode = new wijmo.input.ComboBox('#cboItemCode');
        var salesItemId = 0;
        var cboItemDescription = new wijmo.input.ComboBox('#cboItemDescription');
        var cboInventoryCode = new wijmo.input.ComboBox('#cboInventoryCode');
        var cboItemUnit = new wijmo.input.ComboBox('#cboItemUnit');
        var cboItemPrice = new wijmo.input.ComboBox('#cboItemPrice');
        var cboItemDiscount = new wijmo.input.ComboBox('#cboItemDiscount');
        var cboItemVAT = new wijmo.input.ComboBox('#cboItemVAT');
        var journalCollectionView;
        var journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');
        var inventoryCollectionView;
        var inventoryFlexGrid;
        var itemInventoryCollectionView;
        var itemInventoryFlexGrid = new wijmo.grid.FlexGrid('#itemInventoryFlexGrid');
        var itemNonInventoryCollectionView;
        var itemNonInventoryFlexGrid = new wijmo.grid.FlexGrid('#itemNonInventoryFlexGrid');
        var itemPackageCollectionView;
        var itemPackageFlexGrid = new wijmo.grid.FlexGrid('#itemPackageFlexGrid');

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";

            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (branchListResults) {
                    if (branchListResults.length > 0) {
                        for (i = 0; i < branchListResults.length; i++) {
                            branchesObservableArray.push({
                                Id: branchListResults[i]["Id"],
                                Branch: branchListResults[i]["Branch"]
                            });
                        }
                    }

                    cboSIBranch.dispose();
                    cboSIBranch = new wijmo.input.ComboBox('#cboSIBranch', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id"
                    });

                    getCustomerForComboBox();
                }
            });
        }

        // ==========================
        // GET Customer for Combo Box
        // ==========================
        function getCustomerForComboBox() {
            var customersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/2',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (customerListResults) {
                    if (customerListResults.length > 0) {
                        for (i = 0; i < customerListResults.length; i++) {
                            customersObservableArray.push({
                                Id: customerListResults[i]["Id"],
                                Customer: customerListResults[i]["Article"]
                            });
                        }
                    }

                    cboSICustomer.dispose();
                    cboSICustomer = new wijmo.input.ComboBox('#cboSICustomer', {
                        isEditable: false,
                        placeholder: "Select Customer",
                        itemsSource: customersObservableArray,
                        displayMemberPath: "Customer",
                        selectedValuePath: "Id"
                    });

                    getTermForComboBox();
                }
            });
        }

        // =======================
        // GET Terms for Combo Box
        // =======================
        function getTermForComboBox() {
            var termsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTerm',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (termListResults) {
                    if (termListResults.length > 0) {
                        for (i = 0; i < termListResults.length; i++) {
                            termsObservableArray.push({
                                Id: termListResults[i]["Id"],
                                Term: termListResults[i]["Term"]
                            });
                        }
                    }

                    cboSITerm.dispose();
                    cboSITerm = new wijmo.input.ComboBox('#cboSITerm', {
                        isEditable: false,
                        placeholder: "Select Term",
                        itemsSource: termsObservableArray,
                        displayMemberPath: "Term",
                        selectedValuePath: "Id"
                    });

                    getUsersForComboBox();
                }
            });
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            var usersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            usersObservableArray.push({
                                Id: results[i]["Id"],
                                FullName: results[i]["FullName"]
                            });
                        }
                    }

                    cboSISoldBy.dispose();
                    cboSISoldBy = new wijmo.input.ComboBox('#cboSISoldBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSIPreparedBy.dispose();
                    cboSIPreparedBy = new wijmo.input.ComboBox('#cboSIPreparedBy', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSICheckedBy.dispose();
                    cboSICheckedBy = new wijmo.input.ComboBox('#cboSICheckedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSIApprovedBy.dispose();
                    cboSIApprovedBy = new wijmo.input.ComboBox('#cboSIApprovedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    getSalesById();
                }
            });
        }

        // ====================
        // GET Sales List By Id
        // ====================
        function getSalesById() {
            if (document.location.search.length > 0) {
                var id = getParam('SalesId');
                $.ajax({
                    url: '/api/salesInvoice/' + id,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (Results) {
                        if (Results != null) {
                            cboSIBranch.selectedValue = Results.BranchId;
                            document.getElementById('SI_SINumber').value = Results.SINumber;
                            cboSIDate.dispose();
                            cboSIDate = new wijmo.input.InputDate('#cboSIDate', {
                                format: 'MM-dd-yyyy',
                                value: new Date(Results.SIDate)
                            });
                            document.getElementById('SI_DocReference').value = Results.DocumentReference;
                            cboSICustomer.selectedValue = Results.CustomerId;
                            cboSITerm.selectedValue = Results.TermId;
                            document.getElementById('SI_SIRemarks').value = Results.Remarks;
                            document.getElementById('SI_ManualSINumber').value = Results.ManualSINumber;
                            cboSISoldBy.selectedValue = Results.SoldById;
                            cboSIPreparedBy.selectedValue = Results.PreparedById;
                            cboSICheckedBy.selectedValue = Results.CheckedById;
                            cboSIApprovedBy.selectedValue = Results.ApprovedById;

                            document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                            if (Results.IsLocked) {
                                cboSIDate.disabled = true;
                                document.getElementById('SI_DocReference').disabled = true;
                                cboSICustomer.disabled = true;
                                cboSITerm.disabled = true;
                                document.getElementById('SI_SIRemarks').disabled = true;
                                document.getElementById('SI_ManualSINumber').disabled = true;
                                cboSISoldBy.disabled = true;
                                cboSIPreparedBy.disabled = true;
                                cboSICheckedBy.disabled = true;
                                cboSIApprovedBy.disabled = true;

                                $("#cmdSalesSaveLock").prop("disabled", true);
                                $("#btnAddSaleItem").prop("disabled", true);
                                $("#btnItemQuery").prop("disabled", true);

                                var canUnLock = "@ViewData["CanUnlock"]";
                                if (canUnLock == "False") {
                                    $("#cmdSalesEdit").prop("disabled", true);
                                }

                                var canPrint = "@ViewData["CanPrint"]";
                                if (canPrint == "False") {
                                    $("#cmdSalesPrint").prop("disabled", true);
                                }

                                isLocked = true;
                            } else {
                                $("#cmdSalesJournal").prop("disabled", true);
                                $("#cmdSalesEdit").prop("disabled", true);
                                $("#cmdSalesPrint").prop("disabled", true);

                                var canLock = "@ViewData["CanLock"]";
                                if (canLock == "False") {
                                    $("#cmdSalesSaveLock").prop("disabled", true);
                                }

                                var canAdd = "@ViewData["CanAdd"]";
                                if (canAdd == "False") {
                                    $("#btnAddSaleItem").prop("disabled", true);
                                    $("#btnItemQuery").prop("disabled", true);
                                }
                            }
                        }

                        createSalesItemFlexGrid();
                        createInventoryFlexGrid();
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/PurchaseOrder";
            }
        }

        // =======================
        // SAVE Sale - Lock Unlock
        // =======================
        function btnSaveLockSales_OnClick() {
            var salesObject = new Object();
            var id = getParam('SalesId');
            salesObject.BranchId = cboSIBranch.selectedValue;
            salesObject.SINumber = document.getElementById('SI_SINumber').value;
            salesObject.SIDate = cboSIDate.value.toLocaleDateString();
            salesObject.CustomerId = cboSICustomer.selectedValue;
            salesObject.TermId = cboSITerm.selectedValue;
            salesObject.DocumentReference = document.getElementById('SI_DocReference').value;
            salesObject.ManualSINumber = document.getElementById('SI_ManualSINumber').value;
            salesObject.Remarks = document.getElementById('SI_SIRemarks').value;
            salesObject.SoldById = cboSISoldBy.selectedValue;
            salesObject.PreparedById = cboSICheckedBy.selectedValue;
            salesObject.CheckedById = cboSICheckedBy.selectedValue;
            salesObject.ApprovedById = cboSIApprovedBy.selectedValue;
            var salesData = JSON.stringify(salesObject);

            var isValid = true;
            $('.requiredSales').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('cmdSalesSaveLock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $("#cmdSalesJournal").prop("disabled", true);
                $("#cmdSalesSaveLock").prop("disabled", true);
                $("#cmdSalesEdit").prop("disabled", true);
                $("#cmdSalesPrint").prop("disabled", true);
                $("#cmdSalesClose").prop("disabled", true);

                $.ajax({
                    type: "PUT",
                    url: '/api/updateSales/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: salesData,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Not Found");
                            document.getElementById('cmdSalesSaveLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#cmdSalesSaveLock").prop("disabled", false);
                            $("#cmdSalesClose").prop("disabled", false);
                        },
                        400: function (message, d, s) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Bad Request");
                            document.getElementById('cmdSalesSaveLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#cmdSalesSaveLock").prop("disabled", false);
                            $("#cmdSalesClose").prop("disabled", false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =======================
        // EDIT Sale - Lock Unlock
        // =======================
        function btnSalesEdit_OnClick() {
            var id = getParam('SalesId');

            document.getElementById('cmdSalesEdit').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $("#cmdSalesJournal").prop("disabled", true);
            $("#cmdSalesSaveLock").prop("disabled", true);
            $("#cmdSalesEdit").prop("disabled", true);
            $("#cmdSalesPrint").prop("disabled", true);
            $("#cmdSalesClose").prop("disabled", true);

            $.ajax({
                type: "PUT",
                url: '/api/updateSalesIsLocked/' + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('cmdSalesEdit').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#cmdSalesJournal").prop("disabled", false);
                        $("#cmdSalesEdit").prop("disabled", false);
                        $("#cmdSalesPrint").prop("disabled", false);
                        $("#cmdSalesClose").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        document.getElementById('cmdSalesEdit').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#cmdSalesJournal").prop("disabled", false);
                        $("#cmdSalesEdit").prop("disabled", false);
                        $("#cmdSalesPrint").prop("disabled", false);
                        $("#cmdSalesClose").prop("disabled", false);
                    }
                }
            });
        }

        // ========
        // Print SI
        // ========
        function btnSalesPrint_OnClick() {
            var salesId = getParam('SalesId');
            window.location = "/RepSales/Sales?SalesId=" + salesId;
        }

        // ======================
        // Get Sales Invoice Item
        // ======================
        function getItem() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                var id = getParam('SalesId');
                $.ajax({
                    url: '/api/listSalesInvoiceItemBySIId/' + id,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (Results) {
                        if (Results.length > 0) {
                            var canEdit = "@ViewData["CanEdit"]";
                            var editDisabled = "";
                            if (canEdit == "False") {
                                editDisabled = "disabled";
                            }

                            var canDelete = "@ViewData["CanDelete"]";
                            var deleteDisabled = "";
                            if (canDelete == "False") {
                                deleteDisabled = "disabled";
                            }

                            var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditSaleItem_OnClick()' " + editDisabled + "><i class='fa fa-edit'></i> Edit</button>";
                            var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteSaleItem_OnClick()'" + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                            if (isLocked == true) {
                                btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditSaleItem_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteSaleItem_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                            }

                            for (i = 0; i < Results.length; i++) {
                                itemsObservableArray.push({
                                    EditId: btnEditId,
                                    DeleteId: btnDeleteId,
                                    Id: Results[i]["Id"],
                                    SIId: Results[i]["SIId"],
                                    SI: Results[i]["SI"],
                                    ItemId: Results[i]["ItemId"],
                                    ItemCode: Results[i]["ItemCode"],
                                    Item: Results[i]["Item"],
                                    ItemInventoryId: Results[i]["ItemInventoryId"],
                                    ItemInventory: Results[i]["ItemInventory"],
                                    Particulars: Results[i]["Particulars"],
                                    UnitId: Results[i]["UnitId"],
                                    Unit: Results[i]["Unit"],
                                    Quantity: Results[i]["Quantity"],
                                    Price: Results[i]["Price"],
                                    DiscountId: Results[i]["DiscountId"],
                                    Discount: Results[i]["Discount"],
                                    DiscountRate: Results[i]["Discount"] + "<hr style='margin-top: 3px; margin-bottom: 3px; border-color: #cccccc' />" + Results[i]["DiscountRate"],
                                    DiscountRateEdit: Results[i]["DiscountRate"],
                                    DiscountAmount: Results[i]["DiscountAmount"],
                                    NetPrice: Results[i]["NetPrice"],
                                    Amount: Results[i]["Amount"],
                                    VATId: Results[i]["VATId"],
                                    VAT: Results[i]["VAT"],
                                    VATPercentage: Results[i]["VAT"] + "<hr style='margin-top: 3px; margin-bottom: 3px; border-color: #cccccc' />" + Results[i]["VATPercentage"],
                                    VATRate: Results[i]["VATPercentage"],
                                    VATAmount: Results[i]["VATAmount"],
                                    BaseUnitId: Results[i]["BaseUnitId"],
                                    BaseUnit: Results[i]["BaseUnit"],
                                    BaseQuantity: Results[i]["BaseQuantity"],
                                    BasePrice: Results[i]["BasePrice"],
                                });
                            }
                        }

                        NProgress.done();
                    }
                });
            } else {
                NProgress.done();
            }

            return itemsObservableArray;
        }

        // ====================================
        // Refresh Sales Invoice Item Flex Grid
        // ====================================
        function refreshSaleSItemFlexGrid() {
            SIItemsCollectionView = new wijmo.collections.CollectionView(getItem());

            SIItemFlexGrid.itemsSource = SIItemsCollectionView;
            SIItemFlexGrid.trackChanges = true;
        }

        // ================================
        // Get Sales Invoice Item Flex Grid
        // ================================
        function createSalesItemFlexGrid() {
            SIItemsCollectionView = new wijmo.collections.CollectionView(getItem());

            SIItemFlexGrid = new wijmo.grid.FlexGrid('#ItemGrid');
            SIItemFlexGrid.initialize({
                columns: [
                    {
                        "header": "Edit",
                        "binding": "EditId",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Delete",
                        "binding": "DeleteId",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Code",
                        "binding": "ItemCode",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Item",
                        "binding": "Item",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Inventory",
                        "binding": "ItemInventory",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Quantity",
                        "binding": "Quantity",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Price",
                        "binding": "Price",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Rate",
                        "binding": "DiscountRate",
                        "allowSorting": true,
                        "width": 100,
                        "align": "right",
                        "isContentHtml": true
                    },
                    {
                        "header": "Discount Amt.",
                        "binding": "DiscountAmount",
                        "allowSorting": true,
                        "width": 110,
                    },
                    {
                        "header": "Net Price",
                        "binding": "NetPrice",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Amount",
                        "binding": "Amount",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "VAT Rate",
                        "binding": "VATPercentage",
                        "allowSorting": true,
                        "width": 100,
                        "align": "right",
                        "isContentHtml": true
                    },
                    {
                        "header": "VAT Amt.",
                        "binding": "VATAmount",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Unit",
                        "binding": "BaseUnit",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Quantity",
                        "binding": "BaseQuantity",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Price",
                        "binding": "BasePrice",
                        "allowSorting": true,
                        "width": 100
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: SIItemsCollectionView,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            SIItemFlexGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            SIItemFlexGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            SIItemFlexGrid.columnHeaders.rows.push(hr);
            SIItemFlexGrid.columnHeaders.rows[0].allowMerging = true;

            SIItemFlexGrid.columnHeaders.columns[0].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 0, 'Edit');

            SIItemFlexGrid.columnHeaders.columns[1].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 1, 'Delete');

            SIItemFlexGrid.columnHeaders.columns[2].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 2, 'Code');

            SIItemFlexGrid.columnHeaders.columns[3].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 3, 'Item');

            SIItemFlexGrid.columnHeaders.columns[4].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 4, 'Particulars');

            SIItemFlexGrid.columnHeaders.columns[5].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 5, 'Inventory');

            SIItemFlexGrid.columnHeaders.columns[6].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 6, 'Quantity');

            SIItemFlexGrid.columnHeaders.columns[7].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 7, 'Unit');

            SIItemFlexGrid.columnHeaders.columns[8].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 8, 'Price');

            SIItemFlexGrid.columnHeaders.setCellData(0, 9, 'Discount');

            SIItemFlexGrid.columnHeaders.columns[10].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 10, 'Discount Amt.');

            SIItemFlexGrid.columnHeaders.columns[11].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 11, 'Net Price');

            SIItemFlexGrid.columnHeaders.columns[12].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 12, 'Amount');

            SIItemFlexGrid.columnHeaders.setCellData(0, 13, 'VAT');

            SIItemFlexGrid.columnHeaders.columns[14].allowMerging = true;
            SIItemFlexGrid.columnHeaders.setCellData(0, 14, 'VAT Amt.');

            for (var columnBasicUnitConversion = 15; columnBasicUnitConversion <= 17; columnBasicUnitConversion++) {
                SIItemFlexGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Basic Unit Conversion');
            }

            SIItemFlexGrid.rows.defaultSize = 55;
        }

        // ======================================
        // GET Item Id, Manual Code and Component
        // ======================================
        function getArticleItemForManualCodeAndComponent(itemId, inventoryCodeId, unitId, priceValue, discountId, VATId) {
            var articleItemsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/1',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (itemListResults) {
                    if (itemListResults.length > 0) {
                        for (i = 0; i < itemListResults.length; i++) {
                            articleItemsObservableArray.push({
                                Id: itemListResults[i]["Id"],
                                ItemCode: itemListResults[i]["ManualArticleCode"],
                                ItemDescription: itemListResults[i]["Article"],
                                UnitId: itemListResults[i]["UnitId"],
                                Unit: itemListResults[i]["Unit"],
                                Particulars: itemListResults[i]["Particulars"],
                                Price: itemListResults[i]["Price"],
                                InputTaxId: itemListResults[i]["InputTaxId"],
                                InputTax: itemListResults[i]["InputTax"],
                                OutputTaxId: itemListResults[i]["OutputTaxId"],
                                OutputTax: itemListResults[i]["OutputTax"],
                            });
                        }
                    }

                    var disabled = true;
                    if (itemListResults.length > 0) {
                        disabled = false;
                        $("#cmdSaveSaleItemsButton").prop("disabled", false);
                    } else {
                        $("#cmdSaveSaleItemsButton").prop("disabled", true);
                    }

                    cboItemCode.dispose();
                    cboItemCode = new wijmo.input.ComboBox('#cboItemCode', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: articleItemsObservableArray,
                        displayMemberPath: "ItemCode",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboItemDescription.selectedValue = this.selectedValue;
                        }
                    });

                    cboItemDescription.dispose();
                    cboItemDescription = new wijmo.input.ComboBox('#cboItemDescription', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: articleItemsObservableArray,
                        displayMemberPath: "ItemDescription",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            $("#cmdSaveSaleItemsButton").prop("disabled", false);
                            cboItemCode.selectedValue = this.selectedValue;
                            getItemInventoryCodeForComboBox(inventoryCodeId, unitId, priceValue, discountId, VATId);
                            computation();
                        }
                    });

                    getItemInventoryCodeForComboBox(inventoryCodeId, unitId, priceValue, discountId, VATId);
                }
            });
        }

        // =======================
        // Get Item Inventory Code
        // =======================
        function getItemInventoryCodeForComboBox(inventoryCodeId, unitId, priceValue, discountId, VATId) {
            var inventoryCodesObservableArray = new wijmo.collections.ObservableArray();
            if (cboItemDescription.selectedValue != null) {
                var articleId = cboItemDescription.selectedValue;
                var branchId = cboSIBranch.selectedValue;
                $.ajax({
                    url: '/api/listArticleInventoryByBranchIdAndArticleId/' + branchId + '/' + articleId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (inventoryCodeListResults) {
                        if (inventoryCodeListResults.length > 0) {
                            for (i = 0; i < inventoryCodeListResults.length; i++) {
                                inventoryCodesObservableArray.push({
                                    Id: inventoryCodeListResults[i]["Id"],
                                    BranchId: inventoryCodeListResults[i]["BranchId"],
                                    ArticleId: inventoryCodeListResults[i]["ArticleId"],
                                    InventoryCode: inventoryCodeListResults[i]["InventoryCode"],
                                    Quantity: inventoryCodeListResults[i]["Quantity"],
                                    Cost: inventoryCodeListResults[i]["Cost"],
                                    Amount: inventoryCodeListResults[i]["Amount"],
                                    Particulars: inventoryCodeListResults[i]["Particulars"]
                                });
                            }
                        }

                        var disabled = true;
                        if (inventoryCodeListResults.length > 0) {
                            var InventoryType = "@ViewData["InventoryType"]";
                            if (InventoryType == "Moving Average") {
                                disabled = true;
                            } else {
                                disabled = false;
                            }
                        }

                        cboInventoryCode.dispose();
                        cboInventoryCode = new wijmo.input.ComboBox('#cboInventoryCode', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: inventoryCodesObservableArray,
                            displayMemberPath: "InventoryCode",
                            selectedValuePath: "Id",
                            selectedValue: inventoryCodeId
                        });

                        getSalesItemUnitForComboBox(unitId, priceValue, discountId, VATId);
                    }
                });
            } else {
                cboInventoryCode.dispose();
                cboInventoryCode = new wijmo.input.ComboBox('#cboInventoryCode', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: inventoryCodesObservableArray,
                    displayMemberPath: "InventoryCode",
                    selectedValuePath: "Id",
                    selectedValue: inventoryCodeId
                });

                getSalesItemUnitForComboBox(unitId, priceValue, discountId, VATId);
            }
        }

        // =============
        // Get Item Unit
        // =============
        function getSalesItemUnitForComboBox(unitId, priceValue, discountId, VATId) {
            var itemUnitsObservableArray = new wijmo.collections.ObservableArray();
            if (cboItemDescription.selectedValue != null) {
                var itemId = cboItemDescription.selectedValue;
                $.ajax({
                    url: '/api/listArticleUnitByArticleId/' + itemId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (itemUnitListResults) {
                        if (itemUnitListResults.length > 0) {
                            for (i = 0; i < itemUnitListResults.length; i++) {
                                itemUnitsObservableArray.push({
                                    UnitId: itemUnitListResults[i]["UnitId"],
                                    Unit: itemUnitListResults[i]["Unit"]
                                });
                            }
                        }

                        var disabled = true;
                        if (itemUnitListResults.length > 0) {
                            disabled = false;
                        } else {
                            $("#cmdSaveSaleItemsButton").prop("disabled", true);
                        }

                        cboItemUnit.dispose();
                        cboItemUnit = new wijmo.input.ComboBox('#cboItemUnit', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: itemUnitsObservableArray,
                            displayMemberPath: "Unit",
                            selectedValuePath: "UnitId",
                            selectedValue: unitId
                        });

                        getSalesItemPriceForComboBox(priceValue, discountId, VATId);
                    }
                });
            } else {
                cboItemUnit.dispose();
                cboItemUnit = new wijmo.input.ComboBox('#cboItemUnit', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: itemUnitsObservableArray,
                    displayMemberPath: "Unit",
                    selectedValuePath: "UnitId",
                    selectedValue: unitId
                });

                getSalesItemPriceForComboBox(priceValue, discountId, VATId);
                $("#cmdSaveSaleItemsButton").prop("disabled", true);
            }
        }

        // ==============
        // Get Item Price
        // ==============
        function getSalesItemPriceForComboBox(priceValue, discountId, VATId) {
            var itemPricesObservableArray = new wijmo.collections.ObservableArray();
            if (cboItemDescription.selectedValue != null) {
                var itemId = cboItemDescription.selectedValue;
                $.ajax({
                    url: '/api/listArticlePrice/' + itemId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (itemPriceListResults) {
                        if (itemPriceListResults.length > 0) {
                            for (i = 0; i < itemPriceListResults.length; i++) {
                                itemPricesObservableArray.push({
                                    Id: itemPriceListResults[i]["Id"],
                                    ArticleId: itemPriceListResults[i]["ArticleId"],
                                    Article: itemPriceListResults[i]["Article"],
                                    PriceDescription: itemPriceListResults[i]["PriceDescription"],
                                    Price: itemPriceListResults[i]["Price"],
                                    Remarks: itemPriceListResults[i]["Remarks"]
                                });
                            }
                        }

                        var disabled = true;
                        if (itemPriceListResults.length > 0) {
                            disabled = false;
                        } else {
                            $("#cmdSaveSaleItemsButton").prop("disabled", true);
                        }

                        cboItemPrice.dispose();
                        cboItemPrice = new wijmo.input.ComboBox('#cboItemPrice', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: itemPricesObservableArray,
                            displayMemberPath: "PriceDescription",
                            selectedValuePath: "Price",
                            selectedValue: priceValue,
                            onSelectedIndexChanged: function () {
                                document.getElementById("saleItem_Price").value = this.selectedItem["Price"].toLocaleString();
                                computation();
                            }
                        });

                        if (cboItemPrice.selectedValue != null) {
                            document.getElementById("saleItem_Price").value = cboItemPrice.selectedItem["Price"].toLocaleString();
                        } else {
                            document.getElementById("saleItem_Price").value = 0;
                        }

                        getDiscountForComboBox(discountId, VATId);
                    }
                });
            } else {
                cboItemPrice.dispose();
                cboItemPrice = new wijmo.input.ComboBox('#cboItemPrice', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: itemPricesObservableArray,
                    displayMemberPath: "PriceDescription",
                    selectedValuePath: "Id",
                    selectedValue: priceValue
                });

                document.getElementById("saleItem_Price").value = 0;

                getDiscountForComboBox(discountId, VATId);
                $("#cmdSaveSaleItemsButton").prop("disabled", true);
            }
        }

        // ============
        // Get Discount
        // ============
        function getDiscountForComboBox(discountId, VATId) {
            var discountsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listDiscount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (discountListResults) {
                    if (discountListResults.length > 0) {
                        for (i = 0; i < discountListResults.length; i++) {
                            discountsObservableArray.push({
                                Id: discountListResults[i]["Id"],
                                Discount: discountListResults[i]["IsInclusive"] != false ? discountListResults[i]["Discount"] + " (Inclusive)" : discountListResults[i]["Discount"] + " (Not Inclusive)",
                                DiscountName: discountListResults[i]["Discount"],
                                DiscountRate: discountListResults[i]["DiscountRate"],
                                IsInclusive: discountListResults[i]["IsInclusive"],
                                AccountId: discountListResults[i]["AccountId"],
                                Account: discountListResults[i]["Account"],
                                IsLocked: discountListResults[i]["IsLocked"],
                            });
                        }
                    }

                    var disabled = true;
                    if (discountListResults.length > 0) {
                        disabled = false;
                    } else {
                        $("#cmdSaveSaleItemsButton").prop("disabled", true);
                    }

                    var defaultDiscount = discountId;
                    if (salesItemId == 0) {
                        defaultDiscount = "@ViewData["defaultSalesInvoiceDiscountId"]";
                    }

                    cboItemDiscount.dispose();
                    cboItemDiscount = new wijmo.input.ComboBox('#cboItemDiscount', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: discountsObservableArray,
                        displayMemberPath: "Discount",
                        selectedValuePath: "Id",
                        selectedValue: defaultDiscount,
                        onSelectedIndexChanged: function () {
                            document.getElementById("saleItem_DiscountRate").value = this.selectedItem["DiscountRate"].toLocaleString();
                            computation();
                        }
                    });

                    if (salesItemId == 0) {
                        document.getElementById("saleItem_DiscountRate").value = 0;
                        if (cboItemDiscount.selectedValue != null) {
                            document.getElementById("saleItem_DiscountRate").value = cboItemDiscount.selectedItem["DiscountRate"].toLocaleString();
                        }
                    }

                    getTaxTypeForComboBox(VATId);
                }
            });
        }

        // ===================
        // Get Artile Tax Type
        // ===================
        function getTaxTypeForComboBox(VATId) {
            var taxTypesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTaxType',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (taxTypeListResults) {
                    if (taxTypeListResults.length > 0) {
                        for (i = 0; i < taxTypeListResults.length; i++) {
                            taxTypesObservableArray.push({
                                Id: taxTypeListResults[i]["Id"],
                                TaxType: taxTypeListResults[i]["TaxType"],
                                TaxRate: taxTypeListResults[i]["TaxRate"],
                                IsInclusive: taxTypeListResults[i]["IsInclusive"],
                            });
                        }
                    }

                    var disabled = true;
                    if (taxTypeListResults.length > 0) {
                        disabled = false;
                    } else {
                        $("#cmdSaveSaleItemsButton").prop("disabled", true);
                    }

                    var VATIdValue = VATId;
                    if (salesItemId == 0) {
                        if (cboItemDescription.selectedValue != null) {
                            VATIdValue = cboItemDescription.selectedItem["OutputTaxId"];
                        } else {
                            VATIdValue = 0;
                        }
                    }

                    cboItemVAT.dispose();
                    cboItemVAT = new wijmo.input.ComboBox('#cboItemVAT', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: taxTypesObservableArray,
                        displayMemberPath: "TaxType",
                        selectedValuePath: "Id",
                        selectedValue: VATIdValue,
                        onSelectedIndexChanged: function () {
                            document.getElementById("saleItem_VATRate").value = this.selectedItem["TaxRate"].toLocaleString();
                            computation();
                        }
                    });

                    if (salesItemId == 0) {
                        document.getElementById("saleItem_VATRate").value = 0;
                        if (cboItemVAT.selectedValue != null) {
                            document.getElementById("saleItem_VATRate").value = cboItemVAT.selectedItem["TaxRate"].toLocaleString();
                        }
                    }

                    computation();

                    $("#loadingModalItem").hide();
                    $("#salesLineDetailForm").show();
                }
            });
        }

        // ===========
        // Computation
        // ===========
        function computation() {
            var quantity = document.getElementById('saleItem_Quantity').value.replace(/\,/g, '');
            var price = document.getElementById('saleItem_Price').value.replace(/\,/g, '');
            var discountRate = document.getElementById('saleItem_DiscountRate').value.replace(/\,/g, '');
            var VATPercentage = document.getElementById('saleItem_VATRate').value.replace(/\,/g, '');

            var discountAmount = price * (discountRate / 100);
            var netPrice = price - discountAmount;
            var amount = netPrice * quantity;

            if (cboItemVAT.selectedItem["IsInclusive"]) {
                VATAmount = amount / (1 + (VATPercentage / 100)) * (VATPercentage / 100);
            } else {
                VATAmount = amount * (VATPercentage / 100);
            }

            document.getElementById('saleItem_NetPrice').value = netPrice.toLocaleString();
            document.getElementById('saleItem_DiscountAmount').value = discountAmount.toLocaleString();
            document.getElementById('saleItem_Amount').value = amount.toLocaleString();
            document.getElementById('saleItem_VATAmount').value = VATAmount.toLocaleString();
        }

        $("#saleItem_Quantity").keyup(function (e) {
            computation();
        });

        $("#saleItem_DiscountRate").keyup(function (e) {
            computation();
        });

        $("#saleItem_DiscountAmount").keyup(function (e) {
            var quantity = document.getElementById('saleItem_Quantity').value.replace(/\,/g, '');
            var price = document.getElementById('saleItem_Price').value.replace(/\,/g, '');
            var VATPercentage = document.getElementById('saleItem_VATRate').value.replace(/\,/g, '');
            var discountAmount = document.getElementById('saleItem_DiscountAmount').value.replace(/\,/g, '');
            var discountRate = (discountAmount / price) * 100;

            var netPrice = price - discountAmount;
            var amount = netPrice * quantity;

            if (cboItemVAT.selectedItem["IsInclusive"]) {
                VATAmount = amount / (1 + (VATPercentage / 100)) * (VATPercentage / 100);
            } else {
                VATAmount = amount * (VATPercentage / 100);
            }

            document.getElementById('saleItem_DiscountRate').value = discountRate.toLocaleString();
            document.getElementById('saleItem_NetPrice').value = netPrice.toLocaleString();
            document.getElementById('saleItem_Amount').value = amount.toLocaleString();
            document.getElementById('saleItem_VATAmount').value = VATAmount.toLocaleString();
        });

        // =============
        // ADD Sale Item
        // =============
        function cmdAddSaleItem_OnClick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#salesLineDetailForm").hide();

            document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveSaleItemsButton").prop("disabled", true);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            salesItemId = 0;
            getArticleItemForManualCodeAndComponent(0,0,0,0,0,0,0);
            document.getElementById('saleItem_Particulars').value = "NA";
            document.getElementById('saleItem_Quantity').value = 1;
        }

        // ==============
        // EDIT Sale Item
        // ==============
        function btnEditSaleItem_OnClick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#salesLineDetailForm").hide();

            document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveSaleItemsButton").prop("disabled", true);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            SIItemsCollectionView.editItem(SIItemsCollectionView.currentItem);
            var item = SIItemsCollectionView.currentEditItem;
            getArticleItemForManualCodeAndComponent(item.ItemId, item.ItemInventoryId, item.UnitId, item.Price, item.DiscountId, item.VATId);
            salesItemId = item.Id;
            document.getElementById('saleItem_Particulars').value = item.Particulars;
            document.getElementById('saleItem_Quantity').value = item.Quantity.toLocaleString();
            document.getElementById('saleItem_Price').value = item.Price.toLocaleString();
            document.getElementById('saleItem_DiscountRate').value = item.DiscountRateEdit.toLocaleString();
            document.getElementById('saleItem_DiscountAmount').value = item.DiscountAmount.toLocaleString();
            document.getElementById('saleItem_NetPrice').value = item.NetPrice.toLocaleString();
            document.getElementById('saleItem_Amount').value = item.Amount.toLocaleString();
            document.getElementById('saleItem_VATRate').value = item.VATRate.toLocaleString();
            document.getElementById('saleItem_VATAmount').value = item.VATAmount.toLocaleString();
        }

        // ==============
        // SAVE Sale Item
        // ==============
        function cmdSaleItemsSaveButton_OnClick() {
            var saleItemObject = new Object();
            var id = getParam('SalesId');
            saleItemObject.SIId = id;
            saleItemObject.ItemId = cboItemDescription.selectedValue;
            saleItemObject.ItemInventoryId = cboInventoryCode.selectedValue;
            saleItemObject.Particulars = document.getElementById('saleItem_Particulars').value;
            saleItemObject.UnitId = cboItemUnit.selectedValue;
            saleItemObject.Quantity = document.getElementById('saleItem_Quantity').value;
            saleItemObject.Price = document.getElementById('saleItem_Price').value;
            saleItemObject.DiscountId = cboItemDiscount.selectedValue;
            saleItemObject.DiscountRate = document.getElementById('saleItem_DiscountRate').value;
            saleItemObject.DiscountAmount = document.getElementById('saleItem_DiscountAmount').value;
            saleItemObject.NetPrice = document.getElementById('saleItem_NetPrice').value;
            saleItemObject.Amount = document.getElementById('saleItem_Amount').value;
            saleItemObject.VATId = cboItemVAT.selectedValue;
            saleItemObject.VATPercentage = document.getElementById('saleItem_VATRate').value;
            saleItemObject.VATAmount = document.getElementById('saleItem_VATAmount').value;
            var saleItemData = JSON.stringify(saleItemObject);

            var isValid = true;
            $('.requiredSaleItem').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $("#cmdSaveSaleItemsButton").prop("disabled", true);
                $("#cmdSaleItemsDetailCloseButton").prop("disabled", true);

                if (salesItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addSalesInvoiceItem',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: saleItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Succesful");
                                $('#saleItemsEdit').modal('hide');
                                refreshSaleSItemFlexGrid();
                            },
                            400: function () {
                                toastr.error("Internal Server Error");
                                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateSalesInvoiceItem/' + salesItemId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: saleItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#saleItemsEdit').modal('hide');
                                refreshSaleSItemFlexGrid();
                            },
                            404: function () {
                                toastr.error("Can't Update");
                                $('#saleItemsEdit').modal('hide');
                                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#saleItemsEdit').modal('hide');
                                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ================
        // Delete Sale Item
        // ================
        function btnDeleteSaleItem_OnClick() {
            $('#deletSaleItemsConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdConfirmDeleteSaleItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#cmdConfirmDeleteSaleItems").prop("disabled", false);
            $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", false);
        }

        // Sales item confirm delete
        function cmdSaleItemsConfirmDeleteButton_OnClick() {
            document.getElementById('cmdConfirmDeleteSaleItems').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $("#cmdConfirmDeleteSaleItems").prop("disabled", true);
            $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", true);

            SIItemsCollectionView.editItem(SIItemsCollectionView.currentItem);
            var item = SIItemsCollectionView.currentEditItem.Id;
            var itemSIId = SIItemsCollectionView.currentEditItem.SIId;

            $.ajax({
                url: '/api/deleteSalesInvoiceItem/' + item + "/" + itemSIId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#deletSaleItemsConfirm').modal('hide');
                        refreshSaleSItemFlexGrid();
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deletSaleItemsConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteSaleItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdConfirmDeleteSaleItems").prop("disabled", false);
                        $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deletSaleItemsConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteSaleItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdConfirmDeleteSaleItems").prop("disabled", false);
                        $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ===========
        // Get Journal
        // ===========
        function getJournalListForSales() {
            var id = getParam('SalesId');
            var journalsObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/listJournalBySIId/' + id,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            journalsObservableArray.push({
                                Id: Results[i]["Id"],
                                JournalDate: (Results[i]["JournalDate"]).replace(/\//g, '-'),
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                AccountId: Results[i]["AccountId"],
                                AccountCode: Results[i]["AccountCode"],
                                Account: Results[i]["Account"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                Particulars: Results[i]["Particulars"],
                                DebitAmount: Results[i]["DebitAmount"],
                                CreditAmount: Results[i]["CreditAmount"],
                                ORId: Results[i]["ORId"],
                                CVId: Results[i]["CVId"],
                                JVId: Results[i]["JVId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"],
                                DocumentReference: Results[i]["DocumentReference"],
                                APRRId: Results[i]["APRRId"],
                                ARSIId: Results[i]["ARSIId"]
                            });

                            var debitAmountTotal = 0;
                            var creditAmountTotal = 0;

                            var a = 0;
                            while (a < Results.length) {
                                debitAmountTotal += Results[a]["DebitAmount"];
                                creditAmountTotal += Results[a]["CreditAmount"];
                                a++;
                            }
                        }

                        document.getElementById('totalDebitInJournal').value = debitAmountTotal.toLocaleString();
                        document.getElementById('totalCreditInJournal').value = creditAmountTotal.toLocaleString();
                        var variance = debitAmountTotal - creditAmountTotal;
                        document.getElementById('variance').value = variance.toLocaleString();
                    }

                    $("#loadingJournalGridList").hide();
                    $("#journal_Content").show();
                }
            });

            return journalsObservableArray;
        }

        // ============
        // Journal List
        // ============
        function btnJournalDetail_OnClick() {
            $('#journalDetail').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingJournalGridList").show();
            document.getElementById("loadingJournalGridList").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#journal_Content").hide();

            setTimeout(function () {
                createJournalFlexGrid();
            }, 500)
        }

        // =================
        // Journal FlexGrid
        // ================
        function createJournalFlexGrid() {
            journalCollectionView = new wijmo.collections.CollectionView(getJournalListForSales());

            journalFlexGrid.dispose();
            journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');
            journalFlexGrid.initialize({
                columns: [
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "2.5*"
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": "1.5*"
                    },
                    {
                        "header": "Code",
                        "binding": "AccountCode",
                        "allowSorting": true,
                        "width": "1.8*"
                    },
                    {
                        "header": "Account",
                        "binding": "Account",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Article",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmount",
                        "allowSorting": true,
                        "width": "2*",
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmount",
                        "allowSorting": true,
                        "width": "2*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalFlexGrid.trackChanges = true;
        }

        // =====================
        // GET Inventory Entries
        // =====================
        function getInventoryEntries() {
            var id = getParam('SalesId');
            var inventoryObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/listInventoryBySIId/' + id,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (Results) {
                    NProgress.done();
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            inventoryObservableArray.push({
                                Id: Results[i]["Id"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                InventoryDate: Results[i]["InventoryDate"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                ArticleInventoryId: Results[i]["ArticleInventoryId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"],
                                QuantityIn: Results[i]["QuantityIn"],
                                Quantity: Results[i]["Quantity"],
                                QuantityOut: Results[i]["QuantityOut"],
                                Amount: Results[i]["Amount"],
                                Particulars: Results[i]["Particulars"],
                                Code: Results[i]["Code"],
                                Unit: Results[i]["Unit"]
                            });
                        }

                        NProgress.done();
                    }
                }
            });

            return inventoryObservableArray;
        }

        // ==========================
        // Refresh Inventory FlexGrid
        // ==========================
        function refreshInventoryFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntries());

            inventoryFlexGrid.itemsSource = inventoryCollectionView;
            inventoryFlexGrid.trackChanges = true;
        }

        // ================================
        // On Page Load for Inventory Entry
        // ================================
        function createInventoryFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntries());

            inventoryFlexGrid = new wijmo.grid.FlexGrid('#inventoryFlexGrid');
            inventoryFlexGrid.initialize({
                columns: [
                    {
                        "header": "Date",
                        "binding": "InventoryDate",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.7*",
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "Code",
                        "allowSorting": true,
                        "width": "1.3*",
                    },
                    {
                        "header": "Quantity",
                        "binding": "Quantity",
                        "allowSorting": true,
                        "width": "1*",
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": "1*",
                    },
                    {
                        "header": "Amount",
                        "binding": "Amount",
                        "allowSorting": true,
                        "width": "1*",
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryFlexGrid.trackChanges = true;
        }

        // ====
        // TABS
        // ====
        $('#itemTabId').click(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            NProgress.start();
            refreshSaleSItemFlexGrid();
        });

        $('#inventoryEntryTabId').click(function () {
            $('#Items').hide();
            $('#InventoryEntries').show();
            NProgress.start();
            refreshInventoryFlexGrid();
        });

        function getInventoryItems() {
            var itemsObservableArray = new wijmo.collections.ObservableArray();
            var branchId = cboSIBranch.selectedValue;
            $.ajax({
                url: '/api/listArticleInventoryBybranchId/' + branchId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (articleInventoriesResults) {
                    if (articleInventoriesResults.length > 0) {
                        for (i = 0; i < articleInventoriesResults.length; i++) {
                            itemsObservableArray.push({
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdItemQueryPick_Onclick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                                Id: articleInventoriesResults[i]["Id"],
                                BranchId: articleInventoriesResults[i]["BranchId"],
                                Branch: articleInventoriesResults[i]["Branch"],
                                ArticleId: articleInventoriesResults[i]["ArticleId"],
                                Article: articleInventoriesResults[i]["Article"],
                                InventoryCode: articleInventoriesResults[i]["InventoryCode"],
                                Quantity: articleInventoriesResults[i]["Quantity"],
                                Price: articleInventoriesResults[i]["Price"],
                                Cost: articleInventoriesResults[i]["Cost"],
                                Amount: articleInventoriesResults[i]["Amount"],
                                Particulars: articleInventoriesResults[i]["Particulars"],
                                ManualArticleCode: articleInventoriesResults[i]["ManualArticleCode"],
                                UnitId: articleInventoriesResults[i]["UnitId"],
                                Unit: articleInventoriesResults[i]["Unit"],
                                Inventory: articleInventoriesResults[i]["Inventory"],
                            });
                        }
                    }

                    $("#loadingItemInventory").hide();
                    $("#ItemInventoryGridDetail").show();
                }
            });

            return itemsObservableArray;
        }

        // ==============================
        // Get Data from MstArtcile Table
        // ==============================
        function getNonInventoryItems() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/article/list/ByNonInventory',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (itemResults) {
                    if (itemResults.length > 0) {
                        for (i = 0; i < itemResults.length; i++) {
                            itemsObservableArray.push({
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdItemQueryPickNonInventory_Onclick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                                Id: itemResults[i]["Id"],
                                ArticleCode: itemResults[i]["ArticleCode"],
                                ManualArticleCode: itemResults[i]["ManualArticleCode"],
                                Article: itemResults[i]["Article"],
                                Category: itemResults[i]["Category"],
                                ArticleTypeId: itemResults[i]["ArticleTypeId"],
                                ArticleType: itemResults[i]["ArticleType"],
                                ArticleGroupId: itemResults[i]["ArticleGroupId"],
                                ArticleGroup: itemResults[i]["ArticleGroup"],
                                AccountId: itemResults[i]["AccountId"],
                                Account: itemResults[i]["Account"],
                                SalesAccountId: itemResults[i]["SalesAccountId"],
                                CostAccountId: itemResults[i]["CostAccountId"],
                                AssetAccountId: itemResults[i]["AssetAccountId"],
                                ExpenseAccountId: itemResults[i]["ExpenseAccountId"],
                                UnitId: itemResults[i]["UnitId"],
                                Unit: itemResults[i]["Unit"],
                                OutputTaxId: itemResults[i]["OutputTaxId"],
                                InputTaxId: itemResults[i]["InputTaxId"],
                                WTaxTypeId: itemResults[i]["WTaxTypeId"],
                                Price: itemResults[i]["Price"],
                                Cost: itemResults[i]["Cost"],
                                IsInventory: itemResults[i]["IsInventory"],
                                Particulars: itemResults[i]["Particulars"],
                                Address: itemResults[i]["Address"],
                                TermId: itemResults[i]["TermId"],
                                ContactNumber: itemResults[i]["ContactNumber"],
                                ContactPerson: itemResults[i]["ContactPerson"],
                                TaxNumber: itemResults[i]["TaxNumber"],
                                CreditLimit: itemResults[i]["CreditLimit"],
                                DateAcquired: itemResults[i]["DateAcquired"],
                                UsefulLife: itemResults[i]["UsefulLife"],
                                SalvageValue: itemResults[i]["SalvageValue"],
                                ManualArticleOldCode: itemResults[i]["ManualArticleOldCode"],
                                IsLocked: itemResults[i]["IsLocked"],
                                CreatedById: itemResults[i]["CreatedById"],
                                CreatedBy: itemResults[i]["CreatedBy"],
                                CreatedDateTime: itemResults[i]["CreatedDateTime"],
                                UpdatedById: itemResults[i]["UpdatedById"],
                                UpdatedBy: itemResults[i]["UpdatedBy"],
                                UpdatedDateTime: itemResults[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    $("#loadingItemNonInventory").hide();
                    $("#ItemNonInventoryGridDetail").show();
                }
            });

            return itemsObservableArray;
        }

        // ==============================================
        // Get Data from MstArtcile Table - Package Items
        // ==============================================
        function getPackageItems() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/article/list/byPackage',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (itemResults) {
                    if (itemResults.length > 0) {
                        for (i = 0; i < itemResults.length; i++) {
                            itemsObservableArray.push({
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdItemQueryPickPackage_Onclick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                                Id: itemResults[i]["Id"],
                                ArticleCode: itemResults[i]["ArticleCode"],
                                ManualArticleCode: itemResults[i]["ManualArticleCode"],
                                Article: itemResults[i]["Article"],
                                Category: itemResults[i]["Category"],
                                ArticleTypeId: itemResults[i]["ArticleTypeId"],
                                ArticleType: itemResults[i]["ArticleType"],
                                ArticleGroupId: itemResults[i]["ArticleGroupId"],
                                ArticleGroup: itemResults[i]["ArticleGroup"],
                                AccountId: itemResults[i]["AccountId"],
                                Account: itemResults[i]["Account"],
                                SalesAccountId: itemResults[i]["SalesAccountId"],
                                CostAccountId: itemResults[i]["CostAccountId"],
                                AssetAccountId: itemResults[i]["AssetAccountId"],
                                ExpenseAccountId: itemResults[i]["ExpenseAccountId"],
                                UnitId: itemResults[i]["UnitId"],
                                Unit: itemResults[i]["Unit"],
                                OutputTaxId: itemResults[i]["OutputTaxId"],
                                InputTaxId: itemResults[i]["InputTaxId"],
                                WTaxTypeId: itemResults[i]["WTaxTypeId"],
                                Price: itemResults[i]["Price"],
                                Cost: itemResults[i]["Cost"],
                                IsInventory: itemResults[i]["IsInventory"],
                                Particulars: itemResults[i]["Particulars"],
                                Address: itemResults[i]["Address"],
                                TermId: itemResults[i]["TermId"],
                                ContactNumber: itemResults[i]["ContactNumber"],
                                ContactPerson: itemResults[i]["ContactPerson"],
                                TaxNumber: itemResults[i]["TaxNumber"],
                                CreditLimit: itemResults[i]["CreditLimit"],
                                DateAcquired: itemResults[i]["DateAcquired"],
                                UsefulLife: itemResults[i]["UsefulLife"],
                                SalvageValue: itemResults[i]["SalvageValue"],
                                ManualArticleOldCode: itemResults[i]["ManualArticleOldCode"],
                                IsLocked: itemResults[i]["IsLocked"],
                                CreatedById: itemResults[i]["CreatedById"],
                                CreatedBy: itemResults[i]["CreatedBy"],
                                CreatedDateTime: itemResults[i]["CreatedDateTime"],
                                UpdatedById: itemResults[i]["UpdatedById"],
                                UpdatedBy: itemResults[i]["UpdatedBy"],
                                UpdatedDateTime: itemResults[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    $("#loadingPackageItems").hide();
                    $("#packageItemsGridDetail").show();
                }
            });

            return itemsObservableArray;
        }

        $('#idSIItemInventory').click(function () {
            $("#loadingItemInventory").show();
            document.getElementById("loadingItemInventory").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#ItemInventoryGridDetail").hide();

            setTimeout(function () {
                createInventoryItemFlexGrid();
            }, 500);
        });

        $('#idSIItemNonInventory').click(function () {
            $("#loadingItemNonInventory").show();
            document.getElementById("loadingItemNonInventory").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#ItemNonInventoryGridDetail").hide();

            setTimeout(function () {
                createNonInventoryItemFlexGrid();
            }, 500);
        });

        $('#idSIItemPackage').click(function () {
            $("#loadingPackageItems").show();
            document.getElementById("loadingPackageItems").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#packageItemsGridDetail").hide();

            setTimeout(function () {
                createPackageItemFlexGrid();
            }, 500);
        });

        // ==========
        // Item Query
        // ==========
        function cmdItemQuery_OnClick() {
            $('#itemQueryModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingItemInventory").show();
            document.getElementById("loadingItemInventory").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#ItemInventoryGridDetail").hide();

            $("#loadingItemNonInventory").show();
            document.getElementById("loadingItemNonInventory").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#ItemNonInventoryGridDetail").hide();

            $("#loadingPackageItems").show();
            document.getElementById("loadingPackageItems").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#packageItemsGridDetail").hide();

            setTimeout(function () {
                createInventoryItemFlexGrid();
                createNonInventoryItemFlexGrid();
                createPackageItemFlexGrid();
            }, 500);
        }

        function createInventoryItemFlexGrid() {
            itemInventoryCollectionView = new wijmo.collections.CollectionView(getInventoryItems());
            itemInventoryCollectionView.canFilter = true;

            var filterText = '';
            $('#InputFilterItemQueryGrid').keyup(function () {
                filterText = this.value.toLowerCase();
                itemInventoryCollectionView.refresh();
            });

            itemInventoryCollectionView.filter = function (item) {
                return !filterText || (item.InventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1);
            }

            itemInventoryFlexGrid.dispose();
            itemInventoryFlexGrid = new wijmo.grid.FlexGrid('#itemInventoryFlexGrid');
            itemInventoryFlexGrid.initialize({
                columns: [
                            {
                                "header": "Inventory Code",
                                "binding": "InventoryCode",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Code",
                                "binding": "ManualArticleCode",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Price",
                                "binding": "Price",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "On Hand Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Pick",
                                "binding": "Pick",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: itemInventoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemInventoryFlexGrid.trackChanges = true;
        }

        function createNonInventoryItemFlexGrid() {
            itemNonInventoryCollectionView = new wijmo.collections.CollectionView(getNonInventoryItems());
            itemNonInventoryCollectionView.canFilter = true;

            var filterText = '';
            $('#InputFilterItemQueryGridNonInventory').keyup(function () {
                filterText = this.value.toLowerCase();
                itemNonInventoryCollectionView.refresh();
            });

            itemNonInventoryCollectionView.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1);
            }

            itemNonInventoryFlexGrid.dispose();
            itemNonInventoryFlexGrid = new wijmo.grid.FlexGrid('#itemNonInventoryFlexGrid');
            itemNonInventoryFlexGrid.initialize({
                columns: [
                    {
                        "header": "Code",
                        "binding": "ManualArticleCode",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "5*"
                    },
                    {
                        "header": "Price",
                        "binding": "Price",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Pick",
                        "binding": "Pick",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: itemNonInventoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemNonInventoryFlexGrid.trackChanges = true;
        }

        function createPackageItemFlexGrid() {
            itemPackageCollectionView = new wijmo.collections.CollectionView(getPackageItems());
            itemPackageCollectionView.canFilter = true;

            var filterText = '';
            $('#InputFilterItemQueryGridPackage').keyup(function () {
                filterText = this.value.toLowerCase();
                itemPackageCollectionView.refresh();
            });

            itemPackageCollectionView.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1);
            }

            itemPackageFlexGrid.dispose();
            itemPackageFlexGrid = new wijmo.grid.FlexGrid('#itemPackageFlexGrid');
            itemPackageFlexGrid.initialize({
                columns: [
                            {
                                "header": "Code",
                                "binding": "ManualArticleCode",
                                "allowSorting": true,
                                "width": "4*"
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "5*"
                            },
                            {
                                "header": "Price",
                                "binding": "Price",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Pick",
                                "binding": "Pick",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: itemPackageCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemPackageFlexGrid.trackChanges = true;
        }

        function cmdItemQueryPick_Onclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#salesLineDetailForm").hide();

            document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveSaleItemsButton").prop("disabled", true);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemInventoryCollectionView.editItem(itemInventoryCollectionView.currentItem);
            var item = itemInventoryCollectionView.currentEditItem;
            salesItemId = 0;
            getArticleItemForManualCodeAndComponent(item.ArticleId, item.Id, 0, 0, 0, 0);
            document.getElementById('saleItem_Particulars').value = item.Particulars;
            document.getElementById('saleItem_Quantity').value = 1;
        }

        function cmdItemQueryPickNonInventory_Onclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#salesLineDetailForm").hide();

            document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveSaleItemsButton").prop("disabled", true);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemNonInventoryCollectionView.editItem(itemNonInventoryCollectionView.currentItem);
            var item = itemNonInventoryCollectionView.currentEditItem;
            salesItemId = 0;
            getArticleItemForManualCodeAndComponent(item.Id, null, 0, 0, 0, 0);
            document.getElementById('saleItem_Particulars').value = item.Particulars;
            document.getElementById('saleItem_Quantity').value = 1;
        }

        function cmdItemQueryPickPackage_Onclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#salesLineDetailForm").hide();

            document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveSaleItemsButton").prop("disabled", true);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemNonInventoryCollectionView.editItem(itemNonInventoryCollectionView.currentItem);
            var item = itemNonInventoryCollectionView.currentEditItem;
            salesItemId = 0;
            getArticleItemForManualCodeAndComponent(item.Id, null, 0, 0, 0, 0);
            document.getElementById('saleItem_Particulars').value = "NA";
            document.getElementById('saleItem_Quantity').value = 1;
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            getBranchesForComboBox();
        });

        $(document).on('show.bs.modal', '.modal', function (event) {
            var zIndex = 1040 + (10 * $('.modal:visible').length);
            $(this).css('z-index', zIndex);
            setTimeout(function () {
                $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
            }, 0);
        });

        $(document).on('hidden.bs.modal', '.modal', function () {
            $('.modal:visible').length && $(document.body).addClass('modal-open');
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>