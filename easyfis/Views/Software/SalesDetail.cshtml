@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Sales Invoice Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Sales Invoice Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-12" align="right">
                                <button class="btn btn-primary" id="btnJournalSalesInvoice" onclick="btnJournalSalesInvoiceOnclick()"><i class="fa fa-book"></i> Journal</button>
                                @{
                                    if (canLock)
                                    {
                                        <button class="btn btn-primary" id="btnLockSalesInvoice" onclick="btnLockSalesInvoiceOnclick()"><i class="fa fa-lock"></i> Lock</button>
                                    }
                                    if (canUnlock)
                                    {
                                        <button class="btn btn-primary" id="btnUnlockSalesInvoice" onclick="btnUnlockSalesInvoiceOnclick()"><i class="fa fa-unlock"></i> Unlock</button>
                                    }
                                    if (canPrint)
                                    {
                                        <button class="btn btn-primary" id="btnPrintSalesInvoice" onclick="btnPrintSalesInvoiceOnclick()"><i class="fa fa-print"></i> Print</button>
                                    }
                                }
                                <button class="btn btn-danger" id="btnCloseSalesInvoice" onclick="window.location.href = '/Software/Sales'"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Branch</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSIBranch"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SI Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSales" id="SI_SINumber" disabled>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SI Date</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSIDate"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Doc Reference</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control  requiredSales" id="SI_DocReference" placeholder="Document Reference">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Customer</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSICustomer"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Term</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSITerm"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Remarks</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredSales" id="SI_SIRemarks" placeholder="Remarks"></textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Manual SI Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSales" id="SI_ManualSINumber" placeholder="Manual SI Number">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Sold by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSISoldBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Prepared by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSIPreparedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Checked by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSICheckedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Approved by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSIApprovedBy"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#Items" id="itemTabId">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#InventoryEntries" id="inventoryEntryTabId">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="Items" class="tab-pane active">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control " id="SalesInvoiceItemInputFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboSalesInvoiceItemShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right">
                                            @{
                                                if (canAdd)
                                                {
                                                    <button class="btn btn-primary" id="btnAddSalesInvoiceItem" onclick="btnAddSalesInvoiceItemOnclick()"><i class="fa fa-plus"></i> Add</button>
                                                    <button class="btn btn-primary" id="btnItemQuerySalesInvoiceItem" onclick="btnItemQuerySalesInvoiceItemSalesInvoiceItemOnclick()"><i class="fa fa-search-plus"></i> Item Query</button>
                                                }
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div class="panel-body">
                                @{
                                    if (canAdd)
                                    {
                                        <div id="salesInvoiceItemFlexGrid"></div>
                                    }
                                }
                            </div>
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="naviagtionPageGridSalesInvoiceItem">
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridSalesInvoiceItem">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridSalesInvoiceItem">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridSalesInvoiceItem"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridSalesInvoiceItem">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridSalesInvoiceItem">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="panel panel-default">
                            <div class="panel-body" style="padding-bottom: 0px;">
                                <div class="row">
                                    <div class="col-md-6"></div>
                                    <div class="col-md-6">
                                        <dl class="dl-horizontal">
                                            <dt>
                                                <b>Total Amount</b>
                                            </dt>
                                            <dd>
                                                <input type="text" class="form-control numberField" id="totalSIAmount" placeholder="0.00" disabled />
                                            </dd>
                                            <dt>
                                                <b>Total Discount Amount</b>
                                            </dt>
                                            <dd>
                                                <input type="text" class="form-control numberField" id="totalSIDiscountAmount" placeholder="0.00" disabled />
                                            </dd>
                                            <dt>
                                                <b>Total VAT Amount</b>
                                            </dt>
                                            <dd>
                                                <input type="text" class="form-control numberField" id="totalSIVATAmount" placeholder="0.00" disabled />
                                            </dd>
                                        </dl>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="InventoryEntries" class="tab-pane">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control " id="InventoryEntryInputFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboInventoryEntryShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right"></td>
                                    </tr>
                                </table>
                            </div>
                            <div class="panel-body">
                                <div id="inventoryFlexGrid"></div>
                            </div>
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="naviagtionPageGridInventoryEntry">
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridInventoryEntry">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridInventoryEntry">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridInventoryEntry"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridInventoryEntry">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridInventoryEntry">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!-- Sales Items Detail -->
    <div class="modal fade" id="saleItemsEdit" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="saleItemsModalLabel">Sale Invoice Item</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingModalItem"></span>
                    </center>
                    <div id="salesLineDetailForm">
                        <ul class="nav nav-tabs" role="tablist" id="myTab">
                            <li role="presentation" class="active"><a data-toggle="tab" href="#SIItem" id="SIItemTabId">Items</a></li>
                            <li role="presentation"><a data-toggle="tab" href="#SITax" id="SITaxTabId">Tax</a></li>
                        </ul>
                        <br />
                        <div class="tab-content">
                            <div id="SIItem" class="tab-pane active">
                                <dl class="dl-horizontal">
                                    <dt>Item</dt>
                                    <dd>
                                        <table style="width: 100%" border="0">
                                            <tr>
                                                <td style="width: 30%">
                                                    <div class="comboBox-wide" id="cboItemCode"></div>
                                                </td>
                                                <td style="width: 1%"></td>
                                                <td style="width: 69%">
                                                    <div class="comboBox-wide" id="cboItemDescription"></div>
                                                </td>
                                            </tr>
                                        </table>
                                    </dd>
                                    <dt>Particulars</dt>
                                    <dd><textarea rows="5" class="form-control textarea-custom requiredSaleItem" id="saleItem_Particulars"></textarea></dd>
                                    <dt>Inventory Code</dt>
                                    <dd><div class="comboBox-wide" id="cboInventoryCode"></div></dd>
                                    <dt>Quantity</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_Quantity" placeholder="0.00" /></dd>
                                    <dt>Unit</dt>
                                    <dd><div class="comboBox-wide" id="cboItemUnit"></div></dd>
                                    <dt>Price</dt>
                                    <dd>
                                        <table style="width: 100%" border="0">
                                            <tr>
                                                <td style="width: 50%">
                                                    <div class="comboBox-wide" id="cboItemPrice"></div>
                                                </td>
                                                <td style="width: 1%"></td>
                                                <td style="width: 49%">
                                                    <input type="text" class="form-control numberField requiredSaleItem" id="saleItem_Price" placeholder="0.00" disabled />
                                                </td>
                                            </tr>
                                        </table>
                                    </dd>
                                    <dt>Discount</dt>
                                    <dd><div class="comboBox-wide" id="cboItemDiscount"></div></dd>
                                    <dt>Discount Rate</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_DiscountRate" placeholder="0.00" /></dd>
                                    <dt>Discount Amount</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_DiscountAmount" placeholder="0.00" /></dd>
                                    <dt>Net Price</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_NetPrice" placeholder="0.00" disabled /></dd>
                                    <dt>Amount</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_Amount" placeholder="0.00" disabled /></dd>
                                </dl>
                            </div>
                            <div id="SITax" class="tab-pane">
                                <dl class="dl-horizontal">
                                    <dt>VAT</dt>
                                    <dd><div class="comboBox-wide" id="cboItemVAT"></div></dd>
                                    <dt>VAT Rate</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_VATRate" placeholder="0.00" disabled /></dd>
                                    <dt>VAT Amount</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredSaleItem" id="saleItem_VATAmount" placeholder="0.00" disabled /></dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdSaveSaleItemsButton" class="btn btn-primary" onclick="cmdSaleItemsSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdSaleItemsDetailCloseButton" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Item Query -->
    <div class="modal fade" id="itemQueryModal" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="saleItemsModalLabel">Item Query</h4>
                </div>
                <div class="modal-body">
                    <ul class="nav nav-tabs" role="tablist" id="myTab">
                        <li role="presentation" class="active"><a data-toggle="tab" href="#SIItemInventory" id="idSIItemInventory">Inventory Items</a></li>
                        <li role="presentation"><a data-toggle="tab" href="#SIItemNonInventory" id="idSIItemNonInventory">Non-Inventory Items</a></li>
                        <li role="presentation"><a data-toggle="tab" href="#SIItemPackage" id="idSIItemPackage">Package Items</a></li>
                    </ul>
                    <br />
                    <div class="tab-content">
                        <div id="SIItemInventory" class="tab-pane active">
                            <center>
                                <span id="loadingItemInventory"></span>
                            </center>
                            <div id="ItemInventoryGridDetail">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <div class="input-group  ">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control " id="InputFilterItemQueryGrid" placeholder="Search...">
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div id="itemInventoryFlexGrid" class="grid"></div>
                                    </div>
                                    <div class="panel-footer">
                                        <div class="row">
                                            <div class="btn-group col-md-7" id="naviagtionPageGridItemInventory">
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridItemInventory">
                                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridItemInventory">
                                                    <span class="glyphicon glyphicon-step-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridItemInventory"></button>
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridItemInventory">
                                                    <span class="glyphicon glyphicon-step-forward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridItemInventory">
                                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="SIItemNonInventory" class="tab-pane">
                            <center>
                                <span id="loadingItemNonInventory"></span>
                            </center>
                            <div id="ItemNonInventoryGridDetail">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <div class="input-group  ">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control " id="InputFilterItemQueryGridNonInventory" placeholder="Search...">
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div id="itemNonInventoryFlexGrid" class="grid"></div>
                                    </div>
                                    <div class="panel-footer">
                                        <div class="row">
                                            <div class="btn-group col-md-7" id="naviagtionPageGridItemNonInventory">
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridItemNonInventory">
                                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridItemNonInventory">
                                                    <span class="glyphicon glyphicon-step-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridItemNonInventory"></button>
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridItemNonInventory">
                                                    <span class="glyphicon glyphicon-step-forward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridItemNonInventory">
                                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="SIItemPackage" class="tab-pane">
                            <center>
                                <span id="loadingPackageItems"></span>
                            </center>
                            <div id="packageItemsGridDetail">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <div class="input-group  ">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control " id="InputFilterItemQueryGridPackage" placeholder="Search...">
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div id="itemPackageFlexGrid" class="grid"></div>
                                    </div>
                                    <div class="panel-footer">
                                        <div class="row">
                                            <div class="btn-group col-md-7" id="naviagtionPageGridItemPackage">
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridItemPackage">
                                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridItemPackage">
                                                    <span class="glyphicon glyphicon-step-backward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridItemPackage"></button>
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridItemPackage">
                                                    <span class="glyphicon glyphicon-step-forward"></span>
                                                </button>
                                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridItemPackage">
                                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="" class="btn btn-danger " data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Journal Detail -->
    <div class="modal fade" id="journalDetail" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="journalModalLabel"> Journal</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingJournalGridList"></span>
                    </center>
                    <div id="journal_Content">
                        <div id="journalFlexGrid" style="max-height: 250px;"></div>
                        <br /><br />
                        <div class="row">
                            <div class="col-md-7"></div>
                            <div class="col-md-5">
                                <dl class="dl-horizontal">
                                    <dt>
                                        <b>Total Debit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField" id="totalDebitInJournal" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Credit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField" id="totalCreditInJournal" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Variance</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField" id="variance" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdJournalDetailCloseButton" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Sales Items Delete Modal Confirmation -->
    <div class="modal fade" id="deletSaleItemsConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this sales item?
                </div>
                <div class="modal-footer">
                    <button id="cmdConfirmDeleteSaleItems" class="btn btn-danger" onclick="cmdSaleItemsConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteSaleItemsCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var cboSIBranch = new wijmo.input.ComboBox('#cboSIBranch');
        var cboSICustomer = new wijmo.input.ComboBox('#cboSICustomer');
        var cboSITerm = new wijmo.input.ComboBox('#cboSITerm');
        var cboSISoldBy = new wijmo.input.ComboBox('#cboSISoldBy');
        var cboSIPreparedBy = new wijmo.input.ComboBox('#cboSIPreparedBy');
        var cboSICheckedBy = new wijmo.input.ComboBox('#cboSICheckedBy');
        var cboSIApprovedBy = new wijmo.input.ComboBox('#cboSIApprovedBy');
        var cboSIDate = new wijmo.input.InputDate('#cboSIDate');
        var SIItemsCollectionView;
        var SIItemFlexGrid;
        var isLocked = false;
        var cboItemCode = new wijmo.input.ComboBox('#cboItemCode');
        var salesItemId = 0;
        var cboItemDescription = new wijmo.input.ComboBox('#cboItemDescription');
        var cboInventoryCode = new wijmo.input.ComboBox('#cboInventoryCode');
        var cboItemUnit = new wijmo.input.ComboBox('#cboItemUnit');
        var cboItemPrice = new wijmo.input.ComboBox('#cboItemPrice');
        var cboItemDiscount = new wijmo.input.ComboBox('#cboItemDiscount');
        var cboItemVAT = new wijmo.input.ComboBox('#cboItemVAT');
        var journalCollectionView;
        var journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');
        var inventoryCollectionView;
        var inventoryFlexGrid;
        var itemInventoryCollectionView;
        var itemInventoryFlexGrid = new wijmo.grid.FlexGrid('#itemInventoryFlexGrid');
        var itemNonInventoryCollectionView;
        var itemNonInventoryFlexGrid = new wijmo.grid.FlexGrid('#itemNonInventoryFlexGrid');
        var itemPackageCollectionView;
        var itemPackageFlexGrid = new wijmo.grid.FlexGrid('#itemPackageFlexGrid');
        var cboSalesInvoiceItemShowNumberOfRows = new wijmo.input.ComboBox('#cboSalesInvoiceItemShowNumberOfRows');
        var btnMoveToFirstPageGridSalesInvoiceItem = document.getElementById('btnMoveToFirstPageGridSalesInvoiceItem');
        var btnMoveToPreviousPageGridSalesInvoiceItem = document.getElementById('btnMoveToPreviousPageGridSalesInvoiceItem');
        var btnMoveToNextPageGridSalesInvoiceItem = document.getElementById('btnMoveToNextPageGridSalesInvoiceItem');
        var btnMoveToLastPageGridSalesInvoiceItem = document.getElementById('btnMoveToLastPageGridSalesInvoiceItem');
        var btnCurrentPageGridSalesInvoiceItem = document.getElementById('btnCurrentPageGridSalesInvoiceItem');
        var cboInventoryEntryShowNumberOfRows = new wijmo.input.ComboBox('#cboInventoryEntryShowNumberOfRows');
        var btnMoveToFirstPageGridInventoryEntry = document.getElementById('btnMoveToFirstPageGridInventoryEntry');
        var btnMoveToPreviousPageGridInventoryEntry = document.getElementById('btnMoveToPreviousPageGridInventoryEntry');
        var btnMoveToNextPageGridInventoryEntry = document.getElementById('btnMoveToNextPageGridInventoryEntry');
        var btnMoveToLastPageGridInventoryEntry = document.getElementById('btnMoveToLastPageGridInventoryEntry');
        var btnCurrentPageGridInventoryEntry = document.getElementById('btnCurrentPageGridInventoryEntry');
        var btnMoveToFirstPageGridItemInventory = document.getElementById('btnMoveToFirstPageGridItemInventory');
        var btnMoveToPreviousPageGridItemInventory = document.getElementById('btnMoveToPreviousPageGridItemInventory');
        var btnMoveToNextPageGridItemInventory = document.getElementById('btnMoveToNextPageGridItemInventory');
        var btnMoveToLastPageGridItemInventory = document.getElementById('btnMoveToLastPageGridItemInventory');
        var btnCurrentPageGridItemInventory = document.getElementById('btnCurrentPageGridItemInventory');
        var btnMoveToFirstPageGridItemNonInventory = document.getElementById('btnMoveToFirstPageGridItemNonInventory');
        var btnMoveToPreviousPageGridItemNonInventory = document.getElementById('btnMoveToPreviousPageGridItemNonInventory');
        var btnMoveToNextPageGridItemNonInventory = document.getElementById('btnMoveToNextPageGridItemNonInventory');
        var btnMoveToLastPageGridItemNonInventory = document.getElementById('btnMoveToLastPageGridItemNonInventory');
        var btnCurrentPageGridItemNonInventory = document.getElementById('btnCurrentPageGridItemNonInventory');
        var btnMoveToFirstPageGridItemPackage = document.getElementById('btnMoveToFirstPageGridItemPackage');
        var btnMoveToPreviousPageGridItemPackage = document.getElementById('btnMoveToPreviousPageGridItemPackage');
        var btnMoveToNextPageGridItemPackage = document.getElementById('btnMoveToNextPageGridItemPackage');
        var btnMoveToLastPageGridItemPackage = document.getElementById('btnMoveToLastPageGridItemPackage');
        var btnCurrentPageGridItemPackage = document.getElementById('btnCurrentPageGridItemPackage');

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";

            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoice/dropdown/list/branch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branchesObservableArray.push({
                                Id: results[i]["Id"],
                                Branch: results[i]["Branch"]
                            });
                        }
                    }

                    cboSIBranch.dispose();
                    cboSIBranch = new wijmo.input.ComboBox('#cboSIBranch', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id"
                    });

                    getCustomerForComboBox();
                }
            });
        }

        // ==========================
        // GET Customer for Combo Box
        // ==========================
        function getCustomerForComboBox() {
            var customersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoice/dropdown/list/customer',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            customersObservableArray.push({
                                Id: results[i]["Id"],
                                Customer: results[i]["Article"]
                            });
                        }
                    }

                    cboSICustomer.dispose();
                    cboSICustomer = new wijmo.input.ComboBox('#cboSICustomer', {
                        isEditable: false,
                        placeholder: "Select Customer",
                        itemsSource: customersObservableArray,
                        displayMemberPath: "Customer",
                        selectedValuePath: "Id"
                    });

                    getTermForComboBox();
                }
            });
        }

        // =======================
        // GET Terms for Combo Box
        // =======================
        function getTermForComboBox() {
            var termsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoice/dropdown/list/term',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            termsObservableArray.push({
                                Id: results[i]["Id"],
                                Term: results[i]["Term"]
                            });
                        }
                    }

                    cboSITerm.dispose();
                    cboSITerm = new wijmo.input.ComboBox('#cboSITerm', {
                        isEditable: false,
                        placeholder: "Select Term",
                        itemsSource: termsObservableArray,
                        displayMemberPath: "Term",
                        selectedValuePath: "Id"
                    });

                    getUsersForComboBox();
                }
            });
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            var usersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoice/dropdown/list/users',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            usersObservableArray.push({
                                Id: results[i]["Id"],
                                FullName: results[i]["FullName"]
                            });
                        }
                    }

                    cboSISoldBy.dispose();
                    cboSISoldBy = new wijmo.input.ComboBox('#cboSISoldBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSIPreparedBy.dispose();
                    cboSIPreparedBy = new wijmo.input.ComboBox('#cboSIPreparedBy', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSICheckedBy.dispose();
                    cboSICheckedBy = new wijmo.input.ComboBox('#cboSICheckedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSIApprovedBy.dispose();
                    cboSIApprovedBy = new wijmo.input.ComboBox('#cboSIApprovedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    getSalesById();
                }
            });
        }

        // ====================
        // GET Sales List By Id
        // ====================
        function getSalesById() {
            if (document.location.search.length > 0) {
                var id = getParam('id');
                $.ajax({
                    url: '/api/salesInvoice/detail/' + id,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results != null) {
                            cboSIBranch.selectedValue = results.BranchId;
                            document.getElementById('SI_SINumber').value = results.SINumber;
                            cboSIDate.dispose();
                            cboSIDate = new wijmo.input.InputDate('#cboSIDate', {
                                format: 'MM-dd-yyyy',
                                value: new Date(results.SIDate)
                            });
                            document.getElementById('SI_DocReference').value = results.DocumentReference;
                            cboSICustomer.selectedValue = results.CustomerId;
                            cboSITerm.selectedValue = results.TermId;
                            document.getElementById('SI_SIRemarks').value = results.Remarks;
                            document.getElementById('SI_ManualSINumber').value = results.ManualSINumber;
                            cboSISoldBy.selectedValue = results.SoldById;
                            cboSIPreparedBy.selectedValue = results.PreparedById;
                            cboSICheckedBy.selectedValue = results.CheckedById;
                            cboSIApprovedBy.selectedValue = results.ApprovedById;

                            document.getElementById('createdBy').innerHTML = results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = results.UpdatedDateTime;

                            if (results.IsLocked) {
                                cboSIDate.disabled = true;
                                document.getElementById('SI_DocReference').disabled = true;
                                cboSICustomer.disabled = true;
                                cboSITerm.disabled = true;
                                document.getElementById('SI_SIRemarks').disabled = true;
                                document.getElementById('SI_ManualSINumber').disabled = true;
                                cboSISoldBy.disabled = true;
                                cboSIPreparedBy.disabled = true;
                                cboSICheckedBy.disabled = true;
                                cboSIApprovedBy.disabled = true;

                                $("#btnLockSalesInvoice").prop("disabled", true);
                                $("#btnAddSalesInvoiceItem").prop("disabled", true);
                                $("#btnItemQuerySalesInvoiceItem").prop("disabled", true);

                                isLocked = true;
                            } else {
                                $("#btnJournalSalesInvoice").prop("disabled", true);
                                $("#btnUnlockSalesInvoice").prop("disabled", true);
                                $("#btnPrintSalesInvoice").prop("disabled", true);
                            }

                            createCboShowRows();
                            createSalesItemFlexGrid();
                            createInventoryFlexGrid();
                        } else {
                            alert("No Data");
                            window.location = "/Software/Sales";
                        }
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/Sales";
            }
        }

        // ==================
        // Lock Sales Invoice
        // ==================
        function btnLockSalesInvoiceOnclick() {
            var salesObject = new Object();
            var id = getParam('id');
            salesObject.SIDate = cboSIDate.value.toLocaleDateString();
            salesObject.CustomerId = cboSICustomer.selectedValue;
            salesObject.TermId = cboSITerm.selectedValue;
            salesObject.DocumentReference = document.getElementById('SI_DocReference').value;
            salesObject.ManualSINumber = document.getElementById('SI_ManualSINumber').value;
            salesObject.Remarks = document.getElementById('SI_SIRemarks').value;
            salesObject.SoldById = cboSISoldBy.selectedValue;
            salesObject.CheckedById = cboSICheckedBy.selectedValue;
            salesObject.ApprovedById = cboSIApprovedBy.selectedValue;
            var salesData = JSON.stringify(salesObject);

            var isValid = true;
            $('.requiredSales').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnLockSalesInvoice').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $("#btnJournalSalesInvoice").prop("disabled", true);
                $("#btnLockSalesInvoice").prop("disabled", true);
                $("#btnUnlockSalesInvoice").prop("disabled", true);
                $("#btnPrintSalesInvoice").prop("disabled", true);
                $("#btnCloseSalesInvoice").prop("disabled", true);

                $.ajax({
                    type: "PUT",
                    url: '/api/salesInvoice/lock/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: salesData,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnLockSalesInvoice').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnLockSalesInvoice").prop("disabled", false);
                            $("#btnCloseSalesInvoice").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnLockSalesInvoice').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnLockSalesInvoice").prop("disabled", false);
                            $("#btnCloseSalesInvoice").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnLockSalesInvoice').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnLockSalesInvoice").prop("disabled", false);
                            $("#btnCloseSalesInvoice").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ====================
        // Unlock Sales Invoice
        // ====================
        function btnUnlockSalesInvoiceOnclick() {
            var id = getParam('id');

            document.getElementById('btnUnlockSalesInvoice').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $("#btnJournalSalesInvoice").prop("disabled", true);
            $("#btnLockSalesInvoice").prop("disabled", true);
            $("#btnUnlockSalesInvoice").prop("disabled", true);
            $("#btnPrintSalesInvoice").prop("disabled", true);
            $("#btnCloseSalesInvoice").prop("disabled", true);

            $.ajax({
                type: "PUT",
                url: '/api/salesInvoice/unlock/' + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnUnlockSalesInvoice').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnJournalSalesInvoice").prop("disabled", false);
                        $("#btnUnlockSalesInvoice").prop("disabled", false);
                        $("#btnPrintSalesInvoice").prop("disabled", false);
                        $("#btnCloseSalesInvoice").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnUnlockSalesInvoice').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnJournalSalesInvoice").prop("disabled", false);
                        $("#btnUnlockSalesInvoice").prop("disabled", false);
                        $("#btnPrintSalesInvoice").prop("disabled", false);
                        $("#btnCloseSalesInvoice").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnUnlockSalesInvoice').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnJournalSalesInvoice").prop("disabled", false);
                        $("#btnUnlockSalesInvoice").prop("disabled", false);
                        $("#btnPrintSalesInvoice").prop("disabled", false);
                        $("#btnCloseSalesInvoice").prop("disabled", false);
                    }
                }
            });
        }

        // ========
        // Print SI
        // ========
        function btnPrintSalesInvoiceOnclick() {
            var salesId = getParam('id');
            var pirntLink = "/RepSales/Sales?SalesId=" + salesId;
            window.open(pirntLink, '_blank');
        }

        // ======================
        // Get Sales Invoice Item
        // ======================
        function getItem() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                var SIId = getParam('id');
                $.ajax({
                    url: '/api/salesInvoiceItem/list/' + SIId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        var totalAmount = 0;
                        var totalDiscountAmount = 0;
                        var totalVATAmount = 0;

                        if (results.length > 0) {
                            var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditSaleItem_OnClick()'><i class='fa fa-edit'></i> Edit</button>";
                            var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteSaleItem_OnClick()'><i class='fa fa-trash'></i> Delete</button>";
                            if (isLocked == true) {
                                btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditSaleItem_OnClick()'><i class='fa fa-eye'></i> View</button>";
                                btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteSaleItem_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                            }

                            for (i = 0; i < results.length; i++) {
                                itemsObservableArray.push({
                                    EditId: btnEditId,
                                    DeleteId: btnDeleteId,

                                    Id: results[i]["Id"],
                                    SIId: results[i]["SIId"],
                                    ItemId: results[i]["ItemId"],
                                    ItemCode: results[i]["ItemCode"],
                                    ItemDescription: results[i]["ItemDescription"],
                                    Particulars: results[i]["Particulars"],
                                    ItemInventoryId: results[i]["ItemInventoryId"],
                                    ItemInventoryCode: results[i]["ItemInventoryCode"],
                                    Quantity: results[i]["Quantity"],
                                    QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"],
                                    Price: results[i]["Price"],
                                    PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    DiscountId: results[i]["DiscountId"],
                                    Discount: results[i]["Discount"],
                                    DiscountRate: results[i]["DiscountRate"],
                                    DiscountRateDisplay: parseFloat(results[i]["DiscountRate"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    DiscountAmount: results[i]["DiscountAmount"],
                                    DiscountAmountDisplay: parseFloat(results[i]["DiscountAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    NetPrice: results[i]["NetPrice"],
                                    NetPriceDisplay: parseFloat(results[i]["NetPrice"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    Amount: results[i]["Amount"],
                                    AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    VATId: results[i]["VATId"],
                                    VAT: results[i]["VAT"],
                                    VATRate: results[i]["VATPercentage"],
                                    VATRateDisplay: parseFloat(results[i]["VATPercentage"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    VATAmount: results[i]["VATAmount"],
                                    VATAmountDisplay: parseFloat(results[i]["VATAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    BaseUnitId: results[i]["BaseUnitId"],
                                    BaseUnit: results[i]["BaseUnit"],
                                    BaseQuantity: results[i]["BaseQuantity"],
                                    BaseQuantityDisplay: parseFloat(results[i]["BaseQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    BasePrice: results[i]["BasePrice"],
                                    BasePriceDisplay: parseFloat(results[i]["BasePrice"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                });

                                totalAmount += results[i]["Amount"];
                                totalDiscountAmount += results[i]["DiscountAmount"] * results[i]["Quantity"];
                                totalVATAmount += results[i]["VATAmount"];
                            }
                        }

                        document.getElementById('totalSIAmount').value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        document.getElementById('totalSIDiscountAmount').value = parseFloat(totalDiscountAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        document.getElementById('totalSIVATAmount').value = parseFloat(totalVATAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

                        NProgress.done();
                    }
                });
            } else {
                NProgress.done();
            }

            return itemsObservableArray;
        }

        // =========================
        // Update Navigation Buttons
        // =========================
        function updateNavigateButtonsSIItems() {
            if (SIItemsCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGridSalesInvoiceItem').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridSalesInvoiceItem').style.display = 'block';
            if (SIItemsCollectionView.pageIndex === 0) {
                btnMoveToFirstPageGridSalesInvoiceItem.setAttribute('disabled', 'disabled');
                btnMoveToPreviousPageGridSalesInvoiceItem.setAttribute('disabled', 'disabled');
                btnMoveToNextPageGridSalesInvoiceItem.removeAttribute('disabled');
                btnMoveToLastPageGridSalesInvoiceItem.removeAttribute('disabled');
            } else if (SIItemsCollectionView.pageIndex === (SIItemsCollectionView.pageCount - 1)) {
                btnMoveToFirstPageGridSalesInvoiceItem.removeAttribute('disabled');
                btnMoveToPreviousPageGridSalesInvoiceItem.removeAttribute('disabled');
                btnMoveToNextPageGridSalesInvoiceItem.setAttribute('disabled', 'disabled');
                btnMoveToLastPageGridSalesInvoiceItem.setAttribute('disabled', 'disabled');
            } else {
                btnMoveToFirstPageGridSalesInvoiceItem.removeAttribute('disabled');
                btnMoveToPreviousPageGridSalesInvoiceItem.removeAttribute('disabled');
                btnMoveToNextPageGridSalesInvoiceItem.removeAttribute('disabled');
                btnMoveToLastPageGridSalesInvoiceItem.removeAttribute('disabled');
            }
            btnCurrentPageGridSalesInvoiceItem.innerHTML = (SIItemsCollectionView.pageIndex + 1) + ' / ' + SIItemsCollectionView.pageCount;
        }

        // ====================================
        // Refresh Sales Invoice Item Flex Grid
        // ====================================
        function refreshSaleSItemFlexGrid() {
            SIItemsCollectionView = new wijmo.collections.CollectionView(getItem());
            SIItemsCollectionView.canFilter = true;
            SIItemsCollectionView.pageSize = cboSalesInvoiceItemShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#SalesInvoiceItemInputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                SIItemsCollectionView.refresh();
            });

            SIItemsCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.VAT.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Discount.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1);
            }

            SIItemsCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsSIItems();
            });

            SIItemFlexGrid.itemsSource = SIItemsCollectionView;
            SIItemFlexGrid.trackChanges = true;
        }

        // ================================
        // Get Sales Invoice Item Flex Grid
        // ================================
        function createSalesItemFlexGrid() {
            SIItemsCollectionView = new wijmo.collections.CollectionView(getItem());
            SIItemsCollectionView.canFilter = true;
            SIItemsCollectionView.pageSize = cboSalesInvoiceItemShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#SalesInvoiceItemInputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                SIItemsCollectionView.refresh();
            });

            SIItemsCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.VAT.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Discount.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1);
            }

            SIItemsCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsSIItems();
            });

            SIItemFlexGrid = new wijmo.grid.FlexGrid('#salesInvoiceItemFlexGrid');
            SIItemFlexGrid.initialize({
                columns: [
                    @{
                        if (canEdit)
                        {
                            <text>
                                {
                                    "header": "Edit",
                                    "binding": "EditId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                        if (canDelete)
                        {
                            <text>
                                {
                                    "header": "Delete",
                                    "binding": "DeleteId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                    }
                    {
                        "header": "Code",
                        "binding": "ItemCode",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Description",
                        "binding": "ItemDescription",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "ItemInventoryCode",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Price",
                        "binding": "PriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Type",
                        "binding": "Discount",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Rate",
                        "binding": "DiscountRateDisplay",
                        "allowSorting": true,
                        "width": 100,
                        "align": "right",
                        "isContentHtml": true
                    },
                    {
                        "header": "Amount",
                        "binding": "DiscountAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Net Price",
                        "binding": "NetPriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Type",
                        "binding": "VAT",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Rate",
                        "binding": "VATRateDisplay",
                        "allowSorting": true,
                        "width": 100,
                        "align": "right",
                        "isContentHtml": true
                    },
                    {
                        "header": "Amount",
                        "binding": "VATAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100,
                    },
                    {
                        "header": "Unit",
                        "binding": "BaseUnit",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Quantity",
                        "binding": "BaseQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                    {
                        "header": "Price",
                        "binding": "BasePriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: SIItemsCollectionView,
                isReadOnly: true,
                @{
                    if (canEdit)
                    {
                        if (canDelete)
                        {
                            <text>
                                frozenColumns: 2,
                            </text>
                        }
                        else
                        {
                            <text>
                                frozenColumns: 1,
                            </text>
                        }
                    }
                    else
                    {
                        if (canDelete)
                        {
                            <text>
                                frozenColumns: 1,
                            </text>
                        }
                        else
                        {
                            <text>
                                frozenColumns: 0,
                            </text>
                        }
                    }
                }
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            SIItemFlexGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            SIItemFlexGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            SIItemFlexGrid.columnHeaders.rows.push(hr);
            SIItemFlexGrid.columnHeaders.rows[0].allowMerging = true;

            @{
                if (canEdit)
                {
                    if (canDelete)
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 19; i++) {
                                if (i == 0) {
                                    columnName = "Edit";
                                } else if (i == 1) {
                                    columnName = "Delete";
                                } else if (i == 2) {
                                    columnName = "Code";
                                } else if (i == 3) {
                                    columnName = "Description";
                                } else if (i == 4) {
                                    columnName = "Particulars";
                                } else if (i == 5) {
                                    columnName = "Inventory Code";
                                } else if (i == 6) {
                                    columnName = "Quantity";
                                } else if (i == 7) {
                                    columnName = "Unit";
                                } else if (i == 8) {
                                    columnName = "Price";
                                } else {
                                    if (i >= 9) {
                                        columnName = "Discount";
                                        for (var j = 9; j <= 11; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 12 && i <= 13) {
                                        if (i == 12) {
                                            columnName = "Net Price";
                                            SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        } else if (i == 13) {
                                            columnName = "Amount";
                                            SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        }

                                    }

                                    if (i >= 14) {
                                        columnName = "VAT";
                                        for (var j = 14; j <= 16; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 17) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 17; j <= 19; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 8) {
                                    SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                    else
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 16; i++) {
                                if (i == 0) {
                                    columnName = "Edit";
                                } else if (i == 1) {
                                    columnName = "Code";
                                } else if (i == 2) {
                                    columnName = "Description";
                                } else if (i == 3) {
                                    columnName = "Particulars";
                                } else if (i == 4) {
                                    columnName = "Inventory Code";
                                } else if (i == 5) {
                                    columnName = "Quantity";
                                } else if (i == 6) {
                                    columnName = "Unit";
                                } else if (i == 7) {
                                    columnName = "Price";
                                } else {
                                    if (i >= 8) {
                                        columnName = "Discount";
                                        for (var j = 8; j <= 10; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 11 && i <= 12) {
                                        if (i == 11) {
                                            columnName = "Net Price";
                                            SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        } else if (i == 12) {
                                            columnName = "Amount";
                                            SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        }

                                    }

                                    if (i >= 13) {
                                        columnName = "VAT";
                                        for (var j = 13; j <= 15; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 16) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 16; j <= 18; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 7) {
                                    SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                }
                else
                {
                    if (canDelete)
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 16; i++) {
                                if (i == 0) {
                                    columnName = "Delete";
                                } else if (i == 1) {
                                    columnName = "Code";
                                } else if (i == 2) {
                                    columnName = "Description";
                                } else if (i == 3) {
                                    columnName = "Particulars";
                                } else if (i == 4) {
                                    columnName = "Inventory Code";
                                } else if (i == 5) {
                                    columnName = "Quantity";
                                } else if (i == 6) {
                                    columnName = "Unit";
                                } else if (i == 7) {
                                    columnName = "Price";
                                } else {
                                    if (i >= 8) {
                                        columnName = "Discount";
                                        for (var j = 8; j <= 10; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 11 && i <= 12) {
                                        if (i == 11) {
                                            columnName = "Net Price";
                                            SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        } else if (i == 12) {
                                            columnName = "Amount";
                                            SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        }

                                    }

                                    if (i >= 13) {
                                        columnName = "VAT";
                                        for (var j = 13; j <= 15; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 16) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 16; j <= 18; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 7) {
                                    SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                    else
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 15; i++) {
                                if (i == 0) {
                                    columnName = "Code";
                                } else if (i == 1) {
                                    columnName = "Description";
                                } else if (i == 2) {
                                    columnName = "Particulars";
                                } else if (i == 3) {
                                    columnName = "Inventory Code";
                                } else if (i == 4) {
                                    columnName = "Quantity";
                                } else if (i == 5) {
                                    columnName = "Unit";
                                } else if (i == 6) {
                                    columnName = "Price";
                                } else {
                                    if (i >= 7) {
                                        columnName = "Discount";
                                        for (var j = 7; j <= 9; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 10 && i <= 11) {
                                        if (i == 10) {
                                            columnName = "Net Price";
                                            SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        } else if (i == 11) {
                                            columnName = "Amount";
                                            SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                        }

                                    }

                                    if (i >= 12) {
                                        columnName = "VAT";
                                        for (var j = 12; j <= 14; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }

                                    if (i >= 15) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 15; j <= 17; j++) {
                                            SIItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            SIItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 6) {
                                    SIItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    SIItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                }
            }

            updateNavigateButtonsSIItems();

            btnMoveToFirstPageGridSalesInvoiceItem.addEventListener('click', function () {
                SIItemsCollectionView.moveToFirstPage();
                updateNavigateButtonsSIItems();
            });

            btnMoveToPreviousPageGridSalesInvoiceItem.addEventListener('click', function () {
                SIItemsCollectionView.moveToPreviousPage();
                updateNavigateButtonsSIItems();
            });

            btnMoveToNextPageGridSalesInvoiceItem.addEventListener('click', function () {
                SIItemsCollectionView.moveToNextPage();
                updateNavigateButtonsSIItems();
            });

            btnMoveToLastPageGridSalesInvoiceItem.addEventListener('click', function () {
                SIItemsCollectionView.moveToLastPage();
                updateNavigateButtonsSIItems();
            });
        }

        // ======================================
        // GET Item Id, Manual Code and Component
        // ======================================
        function getArticleItemForManualCodeAndComponent(itemId, inventoryCodeId, unitId, priceValue, discountId, VATId) {
            var articleItemsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoiceItem/dropdown/list/item',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleItemsObservableArray.push({
                                Id: results[i]["Id"],
                                ItemCode: results[i]["ManualArticleCode"],
                                ItemDescription: results[i]["Article"],
                                InputTaxId: results[i]["InputTaxId"],
                                OutputTaxId: results[i]["OutputTaxId"],
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        if (!isLocked) {
                            disabled = false;
                            $("#cmdSaveSaleItemsButton").prop("disabled", false);
                        }
                    } else {
                        $("#cmdSaveSaleItemsButton").prop("disabled", true);
                    }

                    cboItemCode.dispose();
                    cboItemCode = new wijmo.input.ComboBox('#cboItemCode', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: articleItemsObservableArray,
                        displayMemberPath: "ItemCode",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboItemDescription.selectedValue = this.selectedValue;
                        }
                    });

                    cboItemDescription.dispose();
                    cboItemDescription = new wijmo.input.ComboBox('#cboItemDescription', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: articleItemsObservableArray,
                        displayMemberPath: "ItemDescription",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            $("#cmdSaveSaleItemsButton").prop("disabled", false);
                            cboItemCode.selectedValue = this.selectedValue;
                            getItemInventoryCodeForComboBox(inventoryCodeId, unitId, priceValue, discountId, VATId);
                            computation();
                        }
                    });

                    getItemInventoryCodeForComboBox(inventoryCodeId, unitId, priceValue, discountId, VATId);
                }
            });
        }

        // =======================
        // Get Item Inventory Code
        // =======================
        function getItemInventoryCodeForComboBox(inventoryCodeId, unitId, priceValue, discountId, VATId) {
            var inventoryCodesObservableArray = new wijmo.collections.ObservableArray();
            if (cboItemDescription.selectedValue != null) {
                var articleId = cboItemDescription.selectedValue;
                $.ajax({
                    url: '/api/salesInvoiceItem/dropdown/list/itemInventoryCode/' + articleId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                inventoryCodesObservableArray.push({
                                    Id: results[i]["Id"],
                                    InventoryCode: results[i]["InventoryCode"]
                                });
                            }
                        }

                        var disabled = true;
                        if (results.length > 0) {
                            var InventoryType = "@ViewData["InventoryType"]";
                            if (InventoryType == "Moving Average") {
                                disabled = true;
                            } else {
                                if (!isLocked) {
                                    disabled = false;
                                }
                            }
                        }

                        cboInventoryCode.dispose();
                        cboInventoryCode = new wijmo.input.ComboBox('#cboInventoryCode', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: inventoryCodesObservableArray,
                            displayMemberPath: "InventoryCode",
                            selectedValuePath: "Id",
                            selectedValue: inventoryCodeId
                        });

                        getSalesItemUnitForComboBox(unitId, priceValue, discountId, VATId);
                    }
                });
            } else {
                cboInventoryCode.dispose();
                cboInventoryCode = new wijmo.input.ComboBox('#cboInventoryCode', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: inventoryCodesObservableArray,
                    displayMemberPath: "InventoryCode",
                    selectedValuePath: "Id",
                    selectedValue: inventoryCodeId
                });

                getSalesItemUnitForComboBox(unitId, priceValue, discountId, VATId);
            }
        }

        // =============
        // Get Item Unit
        // =============
        function getSalesItemUnitForComboBox(unitId, priceValue, discountId, VATId) {
            var itemUnitsObservableArray = new wijmo.collections.ObservableArray();
            if (cboItemDescription.selectedValue != null) {
                var itemId = cboItemDescription.selectedValue;
                $.ajax({
                    url: '/api/salesInvoiceItem/dropdown/list/itemUnit/' + itemId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                itemUnitsObservableArray.push({
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"]
                                });
                            }
                        }

                        var disabled = true;
                        if (results.length > 0) {
                            if (!isLocked) {
                                disabled = false;
                            }
                        } else {
                            $("#cmdSaveSaleItemsButton").prop("disabled", true);
                        }

                        cboItemUnit.dispose();
                        cboItemUnit = new wijmo.input.ComboBox('#cboItemUnit', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: itemUnitsObservableArray,
                            displayMemberPath: "Unit",
                            selectedValuePath: "UnitId",
                            selectedValue: unitId
                        });

                        getSalesItemPriceForComboBox(priceValue, discountId, VATId);
                    }
                });
            } else {
                cboItemUnit.dispose();
                cboItemUnit = new wijmo.input.ComboBox('#cboItemUnit', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: itemUnitsObservableArray,
                    displayMemberPath: "Unit",
                    selectedValuePath: "UnitId",
                    selectedValue: unitId
                });

                getSalesItemPriceForComboBox(priceValue, discountId, VATId);
                $("#cmdSaveSaleItemsButton").prop("disabled", true);
            }
        }

        // ==============
        // Get Item Price
        // ==============
        function getSalesItemPriceForComboBox(priceValue, discountId, VATId) {
            var itemPricesObservableArray = new wijmo.collections.ObservableArray();
            if (cboItemDescription.selectedValue != null) {
                var itemId = cboItemDescription.selectedValue;
                $.ajax({
                    url: '/api/salesInvoiceItem/dropdown/list/itemPrice/' + itemId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (itemPriceListresults) {
                        if (itemPriceListresults.length > 0) {
                            for (i = 0; i < itemPriceListresults.length; i++) {
                                itemPricesObservableArray.push({
                                    Id: itemPriceListresults[i]["Id"],
                                    ArticleId: itemPriceListresults[i]["ArticleId"],
                                    Article: itemPriceListresults[i]["Article"],
                                    PriceDescription: itemPriceListresults[i]["PriceDescription"] + " (" + formatDecimalValues(itemPriceListresults[i]["Price"]) + ")",
                                    PriceDescriptionName: itemPriceListresults[i]["PriceDescription"],
                                    Price: itemPriceListresults[i]["Price"]
                                });
                            }
                        }

                        var disabled = true;
                        if (itemPriceListresults.length > 0) {
                            if (!isLocked) {
                                disabled = false;
                            }
                        } else {
                            $("#cmdSaveSaleItemsButton").prop("disabled", true);
                        }

                        cboItemPrice.dispose();
                        cboItemPrice = new wijmo.input.ComboBox('#cboItemPrice', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: itemPricesObservableArray,
                            displayMemberPath: "PriceDescription",
                            selectedValuePath: "Price",
                            selectedValue: priceValue,
                            onSelectedIndexChanged: function () {
                                if (cboItemPrice.selectedValue != null) {
                                    var isPriceValueFound = false;
                                    for (var i = 0; i < itemPricesObservableArray.length; i++) {
                                        if (itemPricesObservableArray[i]["Price"] === parseFloat(priceValue)) {
                                            isPriceValueFound = true;
                                            break;
                                        }
                                    }

                                    if (!isPriceValueFound) {
                                        var upperCaseVariablePrice = "VARIABLE";
                                        var lowerCaseVariablePrice = "variable";
                                        var standardCaseVariablePrice = "Variable";

                                        if ((cboItemPrice.selectedItem["PriceDescriptionName"] === upperCaseVariablePrice || cboItemPrice.selectedItem["PriceDescriptionName"] === lowerCaseVariablePrice) || cboItemPrice.selectedItem["PriceDescriptionName"] === standardCaseVariablePrice) {
                                            if (cboItemPrice.selectedItem["Price"] === parseFloat(1)) {

                                                if (!isLocked) {
                                                    document.getElementById("saleItem_Price").disabled = false;
                                                }

                                                if (parseFloat(priceValue) != 0) {
                                                    document.getElementById("saleItem_Price").value = formatDecimalValues(priceValue);
                                                } else {
                                                    document.getElementById("saleItem_Price").value = formatDecimalValues(cboItemPrice.selectedItem["Price"]);
                                                }
                                            }
                                        } else {
                                            document.getElementById("saleItem_Price").disabled = true;
                                            document.getElementById("saleItem_Price").value = formatDecimalValues(cboItemPrice.selectedItem["Price"]);
                                        }
                                    } else {
                                        document.getElementById("saleItem_Price").disabled = true;
                                        document.getElementById("saleItem_Price").value = formatDecimalValues(cboItemPrice.selectedItem["Price"]);
                                    }
                                } else {
                                    document.getElementById("saleItem_Price").value = formatDecimalValues(0);
                                }

                                computation();
                            }
                        });

                        if (cboItemPrice.selectedValue != null) {
                            var isPriceValueFound = false;
                            for (var i = 0; i < itemPricesObservableArray.length; i++) {
                                if (itemPricesObservableArray[i]["Price"] === parseFloat(priceValue)) {
                                    isPriceValueFound = true;
                                    break;
                                }
                            }

                            if (!isPriceValueFound) {
                                var upperCaseVariablePrice = "VARIABLE";
                                var lowerCaseVariablePrice = "variable";
                                var standardCaseVariablePrice = "Variable";

                                var isPriceDescriptionFound = false;
                                var priceDescriptionName = "";
                                var priceDescription = "";

                                for (var i = 0; i < itemPricesObservableArray.length; i++) {
                                    if ((itemPricesObservableArray[i].PriceDescriptionName === upperCaseVariablePrice || itemPricesObservableArray[i].PriceDescriptionName === lowerCaseVariablePrice) || itemPricesObservableArray[i].PriceDescriptionName === standardCaseVariablePrice) {
                                        priceDescriptionName = itemPricesObservableArray[i].PriceDescriptionName;

                                        if (itemPricesObservableArray[i].Price === parseFloat(1)) {
                                            isPriceDescriptionFound = true;
                                            priceDescription = priceDescriptionName + " (" + formatDecimalValues(1) + ")";

                                            break;
                                        }
                                    }
                                }

                                if (!isPriceDescriptionFound) {
                                    priceDescription = priceDescriptionName;
                                }

                                if (isPriceDescriptionFound) {
                                    cboItemPrice.selectedValuePath = "PriceDescription";
                                } else {
                                    cboItemPrice.selectedValuePath = "PriceDescriptionName";
                                }

                                setTimeout(function () {
                                    cboItemPrice.selectedValue = priceDescription;

                                    if (parseFloat(priceValue) != 0) {
                                        document.getElementById("saleItem_Price").value = formatDecimalValues(priceValue);
                                    } else {
                                        document.getElementById("saleItem_Price").value = formatDecimalValues(cboItemPrice.selectedItem["Price"]);
                                    }
                                }, 50);

                                if (isPriceDescriptionFound) {
                                    if (!isLocked) {
                                        document.getElementById("saleItem_Price").disabled = false;
                                    }
                                } else {
                                    document.getElementById("saleItem_Price").disabled = true;
                                }
                            } else {
                                document.getElementById("saleItem_Price").disabled = true;
                                document.getElementById("saleItem_Price").value = formatDecimalValues(cboItemPrice.selectedItem["Price"]);
                            }
                        } else {
                            document.getElementById("saleItem_Price").value = formatDecimalValues(0);
                        }

                        getDiscountForComboBox(discountId, VATId);
                    }
                });
            } else {
                cboItemPrice.dispose();
                cboItemPrice = new wijmo.input.ComboBox('#cboItemPrice', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: itemPricesObservableArray,
                    displayMemberPath: "PriceDescription",
                    selectedValuePath: "Price",
                    selectedValue: priceValue
                });

                document.getElementById("saleItem_Price").value = formatDecimalValues(0);

                getDiscountForComboBox(discountId, VATId);
                $("#cmdSaveSaleItemsButton").prop("disabled", true);
            }
        }

        // ============
        // Get Discount
        // ============
        function getDiscountForComboBox(discountId, VATId) {
            var discountsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoiceItem/dropdown/list/discount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            discountsObservableArray.push({
                                Id: results[i]["Id"],
                                Discount: results[i]["IsInclusive"] != false ? results[i]["Discount"] + " (Inclusive)" : results[i]["Discount"] + " (Not Inclusive)",
                                DiscountName: results[i]["Discount"],
                                DiscountRate: results[i]["DiscountRate"],
                                IsInclusive: results[i]["IsInclusive"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        if (!isLocked) {
                            disabled = false;
                        }
                    } else {
                        $("#cmdSaveSaleItemsButton").prop("disabled", true);
                    }

                    var defaultDiscount = discountId;
                    if (salesItemId == 0) {
                        defaultDiscount = "@ViewData["defaultSalesInvoiceDiscountId"]";
                    }

                    cboItemDiscount.dispose();
                    cboItemDiscount = new wijmo.input.ComboBox('#cboItemDiscount', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: discountsObservableArray,
                        displayMemberPath: "Discount",
                        selectedValuePath: "Id",
                        selectedValue: defaultDiscount,
                        onSelectedIndexChanged: function () {
                            document.getElementById("saleItem_DiscountRate").value = formatDecimalValues(this.selectedItem["DiscountRate"]);
                            computation();
                        }
                    });

                    if (salesItemId == 0) {
                        document.getElementById("saleItem_DiscountRate").value = formatDecimalValues(0);
                        if (cboItemDiscount.selectedValue != null) {
                            document.getElementById("saleItem_DiscountRate").value = formatDecimalValues(cboItemDiscount.selectedItem["DiscountRate"]);
                        }
                    }

                    getTaxTypeForComboBox(VATId);
                }
            });
        }

        // ===================
        // Get Artile Tax Type
        // ===================
        function getTaxTypeForComboBox(VATId) {
            var taxTypesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/salesInvoiceItem/dropdown/list/TAX',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (taxTypeListresults) {
                    if (taxTypeListresults.length > 0) {
                        for (i = 0; i < taxTypeListresults.length; i++) {
                            taxTypesObservableArray.push({
                                Id: taxTypeListresults[i]["Id"],
                                TaxType: taxTypeListresults[i]["TaxType"],
                                TaxRate: taxTypeListresults[i]["TaxRate"],
                                IsInclusive: taxTypeListresults[i]["IsInclusive"],
                            });
                        }
                    }

                    var disabled = true;
                    if (taxTypeListresults.length > 0) {
                        if (!isLocked) {
                            disabled = false;
                        }
                    } else {
                        $("#cmdSaveSaleItemsButton").prop("disabled", true);
                    }

                    var VATIdValue = VATId;
                    if (salesItemId == 0) {
                        if (cboItemDescription.selectedValue != null) {
                            VATIdValue = cboItemDescription.selectedItem["OutputTaxId"];
                        } else {
                            VATIdValue = 0;
                        }
                    }

                    cboItemVAT.dispose();
                    cboItemVAT = new wijmo.input.ComboBox('#cboItemVAT', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: taxTypesObservableArray,
                        displayMemberPath: "TaxType",
                        selectedValuePath: "Id",
                        selectedValue: VATIdValue,
                        onSelectedIndexChanged: function () {
                            document.getElementById("saleItem_VATRate").value = formatDecimalValues(this.selectedItem["TaxRate"]);
                            computation();
                        }
                    });

                    if (salesItemId == 0) {
                        document.getElementById("saleItem_VATRate").value = formatDecimalValues(0);
                        if (cboItemVAT.selectedValue != null) {
                            document.getElementById("saleItem_VATRate").value = formatDecimalValues(cboItemVAT.selectedItem["TaxRate"]);
                        }
                    }

                    computation();

                    $("#loadingModalItem").hide();
                    $("#salesLineDetailForm").show();
                }
            });
        }

        // ===========
        // Computation
        // ===========
        function computation() {
            var price = document.getElementById('saleItem_Price').value.replace(/\,/g, '');
            var discountRate = document.getElementById('saleItem_DiscountRate').value.replace(/\,/g, '');
            var discountAmount = price * (discountRate / 100);
            document.getElementById('saleItem_DiscountAmount').value = formatDecimalValues(discountAmount);

            var netPrice = price - discountAmount;
            document.getElementById('saleItem_NetPrice').value = formatDecimalValues(netPrice);

            var quantity = document.getElementById('saleItem_Quantity').value.replace(/\,/g, '');
            var amount = netPrice * quantity;
            document.getElementById('saleItem_Amount').value = formatDecimalValues(amount);

            var VATPercentage = document.getElementById('saleItem_VATRate').value.replace(/\,/g, '');
            if (cboItemVAT.selectedItem["IsInclusive"]) {
                VATAmount = amount / (1 + (VATPercentage / 100)) * (VATPercentage / 100);
            } else {
                VATAmount = amount * (VATPercentage / 100);
            }

            document.getElementById('saleItem_VATAmount').value = formatDecimalValues(VATAmount);
        }

        $("#saleItem_Quantity").keyup(function (e) {
            computation();
        });

        $("#saleItem_Price").keyup(function (e) {
            computation();
        });

        $("#saleItem_DiscountRate").keyup(function (e) {
            computation();
        });

        $("#saleItem_DiscountAmount").keyup(function (e) {
            var price = document.getElementById('saleItem_Price').value.replace(/\,/g, '');
            var discountAmount = document.getElementById('saleItem_DiscountAmount').value.replace(/\,/g, '');
            var discountRate = (discountAmount / price) * 100;
            document.getElementById('saleItem_DiscountRate').value = formatDecimalValues(discountRate);

            var netPrice = price - discountAmount;
            document.getElementById('saleItem_NetPrice').value = formatDecimalValues(netPrice);

            var quantity = document.getElementById('saleItem_Quantity').value.replace(/\,/g, '');
            var amount = netPrice * quantity;
            document.getElementById('saleItem_Amount').value = formatDecimalValues(amount);

            var VATPercentage = document.getElementById('saleItem_VATRate').value.replace(/\,/g, '');
            if (cboItemVAT.selectedItem["IsInclusive"]) {
                VATAmount = amount / (1 + (VATPercentage / 100)) * (VATPercentage / 100);
            } else {
                VATAmount = amount * (VATPercentage / 100);
            }

            document.getElementById('saleItem_VATAmount').value = formatDecimalValues(VATAmount);
        });

        // =============
        // ADD Sale Item
        // =============
        function btnAddSalesInvoiceItemOnclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#salesLineDetailForm").hide();

            document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveSaleItemsButton").prop("disabled", true);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            salesItemId = 0;
            getArticleItemForManualCodeAndComponent(0,0,0,0,0,0,0);
            document.getElementById('saleItem_Particulars').value = "NA";
            document.getElementById('saleItem_Quantity').value = formatDecimalValues(1);
        }

        // ==============
        // EDIT Sale Item
        // ==============
        function btnEditSaleItem_OnClick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#salesLineDetailForm").hide();

            document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveSaleItemsButton").prop("disabled", true);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            SIItemsCollectionView.editItem(SIItemsCollectionView.currentItem);
            var item = SIItemsCollectionView.currentEditItem;
            getArticleItemForManualCodeAndComponent(item.ItemId, item.ItemInventoryId, item.UnitId, item.Price, item.DiscountId, item.VATId);
            salesItemId = item.Id;
            document.getElementById('saleItem_Particulars').value = item.Particulars;
            document.getElementById('saleItem_Quantity').value = formatDecimalValues(item.Quantity);
            document.getElementById('saleItem_Price').value = formatDecimalValues(item.Price);
            document.getElementById('saleItem_DiscountRate').value = formatDecimalValues(item.DiscountRate);
            document.getElementById('saleItem_DiscountAmount').value = formatDecimalValues(item.DiscountAmount);
            document.getElementById('saleItem_NetPrice').value = formatDecimalValues(item.NetPrice);
            document.getElementById('saleItem_Amount').value = formatDecimalValues(item.Amount);
            document.getElementById('saleItem_VATRate').value = formatDecimalValues(item.VATRate);
            document.getElementById('saleItem_VATAmount').value = formatDecimalValues(item.VATAmount);

            if (isLocked) {
                document.getElementById('saleItem_Particulars').disabled = true;
                document.getElementById('saleItem_Quantity').disabled = true;
                document.getElementById('saleItem_Price').disabled = true;
                document.getElementById('saleItem_DiscountRate').disabled = true;
                document.getElementById('saleItem_DiscountAmount').disabled = true;
                document.getElementById('saleItem_NetPrice').disabled = true;
                document.getElementById('saleItem_Amount').disabled = true;
                document.getElementById('saleItem_VATRate').disabled = true;
                document.getElementById('saleItem_VATAmount').disabled = true;
                $("#cmdSaveSaleItemsButton").prop("disabled", true);
                $("#cmdSaveSaleItemsButton").hide();
            } else {
                $("#cmdSaveSaleItemsButton").show();
            }
        }

        // ==============
        // SAVE Sale Item
        // ==============
        function cmdSaleItemsSaveButton_OnClick() {
            var saleItemObject = new Object();
            var SIId = getParam('id');
            saleItemObject.SIId = SIId;
            saleItemObject.ItemId = cboItemDescription.selectedValue;
            saleItemObject.ItemInventoryId = cboInventoryCode.selectedValue;
            saleItemObject.Particulars = document.getElementById('saleItem_Particulars').value;
            saleItemObject.UnitId = cboItemUnit.selectedValue;
            saleItemObject.Quantity = document.getElementById('saleItem_Quantity').value;
            saleItemObject.Price = document.getElementById('saleItem_Price').value;
            saleItemObject.DiscountId = cboItemDiscount.selectedValue;
            saleItemObject.DiscountRate = document.getElementById('saleItem_DiscountRate').value;
            saleItemObject.VATId = cboItemVAT.selectedValue;
            saleItemObject.VATPercentage = document.getElementById('saleItem_VATRate').value;
            var saleItemData = JSON.stringify(saleItemObject);

            var isValid = true;
            $('.requiredSaleItem').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $("#cmdSaveSaleItemsButton").prop("disabled", true);
                $("#cmdSaleItemsDetailCloseButton").prop("disabled", true);

                if (salesItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/salesInvoiceItem/add/' + SIId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: saleItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Succesful");
                                $('#saleItemsEdit').modal('hide');
                                refreshSaleSItemFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/salesInvoiceItem/update/' + salesItemId + '/' + SIId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: saleItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#saleItemsEdit').modal('hide');
                                refreshSaleSItemFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                $('#saleItemsEdit').modal('hide');
                                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                $('#saleItemsEdit').modal('hide');
                                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                $('#saleItemsEdit').modal('hide');
                                document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ================
        // Delete Sale Item
        // ================
        function btnDeleteSaleItem_OnClick() {
            $('#deletSaleItemsConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdConfirmDeleteSaleItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#cmdConfirmDeleteSaleItems").prop("disabled", false);
            $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", false);
        }

        // Sales item confirm delete
        function cmdSaleItemsConfirmDeleteButton_OnClick() {
            document.getElementById('cmdConfirmDeleteSaleItems').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $("#cmdConfirmDeleteSaleItems").prop("disabled", true);
            $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", true);

            SIItemsCollectionView.editItem(SIItemsCollectionView.currentItem);
            var id = SIItemsCollectionView.currentEditItem.Id;
            var SIId = SIItemsCollectionView.currentEditItem.SIId;

            $.ajax({
                url: '/api/salesInvoiceItem/delete/' + id + '/' + SIId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#deletSaleItemsConfirm').modal('hide');
                        refreshSaleSItemFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#deletSaleItemsConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteSaleItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdConfirmDeleteSaleItems").prop("disabled", false);
                        $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#deletSaleItemsConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteSaleItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdConfirmDeleteSaleItems").prop("disabled", false);
                        $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#deletSaleItemsConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteSaleItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdConfirmDeleteSaleItems").prop("disabled", false);
                        $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ===========
        // Get Journal
        // ===========
        function getJournalListForSales() {
            var SIId = getParam('id');
            var journalsObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/jounal/salesInvoice/list/' + SIId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var journalDateResult = new Date(results[i]["JournalDate"])
                            var journalDate = ('0' + (journalDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + journalDateResult.getDate()).slice(-2) + '-' + journalDateResult.getFullYear();

                            journalsObservableArray.push({
                                Branch: results[i]["Branch"],
                                JournalDate: journalDate,
                                AccountCode: results[i]["AccountCode"],
                                Account: results[i]["Account"],
                                Article: results[i]["Article"],
                                DebitAmountDisplay: parseFloat(results[i]["DebitAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                CreditAmountDisplay: parseFloat(results[i]["CreditAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                            });

                            var debitAmountTotal = 0;
                            var creditAmountTotal = 0;

                            var a = 0;
                            while (a < results.length) {
                                debitAmountTotal += results[a]["DebitAmount"];
                                creditAmountTotal += results[a]["CreditAmount"];
                                a++;
                            }
                        }

                        document.getElementById('totalDebitInJournal').value = debitAmountTotal.toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        document.getElementById('totalCreditInJournal').value = creditAmountTotal.toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        var variance = debitAmountTotal - creditAmountTotal;
                        document.getElementById('variance').value = variance.toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    }

                    $("#loadingJournalGridList").hide();
                    $("#journal_Content").show();
                }
            });

            return journalsObservableArray;
        }

        // ============
        // Journal List
        // ============
        function btnJournalSalesInvoiceOnclick() {
            $('#journalDetail').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingJournalGridList").show();
            document.getElementById("loadingJournalGridList").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#journal_Content").hide();

            setTimeout(function () {
                createJournalFlexGrid();
            }, 500)
        }

        // =================
        // Journal FlexGrid
        // ================
        function createJournalFlexGrid() {
            journalCollectionView = new wijmo.collections.CollectionView(getJournalListForSales());

            journalFlexGrid.dispose();
            journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');
            journalFlexGrid.initialize({
                columns: [
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "2.5*"
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": "1.5*"
                    },
                    {
                        "header": "Code",
                        "binding": "AccountCode",
                        "allowSorting": true,
                        "width": "1.8*"
                    },
                    {
                        "header": "Account",
                        "binding": "Account",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Article",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*",
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalFlexGrid.trackChanges = true;
        }

        // =====================
        // GET Inventory Entries
        // =====================
        function getInventoryEntries() {
            var SIId = getParam('id');
            var inventoryObservableArray = new wijmo.collections.ObservableArray;

            $.ajax({
                url: '/api/inventory/salesInvoice/list/' + SIId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var InventoryDateResult = new Date(results[i]["InventoryDate"])
                            var InventoryDate = ('0' + (InventoryDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + InventoryDateResult.getDate()).slice(-2) + '-' + InventoryDateResult.getFullYear();

                            inventoryObservableArray.push({
                                Id: results[i]["Id"],
                                InventoryDate: InventoryDate,
                                Branch: results[i]["Branch"],
                                Article: results[i]["Article"],
                                Particulars: results[i]["Particulars"],
                                ArticleInventoryCode: results[i]["ArticleInventoryCode"],
                                Quantity: results[i]["Quantity"],
                                QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                ArticleUnit: results[i]["ArticleUnit"],
                                Amount: results[i]["Amount"],
                                AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return inventoryObservableArray;
        }

        // =========================
        // Update Navigation Buttons
        // =========================
        function updateNavigateButtonsInventoryEntry() {
            if (inventoryCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGridInventoryEntry').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridInventoryEntry').style.display = 'block';
            if (inventoryCollectionView.pageIndex === 0) {
                btnMoveToFirstPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnMoveToPreviousPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnMoveToNextPageGridInventoryEntry.removeAttribute('disabled');
                btnMoveToLastPageGridInventoryEntry.removeAttribute('disabled');
            } else if (inventoryCollectionView.pageIndex === (inventoryCollectionView.pageCount - 1)) {
                btnMoveToFirstPageGridInventoryEntry.removeAttribute('disabled');
                btnMoveToPreviousPageGridInventoryEntry.removeAttribute('disabled');
                btnMoveToNextPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnMoveToLastPageGridInventoryEntry.setAttribute('disabled', 'disabled');
            } else {
                btnMoveToFirstPageGridInventoryEntry.removeAttribute('disabled');
                btnMoveToPreviousPageGridInventoryEntry.removeAttribute('disabled');
                btnMoveToNextPageGridInventoryEntry.removeAttribute('disabled');
                btnMoveToLastPageGridInventoryEntry.removeAttribute('disabled');
            }
            btnCurrentPageGridInventoryEntry.innerHTML = (inventoryCollectionView.pageIndex + 1) + ' / ' + inventoryCollectionView.pageCount;
        }

        // ==========================
        // Refresh Inventory FlexGrid
        // ==========================
        function refreshInventoryFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntries());
            inventoryCollectionView.canFilter = true;
            inventoryCollectionView.pageSize = cboInventoryEntryShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#InventoryEntryInputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryCollectionView.refresh();
            });

            inventoryCollectionView.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleUnit.toLowerCase().indexOf(filterText) > -1);
            }

            inventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });

            inventoryFlexGrid.itemsSource = inventoryCollectionView;
            inventoryFlexGrid.trackChanges = true;
        }

        // ================================
        // On Page Load for Inventory Entry
        // ================================
        function createInventoryFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntries());
            inventoryCollectionView.canFilter = true;
            inventoryCollectionView.pageSize = cboInventoryEntryShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#InventoryEntryInputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryCollectionView.refresh();
            });

            inventoryCollectionView.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleUnit.toLowerCase().indexOf(filterText) > -1);
            }

            inventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });

            inventoryFlexGrid = new wijmo.grid.FlexGrid('#inventoryFlexGrid');
            inventoryFlexGrid.initialize({
                columns: [
                    {
                        "header": "Date",
                        "binding": "InventoryDate",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.7*",
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "ArticleInventoryCode",
                        "allowSorting": true,
                        "width": "1.3*",
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*",
                    },
                    {
                        "header": "Unit",
                        "binding": "ArticleUnit",
                        "allowSorting": true,
                        "width": "1*",
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*",
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryFlexGrid.trackChanges = true;

            updateNavigateButtonsInventoryEntry();

            btnMoveToFirstPageGridInventoryEntry.addEventListener('click', function () {
                inventoryCollectionView.moveToFirstPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnMoveToPreviousPageGridInventoryEntry.addEventListener('click', function () {
                inventoryCollectionView.moveToPreviousPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnMoveToNextPageGridInventoryEntry.addEventListener('click', function () {
                inventoryCollectionView.moveToNextPage();
                updateNavigateButtonsInventoryEntry();
            });

            btnMoveToLastPageGridInventoryEntry.addEventListener('click', function () {
                inventoryCollectionView.moveToLastPage();
                updateNavigateButtonsInventoryEntry();
            });
        }

        // ===============
        // Show Rows Table
        // ===============
        function createCboShowRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboSalesInvoiceItemShowNumberOfRows.dispose();
            cboSalesInvoiceItemShowNumberOfRows = new wijmo.input.ComboBox('#cboSalesInvoiceItemShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboSalesInvoiceItemShowNumberOfRows.selectedValue;
                        SIItemsCollectionView.pageSize = parseInt(numberOfRows);
                        SIItemsCollectionView.refresh();
                        SIItemFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });

            cboInventoryEntryShowNumberOfRows.dispose();
            cboInventoryEntryShowNumberOfRows = new wijmo.input.ComboBox('#cboInventoryEntryShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboInventoryEntryShowNumberOfRows.selectedValue;
                        inventoryCollectionView.pageSize = parseInt(numberOfRows);
                        inventoryCollectionView.refresh();
                        inventoryFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });
        }

        // ====
        // TABS
        // ====
        $('#itemTabId').click(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            NProgress.start();
            refreshSaleSItemFlexGrid();
        });

        $('#inventoryEntryTabId').click(function () {
            $('#Items').hide();
            $('#InventoryEntries').show();
            NProgress.start();
            refreshInventoryFlexGrid();
        });

        // ===============
        // Inventory Items
        // ===============
        function getInventoryItems() {
            var itemsObservableArray = new wijmo.collections.ObservableArray();

            $.ajax({
                url: '/api/salesInvoiceItem/popUp/list/itemQuery/inventoryItems',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            itemsObservableArray.push({
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdItemQueryPick_Onclick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                                Id: results[i]["Id"],
                                InventoryCode: results[i]["InventoryCode"],
                                ArticleId: results[i]["ArticleId"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                Article: results[i]["Article"],
                                Price: results[i]["Price"],
                                PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Quantity: results[i]["Quantity"],
                                QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Cost: results[i]["Cost"],
                                Amount: results[i]["Amount"],
                                Particulars: results[i]["Particulars"],
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"]
                            });
                        }
                    }

                    $("#loadingItemInventory").hide();
                    $("#ItemInventoryGridDetail").show();
                }
            });

            return itemsObservableArray;
        }

        // ===================
        // Non Inventory Items
        // ===================
        function getNonInventoryItems() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/salesInvoiceItem/popUp/list/itemQuery/nonInventoryItems',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            itemsObservableArray.push({
                                Id: results[i]["Id"],
                                ArticleCode: results[i]["ArticleCode"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                Article: results[i]["Article"],
                                Price: results[i]["Price"],
                                PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Particulars: results[i]["Particulars"],
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdItemQueryPickNonInventory_Onclick()'><i class='fa fa-hand-o-right'></i> Pick</button>"
                            });
                        }
                    }

                    $("#loadingItemNonInventory").hide();
                    $("#ItemNonInventoryGridDetail").show();
                }
            });

            return itemsObservableArray;
        }

        // =============
        // Package Items
        // =============
        function getPackageItems() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/salesInvoiceItem/popUp/list/itemQuery/packageItems',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            itemsObservableArray.push({
                                Id: results[i]["Id"],
                                ArticleCode: results[i]["ArticleCode"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                Article: results[i]["Article"],
                                Price: results[i]["Price"],
                                PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Particulars: results[i]["Particulars"],
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdItemQueryPickPackage_Onclick()'><i class='fa fa-hand-o-right'></i> Pick</button>"
                            });
                        }
                    }

                    $("#loadingPackageItems").hide();
                    $("#packageItemsGridDetail").show();
                }
            });

            return itemsObservableArray;
        }

        $('#idSIItemInventory').click(function () {
            $("#loadingItemInventory").show();
            document.getElementById("loadingItemInventory").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#ItemInventoryGridDetail").hide();

            setTimeout(function () {
                createInventoryItemFlexGrid();
            }, 500);
        });

        $('#idSIItemNonInventory').click(function () {
            $("#loadingItemNonInventory").show();
            document.getElementById("loadingItemNonInventory").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#ItemNonInventoryGridDetail").hide();

            setTimeout(function () {
                createNonInventoryItemFlexGrid();
            }, 500);
        });

        $('#idSIItemPackage').click(function () {
            $("#loadingPackageItems").show();
            document.getElementById("loadingPackageItems").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#packageItemsGridDetail").hide();

            setTimeout(function () {
                createPackageItemFlexGrid();
            }, 500);
        });

        // ==========
        // Item Query
        // ==========
        function btnItemQuerySalesInvoiceItemSalesInvoiceItemOnclick() {
            $('#itemQueryModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingItemInventory").show();
            document.getElementById("loadingItemInventory").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#ItemInventoryGridDetail").hide();

            $("#loadingItemNonInventory").show();
            document.getElementById("loadingItemNonInventory").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#ItemNonInventoryGridDetail").hide();

            $("#loadingPackageItems").show();
            document.getElementById("loadingPackageItems").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#packageItemsGridDetail").hide();

            setTimeout(function () {
                createInventoryItemFlexGrid();
                createNonInventoryItemFlexGrid();
                createPackageItemFlexGrid();
            }, 500);
        }

        // =========================
        // Update Navigation Buttons
        // =========================
        function updateNavigateButtonsItemInventory() {
            if (itemInventoryCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGridItemInventory').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridItemInventory').style.display = 'block';
            if (itemInventoryCollectionView.pageIndex === 0) {
                btnMoveToFirstPageGridItemInventory.setAttribute('disabled', 'disabled');
                btnMoveToPreviousPageGridItemInventory.setAttribute('disabled', 'disabled');
                btnMoveToNextPageGridItemInventory.removeAttribute('disabled');
                btnMoveToLastPageGridItemInventory.removeAttribute('disabled');
            } else if (itemInventoryCollectionView.pageIndex === (itemInventoryCollectionView.pageCount - 1)) {
                btnMoveToFirstPageGridItemInventory.removeAttribute('disabled');
                btnMoveToPreviousPageGridItemInventory.removeAttribute('disabled');
                btnMoveToNextPageGridItemInventory.setAttribute('disabled', 'disabled');
                btnMoveToLastPageGridItemInventory.setAttribute('disabled', 'disabled');
            } else {
                btnMoveToFirstPageGridItemInventory.removeAttribute('disabled');
                btnMoveToPreviousPageGridItemInventory.removeAttribute('disabled');
                btnMoveToNextPageGridItemInventory.removeAttribute('disabled');
                btnMoveToLastPageGridItemInventory.removeAttribute('disabled');
            }
            btnCurrentPageGridItemInventory.innerHTML = (itemInventoryCollectionView.pageIndex + 1) + ' / ' + itemInventoryCollectionView.pageCount;
        }

        var isItemQueryItemInventoryClicked = false;

        function createInventoryItemFlexGrid() {
            itemInventoryCollectionView = new wijmo.collections.CollectionView(getInventoryItems());
            itemInventoryCollectionView.canFilter = true;
            itemInventoryCollectionView.pageSize = 10;

            var filterText = '';
            $('#InputFilterItemQueryGrid').keyup(function () {
                filterText = this.value.toLowerCase();
                itemInventoryCollectionView.refresh();
            });

            itemInventoryCollectionView.filter = function (item) {
                return !filterText || (item.InventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1);
            }

            itemInventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItemInventory();
            });

            itemInventoryFlexGrid.dispose();
            itemInventoryFlexGrid = new wijmo.grid.FlexGrid('#itemInventoryFlexGrid');
            itemInventoryFlexGrid.initialize({
                columns: [
                            {
                                "header": "Inventory Code",
                                "binding": "InventoryCode",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Code",
                                "binding": "ManualArticleCode",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Price",
                                "binding": "PriceDisplay",
                                "allowSorting": true,
                                "align": "right",
                                "width": "2*",
                            },
                            {
                                "header": "On Hand Quantity",
                                "binding": "QuantityDisplay",
                                "allowSorting": true,
                                "align": "right",
                                "width": "2*",
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Pick",
                                "binding": "Pick",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: itemInventoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemInventoryFlexGrid.trackChanges = true;

            if (!isItemQueryItemInventoryClicked) {
                updateNavigateButtonsItemInventory();

                btnMoveToFirstPageGridItemInventory.addEventListener('click', function () {
                    itemInventoryCollectionView.moveToFirstPage();
                    updateNavigateButtonsItemInventory();
                });

                btnMoveToPreviousPageGridItemInventory.addEventListener('click', function () {
                    itemInventoryCollectionView.moveToPreviousPage();
                    updateNavigateButtonsItemInventory();
                });

                btnMoveToNextPageGridItemInventory.addEventListener('click', function () {
                    itemInventoryCollectionView.moveToNextPage();
                    updateNavigateButtonsItemInventory();
                });

                btnMoveToLastPageGridItemInventory.addEventListener('click', function () {
                    itemInventoryCollectionView.moveToLastPage();
                    updateNavigateButtonsItemInventory();
                });

                isItemQueryItemInventoryClicked = true;
            }
        }

        // =========================
        // Update Navigation Buttons
        // =========================
        function updateNavigateButtonsItemNonInventory() {
            if (itemNonInventoryCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGridItemNonInventory').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridItemNonInventory').style.display = 'block';
            if (itemNonInventoryCollectionView.pageIndex === 0) {
                btnMoveToFirstPageGridItemNonInventory.setAttribute('disabled', 'disabled');
                btnMoveToPreviousPageGridItemNonInventory.setAttribute('disabled', 'disabled');
                btnMoveToNextPageGridItemNonInventory.removeAttribute('disabled');
                btnMoveToLastPageGridItemNonInventory.removeAttribute('disabled');
            } else if (itemNonInventoryCollectionView.pageIndex === (itemNonInventoryCollectionView.pageCount - 1)) {
                btnMoveToFirstPageGridItemNonInventory.removeAttribute('disabled');
                btnMoveToPreviousPageGridItemNonInventory.removeAttribute('disabled');
                btnMoveToNextPageGridItemNonInventory.setAttribute('disabled', 'disabled');
                btnMoveToLastPageGridItemNonInventory.setAttribute('disabled', 'disabled');
            } else {
                btnMoveToFirstPageGridItemNonInventory.removeAttribute('disabled');
                btnMoveToPreviousPageGridItemNonInventory.removeAttribute('disabled');
                btnMoveToNextPageGridItemNonInventory.removeAttribute('disabled');
                btnMoveToLastPageGridItemNonInventory.removeAttribute('disabled');
            }
            btnCurrentPageGridItemNonInventory.innerHTML = (itemNonInventoryCollectionView.pageIndex + 1) + ' / ' + itemNonInventoryCollectionView.pageCount;
        }

        var isItemQueryItemNonInventoryClicked = false;

        function createNonInventoryItemFlexGrid() {
            itemNonInventoryCollectionView = new wijmo.collections.CollectionView(getNonInventoryItems());
            itemNonInventoryCollectionView.canFilter = true;
            itemNonInventoryCollectionView.pageSize = 10;

            var filterText = '';
            $('#InputFilterItemQueryGridNonInventory').keyup(function () {
                filterText = this.value.toLowerCase();
                itemNonInventoryCollectionView.refresh();
            });

            itemNonInventoryCollectionView.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1);
            }

            itemNonInventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItemNonInventory();
            });

            itemNonInventoryFlexGrid.dispose();
            itemNonInventoryFlexGrid = new wijmo.grid.FlexGrid('#itemNonInventoryFlexGrid');
            itemNonInventoryFlexGrid.initialize({
                columns: [
                    {
                        "header": "Code",
                        "binding": "ManualArticleCode",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "5*"
                    },
                    {
                        "header": "Price",
                        "binding": "PriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    },
                    {
                        "header": "Pick",
                        "binding": "Pick",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: itemNonInventoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemNonInventoryFlexGrid.trackChanges = true;

            if (!isItemQueryItemNonInventoryClicked) {
                updateNavigateButtonsItemNonInventory();

                btnMoveToFirstPageGridItemNonInventory.addEventListener('click', function () {
                    itemNonInventoryCollectionView.moveToFirstPage();
                    updateNavigateButtonsItemNonInventory();
                });

                btnMoveToPreviousPageGridItemNonInventory.addEventListener('click', function () {
                    itemNonInventoryCollectionView.moveToPreviousPage();
                    updateNavigateButtonsItemNonInventory();
                });

                btnMoveToNextPageGridItemNonInventory.addEventListener('click', function () {
                    itemNonInventoryCollectionView.moveToNextPage();
                    updateNavigateButtonsItemNonInventory();
                });

                btnMoveToLastPageGridItemNonInventory.addEventListener('click', function () {
                    itemNonInventoryCollectionView.moveToLastPage();
                    updateNavigateButtonsItemNonInventory();
                });

                isItemQueryItemNonInventoryClicked = true;
            }
        }

        // =========================
        // Update Navigation Buttons
        // =========================
        function updateNavigateButtonsItemPackage() {
            if (itemNonInventoryCollectionView.pageSize <= 0) {
                document.getElementById('naviagtionPageGridItemPackage').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridItemPackage').style.display = 'block';
            if (itemNonInventoryCollectionView.pageIndex === 0) {
                btnMoveToFirstPageGridItemPackage.setAttribute('disabled', 'disabled');
                btnMoveToPreviousPageGridItemPackage.setAttribute('disabled', 'disabled');
                btnMoveToNextPageGridItemPackage.removeAttribute('disabled');
                btnMoveToLastPageGridItemPackage.removeAttribute('disabled');
            } else if (itemNonInventoryCollectionView.pageIndex === (itemNonInventoryCollectionView.pageCount - 1)) {
                btnMoveToFirstPageGridItemPackage.removeAttribute('disabled');
                btnMoveToPreviousPageGridItemPackage.removeAttribute('disabled');
                btnMoveToNextPageGridItemPackage.setAttribute('disabled', 'disabled');
                btnMoveToLastPageGridItemPackage.setAttribute('disabled', 'disabled');
            } else {
                btnMoveToFirstPageGridItemPackage.removeAttribute('disabled');
                btnMoveToPreviousPageGridItemPackage.removeAttribute('disabled');
                btnMoveToNextPageGridItemPackage.removeAttribute('disabled');
                btnMoveToLastPageGridItemPackage.removeAttribute('disabled');
            }
            btnCurrentPageGridItemPackage.innerHTML = (itemNonInventoryCollectionView.pageIndex + 1) + ' / ' + itemNonInventoryCollectionView.pageCount;
        }

        var isItemQueryItemPackageClicked = false;

        function createPackageItemFlexGrid() {
            itemPackageCollectionView = new wijmo.collections.CollectionView(getPackageItems());
            itemPackageCollectionView.canFilter = true;
            itemPackageCollectionView.pageSize = 10;

            var filterText = '';
            $('#InputFilterItemQueryGridPackage').keyup(function () {
                filterText = this.value.toLowerCase();
                itemPackageCollectionView.refresh();
            });

            itemPackageCollectionView.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1);
            }

            itemPackageCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItemPackage();
            });

            itemPackageFlexGrid.dispose();
            itemPackageFlexGrid = new wijmo.grid.FlexGrid('#itemPackageFlexGrid');
            itemPackageFlexGrid.initialize({
                columns: [
                            {
                                "header": "Code",
                                "binding": "ManualArticleCode",
                                "allowSorting": true,
                                "width": "4*"
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "5*"
                            },
                            {
                                "header": "Price",
                                "binding": "PriceDisplay",
                                "allowSorting": true,
                                "align": "right",
                                "width": "2*"
                            },
                            {
                                "header": "Pick",
                                "binding": "Pick",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: itemPackageCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemPackageFlexGrid.trackChanges = true;

            if (!isItemQueryItemPackageClicked) {
                updateNavigateButtonsItemPackage();

                btnMoveToFirstPageGridItemPackage.addEventListener('click', function () {
                    itemPackageCollectionView.moveToFirstPage();
                    updateNavigateButtonsItemPackage();
                });

                btnMoveToPreviousPageGridItemPackage.addEventListener('click', function () {
                    itemPackageCollectionView.moveToPreviousPage();
                    updateNavigateButtonsItemPackage();
                });

                btnMoveToNextPageGridItemPackage.addEventListener('click', function () {
                    itemPackageCollectionView.moveToNextPage();
                    updateNavigateButtonsItemPackage();
                });

                btnMoveToLastPageGridItemPackage.addEventListener('click', function () {
                    itemPackageCollectionView.moveToLastPage();
                    updateNavigateButtonsItemPackage();
                });

                isItemQueryItemPackageClicked = true;
            }
        }

        function cmdItemQueryPick_Onclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#salesLineDetailForm").hide();

            document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveSaleItemsButton").prop("disabled", true);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemInventoryCollectionView.editItem(itemInventoryCollectionView.currentItem);
            var item = itemInventoryCollectionView.currentEditItem;
            salesItemId = 0;
            getArticleItemForManualCodeAndComponent(item.ArticleId, item.Id, 0, 0, 0, 0);
            document.getElementById('saleItem_Particulars').value = item.Particulars;
            document.getElementById('saleItem_Quantity').value = formatDecimalValues(1);
        }

        function cmdItemQueryPickNonInventory_Onclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#salesLineDetailForm").hide();

            document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveSaleItemsButton").prop("disabled", true);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemNonInventoryCollectionView.editItem(itemNonInventoryCollectionView.currentItem);
            var item = itemNonInventoryCollectionView.currentEditItem;
            salesItemId = 0;
            getArticleItemForManualCodeAndComponent(item.Id, null, 0, 0, 0, 0);
            document.getElementById('saleItem_Particulars').value = item.Particulars;
            document.getElementById('saleItem_Quantity').value = formatDecimalValues(1);
        }

        function cmdItemQueryPickPackage_Onclick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#salesLineDetailForm").hide();

            document.getElementById('cmdSaveSaleItemsButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveSaleItemsButton").prop("disabled", true);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemPackageCollectionView.editItem(itemPackageCollectionView.currentItem);
            var item = itemPackageCollectionView.currentEditItem;
            salesItemId = 0;
            getArticleItemForManualCodeAndComponent(item.Id, null, 0, 0, 0, 0);
            document.getElementById('saleItem_Particulars').value = "NA";
            document.getElementById('saleItem_Quantity').value = formatDecimalValues(1);
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            getBranchesForComboBox();
        });

        $(document).on('show.bs.modal', '.modal', function (event) {
            var zIndex = 1040 + (10 * $('.modal:visible').length);
            $(this).css('z-index', zIndex);
            setTimeout(function () {
                $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
            }, 0);
        });

        $(document).on('hidden.bs.modal', '.modal', function () {
            $('.modal:visible').length && $(document.body).addClass('modal-open');
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesresults) {
                    if (userBranchesresults.length > 0) {
                        for (i = 0; i < userBranchesresults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesresults[i]["BranchId"],
                                Branch: userBranchesresults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>