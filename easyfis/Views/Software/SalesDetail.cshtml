@{
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Sales Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <div class="sub-nav">
                <div class="container">
                    <h4><i class="fa fa-bar-chart"></i> Sales Detail</h4>
                </div>
                <div class="div_Current_Page">
                    <div class="container">
                        <a href="@Url.Action("Index", "Software" )" class="currentPageLinkCustom">Main Menu</a> > <a href="@Url.Action("Sales", "Software" )" class="currentPageLinkCustom">Sales</a> > Sales Detail
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="salesDetailLabel"></h4>
                    </div>
                    <div class="col-md-6" align="right">
                        <button class="btn btn-primary btn-sm" id="cmdSalesJournal" onclick="btnJournalDetail_OnClick()"><i class="fa fa-book"></i> Journal</button>
                        <button class="btn btn-primary btn-sm" id="cmdSalesSaveLock" onclick="btnSaveLockSales_OnClick()"><i class="fa fa-save"></i> Save (Lock)</button>
                        <button class="btn btn-primary btn-sm" id="cmdSalesSave" onclick="btnSalesSave_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button class="btn btn-primary btn-sm" id="cmdSalesEdit" onclick="btnSalesEdit_OnClick()"><i class="fa fa-edit"></i> Edit (Unlock)</button>
                        <button class="btn btn-primary btn-sm" id="cmdSalesPrint" onclick="window.location.href ='@Url.Action("Salespdf", "Software" )'"><i class="fa fa-print"></i> Print</button>
                        <button onclick="window.location.href = '@Url.Action("Sales", "Software" )'" class="btn btn-danger btn-sm" id="cmdSalesClose"><i class="fa fa-times"></i> Close</button>
                    </div>
                </div>
                @*<hr />*@
                <div class="well">
                    <form class="form-horizontal" role="form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Branch</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="SI_Branch"></div>

                                        <input type="hidden" id="SI_Branch_data" class="requiredSales" />
                                        <input type="hidden" id="SI_Branch_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">SI Number</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredSales" id="SI_SINumber_Display">
                                        <input type="hidden" id="SI_SINumber">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">SI Date</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="SI_SIDate"></div>
                                        <input type="hidden" id="SI_SIDate_data" class="requiredSales" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Doc Reference</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredSales" id="SI_DocReference" placeholder="Document Reference">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Customer</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="SI_Customer"></div>

                                        <input type="hidden" id="SI_Customer_data" class="requiredSales" />
                                        <input type="hidden" id="SI_Customer_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Term</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="SI_Term"></div>

                                        <input type="hidden" id="SI_Term_data" class="requiredSales" />
                                        <input type="hidden" id="SI_Term_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Remarks</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control textarea-custom requiredSales" id="SI_SIRemarks" placeholder="Remarks"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Manual SI Number</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredSales" id="SI_ManualSINumber" placeholder="Manual SI Number">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Sold by</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="SI_SoldBy"></div>

                                        <input type="hidden" id="SI_SoldBy_data" class="requiredSales" />
                                        <input type="hidden" id="SI_SoldBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Prepared by</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="SI_PreparedBy"></div>

                                        <input type="hidden" id="SI_PreparedBy_data" class="requiredSales" />
                                        <input type="hidden" id="SI_PreparedBy_selectedValue" />
                                        <input type="hidden" id="userId_data" value="@userId" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Checked by</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="SI_CheckedBy"></div>

                                        <input type="hidden" id="SI_CheckedBy_data" class="requiredSales" />
                                        <input type="hidden" id="SI_CheckedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Approved by</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="SI_ApprovedBy"></div>

                                        <input type="hidden" id="SI_ApprovedBy_data" class="requiredSales" />
                                        <input type="hidden" id="SI_ApprovedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Lock</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" id="SI_Lock">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-4"></div>
                                    <div class="col-sm-8">
                                        <input type="hidden" id="Sales_IsLocked">
                                        <input type="hidden" id="Sales_IsLocked_defaultTrue">
                                        <input type="hidden" id="Sales_IsLocked_defaultFalse">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <!-- Sales line -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#Items" id="itemTabId">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#InventoryEntries" id="inventoryEntryTabId">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="Items" class="tab-pane fade in active">
                        <!-- Item  List -->
                        <div class="row">
                            <div class="col-lg-12" align="right">
                                <button class="btn btn-primary btn-sm" id="btnAddSaleItem" onclick="cmdAddSaleItem_OnClick()"><i class="fa fa-plus"></i> Add</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="ItemGrid" class="grid"></div>
                            </div>
                        </div>
                    </div>

                    <div id="InventoryEntries" class="tab-pane fade in">
                        <!-- Inventory Entries List -->
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="InventoryEntryGrid" class="grid"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- ================== -->
        <!-- Sales Items Detail -->
        <!-- ================== -->
        <div class="modal fade" id="saleItemsEdit" role="dialog">
            <div class="modal-dialog modal-lg">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="saleItemsModalLabel">Sale Line Item Detail</h4>
                    </div>
                    <div class="modal-body">
                        <form id="SalesLineDetailForm">
                            <input type="hidden" id="saleItem_Id" />
                            <div class="row">
                                <div class="col-md-6">
                                    <dl class="dl-horizontal">
                                        <dt>Item Code</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="saleItem_ItemCode"></div>

                                            <input type="hidden" id="saleItem_ItemId_data" class="requiredSaleItem">
                                            <input type="hidden" id="saleItem_ItemCode_selectedValue" />
                                        </dd>
                                        <dt>Item Description</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="saleItem_ItemDescription"></div>

                                            <input type="hidden" id="saleItem_ItemDescription_selectedValue" />
                                        </dd>
                                        <dt>Particulars</dt>
                                        <dd><textarea class="form-control textarea-custom requiredSaleItem" id="saleItem_Particulars"></textarea></dd>
                                        <dt>Inventory Code</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="saleItem_InventoryCode"></div>

                                            <input type="hidden" id="saleItem_InventoryCode_data" class="requiredSaleItem">
                                            <input type="hidden" id="saleItem_InventoryCode_selectedValue" />
                                        </dd>
                                        <dt>Quantity</dt>
                                        <dd><input type="text" class="form-control input-sm requiredSaleItem" id="saleItem_Quantity" /></dd>
                                        <dt>Unit</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="saleItem_Unit"></div>

                                            <input type="hidden" id="saleItem_Unit_data" class="requiredSaleItem">
                                            <input type="hidden" id="saleItem_Unit_selectedValue" />
                                        </dd>
                                        <dt>Price</dt>
                                        <dd><input type="text" class="form-control input-sm requiredSaleItem" id="saleItem_PriceExVAT" /></dd>
                                        <dt>Discount</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="saleItem_Discont"></div>

                                            <input type="hidden" id="saleItem_Discont_data" class="requiredSaleItem">
                                            <input type="hidden" id="saleItem_Discont_selectedValue" />
                                            <input type="hidden" id="saleItem_DiscontInclusive" />
                                        </dd>
                                        <dt>Discount Rate</dt>
                                        <dd><input type="text" class="form-control input-sm requiredSaleItem" id="saleItem_DiscountRate" /></dd>
                                        <dt>Discount Amount</dt>
                                        <dd><input type="text" class="form-control input-sm requiredSaleItem" id="saleItem_DiscountAmount" /></dd>
                                    </dl>
                                </div>
                                <div class="col-md-6">
                                    <dl class="dl-horizontal">
                                        <dt>Net Price</dt>
                                        <dd><input type="text" class="form-control input-sm requiredSaleItem" id="saleItem_NetPrice" /></dd>
                                        <dt>Amount</dt>
                                        <dd><input type="text" class="form-control input-sm requiredSaleItem" id="saleItem_Amount" /></dd>

                                        <dt>VAT</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="saleItem_VAT"></div>

                                            <input type="hidden" id="saleItem_VAT_data" class="requiredSaleItem">
                                            <input type="hidden" id="saleItem_VAT_selectedValue" />
                                            <input type="hidden" id="saleItem_TAXInclusive" />
                                        </dd>
                                        <dt>VAT Rate</dt>
                                        <dd><input type="text" class="form-control input-sm requiredSaleItem" id="saleItem_VATRate" /></dd>
                                        <dt>VAT Amount</dt>
                                        <dd><input type="text" class="form-control input-sm requiredSaleItem" id="saleItem_VATAmount" /></dd>
                                        <dt></dt>
                                        <dd>
                                            <br />
                                            <hr />
                                            <center><label>Basic Unit Conversion</label></center>
                                            <br />
                                        </dd>
                                        <dt>Unit</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="saleItem_BUCUnit"></div>

                                            <input type="hidden" id="saleItem_BUCUnit_data" class="requiredSaleItem">
                                            <input type="hidden" id="saleItem_BUCUnit_selectedValue" />
                                        </dd>
                                        <dt>Quantity</dt>
                                        <dd><input type="text" class="form-control input-sm requiredSaleItem" id="saleItem_BUCQuantity" /></dd>
                                        <dt>Price</dt>
                                        <dd><input type="text" class="form-control input-sm requiredSaleItem" id="saleItem_BUCPrice" /></dd>
                                    </dl>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary btn-sm" id="cmdSaveSaleItemsButton" onclick="cmdSaleItemsSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button id="cmdSaleItemsDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- ============== -->
        <!-- Journal Detail -->
        <!-- ============== -->
        <div class="modal fade" id="journalDetail" role="dialog">
            <div class="modal-dialog modal-lg">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="journalModalLabel"> Journal</h4>
                    </div>
                    <div class="modal-body">
                        <center>
                            <h4>
                                <span id="loadingJournalGridList"></span>
                            </h4>
                        </center>
                        <div id="journal_Content">
                            <div class="row" align="left">
                                <div class="col-lg-12">
                                    <div id="journalGrid" class="grid" align="left"></div>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-6"></div>
                                <div class="col-md-6" align="right">
                                    <table>
                                        <tr>
                                            <td align="right"> <b>Total Debit:</b> </td>
                                            <td style="padding-left: 35px"></td>
                                            <td> <span id="totalDebitInJournal"></span></td>
                                        </tr>
                                        <tr>
                                            <td align="right"> <b>Total Credit:</b> </td>
                                            <td style="padding-left: 35px"></td>
                                            <td> <span id="totalCreditInJournal"></span></td>
                                        </tr>
                                        <tr>
                                            <td style="padding: 10px"> </td>
                                            <td style="padding: 10px"> </td>
                                            <td style="padding: 10px"> </td>
                                        </tr>
                                        <tr>
                                            <td align="right"> <b>Variance: </b> </td>
                                            <td style="padding-left: 35px"></td>
                                            <td> <span id="variance"></span></td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="cmdJournalDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    </div>
                </div>
            </div>
        </div>


        <!-- ===================================== -->
        <!-- Sales Items Delete Modal Confirmation -->
        <!-- ===================================== -->
        <div class="modal fade" id="deletSaleItemsConfirm" role="dialog">
            <div class="modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Delete Sales Item <i class="fa fa-trash"></i></h4>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this?
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteSaleItems" onclick="cmdSaleItemsConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                        <button id="cmdConfirmDeleteSaleItemsCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">
                        <h4>Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    <!-- Scripts JavaScripts -->
    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var sales;
        var branches;
        var customers;
        var terms;
        var users;
        var cboBranch;
        var cboCustomer;
        var cboTerm;
        var cboSoldBy;
        var cboPreparedBy;
        var cboCheckedBy;
        var cboApprovedBy;
        var SIDate;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        // ===========
        // read Cookie
        // ===========
        function readCookie(name) {
            var nameEQ = name + "=";
            var ca = document.cookie.split(';');
            for (var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') {
                    c = c.substring(1, c.length);
                    if (c.indexOf(nameEQ) == 0) {
                        return c.substring(nameEQ.length, c.length);
                    }
                }
            }
            return null;
        }

        // ====================
        // GET Sales List By Id
        // ====================
        function getSalesById() {
            var salesId = getParam('SalesId');
            if (document.location.search.length == 0) {
                $('#loadingModal').modal('hide');
            } else {
                $('#loadingModal').modal('show');
                $.ajax({
                    url: '/api/salesInvoice/' + salesId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        $('#loadingModal').modal('hide');
                        if (Results != null) {
                            document.getElementById('SI_Branch_data').value = Results.BranchId;
                            document.getElementById('SI_Branch_selectedValue').value = Results.Branch;

                            document.getElementById('SI_SINumber').value = Results.SINumber;
                            document.getElementById('SI_SINumber_Display').value = Results.SINumber;
                            document.getElementById('SI_SIDate_data').value = Results.SIDate;

                            var RRdate_date = Results.SIDate;
                            SIDate.dispose();
                            SIDate = new wijmo.input.InputDate('#SI_SIDate', {
                                format: 'MM/dd/yyyy',
                                value: new Date(RRdate_date),
                                mask: '99/99/9999',
                                onValueChanged: function () {
                                    document.getElementById('SI_SIDate_data').value = this.value.toLocaleDateString();
                                }
                            });

                            document.getElementById('SI_DocReference').value = Results.DocumentReference;

                            document.getElementById('SI_Customer_data').value = Results.CustomerId;
                            document.getElementById('SI_Customer_selectedValue').value = Results.Customer;

                            document.getElementById('SI_Term_data').value = Results.TermId;
                            document.getElementById('SI_Term_selectedValue').value = Results.Term;

                            document.getElementById('SI_SIRemarks').value = Results.Remarks;
                            document.getElementById('SI_ManualSINumber').value = Results.ManualSINumber;

                            document.getElementById('SI_SoldBy_data').value = Results.SoldById;
                            document.getElementById('SI_SoldBy_selectedValue').value = Results.SoldBy;

                            document.getElementById('SI_PreparedBy_data').value = Results.PreparedById;
                            document.getElementById('SI_PreparedBy_selectedValue').value = Results.PreparedBy;

                            document.getElementById('SI_CheckedBy_data').value = Results.CheckedById;
                            document.getElementById('SI_CheckedBy_selectedValue').value = Results.CheckedBy;

                            document.getElementById('SI_ApprovedBy_data').value = Results.ApprovedById;
                            document.getElementById('SI_ApprovedBy_selectedValue').value = Results.ApprovedBy;

                            document.getElementById('SI_Lock').checked = Results.IsLocked;

                            document.getElementById('Sales_IsLocked').value = Results.IsLocked;

                            document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                            if (document.getElementById('Sales_IsLocked').value == 'true') {
                                document.getElementById('SI_DocReference').disabled = true;
                                document.getElementById('SI_SIRemarks').disabled = true;
                                document.getElementById('SI_ManualSINumber').disabled = true;

                                var RRdate_date = Results.SIDate;
                                SIDate.dispose();
                                SIDate = new wijmo.input.InputDate('#SI_SIDate', {
                                    disabled: true,
                                    format: 'MM/dd/yyyy',
                                    value: new Date(RRdate_date),
                                    mask: '99/99/9999',
                                    onValueChanged: function () {
                                        document.getElementById('SI_SIDate_data').value = this.value.toLocaleDateString();
                                    }
                                });

                                $("#cmdSalesJournal").prop("disabled", false);
                                $("#cmdSalesSaveLock").prop("disabled", true);
                                $("#cmdSalesSave").prop("disabled", false);
                                $("#cmdSalesEdit").prop("disabled", false);
                                $("#cmdSalesPrint").prop("disabled", false);
                                $("#btnAddSaleItem").prop("disabled", true);

                            } else if (document.getElementById('Sales_IsLocked').value == 'false') {
                                document.getElementById('SI_DocReference').disabled = false;
                                document.getElementById('SI_SIRemarks').disabled = false;
                                document.getElementById('SI_ManualSINumber').disabled = false;

                                var RRdate_date = Results.SIDate;
                                SIDate.dispose();
                                SIDate = new wijmo.input.InputDate('#SI_SIDate', {
                                    disabled: false,
                                    format: 'MM/dd/yyyy',
                                    value: new Date(RRdate_date),
                                    mask: '99/99/9999',
                                    onValueChanged: function () {
                                        document.getElementById('SI_SIDate_data').value = this.value.toLocaleDateString();
                                    }
                                });

                                $("#cmdSalesJournal").prop("disabled", true);
                                $("#cmdSalesSaveLock").prop("disabled", false);
                                $("#cmdSalesSave").prop("disabled", true);
                                $("#cmdSalesEdit").prop("disabled", true);
                                $("#cmdSalesPrint").prop("disabled", true);
                                $("#btnAddSaleItem").prop("disabled", false);
                            } else {
                                console.log("Invalid IsLocked");
                            }

                            getBranchesForComboBox();
                            getCustomerForComboBox();
                            getTermForComboBox();
                            getUsersForComboBox();
                        }
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            }
        }

        // =================
        // GET Sales Last Id
        // ========-========
        function getSalesLastInsertedId() {
            var sales = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/salesInvoiceLastId',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    window.location = '/Software/SalesDetail?SalesId=' + Results.Id;
                    window.setTimeout(function () { location.reload() }, 1000);
                }
            });
            return sales;
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var salesId = getParam('SalesId');
                        var branchId = readCookie('branchId');
                        if (document.location.search.length == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (branchResults) {
                                    if (branchResults != null) {
                                        document.getElementById('SI_Branch_data').value = branchResults.Id;
                                        document.getElementById('SI_Branch_selectedValue').value = branchResults.Branch;

                                        createCboBranch(branches);
                                    }
                                }
                            });
                        } else {
                            createCboBranch(branches);
                        }
                    } else {
                        createCboBranch(branches);
                    }
                }
            });
            return branches;
        }

        // ======================
        // Combo Box for Branches
        // ======--==============
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#SI_Branch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                selectedValue: document.getElementById('SI_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#SI_Branch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });

            document.getElementById('SI_Branch_data').value = branchCollections.items[cboBranch.selectedIndex].BranchId;
        }

        // ==========================
        // GET Customer for Combo Box
        // ==========================
        function getCustomerForComboBox() {
            customers = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/2',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            customers.push({
                                CustomerId: results[i]["Id"],
                                Customer: results[i]["Article"]
                            });
                        }
                        createCboCustomer(customers);
                    } else {
                        createCboCustomer(customers);
                    }
                }
            });
            return customers;
        }

        // =======================
        // Combo Box for Customer
        // =======================
        function createCboCustomer(customers) {
            var customerCollection = new wijmo.collections.CollectionView(customers);
            var customerList = new Array();
            for (var i = 0; i < customerCollection.items.length; i++) {
                customerList.push(customerCollection.items[i].Customer);
            }

            var disabled;
            if (customers == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboCustomer.dispose();
            cboCustomer = new wijmo.input.ComboBox('#SI_Customer', {
                disabled: disabled,
                placeholder: "Select Customer",
                itemsSource: customerList,
                isEditable: false,
                selectedValue: document.getElementById('SI_Customer_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#SI_Customer_data").val(customerCollection.items[this.selectedIndex].CustomerId);
                }
            });

            if (customers == 0) {
                document.getElementById('SI_Customer_data').value = "";
            } else {
                document.getElementById('SI_Customer_data').value = customerCollection.items[cboCustomer.selectedIndex].CustomerId;
            }

        }

        // =======================
        // GET Terms for Combo Box
        // =======================
        function getTermForComboBox() {
            terms = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTerm',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            terms.push({
                                TermId: results[i]["Id"],
                                Term: results[i]["Term"]
                            });
                        }
                        createCboTerm(terms);
                    } else {
                        createCboTerm(terms);
                    }
                }
            });
            return terms;
        }

        // ===================
        // Combo Box for Terms
        // ===================
        function createCboTerm(terms) {
            var termCollections = new wijmo.collections.CollectionView(terms);
            var termList = new Array();
            for (var i = 0; i < termCollections.items.length; i++) {
                termList.push(termCollections.items[i].Term);
            }

            var disabled;
            if (terms == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboTerm.dispose();
            cboTerm = new wijmo.input.ComboBox('#SI_Term', {
                disabled: disabled,
                placeholder: "Select Term",
                itemsSource: termList,
                isEditable: false,
                selectedValue: document.getElementById('SI_Term_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#SI_Term_data").val(termCollections.items[this.selectedIndex].TermId);
                }
            });

            if (terms == 0) {
                document.getElementById('SI_Term_data').value = "";
            } else {
                document.getElementById('SI_Term_data').value = termCollections.items[cboTerm.selectedIndex].TermId;
            }
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        var salesId = getParam('SalesId');
                        var branchId = readCookie('branchId');
                        if (document.location.search.length == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        users.push({
                                            UserId: results.Id,
                                            UserFullName: results.FullName
                                        });
                                    }

                                    document.getElementById('SI_PreparedBy_data').value = results.Id;
                                    document.getElementById('SI_PreparedBy_selectedValue').value = results.FullName;

                                    createCboUserSoldBy(users);
                                    createCboUserPreparedBy(users);
                                    createCboUserCheckedBy(users);
                                    createCboUserApprovedBy(users);
                                }
                            });
                        } else {
                            createCboUserSoldBy(users);
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);
                        }
                    } else {
                        createCboUserSoldBy(users);
                        createCboUserPreparedBy(users);
                        createCboUserCheckedBy(users);
                        createCboUserApprovedBy(users);
                    }
                }
            });
            return users;
        }

        // =============================
        // Combo Box for Users - Sold By
        // =============================
        function createCboUserSoldBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboSoldBy.dispose();
            cboSoldBy = new wijmo.input.ComboBox('#SI_SoldBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('SI_SoldBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#SI_SoldBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if (users == 0) {
                document.getElementById('SI_SoldBy_data').value = "";
            } else {
                document.getElementById('SI_SoldBy_data').value = usersCollection.items[cboSoldBy.selectedIndex].UserId;
            }
        }

        // =================================
        // Combo Box for Users - Prepared By
        // =================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#SI_PreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('SI_PreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#SI_PreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if (users == 0) {
                document.getElementById('SI_PreparedBy_data').value = "";
            } else {
                document.getElementById('SI_PreparedBy_data').value = usersCollection.items[cboPreparedBy.selectedIndex].UserId;
            }
        }

        // =================================
        // Combo Box for Users - Checked By
        // =================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboCheckedBy.dispose();
            cboCheckedBy = new wijmo.input.ComboBox('#SI_CheckedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('SI_CheckedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#SI_CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if (users == 0) {
                document.getElementById('SI_CheckedBy_data').value = "";
            } else {
                document.getElementById('SI_CheckedBy_data').value = usersCollection.items[cboCheckedBy.selectedIndex].UserId;
            }
        }

        // =================================
        // Combo Box for Users - Approved By
        // =================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboApprovedBy.dispose();
            cboApprovedBy = new wijmo.input.ComboBox('#SI_ApprovedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('SI_ApprovedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#SI_ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if (users == 0) {
                document.getElementById('SI_ApprovedBy_data').value = "";
            } else {
                document.getElementById('SI_ApprovedBy_data').value = usersCollection.items[cboApprovedBy.selectedIndex].UserId;
            }
        }

        // =====================================================
        // Function with leading zeroes to display the SI Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while (pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // =========
        // ADD Sales
        // =========
        function btnSalesSave_OnClick() {
            var salesObject = new Object();
            var salesId = getParam('SalesId');
            salesObject.BranchId = document.getElementById('SI_Branch_data').value;
            salesObject.SINumber = document.getElementById('SI_SINumber_Display').value;
            salesObject.SIDate = document.getElementById('SI_SIDate_data').value;
            salesObject.CustomerId = document.getElementById('SI_Customer_data').value;
            salesObject.TermId = document.getElementById('SI_Term_data').value;
            salesObject.DocumentReference = document.getElementById('SI_DocReference').value;
            salesObject.ManualSINumber = document.getElementById('SI_ManualSINumber').value;
            salesObject.Remarks = document.getElementById('SI_SIRemarks').value;
            //salesObject.Amount = 0.00;
            salesObject.PaidAmount = 0.00;
            salesObject.AdjustmentAmount = 0.00;
            salesObject.BalanceAmount = 0.00;
            salesObject.SoldById = document.getElementById('SI_SoldBy_data').value;
            salesObject.PreparedById = document.getElementById('SI_PreparedBy_data').value;
            salesObject.CheckedById = document.getElementById('SI_CheckedBy_data').value;
            salesObject.ApprovedById = document.getElementById('SI_ApprovedBy_data').value;
            var data = JSON.stringify(salesObject);

            if (document.getElementById('SI_Customer_data').value == '') {
                document.getElementById("SI_Customer").style.border = "1px solid red";
            } else {
                document.getElementById("SI_Customer").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('SI_Term_data').value == '') {
                document.getElementById("SI_Term").style.border = "1px solid red";
            } else {
                document.getElementById("SI_Term").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('SI_SoldBy_data').value == '') {
                document.getElementById("SI_SoldBy").style.border = "1px solid red";
            } else {
                document.getElementById("SI_SoldBy").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('SI_PreparedBy_data').value == '') {
                document.getElementById("SI_PreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("SI_PreparedBy").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('SI_CheckedBy_data').value == '') {
                document.getElementById("SI_CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("SI_CheckedBy").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('SI_ApprovedBy_data').value == '') {
                document.getElementById("SI_ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("SI_ApprovedBy").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredSales').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                if (salesId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addSales',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdSalesJournal").prop("disabled", true);
                                $("#cmdSalesSaveLock").prop("disabled", true);
                                $("#cmdSalesSave").prop("disabled", true);
                                $("#cmdSalesEdit").prop("disabled", true);
                                $("#cmdSalesPrint").prop("disabled", true);
                                $("#cmdSalesClose").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getSalesLastInsertedId, 1000)
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdSalesJournal").prop("disabled", false);
                                $("#cmdSalesSaveLock").prop("disabled", false);
                                $("#cmdSalesSave").prop("disabled", false);
                                $("#cmdSalesEdit").prop("disabled", false);
                                $("#cmdSalesPrint").prop("disabled", false);
                                $("#cmdSalesClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSalesJournal").prop("disabled", false);
                                $("#cmdSalesSaveLock").prop("disabled", false);
                                $("#cmdSalesSave").prop("disabled", false);
                                $("#cmdSalesEdit").prop("disabled", false);
                                $("#cmdSalesPrint").prop("disabled", false);
                                $("#cmdSalesClose").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateSales/' + salesId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdSalesJournal").prop("disabled", true);
                                $("#cmdSalesSaveLock").prop("disabled", true);
                                $("#cmdSalesSave").prop("disabled", true);
                                $("#cmdSalesEdit").prop("disabled", true);
                                $("#cmdSalesPrint").prop("disabled", true);
                                $("#cmdSalesClose").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdSalesJournal").prop("disabled", false);
                                $("#cmdSalesSaveLock").prop("disabled", false);
                                $("#cmdSalesSave").prop("disabled", false);
                                $("#cmdSalesEdit").prop("disabled", false);
                                $("#cmdSalesPrint").prop("disabled", false);
                                $("#cmdSalesClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSalesJournal").prop("disabled", false);
                                $("#cmdSalesSaveLock").prop("disabled", false);
                                $("#cmdSalesSave").prop("disabled", false);
                                $("#cmdSalesEdit").prop("disabled", false);
                                $("#cmdSalesPrint").prop("disabled", false);
                                $("#cmdSalesClose").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // =======================
        // SAVE Sale - Lock Unlock
        // =======================
        function btnSaveLockSales_OnClick() {
            var salesObject = new Object();
            var salesId = getParam('SalesId');
            salesObject.BranchId = document.getElementById('SI_Branch_data').value;
            salesObject.SINumber = document.getElementById('SI_SINumber_Display').value;
            salesObject.SIDate = document.getElementById('SI_SIDate_data').value;
            salesObject.CustomerId = document.getElementById('SI_Customer_data').value;
            salesObject.TermId = document.getElementById('SI_Term_data').value;
            salesObject.DocumentReference = document.getElementById('SI_DocReference').value;
            salesObject.ManualSINumber = document.getElementById('SI_ManualSINumber').value;
            salesObject.Remarks = document.getElementById('SI_SIRemarks').value;
            //salesObject.Amount = 0.00;
            //salesObject.PaidAmount = 0.00;
            //salesObject.AdjustmentAmount = 0.00;
            //salesObject.BalanceAmount = 0.00;
            salesObject.SoldById = document.getElementById('SI_SoldBy_data').value;
            salesObject.PreparedById = document.getElementById('SI_PreparedBy_data').value;
            salesObject.CheckedById = document.getElementById('SI_CheckedBy_data').value;
            salesObject.ApprovedById = document.getElementById('SI_ApprovedBy_data').value;
            salesObject.IsLocked = true;
            var data = JSON.stringify(salesObject);

            if (document.getElementById('SI_Customer_data').value == '') {
                document.getElementById("SI_Customer").style.border = "1px solid red";
            } else {
                document.getElementById("SI_Customer").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('SI_Term_data').value == '') {
                document.getElementById("SI_Term").style.border = "1px solid red";
            } else {
                document.getElementById("SI_Term").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('SI_SoldBy_data').value == '') {
                document.getElementById("SI_SoldBy").style.border = "1px solid red";
            } else {
                document.getElementById("SI_SoldBy").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('SI_PreparedBy_data').value == '') {
                document.getElementById("SI_PreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("SI_PreparedBy").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('SI_CheckedBy_data').value == '') {
                document.getElementById("SI_CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("SI_CheckedBy").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('SI_ApprovedBy_data').value == '') {
                document.getElementById("SI_ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("SI_ApprovedBy").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredSales').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                if (salesId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addSales',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdSalesJournal").prop("disabled", true);
                                $("#cmdSalesSaveLock").prop("disabled", true);
                                $("#cmdSalesSave").prop("disabled", true);
                                $("#cmdSalesEdit").prop("disabled", true);
                                $("#cmdSalesPrint").prop("disabled", true);
                                $("#cmdSalesClose").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getSalesLastInsertedId, 1000)
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdSalesJournal").prop("disabled", false);
                                $("#cmdSalesSaveLock").prop("disabled", false);
                                $("#cmdSalesSave").prop("disabled", false);
                                $("#cmdSalesEdit").prop("disabled", false);
                                $("#cmdSalesPrint").prop("disabled", false);
                                $("#cmdSalesClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSalesJournal").prop("disabled", false);
                                $("#cmdSalesSaveLock").prop("disabled", false);
                                $("#cmdSalesSave").prop("disabled", false);
                                $("#cmdSalesEdit").prop("disabled", false);
                                $("#cmdSalesPrint").prop("disabled", false);
                                $("#cmdSalesClose").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateSales/' + salesId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdSalesJournal").prop("disabled", true);
                                $("#cmdSalesSaveLock").prop("disabled", true);
                                $("#cmdSalesSave").prop("disabled", true);
                                $("#cmdSalesEdit").prop("disabled", true);
                                $("#cmdSalesPrint").prop("disabled", true);
                                $("#cmdSalesClose").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdSalesJournal").prop("disabled", false);
                                $("#cmdSalesSaveLock").prop("disabled", false);
                                $("#cmdSalesSave").prop("disabled", false);
                                $("#cmdSalesEdit").prop("disabled", false);
                                $("#cmdSalesPrint").prop("disabled", false);
                                $("#cmdSalesClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSalesJournal").prop("disabled", false);
                                $("#cmdSalesSaveLock").prop("disabled", false);
                                $("#cmdSalesSave").prop("disabled", false);
                                $("#cmdSalesEdit").prop("disabled", false);
                                $("#cmdSalesPrint").prop("disabled", false);
                                $("#cmdSalesClose").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // =======================
        // EDIT Sale - Lock Unlock
        // =======================
        function btnSalesEdit_OnClick() {
            var salesObject = new Object();
            var salesId = getParam('SalesId');
            salesObject.IsLocked = false;
            var data = JSON.stringify(salesObject);
            $.ajax({
                type: "PUT",
                url: '/api/updateSalesIsLocked/' + salesId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: data,
                statusCode: {
                    200: function () {
                        $("#cmdSalesJournal").prop("disabled", true);
                        $("#cmdSalesSaveLock").prop("disabled", true);
                        $("#cmdSalesSave").prop("disabled", true);
                        $("#cmdSalesEdit").prop("disabled", true);
                        $("#cmdSalesPrint").prop("disabled", true);
                        $("#cmdSalesClose").prop("disabled", true);
                        toastr.success("Unlocked");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Can't Save");
                        $("#cmdSalesJournal").prop("disabled", false);
                        $("#cmdSalesSaveLock").prop("disabled", false);
                        $("#cmdSalesSave").prop("disabled", false);
                        $("#cmdSalesEdit").prop("disabled", false);
                        $("#cmdSalesPrint").prop("disabled", false);
                        $("#cmdSalesClose").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#cmdSalesJournal").prop("disabled", false);
                        $("#cmdSalesSaveLock").prop("disabled", false);
                        $("#cmdSalesSave").prop("disabled", false);
                        $("#cmdSalesEdit").prop("disabled", false);
                        $("#cmdSalesPrint").prop("disabled", false);
                        $("#cmdSalesClose").prop("disabled", false);
                    }
                }
            });
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            var salesId = getParam('SalesId');
            if (document.location.search.length == 0) {
                $('#cmdSalesJournal').hide();
                $('#cmdSalesSaveLock').hide();
                $('#cmdSalesSave').show();
                $('#cmdSalesEdit').hide();
                $("#cmdSalesPrint").prop("disabled", true);
                $('#btnAddSaleItem').prop('disabled', true);
            } else {
                $('#cmdSalesSaveLock').show();
                $('#cmdSalesSave').hide();
                $('#cmdSalesEdit').show();
            }

            document.getElementById('SI_Lock').disabled = true;
            document.getElementById('SI_SINumber_Display').disabled = true;

            cboBranch = new wijmo.input.ComboBox('#SI_Branch');

            var d = new Date();
            document.getElementById("SI_SIDate_data").value = [d.getMonth() + 1, d.getDate(), d.getFullYear()].join('/');
            SIDate = new wijmo.input.InputDate('#SI_SIDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('SI_SIDate_data').value = this.value.toLocaleDateString();
                }
            });

            cboCustomer = new wijmo.input.ComboBox('#SI_Customer');
            cboTerm = new wijmo.input.ComboBox('#SI_Term');
            cboSoldBy = new wijmo.input.ComboBox('#SI_SoldBy');
            cboPreparedBy = new wijmo.input.ComboBox('#SI_PreparedBy');
            cboCheckedBy = new wijmo.input.ComboBox('#SI_CheckedBy');
            cboApprovedBy = new wijmo.input.ComboBox('#SI_ApprovedBy');

            getSalesById();

            var salesId = getParam('SalesId');
            if (salesId == 0) {
                // comboboxes
                getBranchesForComboBox();
                getCustomerForComboBox();
                getTermForComboBox();
                getUsersForComboBox();

                if (document.getElementById('SI_SINumber').value == 0) {
                    document.getElementById('SI_SINumber_Display').value = "0000000001";
                }

                document.getElementById('SI_SINumber').value = 0;
                //document.getElementById('journalVoucher_No_Display').value = "000-000000";
                var POs = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/salesInvoiceLastSINumber',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results != null) {
                            var SI_Number = parseInt(Results.SINumber);
                            var SI_Number_PlusOne = 0000000001;
                            var SI_Num_Results = SI_Number + SI_Number_PlusOne;
                            //var JV_Number_Display = JV_Num_Results.toString().replace(/(\d{3})(\d+)/, '$1-$2');

                            document.getElementById('SI_SINumber').value = zerofill(SI_Num_Results, 10);
                            document.getElementById('SI_SINumber_Display').value = zerofill(SI_Num_Results, 10);
                        }
                    }
                });
            }
        });
    </script>

    <!-- ============= -->
    <!-- Items Scripts -->
    <!-- ============= -->
    <script type="text/javascript">
        // ==========================
        // Global Variables for Items
        // ==========================
        var items;
        var itemGrid;

        var articleItems;
        var cboManualCodeArticleItems;
        var cboItemDescriptionArticleItems;

        var salesItemUnits;
        var cboSalesItemUnit;

        var inventories;
        var cboInventoryCode;

        var discounts;
        var cboDiscount;

        var taxTypes;
        var cboForVATTaxType;

        // ===================
        // GET Sales Item List
        // ===================
        function getItem() {
            var items = new wijmo.collections.ObservableArray;
            var salesId = getParam('SalesId');
            $('#loadingModal').modal('show');
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/listSalesInvoiceItemBySIId/' + salesId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        $('#loadingModal').modal('hide');
                        if (Results.length > 0) {
                            var sales = new wijmo.collections.ObservableArray;
                            var salesId = getParam('SalesId');
                            $.ajax({
                                url: '/api/salesInvoice/' + salesId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (SalesResults) {
                                    if (SalesResults.length > 0) {
                                        sales.push({
                                            Id: SalesResults.Id,
                                            IsLocked: SalesResults.IsLocked
                                        });
                                    }

                                    if (SalesResults.IsLocked == true) {
                                        for (i = 0; i < Results.length; i++) {
                                            items.push({
                                                EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditSaleItem_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>",
                                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteSaleItem_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>",
                                                Id: Results[i]["Id"],
                                                SIId: Results[i]["SIId"],
                                                SI: Results[i]["SI"],
                                                ItemId: Results[i]["ItemId"],
                                                ItemCode: Results[i]["ItemCode"],
                                                Item: Results[i]["Item"],
                                                ItemInventoryId: Results[i]["ItemInventoryId"],
                                                ItemInventory: Results[i]["ItemInventory"],
                                                Particulars: Results[i]["Particulars"],
                                                UnitId: Results[i]["UnitId"],
                                                Unit: Results[i]["Unit"],
                                                Quantity: Results[i]["Quantity"],
                                                Price: Results[i]["Price"],
                                                DiscountId: Results[i]["DiscountId"],
                                                Discount: Results[i]["Discount"],
                                                DiscountRate: Results[i]["Discount"] + "<hr style='margin-top: 3px; margin-bottom: 3px; border-color: #cccccc' />" + Results[i]["DiscountRate"],
                                                DiscountRateEdit: Results[i]["DiscountRate"],
                                                DiscountAmount: Results[i]["DiscountAmount"],
                                                NetPrice: Results[i]["NetPrice"],
                                                Amount: Results[i]["Amount"],
                                                VATId: Results[i]["VATId"],
                                                VAT: Results[i]["VAT"],
                                                VATPercentage: Results[i]["VAT"] + "<hr style='margin-top: 3px; margin-bottom: 3px; border-color: #cccccc' />" + Results[i]["VATPercentage"],
                                                VATRate: Results[i]["VATPercentage"],
                                                VATAmount: Results[i]["VATAmount"],
                                                BaseUnitId: Results[i]["BaseUnitId"],
                                                BaseUnit: Results[i]["BaseUnit"],
                                                BaseQuantity: Results[i]["BaseQuantity"],
                                                BasePrice: Results[i]["BasePrice"],
                                            });
                                        }
                                    } else {
                                        for (i = 0; i < Results.length; i++) {
                                            items.push({
                                                EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditSaleItem_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteSaleItem_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                                Id: Results[i]["Id"],
                                                SIId: Results[i]["SIId"],
                                                SI: Results[i]["SI"],
                                                ItemId: Results[i]["ItemId"],
                                                ItemCode: Results[i]["ItemCode"],
                                                Item: Results[i]["Item"],
                                                ItemInventoryId: Results[i]["ItemInventoryId"],
                                                ItemInventory: Results[i]["ItemInventory"],
                                                Particulars: Results[i]["Particulars"],
                                                UnitId: Results[i]["UnitId"],
                                                Unit: Results[i]["Unit"],
                                                Quantity: Results[i]["Quantity"],
                                                Price: Results[i]["Price"],
                                                DiscountId: Results[i]["DiscountId"],
                                                Discount: Results[i]["Discount"],
                                                DiscountRate: Results[i]["Discount"] + "<hr style='margin-top: 3px; margin-bottom: 3px; border-color: #cccccc' />" + Results[i]["DiscountRate"],
                                                DiscountRateEdit: Results[i]["DiscountRate"],
                                                DiscountAmount: Results[i]["DiscountAmount"],
                                                NetPrice: Results[i]["NetPrice"],
                                                Amount: Results[i]["Amount"],
                                                VATId: Results[i]["VATId"],
                                                VAT: Results[i]["VAT"],
                                                VATPercentage: Results[i]["VAT"] + "<hr style='margin-top: 3px; margin-bottom: 3px; border-color: #cccccc' />" + Results[i]["VATPercentage"],
                                                VATRate: Results[i]["VATPercentage"],
                                                VATAmount: Results[i]["VATAmount"],
                                                BaseUnitId: Results[i]["BaseUnitId"],
                                                BaseUnit: Results[i]["BaseUnit"],
                                                BaseQuantity: Results[i]["BaseQuantity"],
                                                BasePrice: Results[i]["BasePrice"],
                                            });
                                        }
                                    }
                                }
                            });
                        }
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            } else {
                $('#loadingModal').modal('hide');
            }
            return items;
        }

        // ======================================
        // GET Item Id, Manual Code and Component
        // ======================================
        function getArticleItemForManualCodeAndComponent() {
            articleItems = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/1',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleItems.push({
                                ItemId: results[i]["Id"],
                                ItemCode: results[i]["ManualArticleCode"],
                                ItemDescription: results[i]["Article"],
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"],
                                Particulars: results[i]["Particulars"],
                                Price: results[i]["Price"]
                            });
                        }
                        createCboForManualCode(articleItems);
                        createCboForItemDescription(articleItems);
                        getSalesItemUnitForComboBox();
                        getTaxTypeForComboBox();
                    } else {
                        createCboForManualCode(articleItems);
                        createCboForItemDescription(articleItems);
                        getSalesItemUnitForComboBox();
                        getTaxTypeForComboBox();
                    }
                }
            });
        }

        // ===============
        // CBO Manual Code
        // ===============
        function createCboForManualCode(articleItems) {
            var ManualCodeCollections = new wijmo.collections.CollectionView(articleItems);
            var ManualCodeList = new Array();
            for (var i = 0; i < ManualCodeCollections.items.length; i++) {
                ManualCodeList.push(ManualCodeCollections.items[i].ItemCode);
            }

            var disabled;
            if (articleItems == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == '') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboManualCodeArticleItems.dispose();
            cboManualCodeArticleItems = new wijmo.input.ComboBox('#saleItem_ItemCode', {
                disabled: disabled,
                placeholder: "Select Manual Code",
                itemsSource: ManualCodeList,
                isEditable: false,
                selectedValue: document.getElementById('saleItem_ItemCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#saleItem_ItemId_data").val(ManualCodeCollections.items[this.selectedIndex].ItemId);
                    $("#saleItem_ItemCode_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemCode);
                    $("#saleItem_ItemDescription_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemDescription);
                    $("#saleItem_Unit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
                    $("#saleItem_Unit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
                    $("#saleItem_BUCUnit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
                    $("#saleItem_BUCUnit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
                    $("#saleItem_Particulars").val(ManualCodeCollections.items[this.selectedIndex].Particulars);
                    $("#saleItem_PriceExVAT").val(ManualCodeCollections.items[this.selectedIndex].Price);

                    createCboForItemDescription(articleItems);
                    getSalesItemUnitForComboBox();

                    var articleId = ManualCodeCollections.items[this.selectedIndex].ItemId;
                    getTaxTyoeValues(articleId);

                    var branchId = document.getElementById('SI_Branch_data').value;
                    $.ajax({
                        url: '/api/getArticleInventoryByArticleId/' + branchId + '/' + articleId,
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        data: {},
                        success: function (results) {
                            //if (results.length > 0) {
                            //    inventories.push({
                            //        Id: results.Id,
                            //        BranchId: results.BranchId,
                            //        ArticleId: results.ArticleId,
                            //        InventoryCode: results.InventoryCode,
                            //        Quantity: results.Quantity,
                            //        Cost: results.Cost,
                            //        Amount: results.Amount,
                            //        Particulars: results.Particulars
                            //    });
                            //}

                            if (results == null) {
                                document.getElementById('saleItem_InventoryCode_data').value = "";
                                document.getElementById('saleItem_InventoryCode_selectedValue').value = "";
                            } else {
                                document.getElementById('saleItem_InventoryCode_data').value = results.Id;
                                document.getElementById('saleItem_InventoryCode_selectedValue').value = results.InventoryCode;
                            }

                            getItemInventoryCodeForComboBox();
                        }
                    });

                    var quantity = document.getElementById('saleItem_Quantity').value;
                    var price = document.getElementById('saleItem_PriceExVAT').value;

                    document.getElementById('saleItem_BUCQuantity').value = quantity;
                    document.getElementById('saleItem_BUCPrice').value = price;
                }
            });

            //$("#saleItem_ItemId_data").val(ManualCodeCollections.items[this.selectedIndex].ItemId);
            //$("#saleItem_ItemCode_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemCode);
            //$("#saleItem_ItemDescription_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemDescription);
            //$("#saleItem_Unit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
            //$("#saleItem_Unit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
            //$("#saleItem_BUCUnit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
            //$("#saleItem_BUCUnit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
            //$("#saleItem_Particulars").val(ManualCodeCollections.items[this.selectedIndex].Particulars);
            //$("#saleItem_PriceExVAT").val(ManualCodeCollections.items[this.selectedIndex].Price);

            if (articleItems == 0) {
                document.getElementById('saleItem_ItemId_data').value = "";
                document.getElementById('saleItem_ItemCode_selectedValue').value = "";
                document.getElementById('saleItem_ItemDescription_selectedValue').value = "";
                document.getElementById('saleItem_Unit_data').value = "";
                document.getElementById('saleItem_Unit_selectedValue').value = "";
                document.getElementById('saleItem_BUCUnit_data').value = "";
                document.getElementById('saleItem_BUCUnit_selectedValue').value = "";
                document.getElementById('saleItem_Particulars').value = "";
                document.getElementById('saleItem_PriceExVAT').value = "";
            } else {
                document.getElementById('saleItem_ItemId_data').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemId;
                document.getElementById('saleItem_ItemCode_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemCode;
                document.getElementById('saleItem_ItemDescription_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemDescription;
                document.getElementById('saleItem_Unit_data').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].UnitId;
                document.getElementById('saleItem_Unit_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Unit;
                document.getElementById('saleItem_BUCUnit_data').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].UnitId;
                document.getElementById('saleItem_BUCUnit_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Unit;
                document.getElementById('saleItem_Particulars').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Particulars;
                document.getElementById('saleItem_PriceExVAT').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Price;

                getTaxTyoeValues(ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemId);
            }

            var articleId =  document.getElementById('saleItem_ItemId_data').value;
            var branchId = document.getElementById('SI_Branch_data').value;
            $.ajax({
                url: '/api/getArticleInventoryByArticleId/' + branchId + '/' + articleId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results == null) {
                        document.getElementById('saleItem_InventoryCode_data').value = "";
                        document.getElementById('saleItem_InventoryCode_selectedValue').value = "";


                    } else {
                        document.getElementById('saleItem_InventoryCode_data').value = results.Id;
                        document.getElementById('saleItem_InventoryCode_selectedValue').value = results.InventoryCode;
                        
                        console.log(results.Id);
                        console.log(results.InventoryCode);
                    }

                    getItemInventoryCodeForComboBox();
                }
            });

        }

        // ====================
        // CBO Item Description
        // ====================
        function createCboForItemDescription(articleItems) {
            var ItemDescriptionCollections = new wijmo.collections.CollectionView(articleItems);
            var ItemDescriptionList = new Array();
            for (var i = 0; i < ItemDescriptionCollections.items.length; i++) {
                ItemDescriptionList.push(ItemDescriptionCollections.items[i].ItemDescription);
            }

            var disabled;
            if (articleItems == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == '') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboItemDescriptionArticleItems.dispose();
            cboItemDescriptionArticleItems = new wijmo.input.ComboBox('#saleItem_ItemDescription', {
                disabled: disabled,
                placeholder: "Select Item Description",
                itemsSource: ItemDescriptionList,
                isEditable: false,
                selectedValue: document.getElementById('saleItem_ItemDescription_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#saleItem_ItemId_data").val(ItemDescriptionCollections.items[this.selectedIndex].ItemId);
                    $("#saleItem_ItemDescription_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].ItemDescription);
                    $("#saleItem_ItemCode_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].ItemCode);
                    $("#saleItem_Unit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
                    $("#saleItem_Unit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
                    $("#saleItem_BUCUnit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
                    $("#saleItem_BUCUnit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
                    $("#saleItem_Particulars").val(ItemDescriptionCollections.items[this.selectedIndex].Particulars);
                    $("#saleItem_PriceExVAT").val(ItemDescriptionCollections.items[this.selectedIndex].Price);

                    createCboForManualCode(articleItems);
                    getSalesItemUnitForComboBox();

                    var articleId = ItemDescriptionCollections.items[this.selectedIndex].ItemId;
                    getTaxTyoeValues(articleId);

                    var branchId = document.getElementById('SI_Branch_data').value;
                    $.ajax({
                        url: '/api/getArticleInventoryByArticleId/' + branchId + '/' + articleId,
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        data: {},
                        success: function (results) {
                            //if (results.length > 0) {
                            //    inventories.push({
                            //        Id: results.Id,
                            //        BranchId: results.BranchId,
                            //        ArticleId: results.ArticleId,
                            //        InventoryCode: results.InventoryCode,
                            //        Quantity: results.Quantity,
                            //        Cost: results.Cost,
                            //        Amount: results.Amount,
                            //        Particulars: results.Particulars
                            //    });
                            //}

                            if (results == null) {
                                document.getElementById('saleItem_InventoryCode_data').value = "";
                                document.getElementById('saleItem_InventoryCode_selectedValue').value = "";
                            } else {
                                document.getElementById('saleItem_InventoryCode_data').value = results.Id;
                                document.getElementById('saleItem_InventoryCode_selectedValue').value = results.InventoryCode;
                            }

                            getItemInventoryCodeForComboBox();
                        }
                    });


                    computeNetPrice();
                    computeAmount();

                    var quantity = document.getElementById('saleItem_Quantity').value;
                    var price = document.getElementById('saleItem_PriceExVAT').value;

                    document.getElementById('saleItem_BUCQuantity').value = quantity;
                    document.getElementById('saleItem_BUCPrice').value = price;
                }
            });

            if (articleItems == 0) {
                document.getElementById('saleItem_ItemId_data').value = "";
                document.getElementById('saleItem_ItemDescription_selectedValue').value = "";
                document.getElementById('saleItem_ItemCode_selectedValue').value = "";
                document.getElementById('saleItem_Unit_data').value = "";
                document.getElementById('saleItem_Unit_selectedValue').value = "";
                document.getElementById('saleItem_BUCUnit_data').value = "";
                document.getElementById('saleItem_BUCUnit_selectedValue').value = "";
                document.getElementById('saleItem_Particulars').value = "";
                document.getElementById('saleItem_PriceExVAT').value = "";
            } else {
                document.getElementById('saleItem_ItemId_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemId;
                document.getElementById('saleItem_ItemDescription_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemDescription;
                document.getElementById('saleItem_ItemCode_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemCode;
                document.getElementById('saleItem_Unit_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].UnitId;
                document.getElementById('saleItem_Unit_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Unit;
                document.getElementById('saleItem_BUCUnit_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].UnitId;
                document.getElementById('saleItem_BUCUnit_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Unit;
                document.getElementById('saleItem_Particulars').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Particulars;
                document.getElementById('saleItem_PriceExVAT').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Price;

                getTaxTyoeValues(ItemDescriptionCollections.items[cboManualCodeArticleItems.selectedIndex].ItemId);
            }
        }

        // ===================
        // Get Tax Type Values
        // ===================
        function getTaxTyoeValues(articleId) {
            var items = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/article/' + articleId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        items.push({
                            Id: Results.Id,
                            OutputTaxId: Results.OutputTaxId,
                            OutputTax: Results.OutputTax,
                            InputTaxId: Results.InputTaxId,
                            InputTax: Results.InputTax,
                            WTaxTypeId: Results.WTaxTypeId,
                            WTaxType: Results.WTaxType
                        });
                    }

                    var taxTypesVAT = new wijmo.collections.ObservableArray();
                    var taxTypeVATId = Results.OutputTaxId;
                    $.ajax({
                        url: '/api/taxType/' + taxTypeVATId,
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        data: {},
                        success: function (results) {
                            if (results.length > 0) {
                                taxTypesVAT.push({
                                    TaxTypeId: results.Id,
                                    TaxType: results.TaxType,
                                    TaxRate: results.TaxRate,
                                    IsInclusive: results.IsInclusive
                                });
                            }

                            document.getElementById('saleItem_VAT_data').value = results.Id;
                            document.getElementById('saleItem_VAT_selectedValue').value = results.TaxType;
                            document.getElementById('saleItem_VATRate').value = results.TaxRate;
                            document.getElementById('saleItem_TAXInclusive').value = results.IsInclusive;

                            getTaxTypeForComboBox();
                        }
                    });
                }
            });
        }

        // =============
        // Get Item Unit
        // =============
        function getSalesItemUnitForComboBox() {
            salesItemUnits = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUnit',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            salesItemUnits.push({
                                UnitId: results[i]["Id"],
                                Unit: results[i]["Unit"]
                            });
                        }
                        createCboForSalesItemUnit(salesItemUnits);
                        createCboForSalesItemBaseUnit(salesItemUnits);
                    } else {
                        createCboForSalesItemUnit(salesItemUnits);
                        createCboForSalesItemBaseUnit(salesItemUnits);
                    }
                }
            });
        }

        // =======================
        // CBO for Sales Item Unit
        // =======================
        function createCboForSalesItemUnit(salesItemUnits) {
            var SalesItemUnitCollection = new wijmo.collections.CollectionView(salesItemUnits);
            var SalesItemUnitList = new Array();
            for (var i = 0; i < SalesItemUnitCollection.items.length; i++) {
                SalesItemUnitList.push(SalesItemUnitCollection.items[i].Unit);
            }

            var disabled;
            if (salesItemUnits == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == '') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboSalesItemUnit.dispose();
            cboSalesItemUnit = new wijmo.input.ComboBox('#saleItem_Unit', {
                disabled: disabled,
                placeholder: "Select Unit",
                itemsSource: SalesItemUnitList,
                isEditable: false,
                selectedValue: document.getElementById('saleItem_Unit_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#saleItem_Unit_data").val(SalesItemUnitCollection.items[this.selectedIndex].UnitId);
                    $("#saleItem_Unit_selectedValue").val(SalesItemUnitCollection.items[this.selectedIndex].Unit);
                    $("#saleItem_BUCUnit_data").val(SalesItemUnitCollection.items[this.selectedIndex].UnitId);
                    $("#saleItem_BUCUnit_selectedValue").val(SalesItemUnitCollection.items[this.selectedIndex].Unit);

                    createCboForSalesItemBaseUnit(salesItemUnits);
                }
            });

            if (salesItemUnits == 0) {
                document.getElementById('saleItem_Unit_data').value = "";
                document.getElementById('saleItem_Unit_selectedValue').value = "";
                document.getElementById('saleItem_BUCUnit_data').value = "";
                document.getElementById('saleItem_BUCUnit_selectedValue').value = "";
            } else {
                document.getElementById('saleItem_Unit_data').value = SalesItemUnitCollection.items[cboSalesItemUnit.selectedIndex].UnitId;
                document.getElementById('saleItem_Unit_selectedValue').value = SalesItemUnitCollection.items[cboSalesItemUnit.selectedIndex].Unit;
                document.getElementById('saleItem_BUCUnit_data').value = SalesItemUnitCollection.items[cboSalesItemUnit.selectedIndex].UnitId;
                document.getElementById('saleItem_BUCUnit_selectedValue').value = SalesItemUnitCollection.items[cboSalesItemUnit.selectedIndex].Unit;
            }
        }

        // ============================
        // CBO for Sales Item Base Unit
        // ============================
        function createCboForSalesItemBaseUnit(salesItemUnits) {
            var SalesItemBaseUnitCollection = new wijmo.collections.CollectionView(salesItemUnits);
            var SalesItemBaseUnitList = new Array();
            for (var i = 0; i < SalesItemBaseUnitCollection.items.length; i++) {
                SalesItemBaseUnitList.push(SalesItemBaseUnitCollection.items[i].Unit);
            }

            var disabled;
            if (salesItemUnits == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == '') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboBaseUnit.dispose();
            cboBaseUnit = new wijmo.input.ComboBox('#saleItem_BUCUnit', {
                disabled: true,
                placeholder: "Select Unit",
                itemsSource: SalesItemBaseUnitList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('saleItem_BUCUnit_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#saleItem_BUCUnit_data").val(SalesItemBaseUnitCollection.items[this.selectedIndex].UnitId);
                    $("#saleItem_BUCUnit_selectedValue").val(SalesItemBaseUnitCollection.items[this.selectedIndex].Unit);
                    $("#saleItem_Unit_data").val(SalesItemBaseUnitCollection.items[this.selectedIndex].UnitId);
                    $("#saleItem_Unit_selectedValue").val(SalesItemBaseUnitCollection.items[this.selectedIndex].Unit);

                    createCboForSalesItemUnit(salesItemUnits);
                }
            });

            if (salesItemUnits == 0) {
                document.getElementById('saleItem_BUCUnit_data').value = "";
                document.getElementById('saleItem_BUCUnit_selectedValue').value = "";
                document.getElementById('saleItem_Unit_data').value = "";
                document.getElementById('saleItem_Unit_selectedValue').value = "";
            } else {
                document.getElementById('saleItem_BUCUnit_data').value = SalesItemBaseUnitCollection.items[cboBaseUnit.selectedIndex].UnitId;
                document.getElementById('saleItem_BUCUnit_selectedValue').value = SalesItemBaseUnitCollection.items[cboBaseUnit.selectedIndex].Unit;
                document.getElementById('saleItem_Unit_data').value = SalesItemBaseUnitCollection.items[cboBaseUnit.selectedIndex].UnitId;
                document.getElementById('saleItem_Unit_selectedValue').value = SalesItemBaseUnitCollection.items[cboBaseUnit.selectedIndex].Unit;
            }
        }

        // =======================
        // Get Item Inventory Code
        // =======================
        function getItemInventoryCodeForComboBox() {
            inventories = new wijmo.collections.ObservableArray();
            setTimeout(function () {
                var articleId = document.getElementById('saleItem_ItemId_data').value;
                var branchId = document.getElementById('SI_Branch_data').value;
                $.ajax({
                    url: '/api/listArticleInventoryByBranchIdAndArticleId/' + branchId + '/' + articleId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                inventories.push({
                                    Id: results[i]["Id"],
                                    BranchId: results[i]["BranchId"],
                                    ArticleId: results[i]["ArticleId"],
                                    InventoryCode: results[i]["InventoryCode"],
                                    Quantity: results[i]["Quantity"],
                                    Cost: results[i]["Cost"],
                                    Amount: results[i]["Amount"],
                                    Particulars: results[i]["Particulars"]
                                });
                                createCboForInventoryCode(inventories);
                            }
                        } else {
                            createCboForInventoryCode(inventories);
                        }
                    }
                });
            }, 100);
        }

        // ===========================
        // CBO for Item Inventory Code
        // ===========================
        function createCboForInventoryCode(inventories) {
            var InventoryCodeCollection = new wijmo.collections.CollectionView(inventories);
            var InventoryCodeList = new Array();
            for (var i = 0; i < InventoryCodeCollection.items.length; i++) {
                InventoryCodeList.push(InventoryCodeCollection.items[i].InventoryCode);
            }

            var disabled;
            if (inventories == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == '') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboInventoryCode.dispose();
            cboInventoryCode = new wijmo.input.ComboBox('#saleItem_InventoryCode', {
                disabled: disabled,
                placeholder: "Inventory Code",
                itemsSource: InventoryCodeList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('saleItem_InventoryCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#saleItem_InventoryCode_data").val(InventoryCodeCollection.items[this.selectedIndex].Id);
                }
            });

            if (inventories == 0) {
                document.getElementById('saleItem_InventoryCode_data').value = "";
            } else {
                document.getElementById('saleItem_InventoryCode_data').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Id;
            }
        }

        // ============
        // Get Discount
        // ============
        function getDiscountForComboBox() {
            discounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listDiscount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            discounts.push({
                                Id: results[i]["Id"],
                                Discount: results[i]["Discount"],
                                DiscountRate: results[i]["DiscountRate"],
                                IsInclusive: results[i]["IsInclusive"],
                                AccountId: results[i]["AccountId"],
                                Account: results[i]["Account"],
                                IsLocked: results[i]["IsLocked"],
                            });
                        }
                        createCboForDiscount(discounts);
                    } else {
                        createCboForDiscount(discounts);
                    }
                }
            });
        }

        // ================
        // CBO for Discount
        // ================
        function createCboForDiscount(discounts) {
            var DiscountCollection = new wijmo.collections.CollectionView(discounts);
            var DiscountList = new Array();
            for (var i = 0; i < DiscountCollection.items.length; i++) {
                DiscountList.push(DiscountCollection.items[i].Discount);
            }

            var disabled;
            if (discounts == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == '') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboDiscount.dispose();
            cboDiscount = new wijmo.input.ComboBox('#saleItem_Discont', {
                disabled: disabled,
                placeholder: "Select Discount",
                itemsSource: DiscountList,
                isEditable: false,
                selectedValue: document.getElementById('saleItem_Discont_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#saleItem_Discont_data").val(DiscountCollection.items[this.selectedIndex].Id);
                    $("#saleItem_DiscountRate").val(DiscountCollection.items[this.selectedIndex].DiscountRate);
                    $("#saleItem_DiscontInclusive").val(DiscountCollection.items[this.selectedIndex].IsInclusive);

                    computeNetPrice();
                    computeAmount();
                }
            });

            if (discounts == 0) {
                document.getElementById('saleItem_Discont_data').value = "";
                document.getElementById('saleItem_Discont_selectedValue').value = "";
                document.getElementById('saleItem_DiscontInclusive').value = "";
            } else {
                document.getElementById('saleItem_Discont_data').value = DiscountCollection.items[cboDiscount.selectedIndex].Id;
                document.getElementById('saleItem_Discont_selectedValue').value = DiscountCollection.items[cboDiscount.selectedIndex].Discount;
                document.getElementById('saleItem_DiscontInclusive').value = DiscountCollection.items[cboDiscount.selectedIndex].IsInclusive;
            }
        }

        // ===================
        // Get Artile Tax Type
        // ===================
        function getTaxTypeForComboBox() {
            taxTypes = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTaxType',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            taxTypes.push({
                                TaxTypeId: results[i]["Id"],
                                TaxType: results[i]["TaxType"],
                                TaxRate: results[i]["TaxRate"],
                                IsInclusive: results[i]["IsInclusive"],
                            });
                        }
                        createCboForVATTaxType(taxTypes);
                    } else {
                        createCboForVATTaxType(taxTypes);
                    }
                }
            });
        }

        // ===========
        // CBO for VAT
        // ===========
        function createCboForVATTaxType(taxTypes) {
            var taxTypeCollection = new wijmo.collections.CollectionView(taxTypes);
            var taxList = new Array();
            for (var i = 0; i < taxTypeCollection.items.length; i++) {
                taxList.push(taxTypeCollection.items[i].TaxType);
            }

            var disabled;
            if (taxTypes == 0) {
                disabled = true;
            } else {
                if (document.getElementById('Sales_IsLocked').value == '') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboForVATTaxType.dispose();
            cboForVATTaxType = new wijmo.input.ComboBox('#saleItem_VAT', {
                disabled: disabled,
                placeholder: "Select VAT",
                itemsSource: taxList,
                isEditable: false,
                selectedValue: document.getElementById('saleItem_VAT_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#saleItem_VAT_data").val(taxTypeCollection.items[this.selectedIndex].TaxTypeId);
                    $("#saleItem_VATRate").val(taxTypeCollection.items[this.selectedIndex].TaxRate);
                    $("#saleItem_VAT_selectedValue").val(taxTypeCollection.items[this.selectedIndex].TaxType);
                    $("#saleItem_TAXInclusive").val(taxTypeCollection.items[this.selectedIndex].IsInclusive);

                    computeTax();
                }
            });

            if (taxTypes == 0) {
                document.getElementById('saleItem_VAT_data').value = "";
                document.getElementById('saleItem_VATRate').value = "";
                document.getElementById('saleItem_VAT_selectedValue').value = "";
                document.getElementById('saleItem_TAXInclusive').value = "";
            } else {
                document.getElementById('saleItem_VAT_data').value = taxTypeCollection.items[cboForVATTaxType.selectedIndex].TaxTypeId;
                document.getElementById('saleItem_VATRate').value = taxTypeCollection.items[cboForVATTaxType.selectedIndex].TaxRate;
                document.getElementById('saleItem_VAT_selectedValue').value = taxTypeCollection.items[cboForVATTaxType.selectedIndex].TaxType;
                document.getElementById('saleItem_TAXInclusive').value = taxTypeCollection.items[cboForVATTaxType.selectedIndex].IsInclusive;
            }
        }

        // =================
        // Compute NET Price
        // =================
        function computeNetPrice() {
            var DiscountIsInclusive = document.getElementById('saleItem_DiscontInclusive').value;
            var DiscountRate = document.getElementById('saleItem_DiscountRate').value;
            var PriceExVATPrice = document.getElementById('saleItem_PriceExVAT').value;
            var VATPercentage = document.getElementById('saleItem_VATRate').value;
            var discountAmount = document.getElementById('saleItem_DiscountAmount').value;

            var price;
            if (document.getElementById('saleItem_DiscontInclusive').value == 'false') {
                price = PriceExVATPrice / (1 + (VATPercentage / 100));

                document.getElementById('saleItem_DiscountAmount').value = Math.round((price * (DiscountRate / 100)) * 100) / 100;

                var newDiscountAmount = price * (DiscountRate / 100);
                document.getElementById('saleItem_NetPrice').value = Math.round((price - newDiscountAmount) * 100) / 100;

                computeAmount();
            } else {

                document.getElementById('saleItem_DiscountAmount').value = Math.round((PriceExVATPrice * (DiscountRate / 100)) * 100) / 100;
                var newDiscountAmount = PriceExVATPrice * (DiscountRate / 100);
                document.getElementById('saleItem_NetPrice').value = Math.round((PriceExVATPrice - newDiscountAmount) * 100) / 100;
            }
        }

        // ==============
        // Compute Amount
        // ==============
        function computeAmount() {
            var quantity = document.getElementById('saleItem_Quantity').value;
            var netPrice = document.getElementById('saleItem_NetPrice').value;

            document.getElementById('saleItem_Amount').value = Math.round((quantity * netPrice) * 100) / 100;

            computeTax();

        }

        // ===========
        // Compute Tax
        // ===========
        function computeTax() {
            var PriceExVATPrice = document.getElementById('saleItem_PriceExVAT').value;
            var DiscountIsInclusive = document.getElementById('saleItem_DiscontInclusive').value;
            var VATPercentage = document.getElementById('saleItem_VATRate').value;
            var netPrice = document.getElementById('saleItem_NetPrice').value;
            var VATAmount = document.getElementById('saleItem_VATAmount').value;
            var amount = document.getElementById('saleItem_Amount').value;
            var quantity = document.getElementById('saleItem_Quantity').value;

            if (document.getElementById('saleItem_TAXInclusive').value == 'true') {
                document.getElementById('saleItem_VATAmount').value = Math.round((amount / (1 + (VATPercentage / 100)) * (VATPercentage / 100)) * 100) / 100;
            } else {
                document.getElementById('saleItem_VATAmount').value = Math.round((amount * (VATPercentage / 100)) * 100) / 100;
                document.getElementById('saleItem_Amount').value = Math.round((netPrice * quantity) * 100) / 100;
            }
        }

        //// =================
        //// Compute Base Unit
        //// =================
        //function computeBaseUnit() {

        //}

        // =============
        // ADD Sale Item
        // =============
        function cmdAddSaleItem_OnClick() {
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            getArticleItemForManualCodeAndComponent();
            //getSalesItemUnitForComboBox();
            //getItemInventoryCodeForComboBox();

            inventories = new wijmo.collections.ObservableArray();
            setTimeout(function () {
                var articleId = document.getElementById('saleItem_ItemId_data').value;
                var branchId = document.getElementById('SI_Branch_data').value;
                $.ajax({
                    url: '/api/listArticleInventoryByBranchIdAndArticleId/' + branchId + '/' + 0,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                inventories.push({
                                    Id: results[i]["Id"],
                                    BranchId: results[i]["BranchId"],
                                    ArticleId: results[i]["ArticleId"],
                                    InventoryCode: results[i]["InventoryCode"],
                                    Quantity: results[i]["Quantity"],
                                    Cost: results[i]["Cost"],
                                    Amount: results[i]["Amount"],
                                    Particulars: results[i]["Particulars"]
                                });
                                createCboForInventoryCode(inventories);
                            }
                        } else {
                            createCboForInventoryCode(inventories);
                        }
                    }
                });
            }, 100);

            getDiscountForComboBox();
            //getTaxTypeForComboBox();

            $("#cmdSaveSaleItemsButton").prop("disabled", false);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById('saleItem_Id').value = 0;
            document.getElementById('saleItem_ItemId_data').value = '';
            document.getElementById('saleItem_ItemCode_selectedValue').value = '';
            document.getElementById('saleItem_ItemDescription_selectedValue').value = '';
            document.getElementById('saleItem_Particulars').value = '';
            document.getElementById('saleItem_InventoryCode_data').value = '';
            document.getElementById('saleItem_InventoryCode_selectedValue').value = '';
            document.getElementById('saleItem_Quantity').value = 0;
            document.getElementById('saleItem_Unit_data').value = '';
            document.getElementById('saleItem_Unit_selectedValue').value = '';
            document.getElementById('saleItem_PriceExVAT').value = 0;
            document.getElementById('saleItem_Discont_data').value = '';
            document.getElementById('saleItem_Discont_selectedValue').value = '';
            document.getElementById('saleItem_DiscountRate').value = 0;
            document.getElementById('saleItem_DiscountAmount').value = 0;
            document.getElementById('saleItem_NetPrice').value = 0;
            document.getElementById('saleItem_Amount').value = 0;
            document.getElementById('saleItem_VAT_data').value = '';
            document.getElementById('saleItem_VAT_selectedValue').value = '';
            document.getElementById('saleItem_TAXInclusive').value = '';
            document.getElementById('saleItem_VATRate').value = 0;
            document.getElementById('saleItem_VATAmount').value = 0;
            document.getElementById('saleItem_BUCUnit_data').value = '';
            document.getElementById('saleItem_BUCUnit_selectedValue').value = '';
            document.getElementById('saleItem_BUCQuantity').value = 0;
            document.getElementById('saleItem_BUCPrice').value = 0;

            computeNetPrice();
            computeAmount();

        }

        // ==============
        // EDIT Sale Item
        // ==============
        function btnEditSaleItem_OnClick() {
            items.editItem(items.currentItem);
            $('#saleItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            getArticleItemForManualCodeAndComponent();
            //getSalesItemUnitForComboBox();
            getItemInventoryCodeForComboBox();
            getDiscountForComboBox();
            //getTaxTypeForComboBox();

            $("#cmdSaveSaleItemsButton").prop("disabled", false);
            $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);

            $('.requiredSaleItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            var item = items.currentEditItem;
            document.getElementById('saleItem_Id').value = item.Id;
            document.getElementById('saleItem_ItemId_data').value = item.ItemId;
            document.getElementById('saleItem_ItemCode_selectedValue').value = item.ItemCode;
            document.getElementById('saleItem_ItemDescription_selectedValue').value = item.Item;
            document.getElementById('saleItem_Particulars').value = item.Particulars;
            document.getElementById('saleItem_InventoryCode_data').value = item.ItemInventoryId;
            document.getElementById('saleItem_InventoryCode_selectedValue').value = item.ItemInventory;
            document.getElementById('saleItem_Quantity').value = item.Quantity;
            document.getElementById('saleItem_Unit_data').value = item.UnitId;
            document.getElementById('saleItem_Unit_selectedValue').value = item.Unit;
            document.getElementById('saleItem_PriceExVAT').value = item.Price;
            document.getElementById('saleItem_Discont_data').value = item.DiscountId;
            document.getElementById('saleItem_Discont_selectedValue').value = item.Discount;
            document.getElementById('saleItem_DiscountRate').value = item.DiscountRateEdit;
            document.getElementById('saleItem_DiscountAmount').value = item.DiscountAmount;
            document.getElementById('saleItem_NetPrice').value = item.NetPrice;
            document.getElementById('saleItem_Amount').value = item.Amount;
            document.getElementById('saleItem_VAT_data').value = item.VATId;
            document.getElementById('saleItem_VAT_selectedValue').value = item.VAT;
            //document.getElementById('saleItem_TAXInclusive').value = item.;
            document.getElementById('saleItem_VATRate').value = item.VATRate;
            document.getElementById('saleItem_VATAmount').value = item.VATAmount;
            document.getElementById('saleItem_BUCUnit_data').value = item.BaseUnitId;
            document.getElementById('saleItem_BUCUnit_selectedValue').value = item.BaseUnit;
            document.getElementById('saleItem_BUCQuantity').value = item.BaseQuantity;
            document.getElementById('saleItem_BUCPrice').value = item.BasePrice;

            computeNetPrice();
            computeAmount();

        }

        // ================
        // Delete Sale Item
        // ================
        function btnDeleteSaleItem_OnClick() {
            $('#deletSaleItemsConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            $("#cmdConfirmDeleteSaleItems").prop("disabled", false);
            $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", false);
        }
        // Sales item confirm delete
        function cmdSaleItemsConfirmDeleteButton_OnClick() {
            $("#cmdConfirmDeleteSaleItems").prop("disabled", true);
            $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", true);

            items.editItem(items.currentItem);
            var item = items.currentEditItem.Id;
            var itemSIId = items.currentEditItem.SIId;
            $.ajax({
                url: '/api/deleteSalesInvoiceItem/' + item + "/" + itemSIId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteSaleItems").prop("disabled", true);
                        $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");

                        $('#deletSaleItemsConfirm').modal('hide');

                        items = new wijmo.collections.CollectionView(getItem());
                      
                        // Flex Grid for Items
                        itemGrid.itemsSource = items;
                        itemGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deletSaleItemsConfirm').modal('hide');
                        $("#cmdConfirmDeleteSaleItems").prop("disabled", false);
                        $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deletSaleItemsConfirm').modal('hide');
                        $("#cmdConfirmDeleteSaleItems").prop("disabled", false);
                        $("#cmdConfirmDeleteSaleItemsCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ==============
        // SAVE Sale Item
        // ==============
        function cmdSaleItemsSaveButton_OnClick() {
            var saleItemObject = new Object();
            var salesId = getParam('SalesId');
            var saleItemId = document.getElementById('saleItem_Id').value;
            saleItemObject.SIId = salesId;
            saleItemObject.ItemId = document.getElementById('saleItem_ItemId_data').value;
            saleItemObject.ItemInventoryId = document.getElementById('saleItem_InventoryCode_data').value;
            saleItemObject.Particulars = document.getElementById('saleItem_Particulars').value;
            saleItemObject.UnitId = document.getElementById('saleItem_Unit_data').value;
            saleItemObject.Quantity = document.getElementById('saleItem_Quantity').value;
            saleItemObject.Price = document.getElementById('saleItem_PriceExVAT').value;
            saleItemObject.DiscountId = document.getElementById('saleItem_Discont_data').value;
            saleItemObject.DiscountRate = document.getElementById('saleItem_DiscountRate').value;
            saleItemObject.DiscountAmount = document.getElementById('saleItem_DiscountAmount').value;
            saleItemObject.NetPrice = document.getElementById('saleItem_NetPrice').value;
            saleItemObject.Amount = document.getElementById('saleItem_Amount').value;
            saleItemObject.VATId = document.getElementById('saleItem_VAT_data').value;
            saleItemObject.VATPercentage = document.getElementById('saleItem_VATRate').value;
            saleItemObject.VATAmount = document.getElementById('saleItem_VATAmount').value;
            saleItemObject.BaseUnitId = document.getElementById('saleItem_BUCUnit_data').value;
            saleItemObject.BaseQuantity = document.getElementById('saleItem_BUCQuantity').value;
            saleItemObject.BasePrice = document.getElementById('saleItem_BUCPrice').value;
            var saleItemData = JSON.stringify(saleItemObject);


            if (document.getElementById('saleItem_ItemId_data').value == '') {
                document.getElementById("saleItem_ItemCode").style.border = "1px solid red";
                document.getElementById("saleItem_ItemDescription").style.border = "1px solid red";
            } else {
                document.getElementById("saleItem_ItemCode").style.border = "1px solid #C8C8C8";
                document.getElementById("saleItem_ItemDescription").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('saleItem_InventoryCode_data').value == '') {
                document.getElementById("saleItem_InventoryCode").style.border = "1px solid red";
            } else {
                document.getElementById("saleItem_InventoryCode").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('saleItem_Unit_data').value == '') {
                document.getElementById("saleItem_Unit").style.border = "1px solid red";
            } else {
                document.getElementById("saleItem_Unit").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('saleItem_Discont_data').value == '') {
                document.getElementById("saleItem_Discont").style.border = "1px solid red";
            } else {
                document.getElementById("saleItem_Discont").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('saleItem_VAT_data').value == '') {
                document.getElementById("saleItem_VAT").style.border = "1px solid red";
            } else {
                document.getElementById("saleItem_VAT").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('saleItem_BUCUnit_data').value == '') {
                document.getElementById("saleItem_BUCUnit").style.border = "1px solid red";
            } else {
                document.getElementById("saleItem_BUCUnit").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredSaleItem').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
            }
            else {
                $("#cmdSaveSaleItemsButton").prop("disabled", true);
                $("#cmdSaleItemsDetailCloseButton").prop("disabled", true);
                if (saleItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addSalesInvoiceItem',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: saleItemData,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveSaleItemsButton").prop("disabled", true);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", true);
                                toastr.success("Successfully Saved");

                                $('#saleItemsEdit').modal('hide');

                                items = new wijmo.collections.CollectionView(getItem());
                               
                                // Flex Grid for Items
                                itemGrid.itemsSource = items;
                                itemGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $('#saleItemsEdit').modal('hide');
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#saleItemsEdit').modal('hide');
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateSalesInvoiceItem/' + saleItemId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: saleItemData,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveSaleItemsButton").prop("disabled", true);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", true);
                                toastr.success("Successfully Updated");

                                $('#saleItemsEdit').modal('hide');

                                items = new wijmo.collections.CollectionView(getItem());
                               
                                // Flex Grid for Items
                                itemGrid.itemsSource = items;
                                itemGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Can't Update");
                                $('#saleItemsEdit').modal('hide');
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#saleItemsEdit').modal('hide');
                                $("#cmdSaveSaleItemsButton").prop("disabled", false);
                                $("#cmdSaleItemsDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ======
        //  Items
        // ======
        function itemTab() {
            cboManualCodeArticleItems = new wijmo.input.ComboBox('#saleItem_ItemCode');
            cboItemDescriptionArticleItems = new wijmo.input.ComboBox('#saleItem_ItemDescription');
            cboSalesItemUnit = new wijmo.input.ComboBox('#saleItem_Unit');
            cboInventoryCode = new wijmo.input.ComboBox('#saleItem_InventoryCode');
            cboDiscount = new wijmo.input.ComboBox('#saleItem_Discont');
            cboForVATTaxType = new wijmo.input.ComboBox('#saleItem_VAT');
            cboBaseUnit = new wijmo.input.ComboBox('#saleItem_BUCUnit');

            document.getElementById('saleItem_NetPrice').disabled = true;
            document.getElementById('saleItem_Amount').disabled = true;
            document.getElementById('saleItem_BUCQuantity').disabled = true;
            document.getElementById('saleItem_BUCPrice').disabled = true;
            document.getElementById('saleItem_VATRate').disabled = true;
            document.getElementById('saleItem_VATAmount').disabled = true;

            items = new wijmo.collections.CollectionView(getItem());
           
            // Flex Grid for Items
            itemGrid = new wijmo.grid.FlexGrid('#ItemGrid');
            itemGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Code",
                                "binding": "ItemCode",
                                "allowSorting": true,
                                "width": 60,
                            },
                            {
                                "header": "Item",
                                "binding": "Item",
                                "allowSorting": true,
                                "width": 120,
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": 130,
                            },
                            {
                                "header": "Inventory",
                                "binding": "ItemInventory",
                                "allowSorting": true,
                                "width": 83,
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": 80,
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": 80,
                            },
                            {
                                "header": "Price",
                                "binding": "Price",
                                "allowSorting": true,
                                "width": 80,
                            },
                            {
                                "header": "Rate",
                                "binding": "DiscountRate",
                                "allowSorting": true,
                                "width": 80,
                                "align": "right",
                                "isContentHtml": true
                            },
                            {
                                "header": "Discount Amount",
                                "binding": "DiscountAmount",
                                "allowSorting": true,
                                "width": 80,
                            },
                            {
                                "header": "Net Price",
                                "binding": "NetPrice",
                                "allowSorting": true,
                                "width": 80,
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": 100,
                            },
                            {
                                "header": "VAT Rate",
                                "binding": "VATPercentage",
                                "allowSorting": true,
                                "width": 80,
                                "align": "right",
                                "isContentHtml": true
                            },
                            {
                                "header": "VAT Amount",
                                "binding": "VATAmount",
                                "allowSorting": true,
                                "width": 80,
                            },
                            {
                                "header": "Unit",
                                "binding": "BaseUnit",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Quantity",
                                "binding": "BaseQuantity",
                                "allowSorting": true,
                                "width": 80
                            },
                            {
                                "header": "Price",
                                "binding": "BasePrice",
                                "allowSorting": true,
                                "width": 80
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: items,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            itemGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            itemGrid.columnHeaders.rows.push(hr);
            itemGrid.columnHeaders.rows[0].allowMerging = true;

            itemGrid.columnHeaders.columns[0].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 0, 'Edit');

            itemGrid.columnHeaders.columns[1].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 1, 'Delete');

            itemGrid.columnHeaders.columns[2].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 2, 'Code');

            itemGrid.columnHeaders.columns[3].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 3, 'Item');

            itemGrid.columnHeaders.columns[4].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 4, 'Particulars');

            itemGrid.columnHeaders.columns[5].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 5, 'Inventory');

            itemGrid.columnHeaders.columns[6].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 6, 'Quantity');

            itemGrid.columnHeaders.columns[7].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 7, 'Unit');

            itemGrid.columnHeaders.columns[8].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 8, 'Price');

            itemGrid.columnHeaders.setCellData(0, 9, 'Discount');

            itemGrid.columnHeaders.columns[10].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 10, 'Discount Amount');

            itemGrid.columnHeaders.columns[11].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 11, 'Net Price');

            itemGrid.columnHeaders.columns[12].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 12, 'Amount');

            itemGrid.columnHeaders.setCellData(0, 13, 'VAT');

            itemGrid.columnHeaders.columns[14].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 14, 'VAT Amount');

            for (var columnBasicUnitConversion = 15; columnBasicUnitConversion <= 17; columnBasicUnitConversion++) {
                itemGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Basic Unit Conversion');
            }

            itemGrid.rows.defaultSize = 55;
        }
    </script>

    <!-- ========================= -->
    <!-- Inventory Entries Scripts -->
    <!-- ========================= -->
    <script type="text/javascript">
        // ======================================
        // Global Variables for Inventory Entries
        // ======================================
        var inventoryEntries;
        var inventoryEntryGrid;

        // ============================
        // GET Contact Information List
        // ============================
        function getInventoryEntries() {
            var inventoryEntries = new wijmo.collections.ObservableArray;
            var salesId = getParam('SalesId');
            $('#loadingModal').modal('show');
            if(document.location.search.length > 0) {
                $.ajax({
                    url: '/api/listInventoryBySIId/' + salesId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        $('#loadingModal').modal('hide');
                        if (Results.length > 0) {
                            for (i = 0; i < Results.length; i++) {
                                inventoryEntries.push({
                                    EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                    Id: Results[i]["Id"],
                                    BranchId: Results[i]["BranchId"],
                                    Branch: Results[i]["Branch"],
                                    InventoryDate: Results[i]["InventoryDate"],
                                    ArticleId: Results[i]["ArticleId"],
                                    Article: Results[i]["Article"],
                                    ArticleInventoryId: Results[i]["ArticleInventoryId"],
                                    RRId: Results[i]["RRId"],
                                    SIId: Results[i]["SIId"],
                                    INId: Results[i]["INId"],
                                    OTId: Results[i]["OTId"],
                                    STId: Results[i]["STId"],
                                    QuantityIn: Results[i]["QuantityIn"],
                                    Quantity: Results[i]["Quantity"],
                                    QuantityOut: Results[i]["QuantityOut"],
                                    Amount: Results[i]["Amount"],
                                    Particulars: Results[i]["Particulars"],
                                    Code: Results[i]["Code"],
                                    Unit: Results[i]["Unit"]
                                });
                            }
                        }
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            } else {
                $('#loadingModal').modal('hide');
            }
            return inventoryEntries;
        }

        // ========================================
        // FlexGrid Selection for Inventory Entries
        // ========================================
        function updateDetailsInventoryEntry() {
            var item = inventoryEntries.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ==================================
        // On Page Load for Inventory Entries
        // ==================================
        function inventoryEntryTab() {
            inventoryEntries = new wijmo.collections.CollectionView(getInventoryEntries());
            
            // Flex Grid for Inventory Entries
            inventoryEntryGrid = new wijmo.grid.FlexGrid('#InventoryEntryGrid');
            inventoryEntryGrid.initialize({
                columns: [
                            {
                                "header": "Date",
                                "binding": "InventoryDate",
                                "allowSorting": true,
                                "width": 80,
                            },
                            {
                                "header": "Branch",
                                "binding": "Branch",
                                "allowSorting": true,
                                "width": 150,
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "align": "left",
                                "allowSorting": true,
                                "width": 165,
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "align": "left",
                                "allowSorting": true,
                                "width": 170,
                            },
                            {
                                "header": "Inventory Code",
                                "binding": "Code",
                                "allowSorting": true,
                                "width": 160,
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": 110,
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": 118,
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": 150,
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryEntries,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntryGrid.trackChanges = true;
        }
    </script>

    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        var journals;
        var journalListGrid;

        // ===========
        // Get Journal
        // ===========
        function getJournalListForSales() {
            var journals = new wijmo.collections.ObservableArray;
            var salesId = getParam('SalesId');
            //$('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listJournalBySIId/' + salesId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    //$('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            journals.push({
                                //EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdJournalVoucherLineEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                //DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdJournalVoucherLineDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: Results[i]["Id"],
                                JournalDate: Results[i]["JournalDate"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                AccountId: Results[i]["AccountId"],
                                AccountCode: Results[i]["AccountCode"],
                                Account: Results[i]["Account"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                Particulars: Results[i]["Particulars"],
                                DebitAmount: Results[i]["DebitAmount"],
                                CreditAmount: Results[i]["CreditAmount"],
                                ORId: Results[i]["ORId"],
                                CVId: Results[i]["CVId"],
                                JVId: Results[i]["JVId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"],
                                DocumentReference: Results[i]["DocumentReference"],
                                APRRId: Results[i]["APRRId"],
                                ARSIId: Results[i]["ARSIId"]
                            });

                            var debitAmountTotal = 0;
                            var creditAmountTotal = 0;

                            var a = 0;
                            while (a < Results.length) {
                                debitAmountTotal += Results[a]["DebitAmount"];
                                creditAmountTotal += Results[a]["CreditAmount"];
                                a++;
                            }
                        }

                        document.getElementById('totalDebitInJournal').innerHTML = debitAmountTotal.toLocaleString();
                        document.getElementById('totalCreditInJournal').innerHTML = creditAmountTotal.toLocaleString();
                        var variance = debitAmountTotal - creditAmountTotal;
                        document.getElementById('variance').innerHTML = variance.toLocaleString();
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return journals;
        }

        // ============
        // Journal List
        // ============
        function btnJournalDetail_OnClick() {
            journals = new wijmo.collections.CollectionView(getJournalListForSales());
            document.getElementById("loadingJournalGridList").innerHTML = '<i class="fa fa-spinner fa-spin"></i> Loading Journal...';

            $("#loadingJournalGridList").show();
            $("#journal_Content").hide();
            setTimeout(function () {
                $("#loadingJournalGridList").hide();
                $("#journal_Content").show();
                // Flex Grid
                journalListGrid = new wijmo.grid.FlexGrid('#journalGrid');
                journalListGrid.initialize({
                    columns: [
                                {
                                    "header": "Branch",
                                    "binding": "Branch",
                                    "allowSorting": true,
                                    "width": 150
                                },
                                {
                                    "header": "Code",
                                    "binding": "AccountCode",
                                    "allowSorting": true,
                                    "width": 60
                                },
                                {
                                    "header": "Account",
                                    "binding": "Account",
                                    "allowSorting": true,
                                    "width": 200
                                },
                                {
                                    "header": "Article",
                                    "binding": "Article",
                                    "allowSorting": true,
                                    "width": 162
                                },
                                {
                                    "header": "Debit",
                                    "binding": "DebitAmount",
                                    "allowSorting": true,
                                    "width": 130
                                }
                                ,
                                {
                                    "header": "Credit",
                                    "binding": "CreditAmount",
                                    "allowSorting": true,
                                    "width": 130
                                },
                                {
                                    "header": "Date",
                                    "binding": "JournalDate",
                                    "allowSorting": true,
                                    "width": 80,
                                }
                    ],
                    autoGenerateColumns: false,
                    itemsSource: journals,
                    isReadOnly: true,
                    autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                    allowDragging: wijmo.grid.AllowDragging.None,
                    selectionMode: wijmo.grid.SelectionMode.Row
                });

                journalListGrid.trackChanges = true;
            }, 1000);
        }

        $('#cmdSalesJournal').click(function () {
            $('#journalDetail').modal({
                show: true,
                backdrop: 'static'
            });

            window.btnJournalDetail_OnClick = function () {
                return true;
            };
        });

        // ========================
        // Key Up without letter
        // ========================
        $("#saleItem_PriceExVAT").keyup(function (e) {
            computeNetPrice();
            computeAmount();

            var quantity = document.getElementById('saleItem_Quantity').value;
            var price = document.getElementById('saleItem_PriceExVAT').value;

            document.getElementById('saleItem_BUCQuantity').value = quantity;
            document.getElementById('saleItem_BUCPrice').value = price;
        });

        $("#saleItem_Quantity").keyup(function (e) {
            computeNetPrice();
            computeAmount();

            var quantity = document.getElementById('saleItem_Quantity').value;
            var price = document.getElementById('saleItem_PriceExVAT').value;

            document.getElementById('saleItem_BUCQuantity').value = quantity;
            document.getElementById('saleItem_BUCPrice').value = price;
        });

        $("#saleItem_DiscountRate").keyup(function (e) {
            computeNetPrice();
            computeAmount();
        });

        $("#saleItem_DiscountAmount").keyup(function (e) {
            computeNetPrice();
            computeAmount();
        });

        // ========================
        // Key Press without letter
        // ========================
        $("#saleItem_Quantity").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: Ctrl+C
                (e.keyCode == 67 && e.ctrlKey === true) ||
                // Allow: Ctrl+X
                (e.keyCode == 88 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        $("#saleItem_PriceExVAT").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) ||
                // Allow: Ctrl+C
                (e.keyCode == 67 && e.ctrlKey === true) ||
                // Allow: Ctrl+X
                (e.keyCode == 88 && e.ctrlKey === true) ||
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        // ====
        // TABS
        // ====
        $('#itemTabId').click(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            window.itemTab = function () {
                return true;
            };
        });

        $('#inventoryEntryTabId').click(function () {
            $('#Items').hide();
            $('#InventoryEntries').show();
            inventoryEntryTab();
            window.inventoryEntryTab = function () {
                return true;
            };
        });

        $(document).ready(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            itemTab();
        });
    </script>
</body>
</html>