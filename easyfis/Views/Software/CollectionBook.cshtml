<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Collection Book</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body class="">


    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Collection Book 
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; @ViewData["Branch"]
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control " id="InputFilter" placeholder="Search">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 40%" align="right">
                                    <button onclick="collectionBookCSV_OnClick()" class="btn btn-primary "><i class="fa fa-file-excel-o" aria-hidden="true"></i> CSV</button>
                                    <button onclick="collectionBookPDF_OnClick()" class="btn btn-primary "><i class="fa fa-print"></i> Print</button>
                                    <a href="/Software/FinancialStatements" class="btn btn-danger "><i class="fa fa-close"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group ">
                                        <span class="input-group-addon">Date:</span>
                                        <input type="text" class="form-control " id="dateFrom" placeholder="filter date" disabled>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 20%" align="right"></td>
                                <td style="width: 20%"></td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">
                        <div id="collectionBookGrid" class="grid"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-8"></div>
                    <div class="col-md-4">
                        <table class="table table-responsive table-bordered">
                            <tr>
                                <td align="right">
                                    <b>Total: </b>
                                </td>
                                <td style="padding-left: 10px" align="right">
                                    <span id="total">NA</span>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        function collectionBookPDF_OnClick() {
            window.location.href = '/RepCollectionBook/CollectionBook?StartDate=' + getParam("StartDate") + '&EndDate=' + getParam("EndDate") + '&CompanyId=' + getParam("CompanyId");;
        }

        function getCollectionBook() {
            var collectionBook = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/CollectionBook/list/' + getParam("StartDate") + '/' + getParam("EndDate") + '/' + getParam("CompanyId"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (collectionBookResults) {
                    if (collectionBookResults.length > 0) {
                        var totalAmount = 0;

                        for (i = 0; i < collectionBookResults.length; i++) {
                            // Array Push
                            collectionBook.push({

                                DocumentReference: collectionBookResults[i]["DocumentReference"],
                                AccountCode: collectionBookResults[i]["AccountCode"],
                                Account: collectionBookResults[i]["Account"],
                                Article: collectionBookResults[i]["Article"],
                                DebitAmount: collectionBookResults[i]["DebitAmount"],
                                CreditAmount: collectionBookResults[i]["CreditAmount"],
                                Balance: collectionBookResults[i]["Balance"],


                            });

                            totalAmount += collectionBookResults[i]["Balance"];
                        }

                        document.getElementById("total").innerHTML = totalAmount.toLocaleString();
                    }
                    NProgress.done();
                }
            });

            return collectionBook;
        }

        var collectionBookCollections;

        function collectionBookCSV_OnClick() {

            var CSV = '';
            var collectionBook = [];
            var fileName = 'CollectionBook.CSV';

            for (i = 0; i < collectionBookCollections.items.length; i++) {
                collectionBook.push({
                    DocumentReference: collectionBookCollections.items[i].DocumentReference,
                    AccountCode: collectionBookCollections.items[i].AccountCode,
                    Account: collectionBookCollections.items[i].Account,
                    Article: collectionBookCollections.items[i].Article,
                    DebitAmount: collectionBookCollections.items[i].DebitAmount,
                    CreditAmount: collectionBookCollections.items[i].CreditAmount,
                    Balance: collectionBookCollections.items[i].Balance,

                });
            }

            //for (var i = 0; i < symbols.length; i++) {
            //    CSV += '"' + symbols[i].AccountCode + '"\r\n';
            //}

            var Headers = [];
            Headers.push({
                DocumentReference: "OR Number",
                AccountCode: "Code",
                Account: "Account",
                Article: "Article",
                DebitAmount: "Debit",
                CreditAmount: "Credit",
                Balance: "Balance",

            });

            var header = '';
            // Rows
            for (var b in Headers[0]) {
                header += '"' + Headers[0][b] + '",';
            }



            CSV = header + '\r\n';
            for (var i = 0; i < collectionBook.length; i++) {
                var row = '';
                for (var a in collectionBook[i]) {
                    row += '"' + collectionBook[i][a] + '",';
                }

                row.slice(0, row.length - 1);
                CSV += row + '\r\n';
            }


            if (CSV == '') {
                toastr.error("No data.");
            } else {
                var link = document.createElement("a");

                if (link.download !== undefined) {
                    var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", fileName);
                    link.style = "visibility:hidden";
                }

                if (navigator.msSaveBlob) {
                    link.addEventListener("click", function (event) {
                        var blob = new Blob([CSV], {
                            "type": "text/csv;charset=utf-8;"
                        });
                        navigator.msSaveBlob(blob, fileName);
                    }, false);
                }

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                toastr.success("Dowload successful.");
            }
        }

        $(document).ready(function () {
            NProgress.start();
            document.getElementById("dateFrom").value = "Date From: " + getParam("StartDate") + " to " + getParam("EndDate");

            collectionBookCollections = new wijmo.collections.CollectionView(getCollectionBook());
            collectionBookCollections.canFilter = true;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                collectionBookCollections.refresh();
            });
            collectionBookCollections.filter = function (item) {
                return !filterText || (item.DocumentReference.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.AccountCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Account.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)

            }
            // Flex Grid
            var collectionBookGrid = new wijmo.grid.FlexGrid('#collectionBookGrid');
            collectionBookGrid.initialize({
                columns: [
                    {
                        "header": "OR Number",
                        "binding": "DocumentReference",
                        "allowSorting": true,
                        "width": 200,
                    },
                    {
                        "header": "Code",
                        "binding": "AccountCode",
                        "allowSorting": true,
                        "width": 110
                    },
                    {
                        "header": "Account",
                        "binding": "Account",
                        "allowSorting": true,
                        "width": 250
                    },
                    {
                        "header": "Article",
                        "binding": "Article",
                        "isContentHtml": true,
                        "allowSorting": true,
                        "width": 250
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmount",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmount",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Balance",
                        "binding": "Balance",
                        "allowSorting": true,
                        "width": 150
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: collectionBookCollections,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            collectionBookGrid.trackChanges = true;
        });
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>

</body>
</html>