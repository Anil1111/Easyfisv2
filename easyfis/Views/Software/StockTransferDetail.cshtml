@{
    var branchId = Request.QueryString["BranchId"];
    var stockTransferId = Request.QueryString["StockTransferId"];
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Stock Transfer Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Font-Awesome/css")
    @Styles.Render("~/Content/Software-css")
    @Styles.Render("~/WijmoCSS/Wijmo-css")
</head>
<body>
    <div id="wrapper" class="wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <br /><br /><br />
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <h4><i class="fa fa-exchange fa-2x"></i> Stock Transfer Detail</h4>
                        <br />
                        <div class="div_Current_Page">
                            <span id="currentPage"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="collectionDetailLabel"></h4>
                    </div>
                    <div class="col-md-6" align="right">
                        <button class="btn btn-primary btn-sm" id="cmdStockTransferJournal"><i class="fa fa-book"></i> Journal</button>
                        <button class="btn btn-primary btn-sm" id="cmdStockTransferSave" onclick="btnStockTransferSave_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button class="btn btn-primary btn-sm" id="cmdStockTransferEdit"><i class="fa fa-edit"></i> Edit</button>
                        <button class="btn btn-primary btn-sm" id="cmdStockTransferPrint" onclick="window.location.href ='@Url.Action("StockTransferPDF", "Software", new { StockTransferId = stockTransferId })'"><i class="fa fa-print"></i> Print</button>
                        <button onclick="window.location.href = '@Url.Action("StockTransfer", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="cmdStockTransferClose"><i class="fa fa-times"></i> Close</button>
                    </div>
                </div>
                @*<hr />*@
                <div class="well">
                    <form class="form-horizontal" role="form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Branch:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="stockTransfer_Branch"></div>

                                        <input type="hidden" id="stockTransfer_Branch_data" class="requiredStockTransfer" />
                                        <input type="hidden" id="stockTransfer_Branch_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">ST Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredStockTransfer" id="stockTransfer_STNumber" />
                                        <input type="hidden" id="stockTransfer_STNumber_Display" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">ST Date:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="stockTransfer_STDate"></div>
                                        <input type="hidden" id="stockTransfer_STDate_data" class="requiredStockTransfer" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">To branch:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="stockTransfer_ToBranch"></div>

                                        <input type="hidden" id="stockTransfer_ToBranch_data" class="requiredStockTransfer" />
                                        <input type="hidden" id="stockTransfer_ToBranch_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Particulars:</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control textarea-custom requiredStockTransfer" id="stockTransfer_Particulars"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Manual ST Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredStockTransfer" id="stockTransfer_ManualSTNumber">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Prepared by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="stockTransfer_PreparedBy"></div>

                                        <input type="hidden" id="stockTransfer_PreparedBy_data" class="requiredStockTransfer" />
                                        <input type="hidden" id="stockTransfer_PreparedBy_selectedValue" />
                                        <input type="hidden" id="userId_data" value="@userId" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Checked by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="stockTransfer_CheckedBy"></div>

                                        <input type="hidden" id="stockTransfer_CheckedBy_data" class="requiredStockTransfer" />
                                        <input type="hidden" id="stockTransfer_CheckedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Approved by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="stockTransfer_ApprovedBy"></div>

                                        <input type="hidden" id="stockTransfer_ApprovedBy_data" class="requiredStockTransfer" />
                                        <input type="hidden" id="stockTransfer_ApprovedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Lock:</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" id="StockTransfer_Lock">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-4"></div>
                                    <div class="col-sm-8">
                                        <input type="hidden" id="StockTransfer_IsLocked">
                                        <input type="hidden" id="StockTransfer_IsLocked_defaultTrue">
                                        <input type="hidden" id="StockTransfer_IsLocked_defaultFalse">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <h4>Stock Transfer Line</h4>
                    </div>
                </div>
                <!-- Stock Transfer line -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#Items" id="itemTabId">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#InventoryEntries" id="inventoryEntryTabId">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="Items" class="tab-pane fade in active">
                        <!-- Item  List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Items</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterItem" placeholder="Search">
                                </div>
                            </div>
                            <div class="col-lg-8" align="right">
                                <button class="btn btn-primary btn-sm" onclick="cmdAddNewAccount_OnClick()"><i class="fa fa-plus"></i> Add</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="ItemGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="navigationPageGridItem">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridItem">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridItem">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridItem"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridItem">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridItem">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div id="InventoryEntries" class="tab-pane fade in active">
                        <!-- Inventory Entries List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Inventory Entries</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterInventoryEntry" placeholder="Search">
                                </div>
                            </div>
                            <div class="col-lg-8" align="right">
                                <button class="btn btn-primary btn-sm" onclick="cmdAddNewAccount_OnClick()"><i class="fa fa-plus"></i> Add</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="InventoryEntryGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="navigationPageGridInventoryEntry">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridInventoryEntry"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">
                        <h4>Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    <!-- Scripts JavaScripts -->
    @Scripts.Render("~/Scripts/Software-js")
    @Scripts.Render("~/WijmoScripts/Wijmo-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var stockTransfers;
        var branches;

        var STDate;

        var cboBranch;
        var cboToBranch;
        var cboPreparedBy;
        var cboCheckedBy;
        var cboApprovedBy;

        // =======================
        // GET Stock Transfer by Id
        // =======================
        function getStockTransferById() {
            stockTransfers = new wijmo.collections.ObservableArray;
            var stockTransferId = @stockTransferId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/stockTransfer/' + stockTransferId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        stockTransfers.push({
                            Id: Results.Id,
                            BranchId: Results.BranchId,
                            Branch: Results.Branch,
                            STNumber: Results.STNumber,
                            STDate: Results.STDate,
                            ToBranchId: Results.ToBranchId,
                            ToBranch: Results.ToBranch,
                            Particulars: Results.Particulars,
                            ManualSTNumber: Results.ManualSTNumber,
                            PreparedById: Results.PreparedById,
                            PreparedBy: Results.PreparedBy,
                            CheckedById: Results.CheckedById,
                            CheckedBy: Results.CheckedBy,
                            ApprovedById: Results.ApprovedById,
                            ApprovedBy: Results.ApprovedBy,
                            IsLocked: Results.IsLocked,
                            CreatedById: Results.CreatedById,
                            CreatedBy: Results.CreatedBy,
                            CreatedDateTime: Results.CreatedDateTime,
                            UpdatedById: Results.UpdatedById,
                            UpdatedBy: Results.UpdatedBy,
                            UpdatedDateTime: Results.UpdatedDateTime
                        });
                    }

                    document.getElementById('stockTransfer_Branch_data').value = Results.BranchId;
                    document.getElementById('stockTransfer_Branch_selectedValue').value = Results.Branch;
                    document.getElementById('stockTransfer_STNumber').value = Results.STNumber;
                    document.getElementById('stockTransfer_STNumber_Display').value = Results.STNumber;
                    document.getElementById('stockTransfer_STDate_data').value = Results.STDate;
                    var STDate_date = Results.STDate;
                    STDate.dispose();
                    STDate = new wijmo.input.InputDate('#stockTransfer_STDate', {
                        format: 'MM/dd/yyyy',
                        value: new Date(STDate_date),
                        mask: '99/99/9999',
                        onValueChanged: function () {
                            document.getElementById('stockTransfer_STDate_data').value = this.value.toLocaleDateString();
                        }
                    });
                    document.getElementById('stockTransfer_ToBranch_data').value = Results.ToBranchId;
                    document.getElementById('stockTransfer_ToBranch_selectedValue').value = Results.ToBranch;
                    document.getElementById('stockTransfer_Particulars').value = Results.Particulars;
                    document.getElementById('stockTransfer_ManualSTNumber').value = Results.ManualSTNumber;
                    document.getElementById('stockTransfer_PreparedBy_data').value = Results.PreparedById;
                    document.getElementById('stockTransfer_PreparedBy_selectedValue').value = Results.PreparedBy
                    document.getElementById('stockTransfer_CheckedBy_data').value = Results.CheckedById;
                    document.getElementById('stockTransfer_CheckedBy_selectedValue').value = Results.CheckedBy;
                    document.getElementById('stockTransfer_ApprovedBy_data').value = Results.ApprovedById;
                    document.getElementById('stockTransfer_ApprovedBy_selectedValue').value = Results.ApprovedBy;
                    document.getElementById('StockTransfer_Lock').checked = Results.IsLocked;
                    document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                    document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                    document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                    document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                    getBranchesForComboBox();
                    getUsersForComboBox();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return stockTransfers;
        }

        // ==========================
        // GET Purchase Order Last Id
        // ==========================
        function getStockTransferLastInsertedId() {
            var stockTransfers = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/stockTransferLastId',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        stockTransfers.push({
                            Id: Results.Id,
                            STNumber: Results.STNumber
                        });
                    }
                    window.location = '/Software/StockTransferDetail?StockTransferId=' + Results.Id + '&BranchId=' + @branchId;
                    window.setTimeout(function () { location.reload() }, 1000);
                }
            });
            return stockTransfers;
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var stockTransferId = @stockTransferId;
                        if(stockTransferId == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + @branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        branches.push({
                                            BranchId: results.Id,
                                            Branch: results.Branch
                                        });
                                    }
                                    document.getElementById('stockTransfer_Branch_data').value = results.Id;
                                    document.getElementById('stockTransfer_Branch_selectedValue').value = results.Branch;

                                    createCboBranch(branches);
                                    createCboToBranch(branches);
                                }
                            });
                        } else {
                            createCboBranch(branches);
                            createCboToBranch(branches);
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
                        );
            return branches;
        }


        // ======================
        // Combo Box for Branches
        // ======================
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#stockTransfer_Branch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('stockTransfer_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransfer_Branch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });
        }

        // =======================
        // Combo Box for ToBranche
        // =======================
        function createCboToBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            cboToBranch.dispose();
            cboToBranch = new wijmo.input.ComboBox('#stockTransfer_ToBranch', {
                disabled: false,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('stockTransfer_ToBranch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransfer_ToBranch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        var stockTransferId = @stockTransferId;
                        if(stockTransferId == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        users.push({
                                            UserId: results.Id,
                                            UserFullName: results.FullName
                                        });
                                    }

                                    document.getElementById('stockTransfer_PreparedBy_data').value = results.Id;
                                    document.getElementById('stockTransfer_PreparedBy_selectedValue').value =  results.FullName;

                                    createCboUserPreparedBy(users);
                                    createCboUserCheckedBy(users);
                                    createCboUserApprovedBy(users);
                                }
                            });
                        } else {
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);

                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return users;
        }

        // =================================
        // Combo Box for Users - Prepared By
        // =================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#stockTransfer_PreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('stockTransfer_PreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransfer_PreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // ================================
        // Combo Box for Users - Checked By
        // ================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboCheckedBy.dispose();
            cboCheckedBy = new wijmo.input.ComboBox('#stockTransfer_CheckedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('stockTransfer_CheckedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransfer_CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // ==================================
        // Combo Box for Users - Approved By
        // ==================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboApprovedBy.dispose();
            cboApprovedBy = new wijmo.input.ComboBox('#stockTransfer_ApprovedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('stockTransfer_ApprovedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransfer_ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // =====================================================
        // Function with leading zeroes to display the ST Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while(pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // ==================
        // Add Stock Transfer
        // ==================
        function btnStockTransferSave_OnClick() {
            var stockTransferObject = new Object();
            var stockTransferId = @stockTransferId;
            stockTransferObject.BranchId = document.getElementById('stockTransfer_Branch_data').value;
            stockTransferObject.STNumber = document.getElementById('stockTransfer_STNumber').value;
            stockTransferObject.STDate = document.getElementById('stockTransfer_STDate_data').value;
            stockTransferObject.ToBranchId = document.getElementById('stockTransfer_ToBranch_data').value;
            stockTransferObject.Particulars = document.getElementById('stockTransfer_Particulars').value;
            stockTransferObject.ManualSTNumber = document.getElementById('stockTransfer_ManualSTNumber').value;
            stockTransferObject.PreparedById = document.getElementById('stockTransfer_PreparedBy_data').value;
            stockTransferObject.CheckedById = document.getElementById('stockTransfer_CheckedBy_data').value;
            stockTransferObject.ApprovedById = document.getElementById('stockTransfer_ApprovedBy_data').value;
            var data = JSON.stringify(stockTransferObject);

            if( document.getElementById('stockTransfer_Branch_data').value == '') {
                document.getElementById("stockTransfer_Branch").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_Branch").style.border = "1px solid #C8C8C8";
            }
            
            if( document.getElementById('stockTransfer_STDate_data').value == '') {
                document.getElementById("stockTransfer_STDate").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_STDate").style.border = "1px solid #C8C8C8";
            }
            
            if( document.getElementById('stockTransfer_ToBranch_data').value == '') {
                document.getElementById("stockTransfer_ToBranch").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_ToBranch").style.border = "1px solid #C8C8C8";
            }
            
            if( document.getElementById('stockTransfer_PreparedBy_data').value == '') {
                document.getElementById("stockTransfer_PreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_PreparedBy").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('stockTransfer_CheckedBy_data').value == '') {
                document.getElementById("stockTransfer_CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_CheckedBy").style.border = "1px solid #C8C8C8";
            }
            
            if( document.getElementById('stockTransfer_ApprovedBy_data').value == '') {
                document.getElementById("stockTransfer_ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_ApprovedBy").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredStockTransfer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                if (stockTransferId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addStockTransfer',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdStockTransferJournal").prop("disabled", true);
                                $("#cmdStockTransferSave").prop("disabled", true);
                                $("#cmdStockTransferEdit").prop("disabled", true);
                                $("#cmdStockTransferPrint").prop("disabled", true);
                                $("#cmdStockTransferClose").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getStockTransferLastInsertedId, 1000)
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdStockTransferJournal").prop("disabled", true);
                                $("#cmdStockTransferSave").prop("disabled", true);
                                $("#cmdStockTransferEdit").prop("disabled", true);
                                $("#cmdStockTransferPrint").prop("disabled", true);
                                $("#cmdStockTransferClose").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdStockTransferJournal").prop("disabled", true);
                                $("#cmdStockTransferSave").prop("disabled", true);
                                $("#cmdStockTransferEdit").prop("disabled", true);
                                $("#cmdStockTransferPrint").prop("disabled", true);
                                $("#cmdStockTransferClose").prop("disabled", true);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateStockTransfer/' + stockTransferId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdStockTransferJournal").prop("disabled", true);
                                $("#cmdStockTransferSave").prop("disabled", true);
                                $("#cmdStockTransferEdit").prop("disabled", true);
                                $("#cmdStockTransferPrint").prop("disabled", true);
                                $("#cmdStockTransferClose").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdStockTransferJournal").prop("disabled", true);
                                $("#cmdStockTransferSave").prop("disabled", true);
                                $("#cmdStockTransferEdit").prop("disabled", true);
                                $("#cmdStockTransferPrint").prop("disabled", true);
                                $("#cmdStockTransferClose").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdStockTransferJournal").prop("disabled", true);
                                $("#cmdStockTransferSave").prop("disabled", true);
                                $("#cmdStockTransferEdit").prop("disabled", true);
                                $("#cmdStockTransferPrint").prop("disabled", true);
                                $("#cmdStockTransferClose").prop("disabled", true);
                            }
                        }
                    });
                }
            }
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            document.getElementById('currentPage').innerHTML = '<a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Main Menu</a> > ' + ' <a href="@Url.Action("StockTransfer", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Stock Transfer</a> ' + ' > Stock Transfer Detail';
            document.getElementById('stockTransfer_STNumber').disabled = true;
            document.getElementById('StockTransfer_Lock').disabled = true;

            getStockTransferById();

            var d = new Date();
            document.getElementById("stockTransfer_STDate_data").value = [ d.getMonth()+1, d.getDate(), d.getFullYear()].join('/');
            STDate = new wijmo.input.InputDate('#stockTransfer_STDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('stockTransfer_STDate_data').value = this.value.toLocaleDateString();
                }
            });

            cboBranch = new wijmo.input.ComboBox('#stockTransfer_Branch');
            cboPreparedBy = new wijmo.input.ComboBox('#stockTransfer_PreparedBy');
            cboCheckedBy = new wijmo.input.ComboBox('#stockTransfer_CheckedBy');
            cboApprovedBy = new wijmo.input.ComboBox('#stockTransfer_ApprovedBy');
            cboToBranch = new wijmo.input.ComboBox('#stockTransfer_ToBranch');

            var stockTransferId = @stockTransferId;
            if(stockTransferId == 0) {
                getBranchesForComboBox();
                getUsersForComboBox();

                if(document.getElementById('stockTransfer_STNumber').value == 0) {
                    document.getElementById('stockTransfer_STNumber_Display').value = "0000000001";
                }

                document.getElementById('stockTransfer_STNumber').value = 0;
                //document.getElementById('journalVoucher_No_Display').value = "000-000000";
                var stockTransfers = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/stockTransferLastSTNumber',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            stockTransfers.push({
                                Id: Results.Id,
                                STNumber: Results.STNumber
                            });
                        }
                        var ST_Number = parseInt(Results.STNumber);
                        var ST_Number_PlusOne = 0000000001;
                        var ST_Num_Results = ST_Number + ST_Number_PlusOne;
                        //var JV_Number_Display = JV_Num_Results.toString().replace(/(\d{3})(\d+)/, '$1-$2');

                        document.getElementById('stockTransfer_STNumber').value = zerofill(ST_Num_Results, 10);
                        document.getElementById('stockTransfer_STNumber_Display').value = zerofill(ST_Num_Results, 10);
                    }
                });
            }
        });
    </script>

    <!-- ============= -->
    <!-- Items Scripts -->
    <!-- ============= -->
    <script type="text/javascript">
        // ==========================
        // Global Variables for Items
        // ==========================
        var items;
        var itemGrid;

        var btnFirstPageGridItem;
        var btnPreviousPageGridItem;
        var btnNextPageGridItem;
        var btnLastPageGridItem;
        var btnCurrentPageGridItem;

        // =======================
        // GET Journal Ledger List
        // =======================
        function getItem() {
            var items = new wijmo.collections.ObservableArray;
            //$('#loadingModal').modal('show');
            //$.ajax({
            //    url: '/api/listAccount',
            //    cache: false,
            //    type: 'GET',
            //    contentType: 'application/json; charset=utf-8',
            //    data: {},
            //    success: function (Results) {
            //        $('#loadingModal').modal('hide');
            //        if (Results.length > 0) {
            //            for (i = 0; i < Results.length; i++) {
            //                journalLedger.push({
            //                    EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
            //                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
            //                    Id: Results[i]["Id"],
            //                    AccountCode: Results[i]["AccountCode"],
            //                    Account: Results[i]["Account"],
            //                    AccountTypeId: Results[i]["AccountTypeId"],
            //                    AccountType: Results[i]["AccountType"],
            //                    AccountCashFlowId: Results[i]["AccountCashFlowId"],
            //                    AccountCashFlow: Results[i]["AccountCashFlow"],
            //                    IsLocked: Results[i]["IsLocked"],
            //                    CreatedById: Results[i]["CreatedById"],
            //                    CreatedBy: Results[i]["CreatedBy"],
            //                    CreatedDateTime: Results[i]["CreatedDateTime"],
            //                    UpdatedById: Results[i]["UpdatedById"],
            //                    UpdatedBy: Results[i]["UpdatedBy"],
            //                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
            //                });
            //            }
            //        }
            //    }
            //}).fail(function (xhr, textStatus, err) {
            //    alert(err);
            //});
            //return items;
        }
        // ============================
        // FlexGrid Selection for Items
        // ============================
        function updateDetailsItem() {
            var item = items.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ============================
        // Navigation Buttons for Items
        // ============================
        function updateNavigateButtonsItem() {
            if (items.pageSize <= 0) {
                document.getElementById('navigationPageGridItem').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridItem').style.display = 'block';
            if (items.pageIndex === 0) {
                btnFirstPageGridItem.setAttribute('disabled', 'disabled');
                btnPreviousPageGridItem.setAttribute('disabled', 'disabled');
                btnNextPageGridItem.removeAttribute('disabled');
                btnLastPageGridItem.removeAttribute('disabled');
            } else if (journalLedgers.pageIndex === (journalLedgers.pageCount - 1)) {
                btnFirstPageGridItem.removeAttribute('disabled');
                btnPreviousPageGridItem.removeAttribute('disabled');
                btnLastPageGridItem.setAttribute('disabled', 'disabled');
                btnNextPageGridItem.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridItem.removeAttribute('disabled');
                btnPreviousPageGridItem.removeAttribute('disabled');
                btnNextPageGridItem.removeAttribute('disabled');
                btnLastPageGridItem.removeAttribute('disabled');
            }
            btnCurrentPageGridItem.innerHTML = (items.pageIndex + 1) + ' / ' + items.pageCount;
        }

        // ======
        //  Items
        // ======
        function itemTab() {
            items = new wijmo.collections.CollectionView();
            items.canFilter = true;
            items.pageSize = 15;

            var filterTextItem = '';
            $('#InputFilterItem').keyup(function () {
                filterTextItem = this.value.toLowerCase();
                items.refresh();
            });
            items.filter = function (item) {
                return !filterTextItem || (item.item.toLowerCase().indexOf(filterTextItem) > -1);
            }
            items.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItem();
            });
            items.currentChanged.addHandler(function (sender, args) {
                updateDetailsItem();
            });

            // Flex Grid for Items
            itemGrid = new wijmo.grid.FlexGrid('#ItemGrid');
            itemGrid.initialize({
                columns: [
                            {
                                "header": "Import",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Export",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Item",
                                //"binding": "Date",
                                "align": "left",
                                "allowSorting": true,
                                "width": "1*",
                            },
                            {
                                "header": "Particulars",
                                // "binding": "Doc Ref.",
                                "align": "left",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Item Inventory Code",
                                // "binding": "Branch",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Quantity",
                                // "binding": "Account",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Unit",
                                // "binding": "Debit",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Price",
                                // "binding": "Credit",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            },
                             {
                                 "header": "Discount",
                                 "header": "Discount Rate",
                                 //    "binding": "Balance",
                                 "align": "left",
                                 "allowSorting": true,
                                 "width": "2*"
                             },
                             {
                                 "header": "Discount Amount",
                                 //  "binding": "Particulars",
                                 "align": "left",
                                 "allowSorting": true,
                                 "width": "2*"
                             },
                            {
                                "header": "Net Price",
                                //  "binding": "Particulars",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            },
                           {
                               "header": "Amount",
                               //  "binding": "Particulars",
                               "align": "left",
                               "allowSorting": true,
                               "width": "2*"
                           },
                           {
                               "header": "VAT",
                               "header": "VAT Rate",
                               //  "binding": "Particulars",
                               //  "binding": "Particulars",
                               "align": "left",
                               "allowSorting": true,
                               "width": "2*"
                           },
                          {
                              "header": "VAT Amount",
                              //  "binding": "Particulars",
                              "align": "left",
                              "allowSorting": true,
                              "width": "2*"
                          },
                          {
                              "header": "VAT Amount",
                              //  "binding": "Particulars",
                              "align": "left",
                              "allowSorting": true,
                              "width": "2*"
                          }
                ],
                autoGenerateColumns: false,
                //itemsSource: items,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemGrid.trackChanges = true;

            //Navigation button for Items
            btnFirstPageGridItem = document.getElementById('btnMoveToFirstPageGridItem ');
            btnPreviousPageGridItem = document.getElementById('btnMoveToPreviousPageGridItem ');
            btnNextPageGridItem = document.getElementById('btnMoveToNextPageGridItem ');
            btnLastPageGridItem = document.getElementById('btnMoveToLastPageGridItem ');
            btnCurrentPageGridJournalLedger = document.getElementById('btnCurrentPageGridItem ');

            updateNavigateButtonsItem();

            btnFirstPageGridItem.addEventListener('click', function () {
                items.moveToFirstPage();
                updateNavigateButtonsItem();
            });
            btnPreviousPageGridItem.addEventListener('click', function () {
                items.moveToPreviousPage();
                updateNavigateButtonsItem();
            });
            btnNextPageGridItem.addEventListener('click', function () {
                items.moveToNextPage();
                updateNavigateButtonsItem();
            });
            btnLastPageGridItem.addEventListener('click', function () {
                items.moveToLastPage();
                updateNavigateButtonsItem();
            });
        }
    </script>

    <!-- ========================= -->
    <!-- Inventory Entries Scripts -->
    <!-- ========================= -->
    <script type="text/javascript">
        // ======================================
        // Global Variables for Inventory Entries
        // ======================================
        var inventoryEntries;
        var inventoryEntryGrid;

        var btnFirstPageGridInventoryEntry;
        var btnPreviousPageGridInventoryEntry;
        var btnNextPageGridInventoryEntry;
        var btnLastPageGridInventoryEntry;
        var btnCurrentPageGridInventoryEntry;

        // ============================
        // GET Contact Information List
        // ============================
        function getInventoryEntry() {
            var inventoryEntries = new wijmo.collections.ObservableArray;
            //$('#loadingModal').modal('show');
            //$.ajax({
            //    url: '/api/listAccount',
            //    cache: false,
            //    type: 'GET',
            //    contentType: 'application/json; charset=utf-8',
            //    data: {},
            //    success: function (Results) {
            //        $('#loadingModal').modal('hide');
            //        if (Results.length > 0) {
            //            for (i = 0; i < Results.length; i++) {
            //                journalLedger.push({
            //                    EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
            //                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
            //                    Id: Results[i]["Id"],
            //                    AccountCode: Results[i]["AccountCode"],
            //                    Account: Results[i]["Account"],
            //                    AccountTypeId: Results[i]["AccountTypeId"],
            //                    AccountType: Results[i]["AccountType"],
            //                    AccountCashFlowId: Results[i]["AccountCashFlowId"],
            //                    AccountCashFlow: Results[i]["AccountCashFlow"],
            //                    IsLocked: Results[i]["IsLocked"],
            //                    CreatedById: Results[i]["CreatedById"],
            //                    CreatedBy: Results[i]["CreatedBy"],
            //                    CreatedDateTime: Results[i]["CreatedDateTime"],
            //                    UpdatedById: Results[i]["UpdatedById"],
            //                    UpdatedBy: Results[i]["UpdatedBy"],
            //                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
            //                });
            //            }
            //        }
            //    }
            //}).fail(function (xhr, textStatus, err) {
            //    alert(err);
            //});
            return inventoryEntries;
        }

        // ========================================
        // FlexGrid Selection for Inventory Entries
        // ========================================
        function updateDetailsInventoryEntry() {
            var item = inventoryEntries.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ========================================
        // Navigation Buttons for Inventory Entries
        // ========================================
        function updateNavigateButtonsInventoryEntry() {
            if (inventoryEntries.pageSize <= 0) {
                document.getElementById('navigationPageGridInventoryEntry').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridInventoryEntry').style.display = 'block';
            if (inventoryEntries.pageIndex === 0) {
                btnFirstPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnPreviousPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnNextPageGridInventoryEntry.removeAttribute('disabled');
                btnLastPageGridInventoryEntry.removeAttribute('disabled');
            } else if (inventoryEntries.pageIndex === (inventoryEntries.pageCount - 1)) {
                btnFirstPageGridInventoryEntry.removeAttribute('disabled');
                btnPreviousPageGridInventoryEntry.removeAttribute('disabled');
                btnLastPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnNextPageGridInventoryEntry.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridInventoryEntry.removeAttribute('disabled');
                btnPreviousPageGridInventoryEntry.removeAttribute('disabled');
                btnNextPageGridInventoryEntry.removeAttribute('disabled');
                btnLastPageGridInventoryEntry.removeAttribute('disabled');
            }
            btnCurrentPageGridInventoryEntry.innerHTML = (inventoryEntries.pageIndex + 1) + ' / ' + inventoryEntries.pageCount;
        }

        // ==================================
        // On Page Load for Inventory Entries
        // ==================================
        function inventoryEntryTab() {
            inventoryEntries = new wijmo.collections.CollectionView();
            inventoryEntries.canFilter = true;
            inventoryEntries.pageSize = 15;

            var filterTextInventoryEntry = '';
            $('#InputFilterInventoryEntry').keyup(function () {
                filterTextInventoryEntry = this.value.toLowerCase();
                inventoryEntries.refresh();
            });
            inventoryEntries.filter = function (item) {
                return !filterTextInventoryEntry || (item.inventoryEntry.toLowerCase().indexOf(filterTextInventoryEntry) > -1);
            }
            inventoryEntries.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });
            inventoryEntries.currentChanged.addHandler(function (sender, args) {
                updateDetailsInventoryEntry();
            });

            // Flex Grid for Inventory Entries
            inventoryEntryGrid = new wijmo.grid.FlexGrid('#InventoryEntryGrid');
            inventoryEntryGrid.initialize({
                columns: [
                            {
                                "header": "Contact",
                                "binding": "Contact",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Contact Number(s)",
                                //"binding": "ContactNumbers",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Remarks",
                                //"binding": "Remarks",
                                "align": "left",
                                "allowSorting": true,
                                "width": "1*",
                            },
                ],
                autoGenerateColumns: false,
                //itemsSource: inventoryEntries,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntryGrid.trackChanges = true;

            //Navigation button for Inventory Entries
            btnFirstPageGridInventoryEntry = document.getElementById('btnMoveToFirstPageGridInventoryEntry');
            btnPreviousPageGridInventoryEntry = document.getElementById('btnMoveToPreviousPageGridInventoryEntry');
            btnNextPageGridInventoryEntry = document.getElementById('btnMoveToNextPageGridInventoryEntry');
            btnLastPageGridInventoryEntry = document.getElementById('btnMoveToLastPageGridInventoryEntry');
            btnCurrentPageGridInventoryEntry = document.getElementById('btnCurrentPageGridInventoryEntry');

            updateNavigateButtonsInventoryEntry();

            btnFirstPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToFirstPage();
                updateNavigateButtonsInventoryEntry();
            });
            btnPreviousPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToPreviousPage();
                updateNavigateButtonsInventoryEntry();
            });
            btnNextPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToNextPage();
                updateNavigateButtonsInventoryEntry();
            });
            btnLastPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToLastPage();
                updateNavigateButtonsInventoryEntry();
            });
        }
    </script>

    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        // ====
        // TABS
        // ====
        $('#itemTabId').click(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            window.itemTab = function () {
                return true;
            };
        });

        $('#inventoryEntryTabId').click(function () {
            $('#Items').hide();
            $('#InventoryEntries').show();
            inventoryEntryTab();
            window.inventoryEntryTab = function () {
                return true;
            };
        });

        $(document).ready(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            itemTab();
        });
    </script>
</body>
</html>