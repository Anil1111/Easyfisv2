@{
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Transfer Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock Transfer Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-12" align="right">
                                <button class="btn btn-primary " id="cmdStockTransferJournal" onclick="stockTransferJournal_OnClick()"><i class="fa fa-book"></i> Journal</button>
                                <button class="btn btn-primary " id="cmdStockTransferSaveLock" onclick="btnStockTransferSaveLock_OnClick()"><i class="fa fa-lock"></i> Lock</button>
                                <button class="btn btn-primary " id="cmdStockTransferEdit" onclick="btnStockTransferEdit_OnClick()"><i class="fa fa-unlock"></i> Unlock</button>
                                <button class="btn btn-primary " id="cmdStockTransferPrint" onclick="btnStockTransferPrint_OnClick()"><i class="fa fa-print"></i> Print</button>
                                <button onclick="window.location.href = '/Software/StockTransfer'" class="btn btn-danger " id="cmdStockTransferClose"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="">
                            <form class="form-horizontal" role="form">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Branch</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferBranch"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">ST Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control requiredStockTransfer" id="stockTransferSTNumber" disabled />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">ST Date</label>
                                            <div class="col-sm-8">
                                                <div class="" id="cboStockTransferSTDate"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">To branch</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferToBranch"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Article</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferArticle"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Particulars</label>
                                            <div class="col-sm-8">
                                                <textarea rows="5" class="form-control textarea-custom requiredStockTransfer" id="stockTransfer_Particulars" placeholder="Particulars"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Manual ST Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control  requiredStockTransfer" id="stockTransfer_ManualSTNumber" placeholder="Manual ST Number">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Prepared by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferPreparedBy"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Checked by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferCheckedBy"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Approved by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferApprovedBy"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#Items" id="itemTabId">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#InventoryEntries" id="inventoryEntryTabId">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="Items" class="tab-pane fade in active">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-lg-12" align="right">
                                        <button class="btn btn-primary " id="btnAddStockTransferItem" onclick="cmdAddStockTransferItem_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                        <button class="btn btn-primary " id="btnItemQueryStockTransferItem" onclick="cmdItemQueryStockTransferItem_OnClick()"><i class="fa fa-search-plus"></i> Item Query</button>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div class="row" align="left">
                                    <div class="col-lg-12">
                                        <div id="stockTransferItemFlexGrid" class="grid"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="InventoryEntries" class="tab-pane fade in active" style="margin-bottom: 15px;">
                        <div id="inventoryFlexGrid"></div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!-- ========================== -->
    <!-- Stock Transfer Item Detail -->
    <!-- ========================== -->
    <div class="modal fade" id="stockTransferItemsEdit" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="stockTransferItemsModalLabel">Stock Transfer Item</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingModalItem"></span>
                    </center>
                    <div id="STItemContent">
                        <dl class="dl-horizontal">
                            <dt>Item Code</dt>
                            <dd>
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 30%">
                                            <div class="comboBox-wide" id="cboStockTransferItemItemCode"></div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 69%">
                                            <div class="comboBox-wide" id="cboStockTransferItemItemDescription"></div>
                                        </td>
                                    </tr>
                                </table>
                            </dd>
                            <dt>Particulars</dt>
                            <dd><textarea rows="5" class="form-control textarea-custom requiredStockTransferItem" id="stockTransferItem_Particulars"></textarea></dd>
                            <dt>Inventory Code</dt>
                            <dd><div class="comboBox-wide" id="cboStockTransferItemInventoryCode"></div></dd>
                            <dt>Quantity</dt>
                            <dd><input type="text" class="form-control  numberField  requiredStockTransferItem" id="stockTransferItem_Quantity" placeholder="0.00" /></dd>
                            <dt>Unit</dt>
                            <dd><div class="comboBox-wide" id="cboStockTransferItemUnit"></div></dd>
                            <dt>Cost</dt>
                            <dd><input type="text" class="form-control  numberField  requiredStockTransferItem" id="stockTransferItem_Cost" placeholder="0.00" /></dd>
                            <dt>Amount</dt>
                            <dd><input type="text" class="form-control  numberField  requiredStockTransferItem" id="stockTransferItem_Amount" placeholder="0.00" disabled /></dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary " id="cmdSaveStockTransferItemButton" onclick="cmdStockTransferItemSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdStockTransferItemDetailCloseButton" class="btn btn-danger " data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Journal Detail -->
    <div class="modal fade" id="journalDetail" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="journalModalLabel"> Journal</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingJournalGridList"></span>
                    </center>
                    <div id="journal_Content">
                        <div id="journalFlexGrid" style="max-height: 250px;"></div>
                        <br /><br />
                        <div class="row">
                            <div class="col-md-7"></div>
                            <div class="col-md-5">
                                <dl class="dl-horizontal">
                                    <dt>
                                        <b>Total Debit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField  requiredStockTransferItem" id="totalDebitInJournal" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Credit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField  requiredStockTransferItem" id="totalCreditInJournal" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Variance</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control  numberField  requiredStockTransferItem" id="variance" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdJournalDetailCloseButton" class="btn btn-danger " data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- ============================================== -->
    <!-- Stock-Transfer Items Delete Modal Confirmation -->
    <!-- ============================================== -->
    <div class="modal fade" id="deleteStockTransferItemsConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this stock transfer item?
                </div>
                <div class="modal-footer">
                    <button id="cmdConfirmDeleteStockTransferItems" class="btn btn-danger"  onclick="cmdStockTransferItemsConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteStockTransferItemsCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- =============================== -->
    <!-- Stock Transfer Item Query Modal -->
    <!-- =============================== -->
    <div class="modal fade" id="stockTransferItemsItemQuery" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Item Query</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingItemQuery"></span>
                    </center>
                    <div id="itemQueryPanel">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="input-group  ">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control " id="itemQueryFilter" placeholder="Search">
                                </div>
                            </div>
                        </div>
                        <div id="itemQueryItemsFlexGrid" style="max-height: 300px;"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>


    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var cboStockTransferBranch = new wijmo.input.ComboBox('#cboStockTransferBranch');
        var cboStockTransferToBranch = new wijmo.input.ComboBox('#cboStockTransferToBranch');
        var cboStockTransferArticle = new wijmo.input.ComboBox('#cboStockTransferArticle');
        var cboStockTransferPreparedBy = new wijmo.input.ComboBox('#cboStockTransferPreparedBy');
        var cboStockTransferCheckedBy = new wijmo.input.ComboBox('#cboStockTransferCheckedBy');
        var cboStockTransferApprovedBy = new wijmo.input.ComboBox('#cboStockTransferApprovedBy');
        var cboStockTransferSTDate = new wijmo.input.InputDate('#cboStockTransferSTDate');
        var isLocked = false;
        var stockTransferItemCollectionView;
        var stockTransferItemFlexGrid;
        var cboStockTransferItemItemCode = new wijmo.input.ComboBox('#cboStockTransferItemItemCode');
        var cboStockTransferItemItemDescription = new wijmo.input.ComboBox('#cboStockTransferItemItemDescription');
        var cboStockTransferItemInventoryCode = new wijmo.input.ComboBox('#cboStockTransferItemInventoryCode');
        var cboStockTransferItemUnit = new wijmo.input.ComboBox('#cboStockTransferItemUnit');
        var itemQueryItemsCollectionView;
        var itemQueryItemsFlexGrid = new wijmo.grid.FlexGrid('#itemQueryItemsFlexGrid');
        var stockTransferItemId = 0;
        var inventoryCollectionView;
        var inventoryFlexGrid = new wijmo.grid.FlexGrid('#inventoryFlexGrid');
        var journalCollectionView;
        var journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);

            if (results == null)
                return "";
            else {
                return results[1];
            }
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (branchListResults) {
                    if (branchListResults.length > 0) {
                        for (i = 0; i < branchListResults.length; i++) {
                            branchesObservableArray.push({
                                Id: branchListResults[i]["Id"],
                                Branch: branchListResults[i]["Branch"]
                            });
                        }
                    }

                    cboStockTransferBranch.dispose();
                    cboStockTransferBranch = new wijmo.input.ComboBox('#cboStockTransferBranch', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id"
                    });

                    var toBranchCollections = new wijmo.collections.CollectionView(branchesObservableArray);
                    var toBranchesObservableArray = new wijmo.collections.ObservableArray();
                    for (var i = 0; i < toBranchCollections.items.length; i++) {
                        if (toBranchCollections.items[i].Id != cboStockTransferBranch.selectedValue) {
                            toBranchesObservableArray.push({
                                Id: toBranchCollections.items[i].Id,
                                Branch: toBranchCollections.items[i].Branch,
                            });
                        }
                    }

                    cboStockTransferToBranch.dispose();
                    cboStockTransferToBranch = new wijmo.input.ComboBox('#cboStockTransferToBranch', {
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: toBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id"
                    });

                    getArticleForComboBox();
                }
            });
        }

        // =========================
        // GET Article for Combo Box
        // =========================
        function getArticleForComboBox() {
            var articlesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/6',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (articlesListResult) {
                    if (articlesListResult.length > 0) {
                        for (i = 0; i < articlesListResult.length; i++) {
                            articlesObservableArray.push({
                                Id: articlesListResult[i]["Id"],
                                Article: articlesListResult[i]["Article"]
                            });
                        }
                    }

                    cboStockTransferArticle.dispose();
                    cboStockTransferArticle = new wijmo.input.ComboBox('#cboStockTransferArticle', {
                        isEditable: false,
                        placeholder: "Select Supplier",
                        itemsSource: articlesObservableArray,
                        displayMemberPath: "Article",
                        selectedValuePath: "Id"
                    });

                    getUsersForComboBox();
                }
            });
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            var usersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userListResult) {
                    if (userListResult.length > 0) {
                        for (i = 0; i < userListResult.length; i++) {
                            usersObservableArray.push({
                                Id: userListResult[i]["Id"],
                                FullName: userListResult[i]["FullName"]
                            });
                        }
                    }

                    cboStockTransferPreparedBy.dispose();
                    cboStockTransferPreparedBy = new wijmo.input.ComboBox('#cboStockTransferPreparedBy', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockTransferCheckedBy.dispose();
                    cboStockTransferCheckedBy = new wijmo.input.ComboBox('#cboStockTransferCheckedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockTransferApprovedBy.dispose();
                    cboStockTransferApprovedBy = new wijmo.input.ComboBox('#cboStockTransferApprovedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    getStockTransferById();
                }
            });
        }


        // =======================
        // GET Stock Transfer by Id
        // =======================
        function getStockTransferById() {
            if (document.location.search.length > 0) {
                var id = getParam("id");
                $.ajax({
                    url: '/api/stockTransfer/' + id,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (Results) {
                        cboStockTransferBranch.selectedValue = Results.BranchId;
                        document.getElementById('stockTransferSTNumber').value = Results.STNumber;
                        cboStockTransferSTDate.dispose();
                        cboStockTransferSTDate = new wijmo.input.InputDate('#cboStockTransferSTDate', {
                            format: 'MM-dd-yyyy',
                            value: new Date(Results.STDate),
                        });
                        cboStockTransferToBranch.selectedValue = Results.ToBranch;
                        cboStockTransferArticle.selectedValue = Results.ArticleId;
                        document.getElementById('stockTransfer_Particulars').value = Results.Particulars;
                        document.getElementById('stockTransfer_ManualSTNumber').value = Results.ManualSTNumber;
                        cboStockTransferPreparedBy.selectedValue = Results.PreparedById;
                        cboStockTransferCheckedBy.selectedValue = Results.CheckedById;
                        cboStockTransferApprovedBy.selectedValue = Results.ApprovedById;

                        if (Results.IsLocked == true) {
                            cboStockTransferSTDate.disabled = true;
                            cboStockTransferToBranch.disabled = true;
                            cboStockTransferArticle.disabled = true;
                            document.getElementById('stockTransfer_Particulars').disabled = true;
                            document.getElementById('stockTransfer_ManualSTNumber').disabled = true;
                            cboStockTransferCheckedBy.disabled = true;
                            cboStockTransferApprovedBy.disabled = true;

                            $("#cmdStockTransferSaveLock").prop("disabled", true);
                            $('#btnAddStockTransferItem').prop('disabled', true);
                            $('#btnItemQueryStockTransferItem').prop('disabled', true);

                            var canUnLock = "@ViewData["CanUnlock"]";
                            if (canUnLock == "False") {
                                $("#cmdStockTransferEdit").prop("disabled", true);
                            }

                            var canPrint = "@ViewData["CanPrint"]";
                            if (canPrint == "False") {
                                $("#cmdStockTransferPrint").prop("disabled", true)
                            }

                            isLocked = true;
                        } else {
                            $("#cmdStockTransferJournal").prop("disabled", true);
                            $("#cmdStockTransferEdit").prop("disabled", true);
                            $("#cmdStockTransferPrint").prop("disabled", true);

                            var canLock = "@ViewData["CanLock"]";
                            if (canLock == "False") {
                                $("#cmdStockTransferSaveLock").prop("disabled", true);
                            }

                            var canAdd = "@ViewData["CanAdd"]";
                            if (canAdd == "False") {
                                $("#btnAddStockTransferItem").prop("disabled", true);
                                $("#btnItemQueryStockTransferItem").prop("disabled", true);
                            }
                        }

                        createStockTransferItemsFlexgrid();
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/StockTransfer";
            }
        }

        // ============================
        // GET Stock Transfer Item List
        // ============================
        function getItem() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                var id = getParam("id");
                $.ajax({
                    url: '/api/listStockTransferItemBySTId/' + id,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (Results) {
                        var canEdit = "@ViewData["CanEdit"]";
                        var editDisabled = "";
                        if (canEdit == "False") {
                            editDisabled = "disabled";
                        }

                        var canDelete = "@ViewData["CanDelete"]";
                        var deleteDisabled = "";
                        if (canDelete == "False") {
                            deleteDisabled = "disabled";
                        }

                        var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditStockTransferItem_OnClick()' " + editDisabled + "><i class='fa fa-edit'></i> Edit</button>";
                        var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteStockTransferItem_OnClick()'" + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                        if (isLocked) {
                            btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditStockTransferItem_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                            btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteStockTransferItem_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                        }

                        for (i = 0; i < Results.length; i++) {
                            itemsObservableArray.push({
                                EditId: btnEditId,
                                DeleteId: btnDeleteId,
                                Id: Results[i]["Id"],
                                STId: Results[i]["STId"],
                                ST: Results[i]["ST"],
                                ItemId: Results[i]["ItemId"],
                                ItemCode: Results[i]["ItemCode"],
                                Item: Results[i]["Item"],
                                ItemInventoryId: Results[i]["ItemInventoryId"],
                                ItemInventory: Results[i]["ItemInventory"],
                                Particulars: Results[i]["Particulars"],
                                UnitId: Results[i]["UnitId"],
                                Unit: Results[i]["Unit"],
                                Quantity: Results[i]["Quantity"],
                                Cost: Results[i]["Cost"],
                                Amount: Results[i]["Amount"],
                                BaseUnitId: Results[i]["BaseUnitId"],
                                BaseUnit: Results[i]["BaseUnit"],
                                BaseQuantity: Results[i]["BaseQuantity"],
                                BaseCost: Results[i]["BaseCost"],
                            });
                        }

                        NProgress.done();
                    }
                });
            }

            return itemsObservableArray;
        }

        // ======
        //  Items
        // ======
        function createStockTransferItemsFlexgrid() {
            stockTransferItemCollectionView = new wijmo.collections.CollectionView(getItem());

            // Flex Grid for Items
            stockTransferItemFlexGrid = new wijmo.grid.FlexGrid('#stockTransferItemFlexGrid');
            stockTransferItemFlexGrid.initialize({
                columns: [
                    {
                        "header": "Edit",
                        "binding": "EditId",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Delete",
                        "binding": "DeleteId",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Code",
                        "binding": "ItemCode",
                        "allowSorting": true,
                        "width": 110
                    },
                    {
                        "header": "Item",
                        "binding": "Item",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": 120
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "ItemInventory",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Quantity",
                        "binding": "Quantity",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Cost",
                        "binding": "Cost",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Amount",
                        "binding": "Amount",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Unit",
                        "binding": "BaseUnit",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Quantity",
                        "binding": "BaseQuantity",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Cost",
                        "binding": "BaseCost",
                        "allowSorting": true,
                        "width": 100
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: stockTransferItemCollectionView,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockTransferItemFlexGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            stockTransferItemFlexGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            stockTransferItemFlexGrid.columnHeaders.rows.push(hr);
            stockTransferItemFlexGrid.columnHeaders.rows[0].allowMerging = true;

            stockTransferItemFlexGrid.columnHeaders.columns[0].allowMerging = true;
            stockTransferItemFlexGrid.columnHeaders.setCellData(0, 0, 'Edit');

            stockTransferItemFlexGrid.columnHeaders.columns[1].allowMerging = true;
            stockTransferItemFlexGrid.columnHeaders.setCellData(0, 1, 'Delete');

            stockTransferItemFlexGrid.columnHeaders.columns[2].allowMerging = true;
            stockTransferItemFlexGrid.columnHeaders.setCellData(0, 2, 'Code');

            stockTransferItemFlexGrid.columnHeaders.columns[3].allowMerging = true;
            stockTransferItemFlexGrid.columnHeaders.setCellData(0, 3, 'Item');

            stockTransferItemFlexGrid.columnHeaders.columns[4].allowMerging = true;
            stockTransferItemFlexGrid.columnHeaders.setCellData(0, 4, 'Particulars');

            stockTransferItemFlexGrid.columnHeaders.columns[5].allowMerging = true;
            stockTransferItemFlexGrid.columnHeaders.setCellData(0, 5, 'Inventory Code');

            stockTransferItemFlexGrid.columnHeaders.columns[6].allowMerging = true;
            stockTransferItemFlexGrid.columnHeaders.setCellData(0, 6, 'Quantity');

            stockTransferItemFlexGrid.columnHeaders.columns[7].allowMerging = true;
            stockTransferItemFlexGrid.columnHeaders.setCellData(0, 7, 'Unit');

            stockTransferItemFlexGrid.columnHeaders.columns[8].allowMerging = true;
            stockTransferItemFlexGrid.columnHeaders.setCellData(0, 8, 'Cost');

            stockTransferItemFlexGrid.columnHeaders.columns[9].allowMerging = true;
            stockTransferItemFlexGrid.columnHeaders.setCellData(0, 9, 'Amount');

            for (var columnBasicUnitConversion = 10; columnBasicUnitConversion <= 12; columnBasicUnitConversion++) {
                stockTransferItemFlexGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Basic Unit Conversion');
            }
        }

        // ======================================
        // GET Item Id, Manual Code and Component
        // ======================================
        function getArticleItemForManualCodeAndComponent(itemId, inventoryId, unitId) {
            var articleInventoryItemsObservableArray = new wijmo.collections.ObservableArray();
            var branchId = cboStockTransferBranch.selectedValue;
            $.ajax({
                url: '/api/listArticleInventoryBybranchId/' + branchId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (articleInventoryItemListResults) {
                    if (articleInventoryItemListResults.length > 0) {
                        for (i = 0; i < articleInventoryItemListResults.length; i++) {
                            articleInventoryItemsObservableArray.push({
                                Id: articleInventoryItemListResults[i]["Id"],
                                BranchId: articleInventoryItemListResults[i]["BranchId"],
                                ItemId: articleInventoryItemListResults[i]["ArticleId"],
                                ItemCode: articleInventoryItemListResults[i]["ManualArticleCode"],
                                ItemDescription: articleInventoryItemListResults[i]["Article"],
                                InventoryCode: articleInventoryItemListResults[i]["InventoryCode"],
                                Quantity: articleInventoryItemListResults[i]["Quantity"],
                                Cost: articleInventoryItemListResults[i]["Cost"],
                                Amount: articleInventoryItemListResults[i]["Amount"],
                                Particulars: articleInventoryItemListResults[i]["Particulars"],
                                Unit: articleInventoryItemListResults[i]["Unit"],
                                UnitId: articleInventoryItemListResults[i]["UnitId"]
                            });
                        }
                    }

                    var disabled = true;
                    if (articleInventoryItemListResults.length > 0) {
                        disabled = false;
                        $("#cmdSaveStockTransferItemButton").prop("disabled", false);
                    } else {
                        $("#cmdSaveStockTransferItemButton").prop("disabled", true);
                    }

                    cboStockTransferItemItemCode.dispose();
                    cboStockTransferItemItemCode = new wijmo.input.ComboBox('#cboStockTransferItemItemCode', {
                        disabled: disabled,
                        isEditable: false,
                        placeholder: "Select Code",
                        itemsSource: articleInventoryItemsObservableArray,
                        displayMemberPath: "ItemCode",
                        selectedValuePath: "ItemId",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboStockTransferItemItemDescription.selectedValue = this.selectedValue;
                        }
                    });

                    cboStockTransferItemItemDescription.dispose();
                    cboStockTransferItemItemDescription = new wijmo.input.ComboBox('#cboStockTransferItemItemDescription', {
                        disabled: disabled,
                        isEditable: false,
                        placeholder: "Select Item",
                        itemsSource: articleInventoryItemsObservableArray,
                        displayMemberPath: "ItemDescription",
                        selectedValuePath: "ItemId",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboStockTransferItemItemCode.selectedValue = this.selectedValue;
                            cboStockTransferItemInventoryCode.selectedValue = this.selectedItem["Id"];
                            getArticleInventoryCode(inventoryId, unitId);
                        }
                    });

                    getArticleInventoryCode(inventoryId, unitId);
                }
            });
        }

        // ==================
        // GET Inventory Code
        // ==================
        function getArticleInventoryCode(inventoryId, unitId) {
            var articleInventoriesObservableArray = new wijmo.collections.ObservableArray();
            var itemId = cboStockTransferItemItemDescription.selectedValue;
            $.ajax({
                url: '/api/listArticleInventoryByArticleId/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (articleInventoryListResults) {
                    if (articleInventoryListResults.length > 0) {
                        for (i = 0; i < articleInventoryListResults.length; i++) {
                            articleInventoriesObservableArray.push({
                                Id: articleInventoryListResults[i]["Id"],
                                InventoryCode: articleInventoryListResults[i]["InventoryCode"],
                            });
                        }
                    }

                    var disabled = true;
                    if (articleInventoryListResults.length > 0) {
                        var InventoryType = "@ViewData["InventoryType"]";
                        if(InventoryType == "Moving Average") {
                            disabled = true;
                        } else {
                            disabled = false;
                        }
                    } else {
                        $("#cmdSaveStockTransferItemButton").prop("disabled", true);
                    }

                    cboStockTransferItemInventoryCode.dispose();
                    cboStockTransferItemInventoryCode = new wijmo.input.ComboBox('#cboStockTransferItemInventoryCode', {
                        disabled: disabled,
                        isEditable: false,
                        placeholder: "Select Inventory Code",
                        itemsSource: articleInventoriesObservableArray,
                        displayMemberPath: "InventoryCode",
                        selectedValuePath: "Id",
                        selectedValue: inventoryId,
                    });

                    getStockTransferItemUnitForComboBox(unitId);
                }
            });
        }

        // =============
        // Get Item Unit
        // =============
        function getStockTransferItemUnitForComboBox(unitId) {
            var stockTransferUnitsObservableArray = new wijmo.collections.ObservableArray();
            var itemId = cboStockTransferItemItemDescription.selectedValue;
            $.ajax({
                url: '/api/listArticleUnitByArticleId/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (articleUnitListResults) {
                    if (articleUnitListResults.length > 0) {
                        for (i = 0; i < articleUnitListResults.length; i++) {
                            stockTransferUnitsObservableArray.push({
                                UnitId: articleUnitListResults[i]["UnitId"],
                                Unit: articleUnitListResults[i]["Unit"],
                            });
                        }
                    }

                    var disabled = true;
                    if (articleUnitListResults.length > 0) {
                        disabled = false;
                    } else {
                        $("#cmdSaveStockTransferItemButton").prop("disabled", true);
                    }

                    cboStockTransferItemUnit.dispose();
                    cboStockTransferItemUnit = new wijmo.input.ComboBox('#cboStockTransferItemUnit', {
                        isEditable: false,
                        placeholder: "Select Unit",
                        itemsSource: stockTransferUnitsObservableArray,
                        displayMemberPath: "Unit",
                        selectedValuePath: "UnitId",
                        selectedValue: unitId
                    });

                    $("#loadingModalItem").hide();
                    $("#STItemContent").show();
                }
            });
        }

        // ==========================
        // Stock Transfer Save - Lock
        // ==========================
        function btnStockTransferSaveLock_OnClick() {
            var stockTransferObject = new Object();
            var id = getParam("id");
            stockTransferObject.BranchId = cboStockTransferBranch.selectedValue;
            stockTransferObject.STNumber = document.getElementById('stockTransferSTNumber').value;
            stockTransferObject.STDate = cboStockTransferSTDate.value.toLocaleDateString();
            stockTransferObject.ToBranchId = cboStockTransferToBranch.selectedValue;
            stockTransferObject.ArticleId = cboStockTransferArticle.selectedValue;
            stockTransferObject.Particulars = document.getElementById('stockTransfer_Particulars').value;
            stockTransferObject.ManualSTNumber = document.getElementById('stockTransfer_ManualSTNumber').value;
            stockTransferObject.PreparedById = cboStockTransferPreparedBy.selectedValue;
            stockTransferObject.CheckedById = cboStockTransferCheckedBy.selectedValue;
            stockTransferObject.ApprovedById = cboStockTransferApprovedBy.selectedValue;
            var stockTransferData = JSON.stringify(stockTransferObject);

            var isValid = true;
            $('.requiredStockTransfer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('cmdStockTransferSaveLock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $("#cmdStockTransferJournal").prop("disabled", true);
                $("#cmdStockTransferSaveLock").prop("disabled", true);
                $("#cmdStockTransferEdit").prop("disabled", true);
                $("#cmdStockTransferPrint").prop("disabled", true);
                $("#cmdStockTransferClose").prop("disabled", true);

                $.ajax({
                    type: "PUT",
                    url: '/api/updateStockTransfer/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: stockTransferData,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function () {
                            toastr.error("Not Found");
                            document.getElementById('cmdStockTransferSaveLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#cmdStockTransferSaveLock").prop("disabled", false);
                            $("#cmdStockTransferClose").prop("disabled", false);
                        },
                        400: function () {
                            toastr.error("Bad Request");
                            document.getElementById('cmdStockTransferSaveLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#cmdStockTransferSaveLock").prop("disabled", false);
                            $("#cmdStockTransferClose").prop("disabled", false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ============================
        // Edit Stock Transfer - Unlock
        // ============================
        function btnStockTransferEdit_OnClick() {
            var id = getParam("id");
            document.getElementById('cmdStockTransferEdit').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $("#cmdStockTransferJournal").prop("disabled", true);
            $("#cmdStockTransferSaveLock").prop("disabled", true);
            $("#cmdStockTransferEdit").prop("disabled", true);
            $("#cmdStockTransferPrint").prop("disabled", true);
            $("#cmdStockTransferClose").prop("disabled", true);

            $.ajax({
                type: "PUT",
                url: '/api/updateStockTransferIsLocked/' + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('cmdStockTransferEdit').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#cmdStockTransferEdit").prop("disabled", false);
                        $("#cmdStockTransferJournal").prop("disabled", false);
                        $("#cmdStockTransferPrint").prop("disabled", false);
                        $("#cmdStockTransferClose").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        document.getElementById('cmdStockTransferEdit').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#cmdStockTransferEdit").prop("disabled", false);
                        $("#cmdStockTransferJournal").prop("disabled", false);
                        $("#cmdStockTransferPrint").prop("disabled", false);
                        $("#cmdStockTransferClose").prop("disabled", false);
                    }
                }
            });
        }

        // ========
        // Print ST
        // ========
        function btnStockTransferPrint_OnClick() {
            var stockTransferId = getParam("id");
            window.location = "/RepStockTransfer/StockTransfer?StockTransferId=" + stockTransferId;
        }

        // =======================
        // ADD Stock Transfer Item
        // =======================
        function cmdAddStockTransferItem_OnClick() {
            $('#stockTransferItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveStockTransferItemButton").prop("disabled", true);
            $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);

            $('.requiredStockTransfer').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#STItemContent").hide();

            stockTransferItemId = 0;
            getArticleItemForManualCodeAndComponent(0, 0, 0);
            document.getElementById('stockTransferItem_Particulars').value = "NA";
            document.getElementById('stockTransferItem_Quantity').value = 1;
            document.getElementById('stockTransferItem_Cost').value = 0;
            document.getElementById('stockTransferItem_Amount').value = 0;
        }

        // ========================
        // EDIT Stock Transfer Item
        // ========================
        function btnEditStockTransferItem_OnClick() {
            $('#stockTransferItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#STItemContent").hide();

            document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveStockTransferItemButton").prop("disabled", true);
            $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);

            $('.requiredStockTransfer').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            stockTransferItemCollectionView.editItem(stockTransferItemCollectionView.currentItem);
            var item = stockTransferItemCollectionView.currentEditItem;
            stockTransferItemId = item.Id;
            getArticleItemForManualCodeAndComponent(item.ItemId, item.ItemInventoryId, item.UnitId);
            document.getElementById('stockTransferItem_Particulars').value = item.Particulars;
            document.getElementById('stockTransferItem_Quantity').value = item.Quantity.toLocaleString();
            document.getElementById('stockTransferItem_Cost').value = item.Cost.toLocaleString();
            document.getElementById('stockTransferItem_Amount').value = item.Amount.toLocaleString();
        }

        $('#stockTransferItem_Quantity').keyup(function () {
            var stockTransfer_Quantity = document.getElementById('stockTransferItem_Quantity').value.replace(/\,/g, '');
            var stockTransfer_Cost = document.getElementById('stockTransferItem_Cost').value.replace(/\,/g, '');
            document.getElementById('stockTransferItem_Amount').value = (Math.round((stockTransfer_Quantity * stockTransfer_Cost) * 100) / 100).toLocaleString();
        });

        $('#stockTransferItem_Cost').keyup(function () {
            var stockTransfer_Quantity = document.getElementById('stockTransferItem_Quantity').value.replace(/\,/g, '');
            var stockTransfer_Cost = document.getElementById('stockTransferItem_Cost').value.replace(/\,/g, '');
            document.getElementById('stockTransferItem_Amount').value = (Math.round((stockTransfer_Quantity * stockTransfer_Cost) * 100) / 100).toLocaleString();
        });

        // Item Query Stock Transfer Item
        function cmdItemQueryStockTransferItem_OnClick() {
            $('#stockTransferItemsItemQuery').modal({
                show: true,
                backdrop: 'static'
            });

            $("#itemQueryPanel").hide();
            $("#loadingItemQuery").show();
            document.getElementById("loadingItemQuery").innerHTML = "<b><i class='fa fa-spinner fa-spin'></i></b>";

            setTimeout(function () {
                createFlexGridForItemQuery();
            }, 500);
        }

        // get article inventory for stock transfer item query
        function getArticleInventoryForItemQuery() {
            var itemsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleInventoryLocked',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (articleInventoryItemsResult) {
                    for(i = 0; i < articleInventoryItemsResult.length; i++) {
                        itemsObservableArray.push({
                            Id: articleInventoryItemsResult[i]["Id"],
                            BranchId: articleInventoryItemsResult[i]["BranchId"],
                            ArticleId: articleInventoryItemsResult[i]["ArticleId"],
                            ManualArticleCode: articleInventoryItemsResult[i]["ManualArticleCode"],
                            Article: articleInventoryItemsResult[i]["Article"],
                            InventoryCode: articleInventoryItemsResult[i]["InventoryCode"],
                            Price: articleInventoryItemsResult[i]["Price"],
                            Quantity: articleInventoryItemsResult[i]["Quantity"],
                            Cost: articleInventoryItemsResult[i]["Cost"],
                            Amount: articleInventoryItemsResult[i]["Amount"],
                            Particulars: articleInventoryItemsResult[i]["Particulars"],
                            UnitId: articleInventoryItemsResult[i]["UnitId"],
                            Unit: articleInventoryItemsResult[i]["Unit"],
                            Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='pickToApplyOnClick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                        });
                    }

                    $("#itemQueryPanel").show();
                    $("#loadingItemQuery").hide();
                }
            });

            return itemsObservableArray;
        }

        // creates flexgrid for the item query
        function createFlexGridForItemQuery() {
            itemQueryItemsCollectionView = new wijmo.collections.CollectionView(getArticleInventoryForItemQuery());
            itemQueryItemsCollectionView.canFilter = true;

            var filterText = '';
            $('#itemQueryFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryItemsCollectionView.refresh();
            });

            itemQueryItemsCollectionView.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                || (item.Article.toLowerCase().indexOf(filterText) > -1)
                || (item.InventoryCode.toLowerCase().indexOf(filterText) > -1);
            }

            itemQueryItemsFlexGrid.dispose();
            itemQueryItemsFlexGrid = new wijmo.grid.FlexGrid('#itemQueryItemsFlexGrid');
            itemQueryItemsFlexGrid.initialize({
                columns: [
                            {
                                "header": "Code",
                                "binding": "ManualArticleCode",
                                "allowSorting": true,
                                "width": "1.5*"
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "2.5*"
                            },
                            {
                                "header": "Inventory Code",
                                "binding": "InventoryCode",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Price",
                                "binding": "Price",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Pick",
                                "binding": "Pick",
                                "width": "1*",
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryItemsCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryItemsFlexGrid.trackChanges = true;
        }

        // pick
        function pickToApplyOnClick() {
            $('#stockTransferItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#STItemContent").hide();

            document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveStockTransferItemButton").prop("disabled", true);
            $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);

            $('.requiredStockTransfer').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemQueryItemsCollectionView.editItem(itemQueryItemsCollectionView.currentItem);
            var item = itemQueryItemsCollectionView.currentEditItem;
            stockTransferItemId = 0;
            getArticleItemForManualCodeAndComponent(item.ArticleId, item.Id, item.UnitId);
            document.getElementById('stockTransferItem_Particulars').value = item.Particulars;
            document.getElementById('stockTransferItem_Quantity').value = item.Quantity.toLocaleString();
            document.getElementById('stockTransferItem_Cost').value = item.Cost.toLocaleString();
            document.getElementById('stockTransferItem_Amount').value = (item.Quantity * item.Cost).toLocaleString();
        }

        // ========================
        // SAVE Stock Transfer Item
        // ========================
        function cmdStockTransferItemSaveButton_OnClick() {
            var id = getParam("id");
            var stockTransferItemObject = new Object();
            stockTransferItemObject.STId = id;
            stockTransferItemObject.ItemId = cboStockTransferItemItemDescription.selectedValue;
            stockTransferItemObject.ItemInventoryId = cboStockTransferItemInventoryCode.selectedValue;
            stockTransferItemObject.Particulars = document.getElementById('stockTransferItem_Particulars').value;
            stockTransferItemObject.UnitId = cboStockTransferItemUnit.selectedValue;
            stockTransferItemObject.Quantity = document.getElementById('stockTransferItem_Quantity').value;
            stockTransferItemObject.Cost = document.getElementById('stockTransferItem_Cost').value;
            stockTransferItemObject.Amount = document.getElementById('stockTransferItem_Amount').value;
            var stockTransferItemData = JSON.stringify(stockTransferItemObject);

            var isValid = true;
            $('.requiredStockTransfer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $("#cmdSaveStockTransferItemButton").prop("disabled", true);
                $("#cmdStockTransferItemDetailCloseButton").prop("disabled", true);

                if (stockTransferItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addStockTransferItem',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockTransferItemData,
                        success: function (id) {
                            if (id > 0) {
                                toastr.success("Save Successful");
                                $('#stockTransferItemsEdit').modal('hide');

                                stockTransferItemCollectionView = new wijmo.collections.CollectionView(getItem());
                                stockTransferItemFlexGrid.itemsSource = stockTransferItemCollectionView;
                                stockTransferItemFlexGrid.trackChanges = true;
                            } else {
                                toastr.error("Internal Server Error");
                                document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveStockTransferItemButton").prop("disabled", false);
                                $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateStockTransferItem/' + stockTransferItemId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockTransferItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");

                                $('#stockTransferItemsEdit').modal('hide');

                                stockTransferItemCollectionView = new wijmo.collections.CollectionView(getItem());
                                stockTransferItemFlexGrid.itemsSource = stockTransferItemCollectionView;
                                stockTransferItemFlexGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Not Found");
                                $('#stockTransferItemsEdit').modal('hide');
                                document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveStockTransferItemButton").prop("disabled", false);
                                $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#stockTransferItemsEdit').modal('hide');
                                document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#cmdSaveStockTransferItemButton").prop("disabled", false);
                                $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ==========================
        // DELETE Stock Transfer Item
        // ==========================
        function btnDeleteStockTransferItem_OnClick() {
            $('#deleteStockTransferItemsConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdConfirmDeleteStockTransferItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#cmdConfirmDeleteStockTransferItems").prop("disabled", false);
            $("#cmdConfirmDeleteStockTransferItemsCloseButton").prop("disabled", false);
        }

        // Confirm Delete Stock Transfer item
        function cmdStockTransferItemsConfirmDeleteButton_OnClick() {
            document.getElementById('cmdConfirmDeleteStockTransferItems').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $("#cmdConfirmDeleteStockTransferItems").prop("disabled", true);
            $("#cmdConfirmDeleteStockTransferItemsCloseButton").prop("disabled", true);

            stockTransferItemCollectionView.editItem(stockTransferItemCollectionView.currentItem);
            var itemId = stockTransferItemCollectionView.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteStockTransferItem/' + itemId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#deleteStockTransferItemsConfirm').modal('hide');

                        stockTransferItemCollectionView = new wijmo.collections.CollectionView(getItem());
                        stockTransferItemFlexGrid.itemsSource = stockTransferItemCollectionView;
                        stockTransferItemFlexGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $('#deleteStockTransferItemsConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteStockTransferItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdConfirmDeleteStockTransferItems").prop("disabled", false);
                        $("#cmdConfirmDeleteStockTransferItemsCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deleteStockTransferItemsConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteStockTransferItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdConfirmDeleteStockTransferItems").prop("disabled", false);
                        $("#cmdConfirmDeleteStockTransferItemsCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ==================
        // GET Inventory List
        // ==================
        function getInventoryEntries() {
            NProgress.start();
            var id = getParam('id');
            var inventoryObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/listInventoryBySTId/' + id,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    NProgress.done();
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            inventoryObservableArray.push({
                                Id: Results[i]["Id"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                InventoryDate: Results[i]["InventoryDate"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                ArticleInventoryId: Results[i]["ArticleInventoryId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"],
                                QuantityIn: Results[i]["QuantityIn"],
                                Quantity: Results[i]["Quantity"],
                                QuantityOut: Results[i]["QuantityOut"],
                                Amount: Results[i]["Amount"],
                                Particulars: Results[i]["Particulars"],
                                Code: Results[i]["Code"],
                                Unit: Results[i]["Unit"]
                            });
                        }
                    }
                }
            });

            return inventoryObservableArray;
        }

        // ==================================
        // On Page Load for Inventory Entries
        // ==================================
        function inventoryEntryTab() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntries());

            inventoryFlexGrid.dispose();
            inventoryFlexGrid = new wijmo.grid.FlexGrid('#inventoryFlexGrid');
            inventoryFlexGrid.initialize({
                columns: [
                    {
                        "header": "Date",
                        "binding": "InventoryDate",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.7*",
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "Code",
                        "allowSorting": true,
                        "width": "1.3*",
                    },
                    {
                        "header": "Quantity",
                        "binding": "Quantity",
                        "allowSorting": true,
                        "width": "1*",
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": "1*",
                    },
                    {
                        "header": "Amount",
                        "binding": "Amount",
                        "allowSorting": true,
                        "width": "1*",
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryFlexGrid.trackChanges = true;
        }

        // ===========
        // Get Journal
        // ===========
        function getJournalListForStockTransfer() {
            var journalsObservableArray = new wijmo.collections.ObservableArray;
            var id = getParam("id");
            $.ajax({
                url: '/api/listJournalBySTId/' + id,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            journalsObservableArray.push({
                                Id: Results[i]["Id"],
                                JournalDate: (Results[i]["JournalDate"]).replace(/\//g, '-'),
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                AccountId: Results[i]["AccountId"],
                                AccountCode: Results[i]["AccountCode"],
                                Account: Results[i]["Account"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                Particulars: Results[i]["Particulars"],
                                DebitAmount: Results[i]["DebitAmount"],
                                CreditAmount: Results[i]["CreditAmount"],
                                ORId: Results[i]["ORId"],
                                CVId: Results[i]["CVId"],
                                JVId: Results[i]["JVId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"],
                                DocumentReference: Results[i]["DocumentReference"],
                                APRRId: Results[i]["APRRId"],
                                ARSIId: Results[i]["ARSIId"]
                            });

                            var debitAmountTotal = 0;
                            var creditAmountTotal = 0;

                            var a = 0;
                            while (a < Results.length) {
                                debitAmountTotal += Results[a]["DebitAmount"];
                                creditAmountTotal += Results[a]["CreditAmount"];
                                a++;
                            }
                        }

                        document.getElementById('totalDebitInJournal').value = debitAmountTotal.toLocaleString();
                        document.getElementById('totalCreditInJournal').value = creditAmountTotal.toLocaleString();
                        var variance = debitAmountTotal - creditAmountTotal;
                        document.getElementById('variance').value = variance.toLocaleString();
                    }

                    $("#loadingJournalGridList").hide();
                    $("#journal_Content").show();
                }
            });

            return journalsObservableArray;
        }

        // ============
        // Journal List
        // ============
        function stockTransferJournal_OnClick() {
            $('#journalDetail').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingJournalGridList").show();
            document.getElementById("loadingJournalGridList").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#journal_Content").hide();

            setTimeout(function () {
                createJournalFlexgrid();
            }, 500)
        }

        function createJournalFlexgrid() {
            journalCollectionView = new wijmo.collections.CollectionView(getJournalListForStockTransfer());

            journalFlexGrid.dispose();
            journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');
            journalFlexGrid.initialize({
                columns: [
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "2.5*"
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": "1.5*"
                    },
                    {
                        "header": "Code",
                        "binding": "AccountCode",
                        "allowSorting": true,
                        "width": "1.8*"
                    },
                    {
                        "header": "Account",
                        "binding": "Account",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Article",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmount",
                        "allowSorting": true,
                        "width": "2*",
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmount",
                        "allowSorting": true,
                        "width": "2*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalFlexGrid.trackChanges = true;
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            getBranchesForComboBox();
        });
    </script>

    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        // ====
        // TABS
        // ====
        $('#itemTabId').click(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            NProgress.start();
            stockTransferItemCollectionView = new wijmo.collections.CollectionView(getItem());
            stockTransferItemFlexGrid.itemsSource = stockTransferItemCollectionView;
            stockTransferItemFlexGrid.trackChanges = true;
        });

        $('#inventoryEntryTabId').click(function () {
            $('#Items').hide();
            $('#InventoryEntries').show();
            NProgress.start();
            inventoryEntryTab();
        });

        $(document).ready(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();

            $(document).on('show.bs.modal', '.modal', function (event) {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () {
                    $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
                }, 0);
            });

            $(document).on('hidden.bs.modal', '.modal', function () {
                $('.modal:visible').length && $(document.body).addClass('modal-open');
            });
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>