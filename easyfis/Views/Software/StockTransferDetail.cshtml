@{
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Transfer Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body class="hold-transition skin-blue fixed sidebar-mini">
    <div class="wrapper">
        @Html.Partial("_SoftwareHeader")
        @Html.Partial("_SoftwareSideBarMenu")

        <div class="content-wrapper">
            <section class="content-header">
                <h1>
                    Stock Transfer Detail
                    <small><i class="fa fa-building"></i> @ViewData["Company"] / @ViewData["Branch"]</small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="/Software"> Dashboard</a></li>
                    <li><a href="/Software/StockTransfer"> Stock Transfer </a></li>
                    <li>Stock Transfer Detail</li>
                </ol>
            </section>

            <section class="content">
                <div class="box box-default">
                    <div class="box-body">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h4 id="collectionDetailLabel"></h4>
                                    </div>
                                    <div class="col-md-6" align="right">
                                        <button class="btn btn-primary btn-sm" id="cmdStockTransferJournal" onclick="stockTransferJournal_OnClick()"><i class="fa fa-book"></i> Journal</button>
                                        <button class="btn btn-primary btn-sm" id="cmdStockTransferSaveLock" onclick="btnStockTransferSaveLock_OnClick()"><i class="fa fa-lock"></i> Lock</button>
                                        @*<button class="btn btn-primary btn-sm" id="cmdStockTransferSave" onclick="btnStockTransferSave_OnClick()"><i class="fa fa-save"></i> Save</button>*@
                                        <button class="btn btn-primary btn-sm" id="cmdStockTransferEdit" onclick="btnStockTransferEdit_OnClick()"><i class="fa fa-unlock"></i> Unlock</button>
                                        <button class="btn btn-primary btn-sm" id="cmdStockTransferPrint" onclick="btnStockTransferPrint_OnClick()"><i class="fa fa-print"></i> Print</button>
                                        <button onclick="window.location.href = '/Software/StockTransfer'" class="btn btn-danger btn-sm" id="cmdStockTransferClose"><i class="fa fa-times"></i> Close</button>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div class="well">
                                    <form class="form-horizontal" role="form">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Branch</label>
                                                    <div class="col-sm-8">
                                                        <div class="comboBox-wide" id="stockTransfer_Branch"></div>

                                                        <input type="hidden" id="stockTransfer_Branch_data" class="requiredStockTransfer" />
                                                        <input type="hidden" id="stockTransfer_Branch_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">ST Number</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control input-30 input-sm requiredStockTransfer" id="stockTransfer_STNumber_Display" />
                                                        <input type="hidden" id="stockTransfer_STNumber" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">ST Date</label>
                                                    <div class="col-sm-8">
                                                        <div class="input-50" id="stockTransfer_STDate"></div>
                                                        <input type="hidden" id="stockTransfer_STDate_data" class="requiredStockTransfer" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">To branch</label>
                                                    <div class="col-sm-8">
                                                        <div class="comboBox-wide" id="stockTransfer_ToBranch"></div>

                                                        <input type="hidden" id="stockTransfer_ToBranch_data" class="requiredStockTransfer" />
                                                        <input type="hidden" id="stockTransfer_ToBranch_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Particulars</label>
                                                    <div class="col-sm-8">
                                                        <textarea class="form-control textarea-custom requiredStockTransfer" id="stockTransfer_Particulars" placeholder="Particulars"></textarea>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Manual ST Number</label>
                                                    <div class="col-sm-8">
                                                        <input type="text" class="form-control input-sm requiredStockTransfer" id="stockTransfer_ManualSTNumber" placeholder="Manual ST Number">
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Prepared by</label>
                                                    <div class="col-sm-8">
                                                        <div class="comboBox-wide" id="stockTransfer_PreparedBy"></div>

                                                        <input type="hidden" id="stockTransfer_PreparedBy_data" class="requiredStockTransfer" />
                                                        <input type="hidden" id="stockTransfer_PreparedBy_selectedValue" />
                                                        <input type="hidden" id="userId_data" value="@userId" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Checked by</label>
                                                    <div class="col-sm-8">
                                                        <div class="comboBox-wide" id="stockTransfer_CheckedBy"></div>

                                                        <input type="hidden" id="stockTransfer_CheckedBy_data" class="requiredStockTransfer" />
                                                        <input type="hidden" id="stockTransfer_CheckedBy_selectedValue" />
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label class="control-label col-sm-4">Approved by</label>
                                                    <div class="col-sm-8">
                                                        <div class="comboBox-wide" id="stockTransfer_ApprovedBy"></div>

                                                        <input type="hidden" id="stockTransfer_ApprovedBy_data" class="requiredStockTransfer" />
                                                        <input type="hidden" id="stockTransfer_ApprovedBy_selectedValue" />
                                                    </div>
                                                </div>
                                                @*<div class="form-group">
                                                        <label class="control-label col-sm-4">Lock</label>
                                                        <div class="col-sm-8">
                                                            <input type="checkbox" id="StockTransfer_Lock">
                                                        </div>
                                                    </div>*@
                                                <div class="form-group">
                                                    <div class="col-sm-4"></div>
                                                    <div class="col-sm-8">
                                                        <input type="hidden" id="StockTransfer_IsLocked">
                                                        <input type="hidden" id="StockTransfer_IsLocked_defaultTrue">
                                                        <input type="hidden" id="StockTransfer_IsLocked_defaultFalse">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <br />
                        <!-- Stock Transfer line -->
                        <ul class="nav nav-tabs" role="tablist" id="myTab">
                            <li role="presentation" class="active"><a data-toggle="tab" href="#Items" id="itemTabId">Items</a></li>
                            <li role="presentation"><a data-toggle="tab" href="#InventoryEntries" id="inventoryEntryTabId">Inventory Entries</a></li>
                        </ul>
                        <br />
                        <div class="tab-content">
                            <div id="Items" class="tab-pane fade in active">
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <div class="row">
                                            <div class="col-lg-12" align="right">
                                                <button class="btn btn-primary btn-sm" id="btnAddStockTransferItem" onclick="cmdAddStockTransferItem_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                                <button class="btn btn-primary btn-sm" id="btnItemQueryStockTransferItem" onclick="cmdItemQueryStockTransferItem_OnClick()"><i class="fa fa-search-plus"></i> Item Query</button>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div class="row" align="left">
                                            <div class="col-lg-12">
                                                <div id="ItemGrid" class="grid"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="InventoryEntries" class="tab-pane fade in active">
                                <!-- Inventory Entries List -->
                                <br />
                                <div class="row" align="left">
                                    <div class="col-lg-12">
                                        <div id="InventoryEntryGrid" class="grid" align="left"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- ========================== -->
    <!-- Stock Transfer Item Detail -->
    <!-- ========================== -->
    <div class="modal fade" id="stockTransferItemsEdit" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="stockTransferItemsModalLabel">Stock-Transfer Line Item Detail</h4>
                </div>
                <div class="modal-body">
                    <form id="stockTransferItemsDetailForm">
                        <ul class="nav nav-tabs" role="tablist" id="myTab">
                            <li role="presentation" class="active"><a data-toggle="tab" href="#STItem" id="STItemTabId">Items</a></li>
                            @*<li role="presentation"><a data-toggle="tab" href="#STBUC" id="STBUCTabId">Basic Unit Conversion</a></li>*@
                        </ul>
                        <br />
                        <div class="tab-content">
                            <div id="STItem" class="tab-pane fade in active">
                                <input type="hidden" id="stockTransferItem_Id" />
                                <dl class="dl-horizontal">
                                    <dt>Item Code</dt>
                                    <dd>
                                        <div class="input-30" id="stockTransferItem_ItemCode"></div>
                                        <div class="input-68" id="stockTransferItem_ItemDescription"></div>

                                        <input type="hidden" id="stockTransferItem_ItemId_data" class="requiredStockTransferItem">
                                        <input type="hidden" id="stockTransferItem_ItemCode_selectedValue" />
                                        <input type="hidden" id="stockTransferItem_ItemDescription_selectedValue" />
                                    </dd>
                                    <dt>Particulars</dt>
                                    <dd><textarea class="form-control textarea-custom requiredStockTransferItem" id="stockTransferItem_Particulars"></textarea></dd>
                                    <dt>Item Inventory Code</dt>
                                    <dd>
                                        <div class="comboBox-wide" id="stockTransferItem_ItemInventoryCode"></div>

                                        <input type="hidden" id="stockTransferItem_ItemInventoryCode_data" class="requiredStockTransferItem">
                                        <input type="hidden" id="stockTransferItem_ItemInventoryCode_selectedValue" />
                                    </dd>
                                    <dt>Quantity</dt>
                                    <dd><input type="text" class="form-control input-50 numberField input-sm requiredStockTransferItem" id="stockTransferItem_Quantity" placeholder="0.00" /></dd>
                                    <dt>Unit</dt>
                                    <dd>
                                        <div class="input-50" id="stockTransferItem_Unit"></div>

                                        <input type="hidden" id="stockTransferItem_Unit_data" class="requiredStockTransferItem">
                                        <input type="hidden" id="stockTransferItem_Unit_selectedValue" />
                                    </dd>
                                    <dt>Cost</dt>
                                    <dd><input type="text" class="form-control input-50 numberField input-sm requiredStockTransferItem" id="stockTransferItem_Cost" placeholder="0.00" /></dd>
                                    <dt>Amount</dt>
                                    <dd><input type="text" class="form-control input-50 numberField input-sm requiredStockTransferItem" id="stockTransferItem_Amount" placeholder="0.00" /></dd>
                                </dl>
                            </div>
                            <div id="STBUC" class="tab-pane fade in">
                                <dl class="dl-horizontal">
                                    <dt>Unit</dt>
                                    <dd>
                                        <div class="input-50" id="stockTransferItem_BUCUnit"></div>

                                        <input type="hidden" id="stockTransferItem_BUCUnit_data" class="requiredStockTransferItem">
                                        <input type="hidden" id="stockTransferItem_BUCUnit_selectedValue" />
                                    </dd>
                                    <dt>Quantity</dt>
                                    <dd><input type="text" class="form-control input-50 numberField input-sm requiredStockTransferItem" id="stockTransferItem_BUCQuantity" placeholder="0.00" /></dd>
                                    <dt>Cost</dt>
                                    <dd><input type="text" class="form-control input-50 numberField input-sm requiredStockTransferItem" id="stockTransferItem_BUCCost" placeholder="0.00" /></dd>
                                </dl>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary btn-sm" id="cmdSaveStockTransferItemButton" onclick="cmdStockTransferItemSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdStockTransferItemDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Journal Detail -->
    <div class="modal fade" id="journalDetail" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="journalModalLabel"> Journal</h4>
                </div>
                <div class="modal-body">
                    <div class="row" align="left">
                        <center>
                            <h4>
                                <span id="loadingJournalGridList"></span>
                            </h4>
                        </center>
                        <div class="col-lg-12">
                            <div id="journalGrid" class="grid" align="left"></div>
                        </div>
                    </div>
                    <br /><br />
                    <div class="row" id="footerModalJournalNavigationButtons">
                        <div class="btn-group col-md-9" id="navigationPageGridJournal">
                            <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridJournal">
                                <span class="glyphicon glyphicon-fast-backward"></span>
                            </button>
                            <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridJournal">
                                <span class="glyphicon glyphicon-step-backward"></span>
                            </button>
                            <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridJournal"></button>
                            <button type="button" class="btn btn-default" id="btnMoveToNextPageGridJournal">
                                <span class="glyphicon glyphicon-step-forward"></span>
                            </button>
                            <button type="button" class="btn btn-default" id="btnMoveToLastPageGridJournal">
                                <span class="glyphicon glyphicon-fast-forward"></span>
                            </button>
                        </div>
                        <div class="col-md-3">
                            <table>
                                <tr>
                                    <td align="right"> <b>Total Debit:</b> </td>
                                    <td style="padding-left: 15px"></td>
                                    <td> <span id="totalDebitInJournal"></span></td>
                                </tr>
                                <tr>
                                    <td align="right"> <b>Total Credit:</b> </td>
                                    <td style="padding-left: 15px"></td>
                                    <td> <span id="totalCreditInJournal"></span></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @*<button class="btn btn-primary btn-sm" id="cmdSaveJournalButton" onclick="cmdJournalSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>*@
                    <button id="cmdJournalDetailCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"> Okay</button>
                </div>
            </div>
        </div>
    </div>

    <!-- ============================================== -->
    <!-- Stock-Transfer Items Delete Modal Confirmation -->
    <!-- ============================================== -->
    <div class="modal fade" id="deleteStockTransferItemsConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Stock-Transfer Item <i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteStockTransferItems" onclick="cmdStockTransferItemsConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteStockTransferItemsCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- =============================== -->
    <!-- Stock Transfer Item Query Modal -->
    <!-- =============================== -->
    <div class="modal fade" id="stockTransferItemsItemQuery" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Item Query</h4>
                </div>
                <div class="modal-body">
                    <div class="panel panel-default" id="itemQueryPanel">
                        <div class="panel-heading">
                            <div class="input-group input-group-sm input-50">
                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                <input type="text" class="form-control input-sm" id="itemQueryFilter" placeholder="Search">
                            </div>
                        </div>
                        <div class="panel-body">
                            <div id="itemQueryGrid" class="grid"></div>
                        </div>
                        <div class="panel-footer">
                            <div class="row">
                                <div class="btn-group col-md-7" id="naviagtionPageGridItemQuery">
                                    <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridItemQuery">
                                        <span class="glyphicon glyphicon-fast-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridItemQuery">
                                        <span class="glyphicon glyphicon-step-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridItemQuery"></button>
                                    <button type="button" class="btn btn-default" id="btnMoveToNextPageGridItemQuery">
                                        <span class="glyphicon glyphicon-step-forward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" id="btnMoveToLastPageGridItemQuery">
                                        <span class="glyphicon glyphicon-fast-forward"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <center>
                        <span id="loadingItemQuery"></span>
                    </center>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>


    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var stockTransfers;
        var branches;
        var STDate;
        var cboBranch;
        var cboToBranch;
        var cboPreparedBy;
        var cboCheckedBy;
        var cboApprovedBy;

        var itemQueryItemsCollection;
        var itemQueryGrid;

        var btnFirstPageGridItemQuery;
        var btnPreviousPageGridItemQuery;
        var btnNextPageGridItemQuery;
        var btnLastPageGridItemQuery;
        var btnCurrentPageGridItemQuery;

        // Item Query Stock Transfer Item
        function cmdItemQueryStockTransferItem_OnClick() {
            $('#stockTransferItemsItemQuery').modal({
                show: true,
                backdrop: 'static'
            });


            $("#itemQueryPanel").hide();
            $("#loadingItemQuery").show();
            document.getElementById("loadingItemQuery").innerHTML = "<b><i class='fa fa-spinner fa-spin'></i></b>";

            setTimeout(function() {
                createFlexGridForItemQuery();
                window.createFlexGridForItemQuery = function() {
                    return true;
                }

                itemQueryItemsCollection = new wijmo.collections.CollectionView(getArticleInventoryForItemQuery());
                itemQueryItemsCollection.canFilter = true;
                itemQueryItemsCollection.pageSize = 7;

                var filterText = '';
                $('#itemQueryFilter').keyup(function () {
                    filterText = this.value.toLowerCase();
                    itemQueryItemsCollection.refresh();
                });
                itemQueryItemsCollection.filter = function (item) {
                    return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || (item.InventoryCode.toLowerCase().indexOf(filterText) > -1);
                }
                itemQueryItemsCollection.collectionChanged.addHandler(function (sender, args) {
                    updateNavigateButtonsItemQuery();
                });

                // Flex Grid for Purchase Order Line
                itemQueryGrid.itemsSource = itemQueryItemsCollection;
                itemQueryGrid.trackChanges = true;
            }, 1000)
        }

        // get article inventory for stock transfer item query
        function getArticleInventoryForItemQuery() {
            var items = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleInventoryLocked',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (articleInventoryItemsResult) {
                    $("#itemQueryPanel").show();
                    $("#loadingItemQuery").hide();

                    for(i = 0; i < articleInventoryItemsResult.length; i++) {
                        items.push({
                            Id: articleInventoryItemsResult[i]["Id"],
                            BranchId: articleInventoryItemsResult[i]["BranchId"],
                            ArticleId: articleInventoryItemsResult[i]["ArticleId"],
                            ManualArticleCode: articleInventoryItemsResult[i]["ManualArticleCode"],
                            Article: articleInventoryItemsResult[i]["Article"],
                            InventoryCode: articleInventoryItemsResult[i]["InventoryCode"],
                            Price: articleInventoryItemsResult[i]["Price"],
                            Quantity: articleInventoryItemsResult[i]["Quantity"],
                            Cost: articleInventoryItemsResult[i]["Cost"],
                            Amount: articleInventoryItemsResult[i]["Amount"],
                            Particulars: articleInventoryItemsResult[i]["Particulars"],
                            UnitId: articleInventoryItemsResult[i]["UnitId"],
                            Unit: articleInventoryItemsResult[i]["Unit"],
                            Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='pickToApplyOnClick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                        });
                    }
                }
            });

            return items;
        }

        // creates flexgrid for the item query
        function createFlexGridForItemQuery() {
            itemQueryItemsCollection = new wijmo.collections.CollectionView(getArticleInventoryForItemQuery());
            itemQueryItemsCollection.canFilter = true;
            itemQueryItemsCollection.pageSize = 7;

            var filterText = '';
            $('#itemQueryFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryItemsCollection.refresh();
            });
            itemQueryItemsCollection.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                || (item.Article.toLowerCase().indexOf(filterText) > -1)
                || (item.InventoryCode.toLowerCase().indexOf(filterText) > -1);
            }
            itemQueryItemsCollection.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItemQuery();
            });

            // Flex Grid for Purchase Order Line
            itemQueryGrid = new wijmo.grid.FlexGrid('#itemQueryGrid');
            itemQueryGrid.initialize({
                columns: [
                            {
                                "header": "Code",
                                "binding": "ManualArticleCode",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "1.5*"
                            },
                            {
                                "header": "Inventory",
                                "binding": "InventoryCode",
                                "allowSorting": true,
                                "width": "1.3*"
                            },
                            {
                                "header": "Price",
                                "binding": "Price",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": "0.5*"
                            },
                            {
                                "header": "Pick",
                                "binding": "Pick",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryItemsCollection,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryGrid.trackChanges = true;

            //Navigation button for account
            btnFirstPageGridItemQuery = document.getElementById('btnMoveToFirstPageGridItemQuery');
            btnPreviousPageGridItemQuery = document.getElementById('btnMoveToPreviousPageGridItemQuery');
            btnNextPageGridItemQuery = document.getElementById('btnMoveToNextPageGridItemQuery');
            btnLastPageGridItemQuery = document.getElementById('btnMoveToLastPageGridItemQuery');
            btnCurrentPageGridItemQuery = document.getElementById('btnCurrentPageGridItemQuery');

            updateNavigateButtonsItemQuery();

            btnFirstPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToFirstPage();
                updateNavigateButtonsItemQuery();
            });
            btnPreviousPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToPreviousPage();
                updateNavigateButtonsItemQuery();
            });
            btnNextPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToNextPage();
                updateNavigateButtonsItemQuery();
            });
            btnLastPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToLastPage();
                updateNavigateButtonsItemQuery();
            });
        }

        // Navigation Buttons for Account
        function updateNavigateButtonsItemQuery() {
            if (itemQueryItemsCollection.pageSize <= 0) {
                document.getElementById('naviagtionPageGridItemQuery').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridItemQuery').style.display = 'block';
            if (itemQueryItemsCollection.pageIndex === 0) {
                btnFirstPageGridItemQuery.setAttribute('disabled', 'disabled');
                btnPreviousPageGridItemQuery.setAttribute('disabled', 'disabled');
                btnNextPageGridItemQuery.removeAttribute('disabled');
                btnLastPageGridItemQuery.removeAttribute('disabled');
            } else if (itemQueryItemsCollection.pageIndex === (itemQueryItemsCollection.pageCount - 1)) {
                btnFirstPageGridItemQuery.removeAttribute('disabled');
                btnPreviousPageGridItemQuery.removeAttribute('disabled');
                btnNextPageGridItemQuery.setAttribute('disabled', 'disabled');
                btnLastPageGridItemQuery.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridItemQuery.removeAttribute('disabled');
                btnPreviousPageGridItemQuery.removeAttribute('disabled');
                btnNextPageGridItemQuery.removeAttribute('disabled');
                btnLastPageGridItemQuery.removeAttribute('disabled');
            }
            btnCurrentPageGridItemQuery.innerHTML = (itemQueryItemsCollection.pageIndex + 1) + ' / ' + itemQueryItemsCollection.pageCount;
        }

        // pick
        function pickToApplyOnClick() {
            itemQueryItemsCollection.editItem(itemQueryItemsCollection.currentItem);
            $('#stockTransferItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveStockTransferItemButton").prop("disabled", false);
            $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);

            $('.requiredStockTransfer').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            var item = itemQueryItemsCollection.currentEditItem;
            document.getElementById('stockTransferItem_Id').value = "0";
            document.getElementById('stockTransferItem_ItemId_data').value = item.ArticleId;
            document.getElementById('stockTransferItem_ItemCode_selectedValue').value = item.ManualArticleCode;
            document.getElementById('stockTransferItem_ItemDescription_selectedValue').value = item.Article;
            document.getElementById('stockTransferItem_Particulars').value = "NA";
            document.getElementById('stockTransferItem_ItemInventoryCode_data').value = item.Id;
            document.getElementById('stockTransferItem_ItemInventoryCode_selectedValue').value = item.InventoryCode;
            document.getElementById('stockTransferItem_Quantity').value = "0";
            document.getElementById('stockTransferItem_Unit_data').value = item.UnitId;
            document.getElementById('stockTransferItem_Unit_selectedValue').value = item.Unit;
            document.getElementById('stockTransferItem_Cost').value = item.Cost;
            document.getElementById('stockTransferItem_Amount').value = item.Amount;

            getArticleItemForManualCodeAndComponent();
        }

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        // =======================
        // GET Stock Transfer by Id
        // =======================
        function getStockTransferById() {
            stockTransfers = new wijmo.collections.ObservableArray;
            var stockTransferId = getParam("StockTransferId");
            if (document.location.search.length == 0) {
                document.getElementById('stockTransfer_Particulars').value = "NA";
                document.getElementById('stockTransfer_ManualSTNumber').value = "NA";
                document.getElementById('stockTransfer_ToBranch_data').value = '@ViewData["BranchId"]';
                document.getElementById('stockTransfer_ToBranch_selectedValue').value = '@ViewData["Branch"]';

                NProgress.done();
            } else {
                NProgress.start();
                $.ajax({
                    url: '/api/stockTransfer/' + stockTransferId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        document.getElementById('stockTransfer_Branch_data').value = Results.BranchId;
                        document.getElementById('stockTransfer_Branch_selectedValue').value = Results.Branch;
                        document.getElementById('stockTransfer_STNumber').value = Results.STNumber;
                        document.getElementById('stockTransfer_STNumber_Display').value = Results.STNumber;
                        document.getElementById('stockTransfer_STDate_data').value = Results.STDate;
                        var STDate_date = Results.STDate;
                        STDate.dispose();
                        STDate = new wijmo.input.InputDate('#stockTransfer_STDate', {
                            format: 'MM/dd/yyyy',
                            value: new Date(STDate_date),
                            mask: '99/99/9999',
                            onValueChanged: function () {
                                document.getElementById('stockTransfer_STDate_data').value = this.value.toLocaleDateString();
                            }
                        });
                        document.getElementById('stockTransfer_ToBranch_data').value = Results.ToBranchId;
                        document.getElementById('stockTransfer_ToBranch_selectedValue').value = Results.ToBranch;
                        document.getElementById('stockTransfer_Particulars').value = Results.Particulars;
                        document.getElementById('stockTransfer_ManualSTNumber').value = Results.ManualSTNumber;
                        document.getElementById('stockTransfer_PreparedBy_data').value = Results.PreparedById;
                        document.getElementById('stockTransfer_PreparedBy_selectedValue').value = Results.PreparedBy
                        document.getElementById('stockTransfer_CheckedBy_data').value = Results.CheckedById;
                        document.getElementById('stockTransfer_CheckedBy_selectedValue').value = Results.CheckedBy;
                        document.getElementById('stockTransfer_ApprovedBy_data').value = Results.ApprovedById;
                        document.getElementById('stockTransfer_ApprovedBy_selectedValue').value = Results.ApprovedBy;
                        //document.getElementById('StockTransfer_Lock').checked = Results.IsLocked;
                        document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                        document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                        document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                        document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                        document.getElementById('StockTransfer_IsLocked').value = Results.IsLocked;

                        NProgress.done();

                        if (Results.IsLocked == true) {
                            document.getElementById('stockTransfer_Particulars').disabled = true;
                            document.getElementById('stockTransfer_ManualSTNumber').disabled = true;

                            var STDate_date = Results.STDate;
                            STDate.dispose();
                            STDate = new wijmo.input.InputDate('#stockTransfer_STDate', {
                                disabled: true,
                                format: 'MM/dd/yyyy',
                                value: new Date(STDate_date),
                                mask: '99/99/9999',
                                onValueChanged: function () {
                                    document.getElementById('stockTransfer_STDate_data').value = this.value.toLocaleDateString();
                                }
                            });

                            $("#cmdStockTransferJournal").prop("disabled", false);
                            $("#cmdStockTransferSaveLock").prop("disabled", true);
                            //$("#cmdStockTransferSave").prop("disabled", true);
                            $("#cmdStockTransferEdit").prop("disabled", false);
                            $("#cmdStockTransferPrint").prop("disabled", false);
                            $('#btnAddStockTransferItem').prop('disabled', true);
                            $('#btnItemQueryStockTransferItem').prop('disabled', true);

                            var canUnLock = "@ViewData["CanUnlock"]";
                            if (canUnLock == "True") {
                                $("#cmdStockTransferEdit").prop("disabled", false)
                            } else if (canUnLock == "False") {
                                $("#cmdStockTransferEdit").prop("disabled", true)
                            } else {
                                $("#cmdStockTransferEdit").prop("disabled", true)
                            }
                        } else {
                            document.getElementById('stockTransfer_Particulars').disabled = false;
                            document.getElementById('stockTransfer_ManualSTNumber').disabled = false;
                            $('#btnItemQueryStockTransferItem').prop('disabled', false);

                            var STDate_date = Results.STDate;
                            STDate.dispose();
                            STDate = new wijmo.input.InputDate('#stockTransfer_STDate', {
                                disabled: false,
                                format: 'MM/dd/yyyy',
                                value: new Date(STDate_date),
                                mask: '99/99/9999',
                                onValueChanged: function () {
                                    document.getElementById('stockTransfer_STDate_data').value = this.value.toLocaleDateString();
                                }
                            });

                            $("#cmdStockTransferJournal").prop("disabled", true);
                            $("#cmdStockTransferSaveLock").prop("disabled", false);
                            //$("#cmdStockTransferSave").prop("disabled", true);
                            $("#cmdStockTransferEdit").prop("disabled", true);
                            $("#cmdStockTransferPrint").prop("disabled", true);
                            $('#btnAddStockTransferItem').prop('disabled', false);

                            var canLock = "@ViewData["CanLock"]";
                            if (canLock == "True") {
                                $("#cmdStockTransferSaveLock").prop("disabled", false)
                            } else if (canLock == "False") {
                                $("#cmdStockTransferSaveLock").prop("disabled", true)
                            } else {
                                $("#cmdStockTransferSaveLock").prop("disabled", true)
                            }

                            var canAdd = "@ViewData["CanAdd"]";
                            if (canAdd == "True") {
                                $("#btnAddStockTransferItem").prop("disabled", false)
                                $("#btnItemQueryStockTransferItem").prop("disabled", false)
                            } else if (canAdd == "False") {
                                $("#btnAddStockTransferItem").prop("disabled", true)
                                $("#btnItemQueryStockTransferItem").prop("disabled", true)
                            } else {
                                $("#btnAddStockTransferItem").prop("disabled", true)
                                $("#btnItemQueryStockTransferItem").prop("disabled", true)
                            }
                        }

                        var canPrint = "@ViewData["CanPrint"]";
                        if (canPrint == "True") {
                            $("#cmdStockTransferPrint").prop("disabled", false)
                        } else if (canPrint == "False") {
                            $("#cmdStockTransferPrint").prop("disabled", true)
                        } else {
                            $("#cmdStockTransferPrint").prop("disabled", true)
                        }

                        getBranchesForComboBox();
                        getUsersForComboBox();
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            }
            return stockTransfers;
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var stockTransferId = getParam("StockTransferId");
                        var branchId = @ViewData["BranchId"];
                        if (document.location.search.length == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    document.getElementById('stockTransfer_Branch_data').value = results.Id;
                                    document.getElementById('stockTransfer_Branch_selectedValue').value = results.Branch;
                                    createCboBranch(branches);
                                    createCboToBranch(branches);
                                }
                            });
                        } else {
                            createCboBranch(branches);
                            createCboToBranch(branches);
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
                        );
            return branches;
        }


        // ======================
        // Combo Box for Branches
        // ======================
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#stockTransfer_Branch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('stockTransfer_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransfer_Branch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });
        }

        // =======================
        // Combo Box for ToBranche
        // =======================
        function createCboToBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                if (document.getElementById('StockTransfer_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboToBranch.dispose();
            cboToBranch = new wijmo.input.ComboBox('#stockTransfer_ToBranch', {
                disabled: disabled,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: true,
                selectedValue: document.getElementById('stockTransfer_ToBranch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransfer_ToBranch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });

            document.getElementById("stockTransfer_ToBranch_data").value = branchCollections.items[cboToBranch.selectedIndex].BranchId
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        var stockTransferId = getParam("StockTransferId");
                        var branchId = @ViewData["BranchId"];
                        if (document.location.search.length == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        users.push({
                                            UserId: results.Id,
                                            UserFullName: results.FullName
                                        });
                                    }

                                    document.getElementById('stockTransfer_PreparedBy_data').value = results.Id;
                                    document.getElementById('stockTransfer_CheckedBy_data').value = results.Id;
                                    document.getElementById('stockTransfer_ApprovedBy_data').value = results.Id;

                                    document.getElementById('stockTransfer_PreparedBy_selectedValue').value = results.FullName;
                                    document.getElementById('stockTransfer_CheckedBy_selectedValue').value = results.FullName;
                                    document.getElementById('stockTransfer_ApprovedBy_selectedValue').value = results.FullName;

                                    createCboUserPreparedBy(users);
                                    createCboUserCheckedBy(users);
                                    createCboUserApprovedBy(users);
                                }
                            });
                        } else {
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);

                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return users;
        }

        // =================================
        // Combo Box for Users - Prepared By
        // =================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#stockTransfer_PreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('stockTransfer_PreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransfer_PreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // ================================
        // Combo Box for Users - Checked By
        // ================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            if (document.getElementById('StockTransfer_IsLocked').value == 'true') {
                cboCheckedBy.dispose();
                cboCheckedBy = new wijmo.input.ComboBox('#stockTransfer_CheckedBy', {
                    disabled: true,
                    placeholder: "Select User",
                    itemsSource: userList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('stockTransfer_CheckedBy_selectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#stockTransfer_CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                    }
                });
            } else if (document.getElementById('StockTransfer_IsLocked').value == 'false') {
                cboCheckedBy.dispose();
                cboCheckedBy = new wijmo.input.ComboBox('#stockTransfer_CheckedBy', {
                    disabled: false,
                    placeholder: "Select User",
                    itemsSource: userList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('stockTransfer_CheckedBy_selectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#stockTransfer_CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                    }
                });
            } else {
                cboCheckedBy.dispose();
                cboCheckedBy = new wijmo.input.ComboBox('#stockTransfer_CheckedBy', {
                    placeholder: "Select User",
                    itemsSource: userList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('stockTransfer_CheckedBy_selectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#stockTransfer_CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                    }
                });
            }
        }

        // ==================================
        // Combo Box for Users - Approved By
        // ==================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            if (document.getElementById('StockTransfer_IsLocked').value == 'true') {
                cboApprovedBy.dispose();
                cboApprovedBy = new wijmo.input.ComboBox('#stockTransfer_ApprovedBy', {
                    disabled: true,
                    placeholder: "Select User",
                    itemsSource: userList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('stockTransfer_ApprovedBy_selectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#stockTransfer_ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                    }
                });
            } else if (document.getElementById('StockTransfer_IsLocked').value == 'false') {
                cboApprovedBy.dispose();
                cboApprovedBy = new wijmo.input.ComboBox('#stockTransfer_ApprovedBy', {
                    disabled: false,
                    placeholder: "Select User",
                    itemsSource: userList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('stockTransfer_ApprovedBy_selectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#stockTransfer_ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                    }
                });
            } else {
                cboApprovedBy.dispose();
                cboApprovedBy = new wijmo.input.ComboBox('#stockTransfer_ApprovedBy', {
                    placeholder: "Select User",
                    itemsSource: userList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('stockTransfer_ApprovedBy_selectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#stockTransfer_ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                    }
                });
            }
        }

        // =====================================================
        // Function with leading zeroes to display the ST Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while (pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // ==================
        // Add Stock Transfer
        // ==================
        //function btnStockTransferSave_OnClick() {
        //    var stockTransferObject = new Object();
        //    var stockTransferId = getParam("StockTransferId");
        //    stockTransferObject.BranchId = document.getElementById('stockTransfer_Branch_data').value;
        //    stockTransferObject.STNumber = document.getElementById('stockTransfer_STNumber_Display').value;
        //    stockTransferObject.STDate = document.getElementById('stockTransfer_STDate_data').value;
        //    stockTransferObject.ToBranchId = document.getElementById('stockTransfer_ToBranch_data').value;
        //    stockTransferObject.Particulars = document.getElementById('stockTransfer_Particulars').value;
        //    stockTransferObject.ManualSTNumber = document.getElementById('stockTransfer_ManualSTNumber').value;
        //    stockTransferObject.PreparedById = document.getElementById('stockTransfer_PreparedBy_data').value;
        //    stockTransferObject.CheckedById = document.getElementById('stockTransfer_CheckedBy_data').value;
        //    stockTransferObject.ApprovedById = document.getElementById('stockTransfer_ApprovedBy_data').value;
        //    var data = JSON.stringify(stockTransferObject);

        //    if (document.getElementById('stockTransfer_Branch_data').value == '') {
        //        document.getElementById("stockTransfer_Branch").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("stockTransfer_Branch").style.border = "1px solid #C8C8C8";
        //    }

        //    if (document.getElementById('stockTransfer_STDate_data').value == '') {
        //        document.getElementById("stockTransfer_STDate").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("stockTransfer_STDate").style.border = "1px solid #C8C8C8";
        //    }

        //    if (document.getElementById('stockTransfer_ToBranch_data').value == '') {
        //        document.getElementById("stockTransfer_ToBranch").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("stockTransfer_ToBranch").style.border = "1px solid #C8C8C8";
        //    }

        //    if (document.getElementById('stockTransfer_PreparedBy_data').value == '') {
        //        document.getElementById("stockTransfer_PreparedBy").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("stockTransfer_PreparedBy").style.border = "1px solid #C8C8C8";
        //    }

        //    if (document.getElementById('stockTransfer_CheckedBy_data').value == '') {
        //        document.getElementById("stockTransfer_CheckedBy").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("stockTransfer_CheckedBy").style.border = "1px solid #C8C8C8";
        //    }

        //    if (document.getElementById('stockTransfer_ApprovedBy_data').value == '') {
        //        document.getElementById("stockTransfer_ApprovedBy").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("stockTransfer_ApprovedBy").style.border = "1px solid #C8C8C8";
        //    }

        //    var isValid = true;
        //    $('.requiredStockTransfer').each(function () {
        //        if ($.trim($(this).val()) == '') {
        //            isValid = false;
        //            $(this).css({
        //                "border": "1px solid red"
        //            });
        //        }
        //        else {
        //            $(this).css({
        //                "border": "",
        //            });
        //        }
        //    });

        //    if (isValid == false) {
        //        toastr.error("Invalid Entry");
        //        e.preventDefault();
        //    }
        //    else {
        //        if (document.location.search.length == 0) {
        //            $.ajax({
        //                type: "POST",
        //                url: '/api/addStockTransfer',
        //                contentType: "application/json; charset=utf-8",
        //                dataType: "json",
        //                data: data,
        //                success: function(id){
        //                    if(id > 0) {
        //                        $("#cmdStockTransferJournal").prop("disabled", true);
        //                        $("#cmdStockTransferSaveLock").prop("disabled", true);
        //                        $("#cmdStockTransferSave").prop("disabled", true);
        //                        $("#cmdStockTransferEdit").prop("disabled", true);
        //                        $("#cmdStockTransferPrint").prop("disabled", true);
        //                        $("#cmdStockTransferClose").prop("disabled", true);
        //                        toastr.success("Successfully Saved");
        //                        window.location = '/Software/StockTransferDetail?StockTransferId=' + id;
        //                    } else {
        //                        window.history.back();

        //                    }
        //                }
        //            });
        //        } else {
        //            $.ajax({
        //                type: "PUT",
        //                url: '/api/updateStockTransfer/' + stockTransferId,
        //                contentType: "application/json; charset=utf-8",
        //                dataType: "json",
        //                data: data,
        //                statusCode: {
        //                    200: function () {
        //                        $("#cmdStockTransferJournal").prop("disabled", true);
        //                        $("#cmdStockTransferSaveLock").prop("disabled", true);
        //                        $("#cmdStockTransferSave").prop("disabled", true);
        //                        $("#cmdStockTransferEdit").prop("disabled", true);
        //                        $("#cmdStockTransferPrint").prop("disabled", true);
        //                        $("#cmdStockTransferClose").prop("disabled", true);
        //                        toastr.success("Successfully Updated");
        //                        window.setTimeout(function () {
        //                            location.reload()
        //                        }, 1000);
        //                    },
        //                    404: function () {
        //                        toastr.error("Can't Save");
        //                        $("#cmdStockTransferJournal").prop("disabled", false);
        //                        $("#cmdStockTransferSaveLock").prop("disabled", false);
        //                        $("#cmdStockTransferSave").prop("disabled", false);
        //                        $("#cmdStockTransferEdit").prop("disabled", false);
        //                        $("#cmdStockTransferPrint").prop("disabled", false);
        //                        $("#cmdStockTransferClose").prop("disabled", false);
        //                    },
        //                    400: function () {
        //                        toastr.error("Bad Request");
        //                        $("#cmdStockTransferJournal").prop("disabled", false);
        //                        $("#cmdStockTransferSaveLock").prop("disabled", false);
        //                        $("#cmdStockTransferSave").prop("disabled", false);
        //                        $("#cmdStockTransferEdit").prop("disabled", false);
        //                        $("#cmdStockTransferPrint").prop("disabled", false);
        //                        $("#cmdStockTransferClose").prop("disabled", false);
        //                    }
        //                }
        //            });
        //        }
        //    }
        //}

        // ==========================
        // Stock Transfer Save - Lock
        // ==========================
        function btnStockTransferSaveLock_OnClick() {
            var stockTransferObject = new Object();
            var stockTransferId = getParam("StockTransferId");
            stockTransferObject.BranchId = document.getElementById('stockTransfer_Branch_data').value;
            stockTransferObject.STNumber = document.getElementById('stockTransfer_STNumber_Display').value;
            stockTransferObject.STDate = document.getElementById('stockTransfer_STDate_data').value;
            stockTransferObject.ToBranchId = document.getElementById('stockTransfer_ToBranch_data').value;
            stockTransferObject.Particulars = document.getElementById('stockTransfer_Particulars').value;
            stockTransferObject.ManualSTNumber = document.getElementById('stockTransfer_ManualSTNumber').value;
            stockTransferObject.PreparedById = document.getElementById('stockTransfer_PreparedBy_data').value;
            stockTransferObject.CheckedById = document.getElementById('stockTransfer_CheckedBy_data').value;
            stockTransferObject.ApprovedById = document.getElementById('stockTransfer_ApprovedBy_data').value;
            stockTransferObject.IsLocked = true;
            var data = JSON.stringify(stockTransferObject);

            if (document.getElementById('stockTransfer_Branch_data').value == '') {
                document.getElementById("stockTransfer_Branch").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_Branch").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('stockTransfer_STDate_data').value == '') {
                document.getElementById("stockTransfer_STDate").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_STDate").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('stockTransfer_ToBranch_data').value == '') {
                document.getElementById("stockTransfer_ToBranch").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_ToBranch").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('stockTransfer_PreparedBy_data').value == '') {
                document.getElementById("stockTransfer_PreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_PreparedBy").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('stockTransfer_CheckedBy_data').value == '') {
                document.getElementById("stockTransfer_CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_CheckedBy").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('stockTransfer_ApprovedBy_data').value == '') {
                document.getElementById("stockTransfer_ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransfer_ApprovedBy").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredStockTransfer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            } else {
                document.getElementById('cmdStockTransferSaveLock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $("#cmdStockTransferJournal").prop("disabled", true);
                $("#cmdStockTransferSaveLock").prop("disabled", true);
                //$("#cmdStockTransferSave").prop("disabled", true);
                $("#cmdStockTransferEdit").prop("disabled", true);
                $("#cmdStockTransferPrint").prop("disabled", true);
                $("#cmdStockTransferClose").prop("disabled", true);

                $.ajax({
                    type: "PUT",
                    url: '/api/updateStockTransfer/' + stockTransferId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function () {
                            toastr.error("Not Found");
                            $("#cmdStockTransferClose").prop("disabled", false);
                        },
                        400: function () {
                            toastr.error("Bad Request");
                            $("#cmdStockTransferClose").prop("disabled", false);
                        }
                    }
                });
            }
        }

        // ============================
        // Edit Stock Transfer - Unlock
        // ============================
        function btnStockTransferEdit_OnClick() {
            var stockTransferObject = new Object();
            var stockTransferId = getParam("StockTransferId");
            stockTransferObject.IsLocked = false;
            var data = JSON.stringify(stockTransferObject);

            document.getElementById('cmdStockTransferEdit').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $("#cmdStockTransferJournal").prop("disabled", true);
            $("#cmdStockTransferSaveLock").prop("disabled", true);
            //$("#cmdStockTransferSave").prop("disabled", true);
            $("#cmdStockTransferEdit").prop("disabled", true);
            $("#cmdStockTransferPrint").prop("disabled", true);
            $("#cmdStockTransferClose").prop("disabled", true);

            $.ajax({
                type: "PUT",
                url: '/api/updateStockTransferIsLocked/' + stockTransferId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: data,
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $("#cmdStockTransferClose").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#cmdStockTransferClose").prop("disabled", false);
                    }
                }
            });
        }

        // ========
        // Print ST
        // ========
        function btnStockTransferPrint_OnClick() {
            var stockTransferId = getParam("StockTransferId");
            window.location = "/RepStockTransfer/StockTransfer?StockTransferId=" + stockTransferId;
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            var stockTransferId = getParam("StockTransferId");
            if (document.location.search.length == 0) {
                $('#cmdStockTransferJournal').hide();
                $('#cmdStockTransferSaveLock').hide();
                //$('#cmdStockTransferSave').show();
                $('#cmdStockTransferEdit').hide();
                $("#cmdStockTransferPrint").prop("disabled", true);
                $('#btnAddStockTransferItem').prop('disabled', true);

            } else {
                $('#cmdStockTransferSaveLock').show();
                //$('#cmdStockTransferSave').hide();
                $('#cmdStockTransferEdit').show();
            }

            document.getElementById('stockTransfer_STNumber_Display').disabled = true;
            //document.getElementById('StockTransfer_Lock').disabled = true;

            getStockTransferById();

            var d = new Date();
            document.getElementById("stockTransfer_STDate_data").value = [d.getMonth() + 1, d.getDate(), d.getFullYear()].join('/');
            STDate = new wijmo.input.InputDate('#stockTransfer_STDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('stockTransfer_STDate_data').value = this.value.toLocaleDateString();
                }
            });

            cboBranch = new wijmo.input.ComboBox('#stockTransfer_Branch');
            cboPreparedBy = new wijmo.input.ComboBox('#stockTransfer_PreparedBy');
            cboCheckedBy = new wijmo.input.ComboBox('#stockTransfer_CheckedBy');
            cboApprovedBy = new wijmo.input.ComboBox('#stockTransfer_ApprovedBy');
            cboToBranch = new wijmo.input.ComboBox('#stockTransfer_ToBranch');

            var stockTransferId = getParam("StockTransferId");
            if (document.location.search.length == 0) {
                getBranchesForComboBox();
                getUsersForComboBox();

                if (document.getElementById('stockTransfer_STNumber').value == 0) {
                    document.getElementById('stockTransfer_STNumber_Display').value = "0000000001";
                }

                document.getElementById('stockTransfer_STNumber').value = 0;
                //document.getElementById('journalVoucher_No_Display').value = "000-000000";
                var stockTransfers = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/stockTransferLastSTNumber',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results != null) {
                            var ST_Number = parseInt(Results.STNumber);
                            var ST_Number_PlusOne = 0000000001;
                            var ST_Num_Results = ST_Number + ST_Number_PlusOne;
                            //var JV_Number_Display = JV_Num_Results.toString().replace(/(\d{3})(\d+)/, '$1-$2');

                            document.getElementById('stockTransfer_STNumber').value = zerofill(ST_Num_Results, 10);
                            document.getElementById('stockTransfer_STNumber_Display').value = zerofill(ST_Num_Results, 10);
                        }
                    }
                });
            }

            //$(document).ajaxStop(function () {
            //    if (document.location.search.length == 0) {
            //        btnStockTransferSave_OnClick();
            //        window.btnStockTransferSave_OnClick = function () {
            //            return true;
            //        }
            //    }
            //});
        });
    </script>

    <!-- ============= -->
    <!-- Items Scripts -->
    <!-- ============= -->
    <script type="text/javascript">
        // ==========================
        // Global Variables for Items
        // ==========================
        var items;
        var itemGrid;

        var btnFirstPageGridItem;
        var btnPreviousPageGridItem;
        var btnNextPageGridItem;
        var btnLastPageGridItem;
        var btnCurrentPageGridItem;

        var articleItems;
        var cboManualCodeArticleItems;
        var cboItemDescriptionArticleItems;

        var inventories;
        var cboInventoryCode;

        // ============================
        // GET Stock Transfer Item List
        // ============================
        function getItem() {
            var items = new wijmo.collections.ObservableArray;
            var stockTransferId = getParam("StockTransferId");
            if (document.location.search.length > 0) {
                NProgress.start();
                $.ajax({
                    url: '/api/listStockTransferItemBySTId/' + stockTransferId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        NProgress.done();
                        if (Results.length > 0) {
                            var stockTransfers = new wijmo.collections.ObservableArray;
                            var stockTransferId = getParam("StockTransferId");
                            $.ajax({
                                url: '/api/stockTransfer/' + stockTransferId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (StockTransferResults) {
                                    if (StockTransferResults.length > 0) {
                                        stockTransfers.push({
                                            Id: StockTransferResults.Id,
                                            IsLocked: StockTransferResults.IsLocked
                                        });
                                    }

                                    var canEdit = "@ViewData["CanEdit"]";
                                    var editDisabled = "disabled";

                                    if (canEdit == "True") {
                                        editDisabled = "";
                                    } else if (canEdit == "False") {
                                        editDisabled = "disabled";
                                    } else {
                                        editDisabled = "disabled";
                                    }

                                    var canDelete = "@ViewData["CanDelete"]";
                                    var deleteDisabled = "disabled";

                                    if (canDelete == "True") {
                                        deleteDisabled = "";
                                    } else if (canDelete == "False") {
                                        deleteDisabled = "disabled";
                                    } else {
                                        deleteDisabled = "disabled";
                                    }

                                    var btnEditId;
                                    var btnDeleteId;
                                    if (StockTransferResults.IsLocked == true) {
                                        btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditStockTransferItem_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                        btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteStockTransferItem_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                                    } else {
                                        btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditStockTransferItem_OnClick()' " + editDisabled + "><i class='fa fa-edit'></i> Edit</button>";
                                        btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteStockTransferItem_OnClick()'" + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                                    }

                                    for (i = 0; i < Results.length; i++) {
                                        items.push({
                                            EditId: btnEditId,
                                            DeleteId: btnDeleteId,
                                            Id: Results[i]["Id"],
                                            STId: Results[i]["STId"],
                                            ST: Results[i]["ST"],
                                            ItemId: Results[i]["ItemId"],
                                            ItemCode: Results[i]["ItemCode"],
                                            Item: Results[i]["Item"],
                                            ItemInventoryId: Results[i]["ItemInventoryId"],
                                            ItemInventory: Results[i]["ItemInventory"],
                                            Particulars: Results[i]["Particulars"],
                                            UnitId: Results[i]["UnitId"],
                                            Unit: Results[i]["Unit"],
                                            Quantity: Results[i]["Quantity"],
                                            Cost: Results[i]["Cost"],
                                            Amount: Results[i]["Amount"],
                                            BaseUnitId: Results[i]["BaseUnitId"],
                                            BaseUnit: Results[i]["BaseUnit"],
                                            BaseQuantity: Results[i]["BaseQuantity"],
                                            BaseCost: Results[i]["BaseCost"],
                                        });
                                    }
                                }
                            });
                        }
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            }
            return items;
        }

        // ======================================
        // GET Item Id, Manual Code and Component
        // ======================================
        function getArticleItemForManualCodeAndComponent() {
            var articleInventories = new wijmo.collections.ObservableArray();
            var branchId = document.getElementById('stockTransfer_Branch_data').value;

            $.ajax({
                url: '/api/listArticleInventoryBybranchId/' + branchId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (articleInventoryResults) {
                    if (articleInventoryResults.length > 0) {
                        for (i = 0; i < articleInventoryResults.length; i++) {
                            articleInventories.push({
                                Id: articleInventoryResults[i]["Id"],
                                BranchId: articleInventoryResults[i]["BranchId"],
                                ItemId: articleInventoryResults[i]["ArticleId"],
                                ItemDescription: articleInventoryResults[i]["Article"],
                                InventoryCode: articleInventoryResults[i]["InventoryCode"],
                                Quantity: articleInventoryResults[i]["Quantity"],
                                Cost: articleInventoryResults[i]["Cost"],
                                Amount: articleInventoryResults[i]["Amount"],
                                Particulars: articleInventoryResults[i]["Particulars"],
                                ItemCode: articleInventoryResults[i]["ManualArticleCode"],
                                Unit: articleInventoryResults[i]["Unit"],
                                UnitId: articleInventoryResults[i]["UnitId"]

                            });
                        }

                        createCboForManualCode(articleInventories);
                        createCboForItemDescription(articleInventories);
                        createCboForInventoryCode(articleInventories);
                    } else {
                        createCboForManualCode(articleInventories);
                        createCboForItemDescription(articleInventories);
                        createCboForInventoryCode(articleInventories);
                    }
                }
            });
        }

        // ===============
        // CBO Manual Code
        // ===============
        function createCboForManualCode(articleItems) {
            var ManualCodeCollections = new wijmo.collections.CollectionView(articleItems);
            var ManualCodeList = new Array();
            for (var i = 0; i < ManualCodeCollections.items.length; i++) {
                ManualCodeList.push(ManualCodeCollections.items[i].ItemCode);
            }

            var disabled = false;
            if (articleItems == 0) {
                disabled = true;
            }

            cboManualCodeArticleItems.dispose();
            cboManualCodeArticleItems = new wijmo.input.ComboBox('#stockTransferItem_ItemCode', {
                disabled: disabled,
                placeholder: "Select Manual Code",
                itemsSource: ManualCodeList,
                isEditable: false,
                selectedValue: document.getElementById('stockTransferItem_ItemCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransferItem_ItemId_data").val(ManualCodeCollections.items[this.selectedIndex].ItemId);
                    $("#stockTransferItem_ItemCode_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemCode);
                    $("#stockTransferItem_ItemDescription_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemDescription);
                    //$("#stockTransferItem_Unit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
                    //$("#stockTransferItem_Unit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
                    //$("#stockTransferItem_BUCUnit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
                    //$("#stockTransferItem_BUCUnit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
                    //$("#stockTransferItem_Particulars").val(ManualCodeCollections.items[this.selectedIndex].Particulars);
                    $("#stockTransferItem_ItemInventoryCode_data").val(ManualCodeCollections.items[this.selectedIndex].Id);
                    $("#stockTransferItem_ItemInventoryCode_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].InventoryCode);
                    //$("#stockTransferItem_Cost").val(ManualCodeCollections.items[this.selectedIndex].Cost);

                    createCboForItemDescription(articleItems);

                    createCboForInventoryCode(articleItems);
                    //var articleId = ManualCodeCollections.items[this.selectedIndex].ItemId;
                    //var branchId = document.getElementById('stockTransfer_Branch_data').value;
                    //$.ajax({
                    //    url: '/api/getArticleInventoryByArticleId/' + branchId + '/' + articleId,
                    //    cache: false,
                    //    type: 'GET',
                    //    contentType: 'application/json; charset=utf-8',
                    //    data: {},
                    //    success: function (results) {
                    //        //if (results.length > 0) {
                    //        //    inventories.push({
                    //        //        Id: results.Id,
                    //        //        BranchId: results.BranchId,
                    //        //        ArticleId: results.ArticleId,
                    //        //        InventoryCode: results.InventoryCode,
                    //        //        Quantity: results.Quantity,
                    //        //        Cost: results.Cost,
                    //        //        Amount: results.Amount,
                    //        //        Particulars: results.Particulars
                    //        //    });
                    //        //}

                    //        if(results == null) {
                    //            document.getElementById('stockTransferItem_ItemInventoryCode_data').value ="";
                    //            document.getElementById('stockTransferItem_ItemInventoryCode_selectedValue').value = "";
                    //        } else {
                    //            document.getElementById('stockTransferItem_ItemInventoryCode_data').value = results.Id;
                    //            document.getElementById('stockTransferItem_ItemInventoryCode_selectedValue').value = results.InventoryCode;
                    //        }

                    //    }
                    //});

                    //getStockTransferItemUnitForComboBox();

                    var stockTransfer_Quantity = document.getElementById('stockTransferItem_Quantity').value;
                    var stockTransfer_Cost = document.getElementById('stockTransferItem_Cost').value;

                    document.getElementById('stockTransferItem_Amount').value = Math.round((stockTransfer_Quantity * stockTransfer_Cost) * 100) / 100;
                    if (this.value == 0) {
                        document.getElementById('stockTransferItem_BUCCost').value = 0;
                    } else {
                        document.getElementById('stockTransferItem_BUCCost').value = stockTransfer_Cost;
                    }
                }
            });

            document.getElementById("stockTransferItem_ItemId_data").value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemId;
            document.getElementById("stockTransferItem_ItemCode_selectedValue").value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemCode;
            document.getElementById("stockTransferItem_ItemDescription_selectedValue").value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemDescription;
            //document.getElementById("stockTransferItem_Particulars").value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Particulars;
            //document.getElementById("stockTransferItem_ItemInventoryCode_data").value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Id;
            //document.getElementById("stockTransferItem_ItemInventoryCode_selectedValue").value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].InventoryCode;
            //document.getElementById("stockTransferItem_Cost").value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Cost;
        }

        // ====================
        // CBO Item Description
        // ====================
        function createCboForItemDescription(articleItems) {
            var ItemDescriptionCollections = new wijmo.collections.CollectionView(articleItems);
            var ItemDescriptionList = new Array();
            for (var i = 0; i < ItemDescriptionCollections.items.length; i++) {
                ItemDescriptionList.push(ItemDescriptionCollections.items[i].ItemDescription);
            }

            var disabled = false;
            if (articleItems == 0) {
                disabled = true;
            }

            cboItemDescriptionArticleItems.dispose();
            cboItemDescriptionArticleItems = new wijmo.input.ComboBox('#stockTransferItem_ItemDescription', {
                disabled: disabled,
                placeholder: "Select Item Description",
                itemsSource: ItemDescriptionList,
                isEditable: false,
                selectedValue: document.getElementById('stockTransferItem_ItemDescription_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransferItem_ItemId_data").val(ItemDescriptionCollections.items[this.selectedIndex].ItemId);
                    $("#stockTransferItem_ItemCode_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].ItemCode);
                    $("#stockTransferItem_ItemDescription_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].ItemDescription);
                    //$("#stockTransferItem_Unit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
                    //$("#stockTransferItem_Unit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
                    //$("#stockTransferItem_BUCUnit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
                    //$("#stockTransferItem_BUCUnit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
                    //$("#stockTransferItem_Particulars").val(ItemDescriptionCollections.items[this.selectedIndex].Particulars);
                    $("#stockTransferItem_ItemInventoryCode_data").val(ItemDescriptionCollections.items[this.selectedIndex].Id);
                    $("#stockTransferItem_ItemInventoryCode_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].InventoryCode);
                    //$("#stockTransferItem_Cost").val(ItemDescriptionCollections.items[this.selectedIndex].Cost);

                    createCboForManualCode(articleItems);

                    createCboForInventoryCode(articleItems);
                    //var articleId = ItemDescriptionCollections.items[this.selectedIndex].ItemId;
                    //var branchId = document.getElementById('stockTransfer_Branch_data').value;
                    //$.ajax({
                    //    url: '/api/getArticleInventoryByArticleId/' + branchId + '/' + articleId,
                    //    cache: false,
                    //    type: 'GET',
                    //    contentType: 'application/json; charset=utf-8',
                    //    data: {},
                    //    success: function (results) {
                    //        //if (results.length > 0) {
                    //        //    inventories.push({
                    //        //        Id: results.Id,
                    //        //        BranchId: results.BranchId,
                    //        //        ArticleId: results.ArticleId,
                    //        //        InventoryCode: results.InventoryCode,
                    //        //        Quantity: results.Quantity,
                    //        //        Cost: results.Cost,
                    //        //        Amount: results.Amount,
                    //        //        Particulars: results.Particulars
                    //        //    });
                    //        //}

                    //        if(results == null) {
                    //            document.getElementById('stockTransferItem_ItemInventoryCode_data').value = "";
                    //            document.getElementById('stockTransferItem_ItemInventoryCode_selectedValue').value = "";
                    //        } else {
                    //            document.getElementById('stockTransferItem_ItemInventoryCode_data').value = results.Id;
                    //            document.getElementById('stockTransferItem_ItemInventoryCode_selectedValue').value = results.InventoryCode;
                    //        }

                    //    }
                    //});

                    getStockTransferItemUnitForComboBox(ItemDescriptionCollections.items[this.selectedIndex].ItemId);
                    getBUCUnitForComboBox(ItemDescriptionCollections.items[this.selectedIndex].ItemId);
                    var stockTransfer_Quantity = document.getElementById('stockTransferItem_Quantity').value;
                    var stockTransfer_Cost = document.getElementById('stockTransferItem_Cost').value;

                    document.getElementById('stockTransferItem_Amount').value = Math.round((stockTransfer_Quantity * stockTransfer_Cost) * 100) / 100;
                    if (this.value == 0) {
                        document.getElementById('stockTransferItem_BUCCost').value = 0;
                    } else {
                        document.getElementById('stockTransferItem_BUCCost').value = stockTransfer_Cost;
                    }
                }
            });

            var disabled = false;
            if (document.getElementById("stockTransferItem_ItemId_data").value != "") {
                getStockTransferItemUnitForComboBox(ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemId);
                getBUCUnitForComboBox(ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemId);
            } else {
                getStockTransferItemUnitForComboBox(0);
                getBUCUnitForComboBox(0);
            }

            document.getElementById("stockTransferItem_ItemId_data").value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemId;
            document.getElementById("stockTransferItem_ItemCode_selectedValue").value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemCode;
            document.getElementById("stockTransferItem_ItemDescription_selectedValue").value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemDescription;
            //document.getElementById("stockTransferItem_Particulars").value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Particulars;
            //document.getElementById("stockTransferItem_ItemInventoryCode_data").value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Id;
            //document.getElementById("stockTransferItem_ItemInventoryCode_selectedValue").value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].InventoryCode;
            //document.getElementById("stockTransferItem_Cost").value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Cost;

            //$("#stockTransferItem_Unit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
            //$("#stockTransferItem_Unit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
            //$("#stockTransferItem_BUCUnit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
            //$("#stockTransferItem_BUCUnit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);

            //if (articleItems == 0) {
            //    document.getElementById('stockOutItem_Unit_data').value = "";
            //    document.getElementById('stockOutItem_Unit_selectedValue').value = "";
            //    document.getElementById('stockOutItem_BUCUnit_data').value = "";
            //    document.getElementById('stockOutItem_BUCUnit_selectedValue').value = "";
            //} else {
            //    document.getElementById('stockOutItem_Unit_data').value = ItemDescriptionCollections.items[this.selectedIndex].UnitId;
            //    document.getElementById('stockOutItem_Unit_selectedValue').value = ItemDescriptionCollections.items[this.selectedIndex].Unit;
            //    document.getElementById('stockOutItem_BUCUnit_data').value = ItemDescriptionCollections.items[this.selectedIndex].UnitId;
            //    document.getElementById('stockOutItem_BUCUnit_selectedValue').value = ItemDescriptionCollections.items[this.selectedIndex].Unit;
            //}
        }

        // ===========================
        // CBO for Item Inventory Code
        // ===========================
        function createCboForInventoryCode(inventories) {
            var InventoryCodeCollection = new wijmo.collections.CollectionView(inventories);
            var InventoryCodeList = new Array();
            for (var i = 0; i < InventoryCodeCollection.items.length; i++) {
                InventoryCodeList.push(InventoryCodeCollection.items[i].InventoryCode);
            }

            var disabled = false;
            if (inventories == 0) {
                disabled = true;
            }

            cboInventoryCode.dispose();
            cboInventoryCode = new wijmo.input.ComboBox('#stockTransferItem_ItemInventoryCode', {
                disabled: disabled,
                placeholder: "Select Inventory Code",
                itemsSource: InventoryCodeList,
                isEditable: false,
                selectedValue: document.getElementById('stockTransferItem_ItemInventoryCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransferItem_ItemId_data").val(InventoryCodeCollection.items[this.selectedIndex].ItemId);
                    $("#stockTransferItem_ItemCode_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].ItemCode);
                    $("#stockTransferItem_ItemDescription_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].ItemDescription);
                    //$("#stockTransferItem_Unit_data").val(InventoryCodeCollection.items[this.selectedIndex].UnitId);
                    //$("#stockTransferItem_Unit_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].Unit);
                    //$("#stockTransferItem_BUCUnit_data").val(InventoryCodeCollection.items[this.selectedIndex].UnitId);
                    //$("#stockTransferItem_BUCUnit_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].Unit);
                    //$("#stockTransferItem_Particulars").val(InventoryCodeCollection.items[this.selectedIndex].Particulars);
                    $("#stockTransferItem_ItemInventoryCode_data").val(InventoryCodeCollection.items[this.selectedIndex].Id);
                    $("#stockTransferItem_ItemInventoryCode_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].InventoryCode);
                    $("#stockTransferItem_Cost").val(InventoryCodeCollection.items[this.selectedIndex].Cost);
                    //console.log(InventoryCodeCollection.items[this.selectedIndex].Cost);

                    createCboForManualCode(inventories);
                    createCboForItemDescription(inventories);

                    //getStockTransferItemUnitForComboBox();

                    var stockTransfer_Quantity = document.getElementById('stockTransferItem_Quantity').value;
                    var stockTransfer_Cost = document.getElementById('stockTransferItem_Cost').value;

                    document.getElementById('stockTransferItem_Amount').value = Math.round((stockTransfer_Quantity * stockTransfer_Cost) * 100) / 100;
                    if (this.value == 0) {
                        document.getElementById('stockTransferItem_BUCCost').value = 0;
                    } else {
                        document.getElementById('stockTransferItem_BUCCost').value = stockTransfer_Cost;
                    }
                }
            });

            document.getElementById("stockTransferItem_ItemId_data").value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].ItemId;
            document.getElementById("stockTransferItem_ItemCode_selectedValue").value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].ItemCode;
            document.getElementById("stockTransferItem_ItemDescription_selectedValue").value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].ItemDescription;
            //document.getElementById("stockTransferItem_Particulars").value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Particulars;
            document.getElementById("stockTransferItem_ItemInventoryCode_data").value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Id;
            document.getElementById("stockTransferItem_ItemInventoryCode_selectedValue").value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].InventoryCode;
            document.getElementById("stockTransferItem_Cost").value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Cost;
        }

        var stockTransferUnits;
        var cboStockTransferUnit;
        var cboStockTransferBaseUnit;

        // =============
        // Get Item Unit
        // =============
        function getStockTransferItemUnitForComboBox(itemId) {
            stockTransferUnits = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleUnitByArticleId/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            stockTransferUnits.push({
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"],
                                Multiplier: results[i]["Multiplier"]
                            });
                        }
                        createCboForStockTransferUnit(stockTransferUnits);
                    } else {
                        createCboForStockTransferUnit(stockTransferUnits);
                    }
                }
            });
        }

        // ===========================
        // CBO for Stock Transfer Unit
        // ===========================
        function createCboForStockTransferUnit(stockTransferUnits) {
            var StockTransferUnitCollection = new wijmo.collections.CollectionView(stockTransferUnits);
            var StockTransferUnitList = new Array();
            for (var i = 0; i < StockTransferUnitCollection.items.length; i++) {
                StockTransferUnitList.push(StockTransferUnitCollection.items[i].Unit);
            }

            var disabled = false;
            if (document.getElementById("stockTransferItem_ItemId_data").value == "") {
                disabled = true;
            }

            cboStockTransferUnit.dispose();
            cboStockTransferUnit = new wijmo.input.ComboBox('#stockTransferItem_Unit', {
                disabled: disabled,
                placeholder: "Select Unit",
                itemsSource: StockTransferUnitList,
                isEditable: false,
                selectedValue: document.getElementById('stockTransferItem_Unit_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockTransferItem_Unit_data").val(StockTransferUnitCollection.items[this.selectedIndex].UnitId);
                    $("#stockTransferItem_Unit_selectedValue").val(StockTransferUnitCollection.items[this.selectedIndex].Unit);

                    getArticleItemForManualCodeAndComponent();

                    var quantity = document.getElementById("stockTransferItem_Quantity").value.replace(/\,/g, '');;
                    var cost = document.getElementById("stockTransferItem_Cost").value.replace(/\,/g, '');;

                    document.getElementById("stockTransferItem_Cost").value = Math.round((cost / StockTransferUnitCollection.items[this.selectedIndex].Multiplier) * 100) / 100;
                    document.getElementById('stockTransferItem_Amount').value =  Math.round((quantity * document.getElementById("stockTransferItem_Cost").value) * 100) / 100;
                }
            });

            document.getElementById("stockTransferItem_Unit_data").value = StockTransferUnitCollection.items[cboStockTransferUnit.selectedIndex].UnitId;
            document.getElementById("stockTransferItem_Unit_selectedValue").value = StockTransferUnitCollection.items[cboStockTransferUnit.selectedIndex].Unit;

            var quantity = document.getElementById("stockTransferItem_Quantity").value.replace(/\,/g, '');;
            var cost = document.getElementById("stockTransferItem_Cost").value.replace(/\,/g, '');;

            document.getElementById("stockTransferItem_Cost").value = Math.round((cost / StockTransferUnitCollection.items[cboStockTransferUnit.selectedIndex].Multiplier) * 100) / 100;
            document.getElementById('stockTransferItem_Amount').value =  Math.round((quantity * document.getElementById("stockTransferItem_Cost").value) * 100) / 100;
        }

        // =======================================
        // Get Item Unit for Basic Unit Conversion
        // =======================================
        function getBUCUnitForComboBox(itemId) {
            BUCUnits = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUnit',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            BUCUnits.push({
                                UnitId: results[i]["Id"],
                                Unit: results[i]["Unit"]
                            });
                        }
                        createCboForStockTransferBaseUnit(BUCUnits, itemId);
                    } else {
                        createCboForStockTransferBaseUnit(BUCUnits, itemId);
                    }
                }
            });
        }

        // ================================
        // CBO for STock Transfer Base Unit
        // =================================
        function createCboForStockTransferBaseUnit(BUCUnits, itemId) {
            var StockTransferBaseUnitCollection = new wijmo.collections.CollectionView(BUCUnits);
            var StockTransferBaseUnitList = new Array();
            for (var i = 0; i < StockTransferBaseUnitCollection.items.length; i++) {
                StockTransferBaseUnitList.push(StockTransferBaseUnitCollection.items[i].Unit);
            }

            var Unit = "";
            var UnitId;
            $.ajax({
                url: '/api/article/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    UnitId = results.UnitId;
                    Unit = results.Unit;

                    document.getElementById('stockTransferItem_BUCUnit_data').value = results.UnitId;
                    cboStockTransferBaseUnit.dispose();
                    cboStockTransferBaseUnit = new wijmo.input.ComboBox('#stockTransferItem_BUCUnit', {
                        disabled: true,
                        placeholder: "Select Base Unit",
                        itemsSource: StockTransferBaseUnitList,
                        isEditable: false,
                        required: false,
                        selectedValue: Unit.toString(),
                        onSelectedIndexChanged: function () {
                            $("#stockTransferItem_BUCUnit_data").val(StockTransferBaseUnitCollection.items[this.selectedIndex].UnitId);
                        }
                    });

                    if (BUCUnits == 0) {
                        document.getElementById('stockTransferItem_BUCUnit_data').value =  "";
                    } else {
                        document.getElementById('stockTransferItem_BUCUnit_data').value = StockTransferBaseUnitCollection.items[cboStockTransferBaseUnit.selectedIndex].UnitId;
                    }

                }
            });
        }

        // =======================
        // ADD Stock Transfer Item
        // =======================
        function cmdAddStockTransferItem_OnClick() {
            $('#stockTransferItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            getArticleItemForManualCodeAndComponent();
            //getStockTransferItemUnitForComboBox();

            document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveStockTransferItemButton").prop("disabled", false);
            $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);

            $('.requiredStockTransfer').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById('stockTransferItem_Id').value = 0;
            document.getElementById('stockTransferItem_ItemId_data').value = '';
            document.getElementById('stockTransferItem_ItemCode_selectedValue').value = '';
            document.getElementById('stockTransferItem_ItemDescription_selectedValue').value = '';
            document.getElementById('stockTransferItem_Particulars').value = 'NA';
            document.getElementById('stockTransferItem_ItemInventoryCode_data').value = '';
            document.getElementById('stockTransferItem_ItemInventoryCode_selectedValue').value = '';
            document.getElementById('stockTransferItem_Quantity').value = 0;
            document.getElementById('stockTransferItem_Unit_data').value = '';
            document.getElementById('stockTransferItem_Unit_selectedValue').value = '';
            document.getElementById('stockTransferItem_Cost').value = 0;
            document.getElementById('stockTransferItem_Amount').value = 0;
            document.getElementById('stockTransferItem_BUCUnit_data').value = '';
            document.getElementById('stockTransferItem_BUCUnit_selectedValue').value = '';
            document.getElementById('stockTransferItem_BUCQuantity').value = 0;
            document.getElementById('stockTransferItem_BUCCost').value = 0;
        }

        // ========================
        // EDIT Stock Transfer Item
        // ========================
        function btnEditStockTransferItem_OnClick() {
            items.editItem(items.currentItem);
            $('#stockTransferItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            getArticleItemForManualCodeAndComponent();
            //getStockTransferItemUnitForComboBox();

            document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveStockTransferItemButton").prop("disabled", false);
            $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);

            $('.requiredStockTransfer').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            var item = items.currentEditItem;
            document.getElementById('stockTransferItem_Id').value = item.Id;
            document.getElementById('stockTransferItem_ItemId_data').value = item.ItemId;
            document.getElementById('stockTransferItem_ItemCode_selectedValue').value = item.ItemCode;
            document.getElementById('stockTransferItem_ItemDescription_selectedValue').value = item.Item;
            document.getElementById('stockTransferItem_Particulars').value = item.Particulars;
            document.getElementById('stockTransferItem_ItemInventoryCode_data').value = item.ItemInventoryId;
            document.getElementById('stockTransferItem_ItemInventoryCode_selectedValue').value = item.ItemInventory;
            document.getElementById('stockTransferItem_Quantity').value = item.Quantity;
            document.getElementById('stockTransferItem_Unit_data').value = item.UnitId;
            document.getElementById('stockTransferItem_Unit_selectedValue').value = item.Unit;
            document.getElementById('stockTransferItem_Cost').value = item.Cost;
            document.getElementById('stockTransferItem_Amount').value = item.Amount;
            document.getElementById('stockTransferItem_BUCUnit_data').value = item.BaseUnitId;
            document.getElementById('stockTransferItem_BUCUnit_selectedValue').value = item.BaseUnit;
            document.getElementById('stockTransferItem_BUCQuantity').value = item.BaseQuantity;
            document.getElementById('stockTransferItem_BUCCost').value = item.BaseCost;
        }

        // ==========================
        // DELETE Stock Transfer Item
        // ==========================
        function btnDeleteStockTransferItem_OnClick() {
            $('#deleteStockTransferItemsConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdConfirmDeleteStockTransferItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#cmdConfirmDeleteStockTransferItems").prop("disabled", false);
            $("#cmdConfirmDeleteStockTransferItemsCloseButton").prop("disabled", false);
        }
        // Confirm Delete Stock Transfer item
        function cmdStockTransferItemsConfirmDeleteButton_OnClick() {
            document.getElementById('cmdConfirmDeleteStockTransferItems').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $("#cmdConfirmDeleteStockTransferItems").prop("disabled", true);
            $("#cmdConfirmDeleteStockTransferItemsCloseButton").prop("disabled", true);

            items.editItem(items.currentItem);
            var itemId = items.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteStockTransferItem/' + itemId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteCollectionLine").prop("disabled", true);
                        $("#cmdConfirmDeleteCollectionLineCloseButton").prop("disabled", true);
                        toastr.success("Delete Successful");

                        $('#deleteStockTransferItemsConfirm').modal('hide');

                        items = new wijmo.collections.CollectionView(getItem());
                        // Flex Grid for Items
                        itemGrid.itemsSource = items;
                        itemGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $('#deleteStockTransferItemsConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockTransferItems").prop("disabled", false);
                        $("#cmdConfirmDeleteStockTransferItemsCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deleteStockTransferItemsConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockTransferItems").prop("disabled", false);
                        $("#cmdConfirmDeleteStockTransferItemsCloseButton").prop("disabled", false);
                    }
                }
            });
        }


        // ========================
        // SAVE Stock Transfer Item
        // ========================
        function cmdStockTransferItemSaveButton_OnClick() {
            var stockTransferItemObject = new Object();
            var stockTransferId = getParam("StockTransferId");

            var stockTransferItemId = document.getElementById('stockTransferItem_Id').value;
            stockTransferItemObject.STId = stockTransferId;
            stockTransferItemObject.ItemId = document.getElementById('stockTransferItem_ItemId_data').value;
            stockTransferItemObject.ItemInventoryId = document.getElementById('stockTransferItem_ItemInventoryCode_data').value;
            stockTransferItemObject.Particulars = document.getElementById('stockTransferItem_Particulars').value;
            stockTransferItemObject.UnitId = document.getElementById('stockTransferItem_Unit_data').value;
            stockTransferItemObject.Quantity = document.getElementById('stockTransferItem_Quantity').value;
            stockTransferItemObject.Cost = document.getElementById('stockTransferItem_Cost').value;
            stockTransferItemObject.Amount = document.getElementById('stockTransferItem_Amount').value;
            //stockTransferItemObject.BaseUnitId = document.getElementById('stockTransferItem_BUCUnit_data').value;
            //stockTransferItemObject.BaseQuantity = document.getElementById('stockTransferItem_BUCQuantity').value;
            //stockTransferItemObject.BaseCost = document.getElementById('stockTransferItem_BUCCost').value;
            var stockTransferItemData = JSON.stringify(stockTransferItemObject);

            if (document.getElementById('stockTransferItem_ItemId_data').value == '') {
                document.getElementById("stockTransferItem_ItemCode").style.border = "1px solid red";
                document.getElementById("stockTransferItem_ItemDescription").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransferItem_ItemCode").style.border = "1px solid #C8C8C8";
                document.getElementById("stockTransferItem_ItemDescription").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('stockTransferItem_ItemInventoryCode_data').value == '') {
                document.getElementById("stockTransferItem_ItemInventoryCode").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransferItem_ItemInventoryCode").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('stockTransferItem_Unit_data').value == '') {
                document.getElementById("stockTransferItem_Unit").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransferItem_Unit").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('stockTransferItem_BUCUnit_data').value == '') {
                document.getElementById("stockTransferItem_BUCUnit").style.border = "1px solid red";
            } else {
                document.getElementById("stockTransferItem_BUCUnit").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredStockTransfer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
            } else {
                document.getElementById('cmdSaveStockTransferItemButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $("#cmdSaveStockTransferItemButton").prop("disabled", true);
                $("#cmdStockTransferItemDetailCloseButton").prop("disabled", true);

                if (stockTransferItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addStockTransferItem',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockTransferItemData,
                        success: function(id){
                            if(id > 0) {
                                $("#cmdSaveStockTransferItemButton").prop("disabled", true);
                                $("#cmdStockTransferItemDetailCloseButton").prop("disabled", true);
                                toastr.success("Save Successful");

                                $('#stockTransferItemsEdit').modal('hide');

                                items = new wijmo.collections.CollectionView(getItem());

                                // Flex Grid for Items
                                itemGrid.itemsSource = items;
                                itemGrid.trackChanges = true;
                            } else {
                                $("#cmdSaveStockTransferItemButton").prop("disabled", false);
                                $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);
                                toastr.error("Internal Server Error");
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateStockTransferItem/' + stockTransferItemId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockTransferItemData,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveStockTransferItemButton").prop("disabled", true);
                                $("#cmdStockTransferItemDetailCloseButton").prop("disabled", true);
                                toastr.success("Update Successful");

                                $('#stockTransferItemsEdit').modal('hide');

                                items = new wijmo.collections.CollectionView(getItem());

                                // Flex Grid for Items
                                itemGrid.itemsSource = items;
                                itemGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Not Found");
                                $('#stockTransferItemsEdit').modal('hide');
                                $("#cmdSaveStockTransferItemButton").prop("disabled", false);
                                $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#stockTransferItemsEdit').modal('hide');
                                $("#cmdSaveStockTransferItemButton").prop("disabled", false);
                                $("#cmdStockTransferItemDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ======
        //  Items
        // ======
        function itemTab() {
            $('#stockTransferItem_Quantity').keyup(function () {
                document.getElementById('stockTransferItem_BUCQuantity').value = this.value;

                var stockTransfer_Quantity = document.getElementById('stockTransferItem_Quantity').value;
                var stockTransfer_Cost = document.getElementById('stockTransferItem_Cost').value;

                document.getElementById('stockTransferItem_Amount').value = Math.round((stockTransfer_Quantity * stockTransfer_Cost) * 100) / 100;
                if (this.value == 0) {
                    document.getElementById('stockTransferItem_BUCCost').value = 0;
                } else {
                    document.getElementById('stockTransferItem_BUCCost').value = stockTransfer_Cost;
                }
            });

            document.getElementById('stockTransferItem_Cost').disabled = true;
            document.getElementById('stockTransferItem_Amount').disabled = true;
            document.getElementById('stockTransferItem_BUCQuantity').disabled = true;
            document.getElementById('stockTransferItem_BUCCost').disabled = true;

            cboManualCodeArticleItems = new wijmo.input.ComboBox('#stockTransferItem_ItemCode');
            cboItemDescriptionArticleItems = new wijmo.input.ComboBox('#stockTransferItem_ItemDescription');
            cboInventoryCode = new wijmo.input.ComboBox('#stockTransferItem_ItemInventoryCode');
            cboStockTransferUnit = new wijmo.input.ComboBox('#stockTransferItem_Unit');
            cboStockTransferBaseUnit = new wijmo.input.ComboBox('#stockTransferItem_BUCUnit');

            items = new wijmo.collections.CollectionView(getItem());

            // Flex Grid for Items
            itemGrid = new wijmo.grid.FlexGrid('#ItemGrid');
            itemGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Code",
                                "binding": "ItemCode",
                                "allowSorting": true,
                                "width": 60
                            },
                            {
                                "header": "Item",
                                "binding": "Item",
                                "allowSorting": true,
                                "width": 140
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": 150
                            },
                            {
                                "header": "Inventory Code",
                                "binding": "ItemInventory",
                                "allowSorting": true,
                                "width": 160
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": 90
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Cost",
                                "binding": "Cost",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Unit",
                                "binding": "BaseUnit",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Quantity",
                                "binding": "BaseQuantity",
                                "align": "left",
                                "allowSorting": true,
                                "width": 90
                            },
                            {
                                "header": "Cost",
                                "binding": "BaseCost",
                                "allowSorting": true,
                                "width": 100
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: items,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            itemGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            itemGrid.columnHeaders.rows.push(hr);
            itemGrid.columnHeaders.rows[0].allowMerging = true;

            itemGrid.columnHeaders.columns[0].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 0, 'Edit');

            itemGrid.columnHeaders.columns[1].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 1, 'Delete');

            itemGrid.columnHeaders.columns[2].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 2, 'Code');

            itemGrid.columnHeaders.columns[3].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 3, 'Item');

            itemGrid.columnHeaders.columns[4].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 4, 'Particulars');

            itemGrid.columnHeaders.columns[5].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 5, 'Inventory Code');

            itemGrid.columnHeaders.columns[6].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 6, 'Quantity');

            itemGrid.columnHeaders.columns[7].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 7, 'Unit');

            itemGrid.columnHeaders.columns[8].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 8, 'Cost');

            itemGrid.columnHeaders.columns[9].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 9, 'Amount');

            for (var columnBasicUnitConversion = 10; columnBasicUnitConversion <= 12; columnBasicUnitConversion++) {
                itemGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Basic Unit Conversion');
            }

        }
    </script>

    <!-- ========================= -->
    <!-- Inventory Entries Scripts -->
    <!-- ========================= -->
    <script type="text/javascript">
        // ======================================
        // Global Variables for Inventory Entries
        // ======================================
        var inventoryEntries;
        var inventoryEntryGrid;

        var btnFirstPageGridInventoryEntry;
        var btnPreviousPageGridInventoryEntry;
        var btnNextPageGridInventoryEntry;
        var btnLastPageGridInventoryEntry;
        var btnCurrentPageGridInventoryEntry;

        // ==================
        // GET Inventory List
        // ==================
        function getInventoryEntries() {
            var inventoryEntries = new wijmo.collections.ObservableArray;
            var stockTransferId = getParam("StockTransferId");
            NProgress.start();
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/listInventoryBySTId/' + stockTransferId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            for (i = 0; i < Results.length; i++) {
                                inventoryEntries.push({
                                    EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                    Id: Results[i]["Id"],
                                    BranchId: Results[i]["BranchId"],
                                    Branch: Results[i]["Branch"],
                                    InventoryDate: Results[i]["InventoryDate"],
                                    ArticleId: Results[i]["ArticleId"],
                                    Article: Results[i]["Article"],
                                    ArticleInventoryId: Results[i]["ArticleInventoryId"],
                                    RRId: Results[i]["RRId"],
                                    SIId: Results[i]["SIId"],
                                    INId: Results[i]["INId"],
                                    OTId: Results[i]["OTId"],
                                    STId: Results[i]["STId"],
                                    QuantityIn: Results[i]["QuantityIn"],
                                    Quantity: Results[i]["Quantity"],
                                    QuantityOut: Results[i]["QuantityOut"],
                                    Amount: Results[i]["Amount"],
                                    Particulars: Results[i]["Particulars"],
                                    Code: Results[i]["Code"],
                                    Unit: Results[i]["Unit"]
                                });
                            }
                        }
                        NProgress.done();
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            } else {
                NProgress.done();
            }
            return inventoryEntries;
        }

        // ========================================
        // FlexGrid Selection for Inventory Entries
        // ========================================
        function updateDetailsInventoryEntry() {
            var item = inventoryEntries.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ==================================
        // On Page Load for Inventory Entries
        // ==================================
        function inventoryEntryTab() {
            inventoryEntries = new wijmo.collections.CollectionView(getInventoryEntries());

            // Flex Grid for Inventory Entries
            inventoryEntryGrid = new wijmo.grid.FlexGrid('#InventoryEntryGrid');
            inventoryEntryGrid.initialize({
                columns: [
                            {
                                "header": "Date",
                                "binding": "InventoryDate",
                                "allowSorting": true,
                                "width": 80,
                            },
                            {
                                "header": "Branch",
                                "binding": "Branch",
                                "allowSorting": true,
                                "width": 150,
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "align": "left",
                                "allowSorting": true,
                                "width": 165,
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "align": "left",
                                "allowSorting": true,
                                "width": 170,
                            },
                            {
                                "header": "Inventory Code",
                                "binding": "Code",
                                "allowSorting": true,
                                "width": 160,
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": 110,
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": 118,
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": 150,
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryEntries,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntryGrid.trackChanges = true;
        }
    </script>

    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        var journals;
        var journalListGrid;

        var btnFirstPageGridJournal;
        var btnPreviousPageGridJournal;
        var btnNextPageGridJournal;
        var btnLastPageGridJournal;
        var btnCurrentPageGridJournal;

        // ===========
        // Get Journal
        // ===========
        function getJournalListForStockTransfer() {
            var journals = new wijmo.collections.ObservableArray;
            var stockTransferId = getParam("StockTransferId");
            //$('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listJournalBySTId/' + stockTransferId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    //$('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            journals.push({
                                //EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdJournalVoucherLineEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                //DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdJournalVoucherLineDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: Results[i]["Id"],
                                JournalDate: Results[i]["JournalDate"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                AccountId: Results[i]["AccountId"],
                                AccountCode: Results[i]["AccountCode"],
                                Account: Results[i]["Account"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                Particulars: Results[i]["Particulars"],
                                DebitAmount: Results[i]["DebitAmount"],
                                CreditAmount: Results[i]["CreditAmount"],
                                ORId: Results[i]["ORId"],
                                CVId: Results[i]["CVId"],
                                JVId: Results[i]["JVId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"],
                                DocumentReference: Results[i]["DocumentReference"],
                                APRRId: Results[i]["APRRId"],
                                ARSIId: Results[i]["ARSIId"]
                            });

                            var debitAmountTotal = 0;
                            var creditAmountTotal = 0;

                            var a = 0;
                            while (a < Results.length) {
                                debitAmountTotal += Results[a]["DebitAmount"];
                                creditAmountTotal += Results[a]["CreditAmount"];
                                a++;
                            }
                        }

                        document.getElementById('totalDebitInJournal').innerHTML = debitAmountTotal.toLocaleString();
                        document.getElementById('totalCreditInJournal').innerHTML = creditAmountTotal.toLocaleString();
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return journals;
        }

        // ==============================
        // Navigation Buttons for Journal
        // ==============================
        function updateNavigateButtonsJournal() {
            if (journals.pageSize <= 0) {
                document.getElementById('navigationPageGridJournal').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridJournal').style.display = 'block';
            if (journals.pageIndex === 0) {
                btnFirstPageGridJournal.setAttribute('disabled', 'disabled');
                btnPreviousPageGridJournal.setAttribute('disabled', 'disabled');
                btnNextPageGridJournal.removeAttribute('disabled');
                btnLastPageGridJournal.removeAttribute('disabled');
            } else if (journals.pageIndex === (journals.pageCount - 1)) {
                btnFirstPageGridJournal.removeAttribute('disabled');
                btnPreviousPageGridJournal.removeAttribute('disabled');
                btnLastPageGridJournal.setAttribute('disabled', 'disabled');
                btnNextPageGridJournal.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridJournal.removeAttribute('disabled');
                btnPreviousPageGridJournal.removeAttribute('disabled');
                btnNextPageGridJournal.removeAttribute('disabled');
                btnLastPageGridJournal.removeAttribute('disabled');
            }
            btnCurrentPageGridJournal.innerHTML = (journals.pageIndex + 1) + ' / ' + journals.pageCount;
        }

        // ============
        // Journal List
        // ============
        function stockTransferJournal_OnClick() {
            journals = new wijmo.collections.CollectionView(getJournalListForStockTransfer());
            journals.pageSize = 10;

            document.getElementById("loadingJournalGridList").innerHTML = '<i class="fa fa-spinner fa-spin"></i> Loading Journal...';

            $("#loadingJournalGridList").show();
            $("#footerModalJournalNavigationButtons").hide();
            setTimeout(function () {
                $("#loadingJournalGridList").hide();
                $("#footerModalJournalNavigationButtons").show();
                // Flex Grid
                journalListGrid = new wijmo.grid.FlexGrid('#journalGrid');
                journalListGrid.initialize({
                    columns: [
                                {
                                    "header": "Branch",
                                    "binding": "Branch",
                                    "allowSorting": true,
                                    "width": 150
                                },
                                {
                                    "header": "Code",
                                    "binding": "AccountCode",
                                    "allowSorting": true,
                                    "width": 60
                                },
                                {
                                    "header": "Account",
                                    "binding": "Account",
                                    "allowSorting": true,
                                    "width": 200
                                },
                                {
                                    "header": "Article",
                                    "binding": "Article",
                                    "allowSorting": true,
                                    "width": 162
                                },
                                {
                                    "header": "Debit",
                                    "binding": "DebitAmount",
                                    "allowSorting": true,
                                    "width": 130
                                }
                                ,
                                {
                                    "header": "Credit",
                                    "binding": "CreditAmount",
                                    "allowSorting": true,
                                    "width": 130
                                },
                                {
                                    "header": "Date",
                                    "binding": "JournalDate",
                                    "allowSorting": true,
                                    "width": 80,
                                }
                    ],
                    autoGenerateColumns: false,
                    itemsSource: journals,
                    isReadOnly: true,
                    autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                    allowDragging: wijmo.grid.AllowDragging.None,
                    selectionMode: wijmo.grid.SelectionMode.Row
                });

                journalListGrid.trackChanges = true;

                //Navigation button
                btnFirstPageGridJournal = document.getElementById('btnMoveToFirstPageGridJournal');
                btnPreviousPageGridJournal = document.getElementById('btnMoveToPreviousPageGridJournal');
                btnNextPageGridJournal = document.getElementById('btnMoveToNextPageGridJournal');
                btnLastPageGridJournal = document.getElementById('btnMoveToLastPageGridJournal');
                btnCurrentPageGridJournal = document.getElementById('btnCurrentPageGridJournal');

                updateNavigateButtonsJournal();

                btnFirstPageGridJournal.addEventListener('click', function () {
                    journals.moveToFirstPage();
                    updateNavigateButtonsJournal();
                });
                btnPreviousPageGridJournal.addEventListener('click', function () {
                    journals.moveToPreviousPage();
                    updateNavigateButtonsJournal();
                });
                btnNextPageGridJournal.addEventListener('click', function () {
                    journals.moveToNextPage();
                    updateNavigateButtonsJournal();
                });
                btnLastPageGridJournal.addEventListener('click', function () {
                    journals.moveToLastPage();
                    updateNavigateButtonsJournal();
                });

            }, 1000);
        }

        // journal detail
        $('#cmdStockTransferJournal').click(function () {
            $('#journalDetail').modal({
                show: true,
                backdrop: 'static'
            });

            window.stockTransferJournal_OnClick = function () {
                return true;
            };
        });

        // ====
        // TABS
        // ====
        $('#itemTabId').click(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            window.itemTab = function () {
                return true;
            };
        });

        $('#inventoryEntryTabId').click(function () {
            $('#Items').hide();
            $('#InventoryEntries').show();
            inventoryEntryTab();
            window.inventoryEntryTab = function () {
                return true;
            };
        });

        $(document).ready(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            itemTab();

            $(document).on('show.bs.modal', '.modal', function (event) {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () {
                    $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
                }, 0);
            });

            $(document).on('hidden.bs.modal', '.modal', function () {
                $('.modal:visible').length && $(document.body).addClass('modal-open');
            });
        });
    </script>
</body>
</html>