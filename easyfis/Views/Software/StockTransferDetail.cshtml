@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Transfer Detail</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock Transfer Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        =============================================
                        Options: Lock, Unlock, Print and Close Button
                        =============================================
                    -->
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-2">
                                <button class="btn btn-primary" id="btnStockTransferSave" onclick="btnStockTransferSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                            </div>
                            <div class="col-md-10" align="right">
                                <button class="btn btn-primary" id="btnStockTransferJournal" onclick="btnStockOutJournalOnclick()"><i class="fa fa-book"></i> Journal</button>
                                @{
                                    if (canLock)
                                    {
                                        <button class="btn btn-primary" id="btnStockTransferLock" onclick="btnStockTransferLockOnclick()"><i class="fa fa-lock"></i> Lock</button>
                                    }
                                    if (canUnlock)
                                    {
                                        <button class="btn btn-primary" id="btnStockTransferUnlock" onclick="btnStockTransferUnlockOnclick()"><i class="fa fa-unlock"></i> Unlock</button>
                                    }
                                    if (canPrint)
                                    {
                                        <button class="btn btn-primary" id="btnStockTransferPrint" onclick="btnStockTransferPrintOnclick()"><i class="fa fa-print"></i> Print</button>
                                    }
                                }
                                <button class="btn btn-danger" id="btnStockTransferClose" onclick="window.location.href='/Software/StockTransfer'"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>

                    <!--
                        ======================================
                        Details, Fields and Other Informations
                        ======================================
                    -->
                    <div class="panel-body">
                        <div class="">
                            <form class="form-horizontal" role="form">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Branch</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferBranch"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">ST Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control requiredStockTransfer" id="inpStockTransferSTNumber" disabled />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">ST Date</label>
                                            <div class="col-sm-8">
                                                <div class="" id="cboStockTransferSTDate"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">To branch</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferToBranch"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Article</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferArticle"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Particulars</label>
                                            <div class="col-sm-8">
                                                <textarea rows="5" class="form-control textarea-custom requiredStockTransfer" id="inpStockTransferParticulars" placeholder="Particulars"></textarea>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Status</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferStatus"></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Manual ST Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control  requiredStockTransfer" id="inpStockTransferManualSTNumber" placeholder="Manual ST Number">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Prepared by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferPreparedBy"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Checked by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferCheckedBy"></div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Approved by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="cboStockTransferApprovedBy"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <!--
                    ==========================================
                    Stock Transfer Items and Inventory Entries
                    ==========================================
                -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#tabPaneStockTransferItems" id="tabStockTransferItems">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#tabPaneInventoryEntries" id="tabInventoryEntries">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">

                    <!--
                        =======================
                        Stock Transfer Item Tab
                        =======================
                    -->
                    <div id="tabPaneStockTransferItems" class="tab-pane active">
                        <div class="panel panel-default">

                            <!--
                                ========================================================================
                                Stock Transfer Item: Search, Filter, Display Number of Rows and  Buttons
                                ========================================================================
                            -->
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpStockTransferItemsSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboStockTransferItemsShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right">
                                            @{
                                                if (canAdd)
                                                {
                                                    <button class="btn btn-primary" id="btnStockTransferItemAdd" onclick="btnStockTransferItemAddOnclick()"><i class="fa fa-plus"></i> Add</button>
                                                    <button class="btn btn-primary" id="btnStockTransferItemItemQuery" onclick="btnItemQueryOnclick()"><i class="fa fa-search-plus"></i> Item Query</button>
                                                }
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                ==============================
                                Stock Transfer Item: Flex Grid
                                ==============================
                            -->
                            <div class="panel-body">
                                <div id="stockTransferItemFlexGrid" class="grid"></div>
                            </div>

                            <!--
                                =======================================
                                Stock Transfer Item: Navigation Buttons
                                =======================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="stockTransferItemsNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnStockTransferItemMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockTransferItemMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnStockTransferItemCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockTransferItemMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockTransferItemMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!--
                            ===========================
                            Stock Transfer Item: Totals
                            ===========================
                        -->
                        <div class="panel panel-default">
                            <div class="panel-body" style="padding-bottom: 0px;">
                                <div class="row">
                                    <div class="col-md-6">

                                    </div>
                                    <div class="col-md-6">
                                        <dl class="dl-horizontal">
                                            <dt>
                                                <b>Total Amount</b>
                                            </dt>
                                            <dd>
                                                <input type="text" class="form-control numberField" id="inpTotalStockTransferAmount" placeholder="0.00" disabled />
                                            </dd>
                                        </dl>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!--
                        =====================
                        Inventory Entries Tab
                        =====================
                    -->
                    <div id="tabPaneInventoryEntries" class="tab-pane">
                        <div class="panel panel-default">

                            <!--
                                ======================================================================
                                Inventory Entries: Search, Filter, Display Number of Rows and  Buttons
                                ======================================================================
                            -->

                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpInventoryEntriesSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboInventoryEntriesShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right"></td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                ============================
                                Inventory Entries: Flex Grid
                                ============================
                            -->
                            <div class="panel-body">
                                <div id="inventoryEntriesFlexGrid"></div>
                            </div>

                            <!--
                                =====================================
                                Inventory Entries: Navigation Buttons
                                =====================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="inventoryEntriesNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnInventoryEntriesCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnInventoryEntriesMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ==========
                    User Stamp
                    ==========
                -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!--
        =================================
        Stock Transfer Item: Detail Modal
        =================================
    -->
    <div class="modal fade" id="stockTransferItemsDetailModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="stockTransferItemsModalLabel">Stock Transfer Item</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="stockTransferItemLoading"></span>
                    </center>
                    <div id="stockTransferItemContent">
                        <dl class="dl-horizontal">
                            <dt>Item</dt>
                            <dd>
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 30%">
                                            <div class="comboBox-wide" id="cboStockTransferItemCode"></div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 69%">
                                            <div class="comboBox-wide" id="cboStockTransferItemDescription"></div>
                                        </td>
                                    </tr>
                                </table>
                            </dd>
                            <dt>Particulars</dt>
                            <dd>
                                <textarea rows="5" class="form-control textarea-custom requiredStockTransferItem" id="inpStockTransferItemParticulars"></textarea>
                            </dd>
                            <dt>Inventory Code</dt>
                            <dd>
                                <div class="comboBox-wide" id="cboStockTransferItemInventoryCode"></div>
                            </dd>
                            <dt>Quantity</dt>
                            <dd>
                                <input type="text" class="form-control numberField requiredStockTransferItem" id="inpStockTransferItemQuantity" placeholder="0.00" />
                            </dd>
                            <dt>Unit</dt>
                            <dd>
                                <div class="comboBox-wide" id="cboStockTransferItemUnit"></div>
                            </dd>
                            <dt>Cost</dt>
                            <dd>
                                <input type="text" class="form-control numberField requiredStockTransferItem" id="inpStockTransferItemCost" placeholder="0.00" disabled />
                            </dd>
                            <dt>Amount</dt>
                            <dd>
                                <input type="text" class="form-control numberField requiredStockTransferItem" id="inpStockTransferItemAmount" placeholder="0.00" disabled />
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnStockTransferItemSave" onclick="btnStockTransferItemSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                    <button class="btn btn-danger" id="btnStockTransferItemCloseDetailModal" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        =========================================
        Stock Transfer Item: Delete Confirm Modal
        =========================================
    -->
    <div class="modal fade" id="stockTransferItemsConfirmDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Delete Stock Transfer Item?
                </div>
                <div class="modal-footer">
                    <button id="btnStockTransferItemConfirmDelete" class="btn btn-danger" onclick="btnStockTransferItemConfirmDeleteOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="btnStockTransferItemConfirmDeleteCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        =====================
        Journal Entries Modal
        =====================
    -->
    <div class="modal fade" id="journalEntryModal" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title"> Journal </h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="journalLoading"></span>
                    </center>
                    <div id="journalContent">
                        <div id="journalFlexGrid" style="max-height: 250px;"></div>
                        <br /><br />
                        <div class="row">
                            <div class="col-md-7"></div>
                            <div class="col-md-5">
                                <dl class="dl-horizontal">
                                    <dt>
                                        <b>Total Debit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpJournalTotalDebit" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Credit</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpJournalTotalCredit" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Variance</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpJournalVariance" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ================
        Item Query Modal
        ================
    -->
    <div class="modal fade" id="itemQueryModal" role="dialog">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Item Query</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="itemQueryLoading"></span>
                    </center>
                    <div id="itemQueryContent">
                        <div class="panel panel-default">

                            <!--
                                =========================
                                Item Query: Search Filter
                                =========================
                            -->
                            <div class="panel-heading">
                                <div class="input-group  ">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control " id="itemQueryFilter" placeholder="Search">
                                </div>
                            </div>

                            <!--
                                =====================
                                Item Query: Flex Grid
                                =====================
                            -->
                            <div class="panel-body">
                                <div id="itemQueryItemsFlexGrid"></div>
                            </div>

                            <!--
                                ==============================
                                Item Query: Navigation Buttons
                                ==============================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="ItemQueryNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnItemQueryCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ===========================================
        // Stock Transfer Detail Combo Data and Fields
        // ===========================================
        var cboStockTransferBranch = new wijmo.input.ComboBox('#cboStockTransferBranch');
        var isCboFromBranchSelect = false;
        var cboStockTransferToBranch = new wijmo.input.ComboBox('#cboStockTransferToBranch');
        var cboStockTransferArticle = new wijmo.input.ComboBox('#cboStockTransferArticle');
        var cboStockTransferPreparedBy = new wijmo.input.ComboBox('#cboStockTransferPreparedBy');
        var cboStockTransferCheckedBy = new wijmo.input.ComboBox('#cboStockTransferCheckedBy');
        var cboStockTransferApprovedBy = new wijmo.input.ComboBox('#cboStockTransferApprovedBy');
        var cboStockTransferStatus = new wijmo.input.ComboBox('#cboStockTransferStatus');
        var cboStockTransferSTDate = new wijmo.input.InputDate('#cboStockTransferSTDate');
        var isLocked = false;

        // =====================================================================
        // Stock Transfer Item Collection View, Flex Grid and Navigation Buttons
        // =====================================================================
        var stockTransferItemCollectionView;
        var stockTransferItemFlexGrid;
        var cboStockTransferItemsShowNumberOfRows = new wijmo.input.ComboBox('#cboStockTransferItemsShowNumberOfRows');
        var btnStockTransferItemMoveToFirstPageGrid = document.getElementById('btnStockTransferItemMoveToFirstPageGrid');
        var btnStockTransferItemMoveToPreviousPageGrid = document.getElementById('btnStockTransferItemMoveToPreviousPageGrid');
        var btnStockTransferItemMoveToNextPageGrid = document.getElementById('btnStockTransferItemMoveToNextPageGrid');
        var btnStockTransferItemMoveToLastPageGrid = document.getElementById('btnStockTransferItemMoveToLastPageGrid');
        var btnStockTransferItemCurrentPageGrid = document.getElementById('btnStockTransferItemCurrentPageGrid');

        // =========================================
        // Stock Transfer Item Combo Data and Fields
        // =========================================
        var stockTransferItemId = 0;
        var cboStockTransferItemCode = new wijmo.input.ComboBox('#cboStockTransferItemCode');
        var cboStockTransferItemDescription = new wijmo.input.ComboBox('#cboStockTransferItemDescription');
        var cboStockTransferItemInventoryCode = new wijmo.input.ComboBox('#cboStockTransferItemInventoryCode');
        var cboStockTransferItemUnit = new wijmo.input.ComboBox('#cboStockTransferItemUnit');

        // =============================================
        // Journal Entries Collection View and Flex Grid
        // =============================================
        var journalCollectionView;
        var journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');

        // ===================================================================
        // Inventory Entries Collection View, Flex Grid and Navigation Buttons
        // ===================================================================
        var inventoryEntriesCollectionView;
        var inventoryEntriesFlexGrid = new wijmo.grid.FlexGrid('#inventoryEntriesFlexGrid');
        var cboInventoryEntriesShowNumberOfRows = new wijmo.input.ComboBox('#cboInventoryEntriesShowNumberOfRows');
        var btnInventoryEntriesMoveToFirstPageGrid = document.getElementById('btnInventoryEntriesMoveToFirstPageGrid');
        var btnInventoryEntriesMoveToPreviousPageGrid = document.getElementById('btnInventoryEntriesMoveToPreviousPageGrid');
        var btnInventoryEntriesMoveToNextPageGrid = document.getElementById('btnInventoryEntriesMoveToNextPageGrid');
        var btnInventoryEntriesMoveToLastPageGrid = document.getElementById('btnInventoryEntriesMoveToLastPageGrid');

        // ============================================================
        // Item Query Collection View, Flex Grid and Navigation Buttons
        // ============================================================
        var itemQueryItemsCollectionView;
        var itemQueryItemsFlexGrid = new wijmo.grid.FlexGrid('#itemQueryItemsFlexGrid');
        var btnItemQueryMoveToFirstPageGrid = document.getElementById('btnItemQueryMoveToFirstPageGrid');
        var btnItemQueryMoveToPreviousPageGrid = document.getElementById('btnItemQueryMoveToPreviousPageGrid');
        var btnItemQueryMoveToNextPageGrid = document.getElementById('btnItemQueryMoveToNextPageGrid');
        var btnItemQueryMoveToLastPageGrid = document.getElementById('btnItemQueryMoveToLastPageGrid');
        var btnItemQueryCurrentPageGrid = document.getElementById('btnItemQueryCurrentPageGrid');
        var isItemQueryClicked = false;
        var isInventoryClicked = false;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getURLParameterValue(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);

            if (results == null)
                return "";
            else {
                return results[1];
            }
        }

        // =========================================
        // Create Stock Transfer Detail Combo Branch
        // =========================================
        function createCboStockTransferDetailBranch() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockTransfer/dropdown/list/branch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branchesObservableArray.push({
                                Id: results[i]["Id"],
                                Branch: results[i]["Branch"]
                            });
                        }
                    }

                    cboStockTransferBranch.dispose();
                    cboStockTransferBranch = new wijmo.input.ComboBox('#cboStockTransferBranch', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id",
                        onSelectedIndexChanged: function () {
                            if (isCboFromBranchSelect) {
                                createCboStockTransferDetailToBranch();
                            }
                        }
                    });

                    if (!isCboFromBranchSelect) {
                        createCboStockTransferDetailToBranch();
                    }
                }
            });
        }

        // ============================================
        // Create Stock Transfer Detail Combo To Branch
        // ============================================
        function createCboStockTransferDetailToBranch() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockTransfer/dropdown/list/toBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branchesObservableArray.push({
                                Id: results[i]["Id"],
                                Branch: results[i]["Branch"]
                            });
                        }
                    }

                    cboStockTransferToBranch.dispose();
                    cboStockTransferToBranch = new wijmo.input.ComboBox('#cboStockTransferToBranch', {
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id"
                    });

                    createCboStockTransferDetailArticle();
                }
            });
        }

        // ==========================================
        // Create Stock Transfer Detail Combo Article
        // ==========================================
        function createCboStockTransferDetailArticle() {
            var articlesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockTransfer/dropdown/list/article',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articlesObservableArray.push({
                                Id: results[i]["Id"],
                                Article: results[i]["Article"]
                            });
                        }
                    }

                    cboStockTransferArticle.dispose();
                    cboStockTransferArticle = new wijmo.input.ComboBox('#cboStockTransferArticle', {
                        isEditable: false,
                        placeholder: "Select Supplier",
                        itemsSource: articlesObservableArray,
                        displayMemberPath: "Article",
                        selectedValuePath: "Id"
                    });

                    createCboStockTransferDetailUsers();
                }
            });
        }

        // ========================================
        // Create Stock Transfer Detail Combo Users
        // ========================================
        function createCboStockTransferDetailUsers() {
            var usersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockTransfer/dropdown/list/users',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            usersObservableArray.push({
                                Id: results[i]["Id"],
                                FullName: results[i]["FullName"]
                            });
                        }
                    }

                    cboStockTransferPreparedBy.dispose();
                    cboStockTransferPreparedBy = new wijmo.input.ComboBox('#cboStockTransferPreparedBy', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockTransferCheckedBy.dispose();
                    cboStockTransferCheckedBy = new wijmo.input.ComboBox('#cboStockTransferCheckedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockTransferApprovedBy.dispose();
                    cboStockTransferApprovedBy = new wijmo.input.ComboBox('#cboStockTransferApprovedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    createCboStockTransferDetailStatus();
                }
            });
        }

        // =========================================
        // Create Stock Transfer Detail Combo Status
        // =========================================
        function createCboStockTransferDetailStatus() {
            var statusObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockTransfer/dropdown/list/status',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    var disabled = false;

                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            statusObservableArray.push({
                                Id: results[i]["Id"],
                                Status: results[i]["Status"]
                            });
                        }
                    } else {
                        disabled = true;
                    }

                    cboStockTransferStatus.dispose();
                    cboStockTransferStatus = new wijmo.input.ComboBox('#cboStockTransferStatus', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: statusObservableArray,
                        displayMemberPath: "Status",
                        selectedValuePath: "Status"
                    });

                    getStockTransferData();
                }
            });
        }

        // =======================
        // Get Stock Transfer Data
        // =======================
        function getStockTransferData() {
            if (document.location.search.length > 0) {
                var id = getURLParameterValue("id");
                $.ajax({
                    url: '/api/stockTransfer/detail/' + id,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results != null) {
                            cboStockTransferBranch.selectedValue = results.BranchId;
                            document.getElementById('inpStockTransferSTNumber').value = results.STNumber;
                            cboStockTransferSTDate.dispose();
                            cboStockTransferSTDate = new wijmo.input.InputDate('#cboStockTransferSTDate', {
                                format: 'MM-dd-yyyy',
                                value: new Date(results.STDate),
                            });
                            cboStockTransferToBranch.selectedValue = results.ToBranchId;
                            cboStockTransferArticle.selectedValue = results.ArticleId;
                            document.getElementById('inpStockTransferParticulars').value = results.Particulars;
                            document.getElementById('inpStockTransferManualSTNumber').value = results.ManualSTNumber;
                            cboStockTransferPreparedBy.selectedValue = results.PreparedById;
                            cboStockTransferCheckedBy.selectedValue = results.CheckedById;
                            cboStockTransferApprovedBy.selectedValue = results.ApprovedById;
                            cboStockTransferStatus.selectedValue = results.Status;

                            if (results.IsLocked == true) {
                                cboStockTransferSTDate.disabled = true;
                                cboStockTransferToBranch.disabled = true;
                                cboStockTransferArticle.disabled = true;
                                document.getElementById('inpStockTransferParticulars').disabled = true;
                                document.getElementById('inpStockTransferManualSTNumber').disabled = true;
                                cboStockTransferCheckedBy.disabled = true;
                                cboStockTransferApprovedBy.disabled = true;
                                cboStockTransferStatus.disabled = true;

                                $("#btnStockTransferSave").prop("disabled", true);
                                $("#btnStockTransferLock").prop("disabled", true);
                                $('#btnStockTransferItemAdd').prop('disabled', true);
                                $('#btnStockTransferItemItemQuery').prop('disabled', true);

                                isLocked = true;
                            } else {
                                $("#btnStockTransferJournal").prop("disabled", true);
                                $("#btnStockTransferUnlock").prop("disabled", true);
                                $("#btnStockTransferPrint").prop("disabled", true);
                            }

                            createCboShowRows();
                            createStockTransferItemsFlexGrid();
                            createInventoryEntriesFlexGrid();
                        } else {
                            alert("No Data.");
                            window.location = "/Software/StockTransfer";
                        }
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/StockTransfer";
            }
        }

        // ===================
        // Save Stock Transfer
        // ===================
        function btnStockTransferSaveOnclick() {
            var stockTransferObject = new Object();
            stockTransferObject.STDate = cboStockTransferSTDate.value.toLocaleDateString();
            stockTransferObject.ToBranchId = cboStockTransferToBranch.selectedValue;
            stockTransferObject.ArticleId = cboStockTransferArticle.selectedValue;
            stockTransferObject.Particulars = document.getElementById('inpStockTransferParticulars').value;
            stockTransferObject.ManualSTNumber = document.getElementById('inpStockTransferManualSTNumber').value;
            stockTransferObject.PreparedById = cboStockTransferPreparedBy.selectedValue;
            stockTransferObject.CheckedById = cboStockTransferCheckedBy.selectedValue;
            stockTransferObject.ApprovedById = cboStockTransferApprovedBy.selectedValue;
            stockTransferObject.Status = cboStockTransferStatus.selectedValue;
            var stockTransferData = JSON.stringify(stockTransferObject);

            var isValid = true;
            $('.requiredStockTransfer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnStockTransferSave').innerHTML = "<i class='fa fa-save'></i> Saving...";
                $("#btnStockTransferSave").prop("disabled", true);
                $("#btnStockTransferJournal").prop("disabled", true);
                $("#btnStockTransferLock").prop("disabled", true);
                $("#btnStockTransferUnlock").prop("disabled", true);
                $("#btnStockTransferPrint").prop("disabled", true);
                $("#btnStockTransferClose").prop("disabled", true);

                var id = getURLParameterValue("id");

                $.ajax({
                    type: "PUT",
                    url: '/api/stockTransfer/save/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: stockTransferData,
                    statusCode: {
                        200: function () {
                            toastr.success("Save Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnStockTransferSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockTransferSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockTransferJournal").prop("disabled", false);
                                $("#btnStockTransferUnlock").prop("disabled", false);
                                $("#btnStockTransferPrint").prop("disabled", false);
                            } else {
                                $("#btnStockTransferLock").prop("disabled", false);
                            }

                            $("#btnStockTransferClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnStockTransferSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockTransferSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockTransferJournal").prop("disabled", false);
                                $("#btnStockTransferUnlock").prop("disabled", false);
                                $("#btnStockTransferPrint").prop("disabled", false);
                            } else {
                                $("#btnStockTransferLock").prop("disabled", false);
                            }

                            $("#btnStockTransferClose").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnStockTransferSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockTransferSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockTransferJournal").prop("disabled", false);
                                $("#btnStockTransferUnlock").prop("disabled", false);
                                $("#btnStockTransferPrint").prop("disabled", false);
                            } else {
                                $("#btnStockTransferLock").prop("disabled", false);
                            }

                            $("#btnStockTransferClose").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ===================
        // Lock Stock Transfer
        // ===================
        function btnStockTransferLockOnclick() {
            var stockTransferObject = new Object();
            stockTransferObject.STDate = cboStockTransferSTDate.value.toLocaleDateString();
            stockTransferObject.ToBranchId = cboStockTransferToBranch.selectedValue;
            stockTransferObject.ArticleId = cboStockTransferArticle.selectedValue;
            stockTransferObject.Particulars = document.getElementById('inpStockTransferParticulars').value;
            stockTransferObject.ManualSTNumber = document.getElementById('inpStockTransferManualSTNumber').value;
            stockTransferObject.PreparedById = cboStockTransferPreparedBy.selectedValue;
            stockTransferObject.CheckedById = cboStockTransferCheckedBy.selectedValue;
            stockTransferObject.ApprovedById = cboStockTransferApprovedBy.selectedValue;
            stockTransferObject.Status = cboStockTransferStatus.selectedValue;
            var stockTransferData = JSON.stringify(stockTransferObject);

            var isValid = true;
            $('.requiredStockTransfer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnStockTransferLock').innerHTML = "<i class='fa fa-lock'></i> Locking...";
                $("#btnStockTransferSave").prop("disabled", true);
                $("#btnStockTransferJournal").prop("disabled", true);
                $("#btnStockTransferLock").prop("disabled", true);
                $("#btnStockTransferUnlock").prop("disabled", true);
                $("#btnStockTransferPrint").prop("disabled", true);
                $("#btnStockTransferClose").prop("disabled", true);

                var id = getURLParameterValue("id");

                $.ajax({
                    type: "PUT",
                    url: '/api/stockTransfer/lock/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: stockTransferData,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnStockTransferLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockTransferSave").prop("disabled", false);
                            $("#btnStockTransferLock").prop("disabled", false);
                            $("#btnStockTransferClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnStockTransferLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockTransferSave").prop("disabled", false);
                            $("#btnStockTransferLock").prop("disabled", false);
                            $("#btnStockTransferClose").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnStockTransferLock').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockTransferSave").prop("disabled", false);
                            $("#btnStockTransferLock").prop("disabled", false);
                            $("#btnStockTransferClose").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =====================
        // Unlock Stock Transfer
        // =====================
        function btnStockTransferUnlockOnclick() {
            document.getElementById('btnStockTransferUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlocking...";
            $("#btnStockTransferJournal").prop("disabled", true);
            $("#btnStockTransferLock").prop("disabled", true);
            $("#btnStockTransferUnlock").prop("disabled", true);
            $("#btnStockTransferPrint").prop("disabled", true);
            $("#btnStockTransferClose").prop("disabled", true);

            var id = getURLParameterValue("id");

            $.ajax({
                type: "PUT",
                url: '/api/stockTransfer/unlock/' + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnStockTransferUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockTransferUnlock").prop("disabled", false);
                        $("#btnStockTransferJournal").prop("disabled", false);
                        $("#btnStockTransferPrint").prop("disabled", false);
                        $("#btnStockTransferClose").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnStockTransferUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockTransferUnlock").prop("disabled", false);
                        $("#btnStockTransferJournal").prop("disabled", false);
                        $("#btnStockTransferPrint").prop("disabled", false);
                        $("#btnStockTransferClose").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnStockTransferUnlock').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockTransferUnlock").prop("disabled", false);
                        $("#btnStockTransferJournal").prop("disabled", false);
                        $("#btnStockTransferPrint").prop("disabled", false);
                        $("#btnStockTransferClose").prop("disabled", false);
                    }
                }
            });
        }

        // ====================
        // Print Stock Transfer
        // ====================
        function btnStockTransferPrintOnclick() {
            var stockTransferId = getURLParameterValue("id");
            var pirntLink = "/RepStockTransfer/StockTransfer?StockTransferId=" + stockTransferId;
            window.open(pirntLink, '_blank');
        }

        // =============================
        // Get Stock Transfer Items Data
        // =============================
        function getStockTransferItemsData() {
            var itemsObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                var STId = getURLParameterValue("id");
                $.ajax({
                    url: '/api/stockTransferItem/list/' + STId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        var totalAmount = 0;
                        if (results.length > 0) {
                            var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnStockTransferItemEditOnclick()'><i class='fa fa-edit'></i> Edit</button>";
                            var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnStockTransferItemDeleteOnclick()'><i class='fa fa-trash'></i> Delete</button>";
                            if (isLocked) {
                                btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnStockTransferItemEditOnclick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnStockTransferItemDeleteOnclick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                            }

                            for (i = 0; i < results.length; i++) {
                                itemsObservableArray.push({
                                    EditId: btnEditId,
                                    DeleteId: btnDeleteId,
                                    Id: results[i]["Id"],
                                    STId: results[i]["STId"],
                                    ItemId: results[i]["ItemId"],
                                    ItemCode: results[i]["ItemCode"],
                                    ItemManualArticleOldCode: results[i]["ItemManualArticleOldCode"],
                                    ItemDescription: results[i]["ItemDescription"],
                                    ItemInventoryId: results[i]["ItemInventoryId"],
                                    ItemInventoryCode: results[i]["ItemInventoryCode"],
                                    Particulars: results[i]["Particulars"],
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"],
                                    Quantity: results[i]["Quantity"],
                                    QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    Cost: results[i]["Cost"],
                                    CostDisplay: parseFloat(results[i]["Cost"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    Amount: results[i]["Amount"],
                                    AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    BaseUnitId: results[i]["BaseUnitId"],
                                    BaseUnit: results[i]["BaseUnit"],
                                    BaseQuantity: results[i]["BaseQuantity"],
                                    BaseQuantityDisplay: parseFloat(results[i]["BaseQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    BaseCost: results[i]["BaseCost"],
                                    BaseCostDisplay: parseFloat(results[i]["BaseCost"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                });

                                totalAmount += results[i]["Amount"];
                            }
                        }

                        document.getElementById('inpTotalStockTransferAmount').value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        NProgress.done();
                    }
                });
            }

            return itemsObservableArray;
        }

        // ===============
        // Show Rows Table
        // ===============
        function createCboShowRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboStockTransferItemsShowNumberOfRows.dispose();
            cboStockTransferItemsShowNumberOfRows = new wijmo.input.ComboBox('#cboStockTransferItemsShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboStockTransferItemsShowNumberOfRows.selectedValue;
                        stockTransferItemCollectionView.pageSize = parseInt(numberOfRows);
                        stockTransferItemCollectionView.refresh();
                        stockTransferItemFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });

            cboInventoryEntriesShowNumberOfRows.dispose();
            cboInventoryEntriesShowNumberOfRows = new wijmo.input.ComboBox('#cboInventoryEntriesShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboInventoryEntriesShowNumberOfRows.selectedValue;
                        inventoryEntriesCollectionView.pageSize = parseInt(numberOfRows);
                        inventoryEntriesCollectionView.refresh();
                        inventoryEntriesFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });
        }

        // =====================================
        // Create Stock Transfer Items Flex Grid
        // =====================================
        function createStockTransferItemsFlexGrid() {
            stockTransferItemCollectionView = new wijmo.collections.CollectionView(getStockTransferItemsData());
            stockTransferItemCollectionView.canFilter = true;
            stockTransferItemCollectionView.pageSize = cboStockTransferItemsShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpStockTransferItemsSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockTransferItemCollectionView.refresh();
            });

            stockTransferItemCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            stockTransferItemCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateStockTransferItemsNavigationButtons();
            });

            stockTransferItemFlexGrid = new wijmo.grid.FlexGrid('#stockTransferItemFlexGrid');
            stockTransferItemFlexGrid.initialize({
                columns: [
                   @{
                        if (canEdit)
                        {
                            <text>
                                {
                                    "header": "Edit",
                                    "binding": "EditId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                        if (canDelete)
                        {
                            <text>
                                {
                                    "header": "Delete",
                                    "binding": "DeleteId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                    }
                    {
                        "header": "Barcode",
                        "binding": "ItemCode",
                        "allowSorting": true,
                        "width": 110
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ItemManualArticleOldCode",
                        "allowSorting": true,
                        "width": 110
                    },
                    {
                        "header": "Description",
                        "binding": "ItemDescription",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": 120
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "ItemInventoryCode",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Cost",
                        "binding": "CostDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                    {
                        "header": "Unit",
                        "binding": "BaseUnit",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "Quantity",
                        "binding": "BaseQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                    {
                        "header": "Cost",
                        "binding": "BaseCostDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": 100
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: stockTransferItemCollectionView,
                isReadOnly: true,
                @{
                    if (canEdit)
                    {
                        if (canDelete)
                        {
                            <text>
                                frozenColumns: 2,
                            </text>
                        }
                        else
                        {
                            <text>
                                frozenColumns: 1,
                            </text>
                        }
                    }
                    else
                    {
                        if (canDelete)
                        {
                            <text>
                                frozenColumns: 1,
                            </text>
                        }
                        else
                        {
                            <text>
                                frozenColumns: 0,
                            </text>
                        }
                    }
                }
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockTransferItemFlexGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            stockTransferItemFlexGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            stockTransferItemFlexGrid.columnHeaders.rows.push(hr);
            stockTransferItemFlexGrid.columnHeaders.rows[0].allowMerging = true;

            @{
                if (canEdit)
                {
                    if (canDelete)
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 13; i++) {
                                if (i == 0) {
                                    columnName = "Edit";
                                } else if (i == 1) {
                                    columnName = "Delete";
                                } else if (i == 2) {
                                    columnName = "Barcode";
                                } else if (i == 3) {
                                    columnName = "SKU Code";
                                } else if (i == 4) {
                                    columnName = "Description";
                                } else if (i == 5) {
                                    columnName = "Particulars";
                                } else if (i == 6) {
                                    columnName = "Inventory Code";
                                } else if (i == 7) {
                                    columnName = "Quantity";
                                } else if (i == 8) {
                                    columnName = "Unit";
                                } else if (i == 9) {
                                    columnName = "Cost";
                                } else if (i == 10) {
                                    columnName = "Amount";
                                } else {
                                    if (i >= 11) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 11; j <= 13; j++) {
                                            stockTransferItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            stockTransferItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 10) {
                                    stockTransferItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    stockTransferItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                    else
                    {
                         <text>
                            var columnName = "";
                            for (var i = 0; i <= 12; i++) {
                                if (i == 0) {
                                    columnName = "Edit";
                                } else if (i == 1) {
                                    columnName = "Barcode";
                                } else if (i == 2) {
                                    columnName = "SKU Code";
                                } else if (i == 3) {
                                    columnName = "Description";
                                } else if (i == 4) {
                                    columnName = "Particulars";
                                } else if (i == 5) {
                                    columnName = "Inventory Code";
                                } else if (i == 6) {
                                    columnName = "Quantity";
                                } else if (i == 7) {
                                    columnName = "Unit";
                                } else if (i == 8) {
                                    columnName = "Cost";
                                } else if (i == 9) {
                                    columnName = "Amount";
                                } else {
                                    if (i >= 10) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 10; j <= 12; j++) {
                                            stockTransferItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            stockTransferItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 9) {
                                    stockTransferItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    stockTransferItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                }
                else
                {
                    if (canDelete)
                    {
                        <text>
                            var columnName = "";
                            for (var i = 0; i <= 12; i++) {
                                if (i == 0) {
                                    columnName = "Delete";
                                } else if (i == 1) {
                                    columnName = "Barcode";
                                } else if (i == 2) {
                                    columnName = "SKU Code";
                                } else if (i == 3) {
                                    columnName = "Description";
                                } else if (i == 4) {
                                    columnName = "Particulars";
                                } else if (i == 5) {
                                    columnName = "Inventory Code";
                                } else if (i == 6) {
                                    columnName = "Quantity";
                                } else if (i == 7) {
                                    columnName = "Unit";
                                } else if (i == 8) {
                                    columnName = "Cost";
                                } else if (i == 9) {
                                    columnName = "Amount";
                                } else {
                                    if (i >= 10) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 10; j <= 12; j++) {
                                            stockTransferItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            stockTransferItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 9) {
                                    stockTransferItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    stockTransferItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                    else
                    {
                         <text>
                            var columnName = "";
                            for (var i = 0; i <= 11; i++) {
                                if (i == 0) {
                                    columnName = "Barcode";
                                } else if (i == 1) {
                                    columnName = "SKU Code";
                                } else if (i == 2) {
                                    columnName = "Description";
                                } else if (i == 3) {
                                    columnName = "Particulars";
                                } else if (i == 4) {
                                    columnName = "Inventory Code";
                                } else if (i == 5) {
                                    columnName = "Quantity";
                                } else if (i == 6) {
                                    columnName = "Unit";
                                } else if (i == 7) {
                                    columnName = "Cost";
                                } else if (i == 8) {
                                    columnName = "Amount";
                                } else {
                                    if (i >= 9) {
                                        columnName = "Basic Unit Conversion";
                                        for (var j = 9; j <= 11; j++) {
                                            stockTransferItemFlexGrid.columnHeaders.columns[j].allowMerging = true;
                                            stockTransferItemFlexGrid.columnHeaders.setCellData(0, j, columnName);
                                        }
                                    }
                                }

                                if (i <= 8) {
                                    stockTransferItemFlexGrid.columnHeaders.columns[i].allowMerging = true;
                                    stockTransferItemFlexGrid.columnHeaders.setCellData(0, i, columnName);
                                }
                            }
                        </text>
                    }
                }
            }

            updateStockTransferItemsNavigationButtons();

            btnStockTransferItemMoveToFirstPageGrid.addEventListener('click', function () {
                stockTransferItemCollectionView.moveToFirstPage();
                updateStockTransferItemsNavigationButtons();
            });

            btnStockTransferItemMoveToPreviousPageGrid.addEventListener('click', function () {
                stockTransferItemCollectionView.moveToPreviousPage();
                updateStockTransferItemsNavigationButtons();
            });

            btnStockTransferItemMoveToNextPageGrid.addEventListener('click', function () {
                stockTransferItemCollectionView.moveToNextPage();
                updateStockTransferItemsNavigationButtons();
            });

            btnStockTransferItemMoveToLastPageGrid.addEventListener('click', function () {
                stockTransferItemCollectionView.moveToLastPage();
                updateStockTransferItemsNavigationButtons();
            });
        }

        // ==============================================
        // Update Stock Transfer Items Navigation Buttons
        // ==============================================
        function updateStockTransferItemsNavigationButtons() {
            if (stockTransferItemCollectionView.pageSize <= 0) {
                document.getElementById('stockTransferItemsNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('stockTransferItemsNavigationPageGrid').style.display = 'block';
            if (stockTransferItemCollectionView.pageIndex === 0) {
                btnStockTransferItemMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnStockTransferItemMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnStockTransferItemMoveToNextPageGrid.removeAttribute('disabled');
                btnStockTransferItemMoveToLastPageGrid.removeAttribute('disabled');
            } else if (stockTransferItemCollectionView.pageIndex === (stockTransferItemCollectionView.pageCount - 1)) {
                btnStockTransferItemMoveToFirstPageGrid.removeAttribute('disabled');
                btnStockTransferItemMoveToPreviousPageGrid.removeAttribute('disabled');
                btnStockTransferItemMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnStockTransferItemMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnStockTransferItemMoveToFirstPageGrid.removeAttribute('disabled');
                btnStockTransferItemMoveToPreviousPageGrid.removeAttribute('disabled');
                btnStockTransferItemMoveToNextPageGrid.removeAttribute('disabled');
                btnStockTransferItemMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnStockTransferItemCurrentPageGrid.innerHTML = (stockTransferItemCollectionView.pageIndex + 1) + ' / ' + stockTransferItemCollectionView.pageCount;
        }

        // ======================================
        // Refresh Stock Transfer Items Flex Grid
        // ======================================
        function refreshStockTransferItemsFlexGrid() {
            stockTransferItemCollectionView = new wijmo.collections.CollectionView(getStockTransferItemsData());
            stockTransferItemCollectionView.canFilter = true;
            stockTransferItemCollectionView.pageSize = cboStockTransferItemsShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpStockTransferItemsSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockTransferItemCollectionView.refresh();
            });

            stockTransferItemCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.BaseUnit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            stockTransferItemCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateStockTransferItemsNavigationButtons();
            });

            stockTransferItemFlexGrid.itemsSource = stockTransferItemCollectionView;
            stockTransferItemFlexGrid.trackChanges = true;
        }

        // ===================================
        // Create Combobox Stock Transfer Item
        // ===================================
        function createCboStockTransferItem(itemId, inventoryId, unitId) {
            var articleInventoryItemsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockTransferItem/dropdown/list/itemInventory/item',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleInventoryItemsObservableArray.push({
                                Id: results[i]["Id"],
                                ItemId: results[i]["ArticleId"],
                                ItemCode: results[i]["ManualArticleCode"],
                                ItemDescription: results[i]["Article"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                        $("#btnStockTransferItemSave").prop("disabled", false);
                    } else {
                        $("#btnStockTransferItemSave").prop("disabled", true);
                    }

                    cboStockTransferItemCode.dispose();
                    cboStockTransferItemCode = new wijmo.input.ComboBox('#cboStockTransferItemCode', {
                        disabled: disabled,
                        isEditable: false,
                        placeholder: "Select Code",
                        itemsSource: articleInventoryItemsObservableArray,
                        displayMemberPath: "ItemCode",
                        selectedValuePath: "ItemId",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboStockTransferItemDescription.selectedValue = this.selectedValue;
                        }
                    });

                    cboStockTransferItemDescription.dispose();
                    cboStockTransferItemDescription = new wijmo.input.ComboBox('#cboStockTransferItemDescription', {
                        disabled: disabled,
                        isEditable: false,
                        placeholder: "Select Item",
                        itemsSource: articleInventoryItemsObservableArray,
                        displayMemberPath: "ItemDescription",
                        selectedValuePath: "ItemId",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboStockTransferItemCode.selectedValue = this.selectedValue;
                            cboStockTransferItemInventoryCode.selectedValue = this.selectedItem["Id"];
                            createCboStockTransferItemInventoryCode(inventoryId, unitId);
                        }
                    });

                    createCboStockTransferItemInventoryCode(inventoryId, unitId);
                }
            });
        }

        // ==================================================
        // Create Combobox Stock Transfer Item Inventory Code
        // ==================================================
        function createCboStockTransferItemInventoryCode(inventoryId, unitId) {
            var articleInventoriesObservableArray = new wijmo.collections.ObservableArray();
            if (cboStockTransferItemDescription.selectedValue != null) {
                var itemId = cboStockTransferItemDescription.selectedValue;
                $.ajax({
                    url: '/api/stockTransferItem/dropdown/list/itemInventoryCode/' + itemId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                articleInventoriesObservableArray.push({
                                    Id: results[i]["Id"],
                                    InventoryCode: results[i]["InventoryCode"],
                                    Cost: results[i]["Cost"]
                                });
                            }
                        }

                        var disabled = true;
                        if (results.length > 0) {
                            var InventoryType = "@ViewData["InventoryType"]";
                            if (InventoryType == "Moving Average") {
                                disabled = true;
                            } else {
                                disabled = false;
                            }
                        } else {
                            $("#btnStockTransferItemSave").prop("disabled", true);
                        }

                        cboStockTransferItemInventoryCode.dispose();
                        cboStockTransferItemInventoryCode = new wijmo.input.ComboBox('#cboStockTransferItemInventoryCode', {
                            disabled: disabled,
                            isEditable: false,
                            placeholder: "Select Inventory Code",
                            itemsSource: articleInventoriesObservableArray,
                            displayMemberPath: "InventoryCode",
                            selectedValuePath: "Id",
                            selectedValue: inventoryId,
                            onSelectedIndexChanged: function () {
                                if (cboStockTransferItemInventoryCode.selectedValue != null) {
                                    document.getElementById("inpStockTransferItemCost").value = formatDecimalValues(cboStockTransferItemInventoryCode.selectedItem["Cost"]);
                                    computeAmount();
                                }
                            }
                        });

                        createCboStockTransferItemUnit(unitId);
                    }
                });
            } else {
                cboStockTransferItemInventoryCode.dispose();
                cboStockTransferItemInventoryCode = new wijmo.input.ComboBox('#cboStockTransferItemInventoryCode', {
                    disabled: true,
                    itemsSource: articleInventoriesObservableArray
                });

                createCboStockTransferItemUnit(unitId);
            }
        }

        // ========================================
        // Create Combobox Stock Transfer Item Unit
        // ========================================
        function createCboStockTransferItemUnit(unitId) {
            var stockTransferUnitsObservableArray = new wijmo.collections.ObservableArray();
            if (cboStockTransferItemDescription.selectedValue != null) {
                var itemId = cboStockTransferItemDescription.selectedValue;
                $.ajax({
                    url: '/api/stockTransferItem/dropdown/list/itemUnit/' + itemId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                stockTransferUnitsObservableArray.push({
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"],
                                });
                            }
                        }

                        var disabled = true;
                        if (results.length > 0) {
                            disabled = false;
                        } else {
                            $("#btnStockTransferItemSave").prop("disabled", true);
                        }

                        cboStockTransferItemUnit.dispose();
                        cboStockTransferItemUnit = new wijmo.input.ComboBox('#cboStockTransferItemUnit', {
                            isEditable: false,
                            placeholder: "Select Unit",
                            itemsSource: stockTransferUnitsObservableArray,
                            displayMemberPath: "Unit",
                            selectedValuePath: "UnitId",
                            selectedValue: unitId
                        });

                        $("#stockTransferItemLoading").hide();
                        $("#stockTransferItemContent").show();
                    }
                });
            } else {
                cboStockTransferItemUnit.dispose();
                cboStockTransferItemUnit = new wijmo.input.ComboBox('#cboStockTransferItemUnit', {
                    disabled: true,
                    itemsSource: stockTransferUnitsObservableArray
                });

                $("#stockTransferItemLoading").hide();
                $("#stockTransferItemContent").show();
            }
        }

        // =======================
        // Add Stock Transfer Item
        // =======================
        function btnStockTransferItemAddOnclick() {
            $('#stockTransferItemsDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnStockTransferItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockTransferItemSave").prop("disabled", true);
            $("#btnStockTransferItemCloseDetailModal").prop("disabled", false);

            document.getElementById('stockTransferItemsModalLabel').innerHTML = "Add Stock Transfer Item";

            $('.requiredStockTransfer').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#stockTransferItemLoading").show();
            document.getElementById("stockTransferItemLoading").innerHTML = 'Loading...';
            $("#stockTransferItemContent").hide();

            stockTransferItemId = 0;
            createCboStockTransferItem(0, 0, 0);
            document.getElementById('inpStockTransferItemParticulars').value = "NA";
            document.getElementById('inpStockTransferItemQuantity').value = formatDecimalValues(1);
            document.getElementById('inpStockTransferItemCost').value = formatDecimalValues(0);
            document.getElementById('inpStockTransferItemAmount').value = formatDecimalValues(0);
        }

        // ========================
        // Edit Stock Transfer Item
        // ========================
        function btnStockTransferItemEditOnclick() {
            $('#stockTransferItemsDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#stockTransferItemLoading").show();
            document.getElementById("stockTransferItemLoading").innerHTML = 'Loading...';
            $("#stockTransferItemContent").hide();

            document.getElementById('btnStockTransferItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockTransferItemSave").prop("disabled", true);
            $("#btnStockTransferItemCloseDetailModal").prop("disabled", false);

            document.getElementById('stockTransferItemsModalLabel').innerHTML = "Edit Stock Transfer Item";

            $('.requiredStockTransfer').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            stockTransferItemCollectionView.editItem(stockTransferItemCollectionView.currentItem);
            var item = stockTransferItemCollectionView.currentEditItem;
            stockTransferItemId = item.Id;
            createCboStockTransferItem(item.ItemId, item.ItemInventoryId, item.UnitId);
            document.getElementById('inpStockTransferItemParticulars').value = item.Particulars;
            document.getElementById('inpStockTransferItemQuantity').value = formatDecimalValues(item.Quantity);
            document.getElementById('inpStockTransferItemCost').value = formatDecimalValues(item.Cost);
            document.getElementById('inpStockTransferItemAmount').value = formatDecimalValues(item.Amount);
        }

        // ========================
        // Save Stock Transfer Item
        // ========================
        function btnStockTransferItemSaveOnclick() {
            var STId = getURLParameterValue("id");
            var stockTransferItemObject = new Object();
            stockTransferItemObject.ItemId = cboStockTransferItemDescription.selectedValue;
            stockTransferItemObject.ItemInventoryId = cboStockTransferItemInventoryCode.selectedValue;
            stockTransferItemObject.Particulars = document.getElementById('inpStockTransferItemParticulars').value;
            stockTransferItemObject.UnitId = cboStockTransferItemUnit.selectedValue;
            stockTransferItemObject.Quantity = document.getElementById('inpStockTransferItemQuantity').value;
            stockTransferItemObject.Cost = document.getElementById('inpStockTransferItemCost').value;
            stockTransferItemObject.Amount = document.getElementById('inpStockTransferItemAmount').value;
            var stockTransferItemData = JSON.stringify(stockTransferItemObject);

            var isValid = true;
            $('.requiredStockTransfer').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid) {
                document.getElementById('btnStockTransferItemSave').innerHTML = "<i class='fa fa-save'></i> Saving...";
                $("#btnStockTransferItemSave").prop("disabled", true);
                $("#btnStockTransferItemCloseDetailModal").prop("disabled", true);

                if (stockTransferItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/stockTransferItem/add/' + STId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockTransferItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");
                                $('#stockTransferItemsDetailModal').modal('hide');
                                refreshStockTransferItemsFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById('btnStockTransferItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockTransferItemSave").prop("disabled", false);
                                $("#btnStockTransferItemCloseDetailModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById('btnStockTransferItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockTransferItemSave").prop("disabled", false);
                                $("#btnStockTransferItemCloseDetailModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById('btnStockTransferItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockTransferItemSave").prop("disabled", false);
                                $("#btnStockTransferItemCloseDetailModal").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/stockTransferItem/update/' + stockTransferItemId + '/' + STId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockTransferItemData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#stockTransferItemsDetailModal').modal('hide');
                                refreshStockTransferItemsFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                $('#stockTransferItemsDetailModal').modal('hide');
                                document.getElementById('btnStockTransferItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockTransferItemSave").prop("disabled", false);
                                $("#btnStockTransferItemCloseDetailModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                $('#stockTransferItemsDetailModal').modal('hide');
                                document.getElementById('btnStockTransferItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockTransferItemSave").prop("disabled", false);
                                $("#btnStockTransferItemCloseDetailModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                $('#stockTransferItemsDetailModal').modal('hide');
                                document.getElementById('btnStockTransferItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockTransferItemSave").prop("disabled", false);
                                $("#btnStockTransferItemCloseDetailModal").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ==========================
        // Delete Stock Transfer Item
        // ==========================
        function btnStockTransferItemDeleteOnclick() {
            $('#stockTransferItemsConfirmDeleteModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnStockTransferItemConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#btnStockTransferItemConfirmDelete").prop("disabled", false);
            $("#btnStockTransferItemConfirmDeleteCloseButton").prop("disabled", false);
        }

        // ==================================
        // Confirm Delete Stock Transfer Item
        // ==================================
        function btnStockTransferItemConfirmDeleteOnclick() {
            document.getElementById('btnStockTransferItemConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Deleting...";
            $("#btnStockTransferItemConfirmDelete").prop("disabled", true);
            $("#btnStockTransferItemConfirmDeleteCloseButton").prop("disabled", true);

            stockTransferItemCollectionView.editItem(stockTransferItemCollectionView.currentItem);
            var id = stockTransferItemCollectionView.currentEditItem.Id;
            var STId = getURLParameterValue("id");

            $.ajax({
                url: '/api/stockTransferItem/delete/' + id + '/' + STId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#stockTransferItemsConfirmDeleteModal').modal('hide');
                        refreshStockTransferItemsFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#stockTransferItemsConfirmDeleteModal').modal('hide');
                        document.getElementById('btnStockTransferItemConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockTransferItemConfirmDelete").prop("disabled", false);
                        $("#btnStockTransferItemConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#stockTransferItemsConfirmDeleteModal').modal('hide');
                        document.getElementById('btnStockTransferItemConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockTransferItemConfirmDelete").prop("disabled", false);
                        $("#btnStockTransferItemConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#stockTransferItemsConfirmDeleteModal').modal('hide');
                        document.getElementById('btnStockTransferItemConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockTransferItemConfirmDelete").prop("disabled", false);
                        $("#btnStockTransferItemConfirmDeleteCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ==============
        // Compute Amount
        // ==============
        $('#inpStockTransferItemQuantity').keyup(function () { computeAmount(); });
        $('#inpStockTransferItemCost').keyup(function () { computeAmount(); });
        function computeAmount() {
            var stockTransferQuantity = document.getElementById('inpStockTransferItemQuantity').value.replace(/\,/g, '');
            var stockTransferCost = document.getElementById('inpStockTransferItemCost').value.replace(/\,/g, '');
            var totalAmount = stockTransferQuantity * stockTransferCost;
            document.getElementById('inpStockTransferItemAmount').value = formatDecimalValues(totalAmount);
        }

        // ==========================
        // Get Inventory Entries Data
        // ==========================
        function getInventoryEntriesData() {
            NProgress.start();
            var STId = getURLParameterValue('id');
            var inventoryObservableArray = new wijmo.collections.ObservableArray;

            $.ajax({
                url: '/api/inventory/stockTransfer/list/' + STId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var InventoryDateResult = new Date(results[i]["InventoryDate"])
                            var InventoryDate = ('0' + (InventoryDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + InventoryDateResult.getDate()).slice(-2) + '-' + InventoryDateResult.getFullYear();

                            inventoryObservableArray.push({
                                Id: results[i]["Id"],
                                InventoryDate: InventoryDate,
                                Branch: results[i]["Branch"],
                                Article: results[i]["Article"],
                                Particulars: results[i]["Particulars"],
                                ArticleInventoryCode: results[i]["ArticleInventoryCode"],
                                Quantity: results[i]["Quantity"],
                                QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                ArticleUnit: results[i]["ArticleUnit"],
                                Amount: results[i]["Amount"],
                                AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return inventoryObservableArray;
        }

        // ==================================
        // Create Inventory Entries Flex Grid
        // ==================================
        function createInventoryEntriesFlexGrid() {
            inventoryEntriesCollectionView = new wijmo.collections.CollectionView(getInventoryEntriesData());
            inventoryEntriesCollectionView.canFilter = true;
            inventoryEntriesCollectionView.pageSize = cboInventoryEntriesShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpInventoryEntriesSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryEntriesCollectionView.refresh();
            });

            inventoryEntriesCollectionView.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleUnit.toLowerCase().indexOf(filterText) > -1);
            }

            inventoryEntriesCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateInventoryEntriesNavigationButtons();
            });

            inventoryEntriesFlexGrid.dispose();
            inventoryEntriesFlexGrid = new wijmo.grid.FlexGrid('#inventoryEntriesFlexGrid');
            inventoryEntriesFlexGrid.initialize({
                columns: [
                    {
                        "header": "Date",
                        "binding": "InventoryDate",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.7*",
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "align": "left",
                        "allowSorting": true,
                        "width": "1.5*",
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "ArticleInventoryCode",
                        "allowSorting": true,
                        "width": "1.3*",
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*",
                    },
                    {
                        "header": "Unit",
                        "binding": "ArticleUnit",
                        "allowSorting": true,
                        "width": "1*",
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*",
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryEntriesCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntriesFlexGrid.trackChanges = true;

            updateInventoryEntriesNavigationButtons();

            btnInventoryEntriesMoveToFirstPageGrid.addEventListener('click', function () {
                inventoryEntriesCollectionView.moveToFirstPage();
                updateInventoryEntriesNavigationButtons();
            });

            btnInventoryEntriesMoveToPreviousPageGrid.addEventListener('click', function () {
                inventoryEntriesCollectionView.moveToPreviousPage();
                updateInventoryEntriesNavigationButtons();
            });

            btnInventoryEntriesMoveToNextPageGrid.addEventListener('click', function () {
                inventoryEntriesCollectionView.moveToNextPage();
                updateInventoryEntriesNavigationButtons();
            });

            btnInventoryEntriesMoveToLastPageGrid.addEventListener('click', function () {
                inventoryEntriesCollectionView.moveToLastPage();
                updateInventoryEntriesNavigationButtons();
            });
        }

        // ===========================================
        // Update Enventory Entries Navigation Buttons
        // ===========================================
        function updateInventoryEntriesNavigationButtons() {
            if (inventoryEntriesCollectionView.pageSize <= 0) {
                document.getElementById('inventoryEntriesNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('inventoryEntriesNavigationPageGrid').style.display = 'block';
            if (inventoryEntriesCollectionView.pageIndex === 0) {
                btnInventoryEntriesMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToNextPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToLastPageGrid.removeAttribute('disabled');
            } else if (inventoryEntriesCollectionView.pageIndex === (inventoryEntriesCollectionView.pageCount - 1)) {
                btnInventoryEntriesMoveToFirstPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnInventoryEntriesMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnInventoryEntriesMoveToFirstPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToPreviousPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToNextPageGrid.removeAttribute('disabled');
                btnInventoryEntriesMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnInventoryEntriesCurrentPageGrid.innerHTML = (inventoryEntriesCollectionView.pageIndex + 1) + ' / ' + inventoryEntriesCollectionView.pageCount;
        }

        // ===================================
        // Refresh Enventory Entries Flex Grid
        // ===================================
        function refreshInventoryEntriesFlexGrid() {
            inventoryCollectionView = new wijmo.collections.CollectionView(getInventoryEntriesData());
            inventoryCollectionView.canFilter = true;
            inventoryCollectionView.pageSize = cboInventoryEntriesShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpInventoryEntriesSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryCollectionView.refresh();
            });

            inventoryCollectionView.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleInventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ArticleUnit.toLowerCase().indexOf(filterText) > -1);
            }

            inventoryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateInventoryEntriesNavigationButtons();
            });

            inventoryEntriesFlexGrid.itemsSource = inventoryCollectionView;
            inventoryEntriesFlexGrid.trackChanges = true;
        }

        // ================
        // Get Journal Data
        // ================
        function getJournalData() {
            var journalsObservableArray = new wijmo.collections.ObservableArray;
            var STId = getURLParameterValue("id");

            $.ajax({
                url: '/api/jounal/stockTransfer/list/' + STId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    var totalDebitAmount = 0;
                    var totalCreditAmount = 0;

                    var variance = 0;

                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var journalDateResult = new Date(results[i]["JournalDate"])
                            var journalDate = ('0' + (journalDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + journalDateResult.getDate()).slice(-2) + '-' + journalDateResult.getFullYear();

                            journalsObservableArray.push({
                                Branch: results[i]["Branch"],
                                JournalDate: journalDate,
                                AccountCode: results[i]["AccountCode"],
                                Account: results[i]["Account"],
                                Article: results[i]["Article"],
                                DebitAmountDisplay: parseFloat(results[i]["DebitAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                CreditAmountDisplay: parseFloat(results[i]["CreditAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                            });

                            var debit = parseFloat(Math.round(results[i]["DebitAmount"] * 100) / 100);
                            var credit = parseFloat(Math.round(results[i]["CreditAmount"] * 100) / 100);

                            totalDebitAmount += debit;
                            totalCreditAmount += credit;
                        }

                        variance = totalDebitAmount - totalCreditAmount;
                    }

                    document.getElementById('inpJournalTotalDebit').value = parseFloat(Math.round(totalDebitAmount * 100) / 100).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById('inpJournalTotalCredit').value = parseFloat(Math.round(totalCreditAmount * 100) / 100).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById('inpJournalVariance').value = parseFloat(Math.round(variance * 100) / 100).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

                    $("#journalLoading").hide();
                    $("#journalContent").show();
                }
            });

            return journalsObservableArray;
        }

        // ===============
        // Display Journal
        // ===============
        function btnStockOutJournalOnclick() {
            $('#journalEntryModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#journalLoading").show();
            document.getElementById("journalLoading").innerHTML = 'Loading...';
            $("#journalContent").hide();

            setTimeout(function () {
                createJournalFlexgrid();
            }, 500)
        }

        // ========================
        // Create Journal Flex Grid
        // ========================
        function createJournalFlexgrid() {
            journalCollectionView = new wijmo.collections.CollectionView(getJournalData());

            journalFlexGrid.dispose();
            journalFlexGrid = new wijmo.grid.FlexGrid('#journalFlexGrid');
            journalFlexGrid.initialize({
                columns: [
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": "2.5*"
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": "1.5*"
                    },
                    {
                        "header": "Code",
                        "binding": "AccountCode",
                        "allowSorting": true,
                        "width": "1.8*"
                    },
                    {
                        "header": "Account",
                        "binding": "Account",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Article",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*",
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalFlexGrid.trackChanges = true;
        }

        // ===================
        // Get Item Query Data
        // ===================
        function getItemQueryData() {
            var itemsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockTransferItem/popUp/list/itemQuery',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    for (i = 0; i < results.length; i++) {
                        itemsObservableArray.push({
                            Id: results[i]["Id"],
                            ArticleId: results[i]["ArticleId"],
                            ManualArticleCode: results[i]["ManualArticleCode"],
                            ManualArticleOldCode: results[i]["ManualArticleOldCode"],
                            Article: results[i]["Article"],
                            UnitId: results[i]["UnitId"],
                            Unit: results[i]["Unit"],
                            InventoryCode: results[i]["InventoryCode"],
                            Price: results[i]["Price"],
                            PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            Quantity: results[i]["Quantity"],
                            QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            Cost: results[i]["Cost"],
                            CostDisplay: parseFloat(results[i]["Cost"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            Amount: results[i]["Amount"],
                            AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                            Particulars: results[i]["Particulars"],
                            Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='btnItemQueryPickOnclick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                        });
                    }

                    $("#itemQueryContent").show();
                    $("#itemQueryLoading").hide();
                }
            });

            return itemsObservableArray;
        }

        // ===========================
        // Create Item Query Flex Grid
        // ===========================
        function createItemQueryFlexGrid() {
            itemQueryItemsCollectionView = new wijmo.collections.CollectionView(getItemQueryData());
            itemQueryItemsCollectionView.canFilter = true;
            itemQueryItemsCollectionView.pageSize = 10;

            var filterText = '';
            $('#itemQueryFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryItemsCollectionView.refresh();
            });

            itemQueryItemsCollectionView.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || (item.InventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            itemQueryItemsCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateItemQueryNavigationButtons();
            });

            itemQueryItemsFlexGrid.dispose();
            itemQueryItemsFlexGrid = new wijmo.grid.FlexGrid('#itemQueryItemsFlexGrid');
            itemQueryItemsFlexGrid.initialize({
                columns: [
                    {
                        "header": "Barcode",
                        "binding": "ManualArticleCode",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ManualArticleOldCode",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Inventory",
                        "binding": "InventoryCode",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Cost",
                        "binding": "CostDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 80
                    },
                    {
                        "header": "Pick",
                        "binding": "Pick",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryItemsCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryItemsFlexGrid.trackChanges = true;

            if (!isItemQueryClicked) {
                updateItemQueryNavigationButtons();

                btnItemQueryMoveToFirstPageGrid.addEventListener('click', function () {
                    itemQueryItemsCollectionView.moveToFirstPage();
                    updateItemQueryNavigationButtons();
                });

                btnItemQueryMoveToPreviousPageGrid.addEventListener('click', function () {
                    itemQueryItemsCollectionView.moveToPreviousPage();
                    updateItemQueryNavigationButtons();
                });

                btnItemQueryMoveToNextPageGrid.addEventListener('click', function () {
                    itemQueryItemsCollectionView.moveToNextPage();
                    updateItemQueryNavigationButtons();
                });

                btnItemQueryMoveToLastPageGrid.addEventListener('click', function () {
                    itemQueryItemsCollectionView.moveToLastPage();
                    updateItemQueryNavigationButtons();
                });

                isItemQueryClicked = true;
            }
        }

        // ====================================
        // Update Item Query Navigation Buttons
        // ====================================
        function updateItemQueryNavigationButtons() {
            if (itemQueryItemsCollectionView.pageSize <= 0) {
                document.getElementById('ItemQueryNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('ItemQueryNavigationPageGrid').style.display = 'block';
            if (itemQueryItemsCollectionView.pageIndex === 0) {
                btnItemQueryMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToLastPageGrid.removeAttribute('disabled');
            } else if (itemQueryItemsCollectionView.pageIndex === (itemQueryItemsCollectionView.pageCount - 1)) {
                btnItemQueryMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnItemQueryMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnItemQueryCurrentPageGrid.innerHTML = (itemQueryItemsCollectionView.pageIndex + 1) + ' / ' + itemQueryItemsCollectionView.pageCount;
        }

        // =======================
        // Launch Item Query Modal
        // =======================
        function btnItemQueryOnclick() {
            $('#itemQueryModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#itemQueryContent").hide();
            $("#itemQueryLoading").show();
            document.getElementById("itemQueryLoading").innerHTML = "Loading...";

            setTimeout(function () {
                createItemQueryFlexGrid();
            }, 500);
        }

        // ===============
        // Pick Item Query
        // ===============
        function btnItemQueryPickOnclick() {
            $('#stockTransferItemsDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#stockTransferItemLoading").show();
            document.getElementById("stockTransferItemLoading").innerHTML = 'Loading...';
            $("#stockTransferItemContent").hide();

            document.getElementById('btnStockTransferItemSave').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockTransferItemSave").prop("disabled", true);
            $("#btnStockTransferItemCloseDetailModal").prop("disabled", false);

            document.getElementById('stockTransferItemsModalLabel').innerHTML = "Add Stock Transfer Item";

            $('.requiredStockTransfer').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            itemQueryItemsCollectionView.editItem(itemQueryItemsCollectionView.currentItem);
            var item = itemQueryItemsCollectionView.currentEditItem;
            stockTransferItemId = 0;
            createCboStockTransferItem(item.ArticleId, item.Id, item.UnitId);
            document.getElementById('inpStockTransferItemParticulars').value = "NA";
            document.getElementById('inpStockTransferItemQuantity').value = formatDecimalValues(item.Quantity);
            document.getElementById('inpStockTransferItemCost').value = formatDecimalValues(item.Cost);
            document.getElementById('inpStockTransferItemAmount').value = formatDecimalValues(item.Quantity * item.Cost);
        }

        // ====
        // TABS
        // ====
        $('#tabStockTransferItems').click(function () {
            $('#tabPaneStockTransferItems').show();
            $('#tabPaneInventoryEntries').hide();
            NProgress.start();
            refreshStockTransferItemsFlexGrid();
        });
        $('#tabInventoryEntries').click(function () {
            $('#tabPaneStockTransferItems').hide();
            $('#tabPaneInventoryEntries').show();
            NProgress.start();
            refreshInventoryEntriesFlexGrid();
        });

        // ======================
        // Launch Multiple Modals
        // ======================
        $(document).on('show.bs.modal', '.modal', function (event) {
            var zIndex = 1040 + (10 * $('.modal:visible').length);
            $(this).css('z-index', zIndex);
            setTimeout(function () {
                $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
            }, 0);
        });

        $(document).on('hidden.bs.modal', '.modal', function () {
            $('.modal:visible').length && $(document.body).addClass('modal-open');
        });

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            createCboStockTransferDetailBranch();
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>