@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Transfer</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock Transfer
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control " id="InputFilter" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 40%" align="right">
                                    @{
                                        if (canAdd)
                                        {
                                            <button class="btn btn-primary" id="btnAddStockTransfer" onclick="btnAddStockTransfer_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                        }
                                    }
                                    <button class="btn btn-danger" id="btnCloseStockTransfer" onclick="btnCloseStockTransfer_OnClick()"><i class=" fa fa-times"></i> Close</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 29%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Start Date</b></span>
                                        <div id="cboStartDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 29%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>End Date</b></span>
                                        <div id="cboEndDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 41%"></td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">
                        <div id="StockTransferGrid"></div>
                    </div>
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!-- StockTransfer Delete -->
    <div class="modal fade" id="deleteStockTransferConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this stock transfer?
                </div>
                <div class="modal-footer">
                    <button id="cmdConfirmDeleteStockTransfer" class="btn btn-danger" onclick="cmdStockTransferConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var stockTransfers;
        var stockTransferGrid;
        var btnFirstPageGrid;
        var btnPreviousPageGrid;
        var btnNextPageGrid;
        var btnLastPageGrid;
        var btnCurrentPageGrid;
        var cboStartDateFilter = new wijmo.input.InputDate('#cboStartDateFilter');
        var cboEndDateFilter = new wijmo.input.InputDate('#cboEndDateFilter');
        var isStartDateFirstSelect = true;
        var isEndDateFirstSelect = true;

        // ===========
        // Date Filter
        // ===========
        function cboDateFilters() {
            cboStartDateFilter.dispose();
            cboStartDateFilter = new wijmo.input.InputDate('#cboStartDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                onValueChanged: function () {
                    if (!isStartDateFirstSelect) {
                        refreshStockTransferFlexGrid();
                    } else {
                        isStartDateFirstSelect = false;
                    }
                }
            });

            cboEndDateFilter.dispose();
            cboEndDateFilter = new wijmo.input.InputDate('#cboEndDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                onValueChanged: function () {
                    if (!isEndDateFirstSelect) {
                        refreshStockTransferFlexGrid();
                    } else {
                        isEndDateFirstSelect = false;
                    }
                }
            });
        }

        // =======================================
        // GET Stock Transfer List Flter by STDate
        // =======================================
        function getStockTransferFilterBySTDate() {
            NProgress.start();
            var startDate = cboStartDateFilter.value.toLocaleDateString().replace(/\//g, '-');
            var endDate = cboEndDateFilter.value.toLocaleDateString().replace(/\//g, '-');

            var stockTransfers = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/stockTransfer/list/' + startDate + '/' + endDate,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            var STDateResult = new Date(results[i]["STDate"])
                            var STDate = ('0' + (STDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + STDateResult.getDate()).slice(-2) + '-' + STDateResult.getFullYear();

                            stockTransfers.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='StockTransferEditButton' onclick='cmdStockTransferEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdStockTransferDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: results[i]["Id"],
                                Branch: results[i]["Branch"],
                                STNumber: results[i]["STNumber"],
                                STDate: STDate,
                                ManualSTNumber: results[i]["ManualSTNumber"],
                                ToBranch: results[i]["ToBranch"],
                                Particulars: results[i]["Particulars"],
                                IsLocked: results[i]["IsLocked"],
                                CreatedBy: results[i]["CreatedBy"],
                                CreatedDateTime: results[i]["CreatedDateTime"],
                                UpdatedBy: results[i]["UpdatedBy"],
                                UpdatedDateTime: results[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return stockTransfers;
        }

        // =========================
        // Stock Transfer Add Button
        // =========================
        function btnAddStockTransfer_OnClick() {
            document.getElementById('btnAddStockTransfer').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Adding";
            $('#btnAddStockTransfer').prop('disabled', true);
            $('#btnCloseStockTransfer').prop('disabled', true);

            $.ajax({
                type: "POST",
                url: '/api/stockTransfer/add',
                contentType: "application/json; charset=utf-8",
                statusCode: {
                    200: function (id) {
                        window.location = '/Software/StockTransferDetail?id=' + id;
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnAddStockTransfer').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnAddStockTransfer').prop('disabled', false);
                        $('#btnCloseStockTransfer').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnAddStockTransfer').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnAddStockTransfer').prop('disabled', false);
                        $('#btnCloseStockTransfer').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnAddStockTransfer').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnAddStockTransfer').prop('disabled', false);
                        $('#btnCloseStockTransfer').prop('disabled', false);
                    }
                }
            });
        }

        // ===========================
        // Stock Transfer Close Button
        // ===========================
        function btnCloseStockTransfer_OnClick() {
            window.location = '/Software';
        }

        // ==========================
        // Stock Transfer Edit Button
        // ==========================
        function cmdStockTransferEditButton_OnClick() {
            stockTransfers.editItem(stockTransfers.currentItem);
            var stockTransfer = stockTransfers.currentEditItem;
            var stockTransferId = stockTransfer.Id;
            window.location = '/Software/StockTransferDetail?id=' + stockTransferId;
        }

        // ============================
        // Stock Transfer delete Button
        // ============================
        function cmdStockTransferDeleteButton_OnClick() {
            stockTransfers.editItem(stockTransfers.currentItem);
            var stockTransfer = stockTransfers.currentEditItem;
            if (stockTransfer.IsLocked) {
                toastr.error("Delete is not allowed when the selected record is locked!");
            } else {
                $('#deleteStockTransferConfirm').modal({
                    show: true,
                    backdrop: 'static'
                });

                document.getElementById('cmdConfirmDeleteStockTransfer').innerHTML = "<i class='fa fa-trash'></i> Delete";
                $("#cmdConfirmDeleteStockTransfer").prop("disabled", false);
                $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
            }
        }

        // Company Confirm Delete Button
        function cmdStockTransferConfirmDeleteButton_OnClick() {
            document.getElementById('cmdConfirmDeleteStockTransfer').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $("#cmdConfirmDeleteStockTransfer").prop("disabled", true);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", true);

            stockTransfers.editItem(stockTransfers.currentItem);
            var id = stockTransfers.currentEditItem.Id;

            $.ajax({
                url: '/api/stockTransfer/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#deleteStockTransferConfirm').modal('hide');
                        refreshStockTransferFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#deleteStockTransferConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteStockTransfer').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdConfirmDeleteStockTransfer").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#deleteStockTransferConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteStockTransfer').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdConfirmDeleteStockTransfer").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#deleteStockTransferConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteStockTransfer').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#cmdConfirmDeleteStockTransfer").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ===================
        // FlexGrid Selection
        // ===================
        function updateDetails() {
            var item = stockTransfers.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ===============================
        // Navigation Buttons for Comapany
        // ===============================
        function updateNavigateButtonsStockTransfer() {
            if (stockTransfers.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            if (stockTransfers.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (stockTransfers.pageIndex === (stockTransfers.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (stockTransfers.pageIndex + 1) + ' / ' + stockTransfers.pageCount;
        }

        // ===============================
        // Refresh Stock Transfer FlexGrid
        // ===============================
        function refreshStockTransferFlexGrid() {
            stockTransfers = new wijmo.collections.CollectionView(getStockTransferFilterBySTDate());
            stockTransfers.canFilter = true;
            stockTransfers.pageSize = 15;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockTransfers.refresh();
            });
            stockTransfers.filter = function (item) {
                return !filterText || (item.STNumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualSTNumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || (item.ToBranch.toLowerCase().indexOf(filterText) > -1)
                    || (item.Particulars.toLowerCase().indexOf(filterText) > -1);
            }
            stockTransfers.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsStockTransfer();
            });
            stockTransfers.currentChanged.addHandler(function (sender, args) {
                updateDetails();
            });

            stockTransferGrid.itemsSource = stockTransfers;
            stockTransferGrid.trackChanges = true;
        }

        // =======================
        // Stock Transfer FlexGrid
        // =======================
        function createStockTransferFlexGrid() {
            cboDateFilters();
            stockTransfers = new wijmo.collections.CollectionView(getStockTransferFilterBySTDate());
            stockTransfers.canFilter = true;
            stockTransfers.pageSize = 15;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockTransfers.refresh();
            });
            stockTransfers.filter = function (item) {
                return !filterText || (item.STNumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualSTNumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || (item.ToBranch.toLowerCase().indexOf(filterText) > -1)
                    || (item.Particulars.toLowerCase().indexOf(filterText) > -1);
            }
            stockTransfers.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsStockTransfer();
            });
            stockTransfers.currentChanged.addHandler(function (sender, args) {
                updateDetails();
            });

            // Flex Grid
            stockTransferGrid = new wijmo.grid.FlexGrid('#StockTransferGrid');
            stockTransferGrid.initialize({
                columns: [
                            @{
                                if (canEdit)
                                {
                                    <text>
                                        {
                                            "header": "Edit",
                                            "binding": "EditId",
                                            "width": 70,
                                            "align": "center",
                                            "allowResizing": false,
                                            "allowSorting": false,
                                            "isContentHtml": true
                                        },
                                    </text>
                                }
                                if (canDelete)
                                {
                                    <text>
                                        {
                                            "header": "Delete",
                                            "binding": "DeleteId",
                                            "width": 70,
                                            "align": "center",
                                            "allowResizing": false,
                                            "allowSorting": false,
                                            "isContentHtml": true
                                        },
                                    </text>
                                }
                            }
                            {
                                "header": "ST Number",
                                "binding": "STNumber",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "ST Date",
                                "binding": "STDate",
                                "allowSorting": true,
                                "width": 90
                            },
                            {
                                "header": "Manual ST No.",
                                "binding": "ManualSTNumber",
                                "allowSorting": true,
                                "width": 120
                            },
                            {
                                "header": "From Branch",
                                "binding": "Branch",
                                "allowSorting": true,
                                "width": "2.5*"
                            },
                            {
                                "header": "To Branch",
                                "binding": "ToBranch",
                                "allowSorting": true,
                                "width": "2.5*"
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "L",
                                "binding": "IsLocked",
                                "allowSorting": true,
                                "width": 50
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: stockTransfers,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockTransferGrid.trackChanges = true;

            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtonsStockTransfer();

            btnFirstPageGrid.addEventListener('click', function () {
                stockTransfers.moveToFirstPage();
                updateNavigateButtonsStockTransfer();
            });

            btnPreviousPageGrid.addEventListener('click', function () {
                stockTransfers.moveToPreviousPage();
                updateNavigateButtonsStockTransfer();
            });

            btnNextPageGrid.addEventListener('click', function () {
                stockTransfers.moveToNextPage();
                updateNavigateButtonsStockTransfer();
            });

            btnLastPageGrid.addEventListener('click', function () {
                stockTransfers.moveToLastPage();
                updateNavigateButtonsStockTransfer();
            });
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            createStockTransferFlexGrid();
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesresults) {
                    if (userBranchesresults.length > 0) {
                        for (i = 0; i < userBranchesresults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesresults[i]["BranchId"],
                                Branch: userBranchesresults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>