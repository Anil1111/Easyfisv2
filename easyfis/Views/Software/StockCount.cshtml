<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <title>Stock Count</title>

    <!-- CSS StyleSheets-->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    @Styles.Render("~/Content/Software-css")
</head>
<body class="">

    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock Count <br />  <small>@ViewData["Company"] &nbsp; | &nbsp; @ViewData["Branch"]</small>
                    </h3>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control " id="inputIdStockCountSearch" placeholder="Search">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 40%" align="right">
                                    <button class="btn btn-primary " id="btnAddStockCount" onclick="btnAddStockCount_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                    <button class="btn btn-danger " id="btnCloseStockCount" onclick="btnCloseStockCount_OnClick()"><i class=" fa fa-times"></i> Close</button>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 29%">
                                    <div class="input-group ">
                                        <span class="input-group-addon">Start Date</span>
                                        <div id="divIdStockCountSCDate"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 29%">
                                    <div class="input-group ">
                                        <span class="input-group-addon">End Date</span>
                                        <div id="divIdStockCountSCEndDate"></div>
                                    </div>
                                </td>
                                <td style="width: 41%"></td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-12">
                                <div id="divIdStockCountGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="divIdNavigationPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnIdMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnIdMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnIdCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnIdMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnIdMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    <!-- Stock Count Confirm Delete Modal -->
    <div class="modal fade" id="divIdStockCountConfirmDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Stock Count <i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger " id="btnIdStockCountConfirmDeleteModalDelete" onclick="btnOnClickStockCountConfirmDeleteModalDelete()"><i class="fa fa-trash"></i> Delete</button>
                    <button class="btn btn-primary " id="btnIdConfirmDeleteModalClose" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Stock Count Delete Lock -->
    <div class="modal fade" id="divIdStockCountDeleteLockModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Record Locked <i class="fa fa-lock"></i></h4>
                </div>
                <div class="modal-body">
                    Sorry, the record is lock. Cannot be deleted.
                </div>
                <div class="modal-footer">
                    <button id="btnIdStockCountDeleteLockModalOkay" class="btn btn-primary " data-dismiss="modal"> Okay</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // Global Variables
        var stockCounts;
        var stockCountGrid;
        var btnStockCountFirstPageGrid;
        var btnStockCountPreviousPageGrid;
        var btnStockCountNextPageGrid;
        var btnStockCountLastPageGrid;
        var btnStockCountCurrentPageGrid;
        var cboFilterDateIsFirstSelect = true;
        var cboFilterEndDateIsFirstSelect = true;
        var cboStockCountSCDate;
        var stockCountSCDateValue;
        var stockCountSCEndDateValue;

        // List StockCount By SCDate
        function listStockCountBySCDateByBranchId(SCDate) {
            NProgress.start();
            var stockCounts = new wijmo.collections.ObservableArray;

            var startDate = stockCountSCDateValue;
            var endDate = stockCountSCEndDateValue;

            $.ajax({
                url: '/api/stockCount/listBySCDateByBranchId/' + startDate + '/' + endDate,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (stockCountResults) {
                    if (stockCountResults.length > 0) {
                        for (i = 0; i < stockCountResults.length; i++) {
                            var canDelete = "@ViewData["CanDelete"]";
                            var deleteDisabled;

                            if (canDelete == "True") {
                                deleteDisabled = "";
                            } else if (canDelete == "False") {
                                deleteDisabled = "disabled";
                            } else {
                                deleteDisabled = "disabled";
                            }

                            var btnDeleteId;
                            if (stockCountResults[i]["IsLocked"] == true) {
                                btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnOnclickStockCountDeleteLock()' " + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                            } else {
                                btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnOnclickStockCountDelete()' " + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                            }

                            var canEdit = "@ViewData["CanEdit"]";
                            var editDisabled;

                            if (canEdit == "True") {
                                editDisabled = "";
                            } else if (canEdit == "False") {
                                editDisabled = "disabled";
                            } else {
                                editDisabled = "disabled";
                            }

                            // Array Push
                            stockCounts.push({
                                Edit: "<button class='btn btn-primary btn-xs btn-block' id='btnStockCountEdit' onclick='btnOnclickStockCountEdit()'" + editDisabled + "><i class='fa fa-edit'></i> Edit</button>",
                                Delete: btnDeleteId,
                                Id: stockCountResults[i]["Id"],
                                BranchId: stockCountResults[i]["BranchId"],
                                Branch: stockCountResults[i]["Branch"],
                                SCNumber: stockCountResults[i]["SCNumber"],
                                SCDate: stockCountResults[i]["SCDate"],
                                Particulars: stockCountResults[i]["Particulars"],
                                PreparedById: stockCountResults[i]["PreparedById"],
                                PreparedBy: stockCountResults[i]["PreparedBy"],
                                CheckedById: stockCountResults[i]["CheckedById"],
                                CheckedBy: stockCountResults[i]["CheckedBy"],
                                ApprovedById: stockCountResults[i]["ApprovedById"],
                                ApprovedBy: stockCountResults[i]["ApprovedBy"],
                                IsLocked: stockCountResults[i]["IsLocked"],
                                CreatedById: stockCountResults[i]["CreatedById"],
                                CreatedBy: stockCountResults[i]["CreatedBy"],
                                CreatedDateTime: stockCountResults[i]["CreatedDateTime"],
                                UpdatedById: stockCountResults[i]["UpdatedById"],
                                UpdatedBy: stockCountResults[i]["UpdatedBy"],
                                UpdatedDateTime: stockCountResults[i]["UpdatedDateTime"]
                            });
                        }
                    }
                    NProgress.done();
                }
            });
            return stockCounts;
        }

        function btnAddStockCount_OnClick() {
            document.getElementById('btnAddStockCount').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Adding";
            $('#btnAddStockCount').prop('disabled', true);
            $('#btnCloseStockCount').prop('disabled', true);

            var canAccessToDetailPage = "@ViewData["CanAccessToDetailPage"]";
            if (canAccessToDetailPage == "True") {
                $.ajax({
                    type: "POST",
                    url: '/api/stockCount/save',
                    contentType: "application/json; charset=utf-8",
                    success: function (id) {
                        if (id > 0) {
                            window.location = '/Software/StockCountDetail?Id=' + id;
                        } else {
                            toastr.error("Internal Server Error");
                        }
                    }
                });
            } else if (canAccessToDetailPage == "False") {
                window.location = '/Software/Forbidden';
            } else {
                document.getElementById('btnAddStockCount').innerHTML = "<i class='fa fa-plus'></i> Add";
                $('#btnAddStockCount').prop('disabled', false);
                $('#btnCloseStockCount').prop('disabled', false);
            }
        }

        function btnCloseStockCount_OnClick() {
            window.location = '/Software';
        }

        // Stock Count Edit
        function btnOnclickStockCountEdit() {
            stockCounts.editItem(stockCounts.currentItem);
            var stockCount = stockCounts.currentEditItem;
            var id = stockCount.Id;
            window.location = '/Software/StockCountDetail?Id=' + id;
        }

        // Stock Count Delete
        function btnOnclickStockCountDelete() {
            $('#divIdStockCountConfirmDeleteModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#btnIdStockCountConfirmDeleteModalDelete").prop("disabled", false);
            $("#btnIdConfirmDeleteModalClose").prop("disabled", false);
            document.getElementById("btnIdStockCountConfirmDeleteModalDelete").innerHTML = "<i class='fa fa-spinner fa-trash'></i> Delete";
        }

        // Stock Count Confirm Delete Button
        function btnOnClickStockCountConfirmDeleteModalDelete() {
            $("#btnIdStockCountConfirmDeleteModalDelete").prop("disabled", true);
            $("#btnIdConfirmDeleteModalClose").prop("disabled", true);
            document.getElementById("btnIdStockCountConfirmDeleteModalDelete").innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";

            stockCounts.editItem(stockCounts.currentItem);
            var id = stockCounts.currentEditItem.Id;
            $.ajax({
                url: '/api/stockCount/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#divIdStockCountConfirmDeleteModal').modal('hide');
                        refreshStockCountFlexGrid(stockCountSCDateValue);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $('#divIdStockCountConfirmDeleteModal').modal('hide');
                        $("#btnIdStockCountConfirmDeleteModalDelete").prop("disabled", false);
                        document.getElementById("btnIdStockCountConfirmDeleteModalDelete").innerHTML = "<i class='fa fa-spinner fa-trash'></i> Delete";
                        $("#btnIdConfirmDeleteModalClose").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#divIdStockCountConfirmDeleteModal').modal('hide');
                        $("#btnIdStockCountConfirmDeleteModalDelete").prop("disabled", false);
                        document.getElementById("btnIdStockCountConfirmDeleteModalDelete").innerHTML = "<i class='fa fa-spinner fa-trash'></i> Delete";
                        $("#btnIdConfirmDeleteModalClose").prop("disabled", false);
                    }
                }
            });
        }

        // Stock Count Delete Lock Record
        function btnOnclickStockCountDeleteLock() {
            toastr.error("Record Locked");
        }

        // Navigation Buttons for Stock Count
        function updateNavigateButtonsStockCount() {
            if (stockCounts.pageSize <= 0) {
                document.getElementById("divIdNavigationPageGrid").style.display = "none";
                return;
            }
            document.getElementById("divIdNavigationPageGrid").style.display = "block";
            if (stockCounts.pageIndex === 0) {
                btnStockCountFirstPageGrid.setAttribute("disabled", "disabled");
                btnStockCountPreviousPageGrid.setAttribute("disabled", "disabled");
                btnStockCountNextPageGrid.removeAttribute("disabled");
                btnStockCountLastPageGrid.removeAttribute("disabled");
            } else if (stockCounts.pageIndex === (stockCounts.pageCount - 1)) {
                btnStockCountFirstPageGrid.removeAttribute("disabled");
                btnStockCountPreviousPageGrid.removeAttribute("disabled");
                btnStockCountNextPageGrid.setAttribute("disabled", "disabled");
                btnStockCountLastPageGrid.setAttribute("disabled", "disabled");
            } else {
                btnStockCountFirstPageGrid.removeAttribute("disabled");
                btnStockCountPreviousPageGrid.removeAttribute("disabled");
                btnStockCountNextPageGrid.removeAttribute("disabled");
                btnStockCountLastPageGrid.removeAttribute("disabled");
            }
            btnStockCountCurrentPageGrid.innerHTML = (stockCounts.pageIndex + 1) + ' / ' + stockCounts.pageCount;
        }

        // FlexGrid Selection
        function updateSecurityStamp() {
            var item = stockCounts.currentItem;
            document.getElementById("createdBy").innerHTML = item.CreatedBy;
            document.getElementById("createdDate").innerHTML = item.CreatedDateTime;
            document.getElementById("updatedBy").innerHTML = item.UpdatedBy;
            document.getElementById("updatedDate").innerHTML = item.UpdatedDateTime;
        }

        // Refresh the Stock Count FlexGrid
        function refreshStockCountFlexGrid() {
            // Collection View
            stockCounts = new wijmo.collections.CollectionView(listStockCountBySCDateByBranchId());
            stockCounts.canFilter = true;
            stockCounts.pageSize = 15;

            // Search (Filter) - Key event
            var filterText = "";
            $("#inputIdStockCountSearch").keyup(function () {
                filterText = this.value.toLowerCase();
                stockCounts.refresh();
            });

            // Filter
            stockCounts.filter = function (item) {
                return !filterText || (item.SCNumber.toLowerCase().indexOf(filterText) > -1)
                || (item.Particulars.toLowerCase().indexOf(filterText) > -1);
            }

            // Navigation Buttons
            stockCounts.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsStockCount();
            });

            // Security Stamp
            stockCounts.currentChanged.addHandler(function (sender, args) {
                updateSecurityStamp();
            });

            // Flex Grid
            stockCountGrid.itemsSource = stockCounts;
            stockCountGrid.trackChanges = true;

            updateNavigateButtonsStockCount();
        }

        // On load page
        $(document).ready(function () {
            var date = new Date();
            stockCountSCDateValue = [date.getMonth() + 1, date.getDate(), date.getFullYear()].join('-');
            stockCountSCEndDateValue = [date.getMonth() + 1, date.getDate(), date.getFullYear()].join('-');

            // SC Date Dropdown
            cboStockCountSCDate = new wijmo.input.InputDate('#divIdStockCountSCDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    if (!cboFilterDateIsFirstSelect) {
                        stockCountSCDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                        refreshStockCountFlexGrid(stockCountSCDateValue);
                    } else {
                        cboFilterDateIsFirstSelect = false;
                    }
                }
            });


            // SC Date Dropdown
            cboStockCountSCEndDate = new wijmo.input.InputDate('#divIdStockCountSCEndDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    if (!cboFilterEndDateIsFirstSelect) {
                        stockCountSCEndDateValue = [this.value.getMonth() + 1, this.value.getDate(), this.value.getFullYear()].join('-');
                        refreshStockCountFlexGrid();
                    } else {
                        cboFilterEndDateIsFirstSelect = false;
                    }
                }
            });


            // Collection View
            stockCounts = new wijmo.collections.CollectionView(listStockCountBySCDateByBranchId());
            stockCounts.canFilter = true;
            stockCounts.pageSize = 15;

            // Search (Filter) - Key event
            var filterText = "";
            $("#inputIdStockCountSearch").keyup(function () {
                filterText = this.value.toLowerCase();
                stockCounts.refresh();
            });

            // Filter
            stockCounts.filter = function (item) {
                return !filterText || (item.SCNumber.toLowerCase().indexOf(filterText) > -1)
                || (item.Particulars.toLowerCase().indexOf(filterText) > -1);
            }

            // Navigation Buttons
            stockCounts.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsStockCount();
            });

            // Security Stamp
            stockCounts.currentChanged.addHandler(function (sender, args) {
                updateSecurityStamp();
            });

            // Flex Grid
            stockCountGrid = new wijmo.grid.FlexGrid('#divIdStockCountGrid');
            stockCountGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "Edit",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "Delete",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "SC Number",
                                "binding": "SCNumber",
                                "allowSorting": true,
                                "width": 110,
                            },
                            {
                                "header": "SC Date",
                                "binding": "SCDate",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": 680
                            },
                            {
                                "header": "L",
                                "binding": "IsLocked",
                                "allowSorting": true,
                                "width": 50
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: stockCounts,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockCountGrid.trackChanges = true;

            // Navigation Buttons
            btnStockCountFirstPageGrid = document.getElementById("btnIdMoveToFirstPageGrid");
            btnStockCountPreviousPageGrid = document.getElementById("btnIdMoveToPreviousPageGrid");
            btnStockCountNextPageGrid = document.getElementById("btnIdMoveToNextPageGrid");
            btnStockCountLastPageGrid = document.getElementById("btnIdMoveToLastPageGrid");
            btnStockCountCurrentPageGrid = document.getElementById("btnIdCurrentPageGrid");
            updateNavigateButtonsStockCount();

            // Navigation Button Events
            btnStockCountFirstPageGrid.addEventListener("click", function () {
                stockCounts.moveToFirstPage();
                updateNavigateButtonsStockCount();
            });
            btnStockCountPreviousPageGrid.addEventListener("click", function () {
                stockCounts.moveToPreviousPage();
                updateNavigateButtonsStockCount();
            });
            btnStockCountNextPageGrid.addEventListener("click", function () {
                stockCounts.moveToNextPage();
                updateNavigateButtonsStockCount();
            });
            btnStockCountLastPageGrid.addEventListener("click", function () {
                stockCounts.moveToLastPage();
                updateNavigateButtonsStockCount();
            });

            var canAdd = "@ViewData["CanAdd"]";
            if (canAdd == "True") {
                $("#btnAddStockCount").prop("disabled", false)
            } else if (canAdd == "False") {
                $("#btnAddStockCount").prop("disabled", true)
            } else {
                $("#btnAddStockCount").prop("disabled", true)
            }
        });
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>