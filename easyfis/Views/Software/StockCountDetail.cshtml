@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Count Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock Count Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-12" align="right">
                                <button class="btn btn-primary" id="btnIdStockCountDetailPost" onclick="btnPostStockCountOnclick()"><i class=" fa fa-thumb-tack"></i> Post</button>
                                @{
                                    if (canLock)
                                    {
                                        <button class="btn btn-primary" id="btnIdStockCountDetailLock" onclick="btnOnclickStockCountDetailLock()"><i class=" fa fa-lock"></i> Lock</button>
                                    }
                                    if (canUnlock)
                                    {
                                        <button class="btn btn-primary" id="btnIdStockCountDetailUnlock" onclick="btnOnclickStockCountDetailUnlock()"><i class=" fa fa-unlock"></i> Unlock</button>
                                    }
                                    if (canPrint)
                                    {
                                        <button class="btn btn-primary" id="btnIdStockCountDetailPrint" onclick="btnOnclickStockCountDetailPrint()"><i class="fa fa-print"></i> Print</button>
                                    }
                                }
                                <button class="btn btn-danger" id="btnIdStockCountDetailClose" onclick="window.location.href='/Software/StockCount'"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Branch</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSCBranch"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SC Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredStockCount" id="inputIdStockCountDetailSCNumber" placeholder="SC Number" disabled />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SC Date</label>
                                        <div class="col-sm-8">
                                            <div class="" id="cboSCDate"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Particulars</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredStockCount" id="txtAreaStockCountDetailParticulars" placeholder="Particulars"></textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Prepared by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSCPreparedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Checked by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSCCheckedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Approved by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboSCApprovedBy"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#Items" id="itemTabId">Items</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="Items" class="tab-pane fade in active">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control " id="StockCountInputFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboStockCountItemsShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right">
                                            @{
                                                if (canAdd)
                                                {
                                                    <button class="btn btn-primary" id="btnIdStockCountItemAdd" onclick="btnOnclickStockCountItemAdd()"><i class="fa fa-plus"></i> Add</button>
                                                    <button class="btn btn-primary" id="btnIdStockCountItemQuery" onclick="btnOnclickStockCountItemQuery()"><i class="fa fa-search-plus"></i> Item Query</button>
                                                }
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </div>
                            <div class="panel-body">
                                <div id="cboSCItemGrid"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!-- Stock Count Item Edit -->
    <div class="modal fade" id="cboSCItemFormModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Stock Count Item</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingModalItem"></span>
                    </center>
                    <div id="stockCountDetailForm">
                        <dl class="dl-horizontal">
                            <dt>Item</dt>
                            <dd>
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 30%">
                                            <div class="" id="cboSCItemCode"></div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 69%">
                                            <div class="" id="cboSCItem"></div>
                                        </td>
                                    </tr>
                                </table>
                            </dd>
                            <dt>Particulars</dt>
                            <dd><textarea rows="5" class="form-control textarea-custom requiredStockCountItem" id="txtAreaIdStockCountItemParticulars" placeholder="Particulars"></textarea></dd>
                            <dt>Quantity</dt>
                            <dd><input type="text" class="form-control  numberField  requiredStockCountItem" id="inputIdStockCountItemQuantity" placeholder="0.00" /></dd>
                            <dt>Unit</dt>
                            <dd><div class="" id="cboSCItemUnit"></div></dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnIdStockCountItemSave" onclick="btnOnclickStockCountItemSave()"><i class="fa fa-save"></i> Save</button>
                    <button class="btn btn-danger" id="btnIdStockCountItemClose" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Stock Count Confirm Delete Modal -->
    <div class="modal fade" id="cboSCItemConfirmDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this stock count item?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger " id="btnIdStockCountItemConfirmDeleteModalDelete" onclick="btnOnClickStockCountItemConfirmDeleteModalDelete()"><i class="fa fa-trash"></i> Delete</button>
                    <button class="btn btn-primary " id="btnIdConfirmDeleteModalClose" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Item Query -->
    <div class="modal fade" id="SCItemQuery" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Item Query</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingItemQuery"></span>
                    </center>
                    <div id="itemQueryPanel">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="input-group  ">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control " id="itemQueryFilter" placeholder="Search">
                                </div>
                            </div>
                        </div>
                        <div id="itemQueryGrid" style="max-height: 300px;"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var cboSCBranch = new wijmo.input.ComboBox('#cboSCBranch');
        var cboSCPreparedBy = new wijmo.input.ComboBox('#cboSCPreparedBy');
        var cboSCCheckedBy = new wijmo.input.ComboBox('#cboSCCheckedBy');
        var cboSCApprovedBy = new wijmo.input.ComboBox('#cboSCApprovedBy');
        var cboSCDate = new wijmo.input.InputDate('#cboSCDate');
        var cboSCItemCode = new wijmo.input.ComboBox('#cboSCItemCode');
        var cboSCItem = new wijmo.input.ComboBox('#cboSCItem');
        var cboSCItemUnit = new wijmo.input.ComboBox('#cboSCItemUnit');
        var SCItemId = 0;
        var isLocked = false;
        var itemQueryItemsCollection;
        var itemQueryGrid = new wijmo.grid.FlexGrid('#itemQueryGrid');

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParameterValue(parameterName) {
            parameterName = parameterName.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + parameterName + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ================
        // Get Branch By Id
        // ================
        function getBranch() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCount/dropdown/list/branch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branchesObservableArray.push({
                                Id: results[i]["Id"],
                                Branch: results[i]["Branch"]
                            });
                        }
                    }

                    cboSCBranch.dispose();
                    cboSCBranch = new wijmo.input.ComboBox('#cboSCBranch', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id"
                    });

                    getUsersForComboBox();
                }
            });
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            var usersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCount/dropdown/list/users',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            usersObservableArray.push({
                                Id: results[i]["Id"],
                                FullName: results[i]["FullName"]
                            });
                        }
                    }

                    cboSCPreparedBy.dispose();
                    cboSCPreparedBy = new wijmo.input.ComboBox('#cboSCPreparedBy', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSCCheckedBy.dispose();
                    cboSCCheckedBy = new wijmo.input.ComboBox('#cboSCCheckedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboSCApprovedBy.dispose();
                    cboSCApprovedBy = new wijmo.input.ComboBox('#cboSCApprovedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    getStockCountById();
                }
            });
        }

        // =====================
        // GET Stock Count by Id
        // =====================
        function getStockCountById() {
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/stockCount/detail/' + getParameterValue("id"),
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results != null) {
                            cboSCBranch.selectedValue = results.BranchId;
                            document.getElementById("inputIdStockCountDetailSCNumber").value = results.SCNumber;
                            var SCDate = results.SCDate;
                            cboSCDate.dispose();
                            cboSCDate = new wijmo.input.InputDate('#cboSCDate', {
                                format: 'MM-dd-yyyy',
                                value: new Date(results.SCDate),
                            });
                            document.getElementById("txtAreaStockCountDetailParticulars").value = results.Particulars;
                            cboSCPreparedBy.selectedValue = results.PreparedById;
                            cboSCCheckedBy.selectedValue = results.CheckedById;
                            cboSCApprovedBy.selectedValue = results.ApprovedById;

                            document.getElementById('createdBy').innerHTML = results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = results.UpdatedDateTime;

                            if (results.IsLocked) {
                                cboSCDate.disabled = true;
                                document.getElementById("txtAreaStockCountDetailParticulars").disabled = true;
                                cboSCPreparedBy.disabled = true;
                                cboSCCheckedBy.disabled = true;
                                cboSCApprovedBy.disabled = true;
                                
                                $("#btnIdStockCountDetailLock").prop("disabled", true);
                                $("#btnIdStockCountItemAdd").prop("disabled", true);
                                $("#btnIdStockCountItemQuery").prop("disabled", true);

                                isLocked = true;
                            } else {
                                $("#btnIdStockCountDetailPost").prop("disabled", true);
                                $("#btnIdStockCountDetailUnlock").prop("disabled", true);
                                $("#btnIdStockCountDetailPrint").prop("disabled", true);
                            }

                            stockCountItemFlexGrid();
                        } else {
                            alert("No Data");
                            window.location = "/Software/StockCount";
                        }
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/StockCount";
            }
        }

        // ================
        // Stock Count Data
        // ================
        function stockCountData() {
            var stockCountObject = new Object();
            stockCountObject.SCDate = cboSCDate.value.toLocaleDateString();
            stockCountObject.Particulars = document.getElementById("txtAreaStockCountDetailParticulars").value;
            stockCountObject.PreparedById = cboSCPreparedBy.selectedValue;
            stockCountObject.CheckedById = cboSCCheckedBy.selectedValue;
            stockCountObject.ApprovedById = cboSCApprovedBy.selectedValue;
            return JSON.stringify(stockCountObject);
        }

        // ===============
        // Form Validation
        // ===============
        function stockCountValidation() {
            var isValid = true;
            $(".requiredStockCount").each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            return isValid;
        }

        // ================
        // Post Stock Count
        // ================
        function btnPostStockCountOnclick() {
            if (stockCountValidation()) {
                document.getElementById("btnIdStockCountDetailPost").innerHTML = "<i class='fa fa-spinner fa-spin'></i> Posting";
                $("#btnIdStockCountDetailPost").prop("disabled", true);
                $("#btnIdStockCountDetailLock").prop("disabled", true);
                $("#btnIdStockCountDetailUnlock").prop("disabled", true);
                $("#btnIdStockCountDetailPrint").prop("disabled", true);
                $("#btnIdStockCountDetailClose").prop("disabled", true);

                var id = getParameterValue("id");

                $.ajax({
                    type: "POST",
                    url: '/api/stockCount/post/' + id,
                    contentType: "application/json; charset=utf-8",
                    statusCode: {
                        200: function (id) {
                            window.location = '/Software/StockOutDetail?id=' + id;
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById("btnIdStockCountDetailPost").innerHTML = "<i class='fa fa-thum-tack'></i> Post";
                            $("#btnIdStockCountDetailPost").prop("disabled", false);
                            $("#btnIdStockCountDetailUnlock").prop("disabled", false);
                            $("#btnIdStockCountDetailPrint").prop("disabled", false);
                            $("#btnIdStockCountDetailClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById("btnIdStockCountDetailPost").innerHTML = "<i class='fa fa-thum-tack'></i> Post";
                            $("#btnIdStockCountDetailPost").prop("disabled", false);
                            $("#btnIdStockCountDetailUnlock").prop("disabled", false);
                            $("#btnIdStockCountDetailPrint").prop("disabled", false);
                            $("#btnIdStockCountDetailClose").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById("btnIdStockCountDetailPost").innerHTML = "<i class='fa fa-thum-tack'></i> Post";
                            $("#btnIdStockCountDetailPost").prop("disabled", false);
                            $("#btnIdStockCountDetailUnlock").prop("disabled", false);
                            $("#btnIdStockCountDetailPrint").prop("disabled", false);
                            $("#btnIdStockCountDetailClose").prop("disabled", false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ================
        // Lock Stock Count
        // ================
        function btnOnclickStockCountDetailLock() {
            if (stockCountValidation()) {
                document.getElementById("btnIdStockCountDetailLock").innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $("#btnIdStockCountDetailLock").prop("disabled", true);
                $("#btnIdStockCountDetailUnlock").prop("disabled", true);
                $("#btnIdStockCountDetailPrint").prop("disabled", true);
                $("#btnIdStockCountDetailClose").prop("disabled", true);

                var id = getParameterValue("id");

                $.ajax({
                    type: "PUT",
                    url: '/api/stockCount/lock/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: stockCountData(),
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById("btnIdStockCountDetailLock").innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnIdStockCountDetailLock").prop("disabled", false);
                            $("#btnIdStockCountDetailClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById("btnIdStockCountDetailLock").innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnIdStockCountDetailLock").prop("disabled", false);
                            $("#btnIdStockCountDetailClose").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById("btnIdStockCountDetailLock").innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnIdStockCountDetailLock").prop("disabled", false);
                            $("#btnIdStockCountDetailClose").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ==================
        // Unlock Stock Count
        // ==================
        function btnOnclickStockCountDetailUnlock() {
            document.getElementById("btnIdStockCountDetailUnlock").innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $("#btnIdStockCountDetailLock").prop("disabled", true);
            $("#btnIdStockCountDetailPost").prop("disabled", true);
            $("#btnIdStockCountDetailUnlock").prop("disabled", true);
            $("#btnIdStockCountDetailPrint").prop("disabled", true);
            $("#btnIdStockCountDetailClose").prop("disabled", true);

            var id = getParameterValue("id");

            $.ajax({
                type: "PUT",
                url: '/api/stockCount/unlock/' + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById("btnIdStockCountDetailUnlock").innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnIdStockCountDetailPost").prop("disabled", false);
                        $("#btnIdStockCountDetailUnlock").prop("disabled", false);
                        $("#btnIdStockCountDetailPrint").prop("disabled", false);
                        $("#btnIdStockCountDetailClose").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById("btnIdStockCountDetailUnlock").innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnIdStockCountDetailPost").prop("disabled", false);
                        $("#btnIdStockCountDetailUnlock").prop("disabled", false);
                        $("#btnIdStockCountDetailPrint").prop("disabled", false);
                        $("#btnIdStockCountDetailClose").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById("btnIdStockCountDetailUnlock").innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnIdStockCountDetailUnlock").prop("disabled", false);
                        $("#btnIdStockCountDetailPrint").prop("disabled", false);
                        $("#btnIdStockCountDetailClose").prop("disabled", false);
                    }
                }
            });
        }

        // =================
        // Print Stock Count
        // =================
        function btnOnclickStockCountDetailPrint() {
            var pirntLink = "/RepStockCount/StockCount?Id=" + getParameterValue("id");
            window.open(pirntLink, '_blank');
        }

        // ============================
        // Get Stock Count Item by SCId
        // ============================
        function getStockCountItemBySCId() {
            var stockCountItems = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/stockCountItem/list/' + getParameterValue("id"),
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnIdStockCountItemEdit()'><i class='fa fa-edit'></i> Edit</button>";
                                var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnIdStockCountItemDelete()'><i class='fa fa-trash'></i> Delete</button>";
                                if (isLocked) {
                                    btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnIdStockCountItemEdit()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                    btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnIdStockCountItemDelete()' disabled><i class='fa fa-trash'></i> Delete</button>";
                                }

                                stockCountItems.push({
                                    Edit: btnEditId,
                                    Delete: btnDeleteId,
                                    Id: results[i]["Id"],
                                    SCId: results[i]["SCId"],
                                    ItemId: results[i]["ItemId"],
                                    ItemCode: results[i]["ItemCode"],
                                    ItemDescription: results[i]["ItemDescription"],
                                    Particulars: results[i]["Particulars"],
                                    Quantity: results[i]["Quantity"],
                                    QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"]
                                });
                            }
                        }

                        NProgress.done();
                    }
                });
            }

            return stockCountItems;
        }

        // ============================
        // Refresh Stock Count FlexGrid
        // ============================
        function refreshStockCountFlexGrid() {
            stockCountItems = new wijmo.collections.CollectionView(getStockCountItemBySCId());
            stockCountItemGrid.itemsSource = stockCountItems;
            stockCountItemGrid.trackChanges = true;
        }

        // ==========================
        // Stock Count Item Flex Grid
        // ==========================
        function stockCountItemFlexGrid() {
            // Collection View
            stockCountItems = new wijmo.collections.CollectionView(getStockCountItemBySCId());

            // Flex Grid
            stockCountItemGrid = new wijmo.grid.FlexGrid('#cboSCItemGrid');
            stockCountItemGrid.initialize({
                columns: [
                    {
                        "header": "Edit",
                        "binding": "Edit",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Delete",
                        "binding": "Delete",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Code",
                        "binding": "ItemCode",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Description",
                        "binding": "ItemDescription",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*"
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": "1*"
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: stockCountItems,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockCountItemGrid.trackChanges = true;
        }

        // ======================
        // Get Item for Combo box
        // ======================
        function getItemForComboBox(itemId, unitId) {
            items = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCountItem/dropdown/list/item',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            items.push({
                                Id: results[i]["Id"],
                                ArticleCode: results[i]["ArticleCode"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                Article: results[i]["Article"],
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                        $("#btnIdStockCountItemSave").prop("disabled", false);
                    } else {
                        $("#btnIdStockCountItemSave").prop("disabled", true);
                    }

                    cboSCItemCode.dispose();
                    cboSCItemCode = new wijmo.input.ComboBox('#cboSCItemCode', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: items,
                        displayMemberPath: "ManualArticleCode",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboSCItem.selectedValue = this.selectedValue;
                        }
                    });

                    cboSCItem.dispose();
                    cboSCItem = new wijmo.input.ComboBox('#cboSCItem', {
                        isEditable: false,
                        itemsSource: items,
                        displayMemberPath: "Article",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboSCItemCode.selectedValue = this.selectedValue;
                            getStockCountItemUnitForComboBox(unitId);
                        }
                    });

                    getStockCountItemUnitForComboBox(unitId);
                }
            });
        }

        // =============
        // Get Item Unit
        // =============
        function getStockCountItemUnitForComboBox(unitId) {
            var stockOutUnitsObservableArray = new wijmo.collections.ObservableArray();
            if (cboSCItem.selectedValue != null) {
                $.ajax({
                    url: '/api/stockCountItem/dropdown/list/itemUnit/' + cboSCItem.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                stockOutUnitsObservableArray.push({
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"],
                                    Multiplier: results[i]["Multiplier"]
                                });
                            }
                        }

                        var disabled = true;
                        if (results.length > 0) {
                            disabled = false;
                        } else {
                            $("#btnIdStockCountItemSave").prop("disabled", true);
                        }

                        cboSCItemUnit.dispose();
                        cboSCItemUnit = new wijmo.input.ComboBox('#cboSCItemUnit', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: stockOutUnitsObservableArray,
                            displayMemberPath: "Unit",
                            selectedValuePath: "UnitId",
                            selectedValue: unitId
                        });

                        $("#loadingModalItem").hide();
                        $("#stockCountDetailForm").show();
                    }
                });
            } else {
                cboSCItemUnit.dispose();
                cboSCItemUnit = new wijmo.input.ComboBox('#cboSCItemUnit', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: stockOutUnitsObservableArray,
                });

                $("#loadingModalItem").hide();
                $("#stockCountDetailForm").show();
            }
        }

        // ====================
        // Add Stock Count Item
        // ====================
        function btnOnclickStockCountItemAdd() {
            $('#cboSCItemFormModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#stockCountDetailForm").hide();

            document.getElementById("btnIdStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnIdStockCountItemSave").prop("disabled", true);
            $("#btnIdStockCountItemClose").prop("disabled", false);

            SCItemId = 0;
            getItemForComboBox(0, 0);
            document.getElementById("txtAreaIdStockCountItemParticulars").value = "NA";
            document.getElementById("inputIdStockCountItemQuantity").value = formatDecimalValues(1);
        }

        // =====================
        // Edit Stock Count Item
        // =====================
        function btnIdStockCountItemEdit() {
            $('#cboSCItemFormModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#stockCountDetailForm").hide();

            document.getElementById("btnIdStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnIdStockCountItemSave").prop("disabled", true);
            $("#btnIdStockCountItemClose").prop("disabled", false);

            stockCountItems.editItem(stockCountItems.currentItem);
            var stockCountItem = stockCountItems.currentEditItem;
            SCItemId = stockCountItem.Id;
            getItemForComboBox(stockCountItem.ItemId, stockCountItem.UnitId);
            document.getElementById("txtAreaIdStockCountItemParticulars").value = stockCountItem.Particulars;
            document.getElementById("inputIdStockCountItemQuantity").value = formatDecimalValues(stockCountItem.Quantity);
        }

        // ================================
        // Stock Count Item Form Validation
        // ================================
        function stockCountItemFormValidation() {
            var isValid = true;
            $('.requiredStockCountItem').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            return isValid;
        }

        // ================
        // Stock Count Data
        // ================
        function stockCountItemData() {
            var stockCountItemObject = new Object();
            stockCountItemObject.SCId = getParameterValue("id");
            stockCountItemObject.ItemId = cboSCItem.selectedValue;
            stockCountItemObject.Particulars = document.getElementById("txtAreaIdStockCountItemParticulars").value;
            stockCountItemObject.Quantity = document.getElementById("inputIdStockCountItemQuantity").value;
            stockCountItemObject.UnitId = cboSCItemUnit.selectedValue;
            return JSON.stringify(stockCountItemObject);
        }

        // =====================
        // Save Stock Count Item
        // =====================
        function btnOnclickStockCountItemSave() {
            if (stockCountItemFormValidation()) {
                document.getElementById("btnIdStockCountItemSave").innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $("#btnIdStockCountItemSave").prop("disabled", true);
                $("#btnIdStockCountItemClose").prop("disabled", true);

                var SCId = getParameterValue("id");

                if (SCItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/stockCountItem/add/' + SCId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockCountItemData(),
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");
                                $('#cboSCItemFormModal').modal('hide');
                                refreshStockCountFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById("btnIdStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnIdStockCountItemSave").prop("disabled", false);
                                $("#btnIdStockCountItemClose").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById("btnIdStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnIdStockCountItemSave").prop("disabled", false);
                                $("#btnIdStockCountItemClose").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById("btnIdStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnIdStockCountItemSave").prop("disabled", false);
                                $("#btnIdStockCountItemClose").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/stockCountItem/update/' + SCItemId + '/' + SCId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockCountItemData(),
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#cboSCItemFormModal').modal('hide');
                                refreshStockCountFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById("btnIdStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnIdStockCountItemSave").prop("disabled", false);
                                $("#btnIdStockCountItemClose").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById("btnIdStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnIdStockCountItemSave").prop("disabled", false);
                                $("#btnIdStockCountItemClose").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById("btnIdStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnIdStockCountItemSave").prop("disabled", false);
                                $("#btnIdStockCountItemClose").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =======================
        // Delete Stock Count Item
        // =======================
        function btnIdStockCountItemDelete() {
            $('#cboSCItemConfirmDeleteModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById("btnIdStockCountItemConfirmDeleteModalDelete").innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#btnIdStockCountItemConfirmDeleteModalDelete").prop("disabled", false);
            $("#btnIdConfirmDeleteModalClose").prop("disabled", false);
        }

        // Confirm Delete Stock Count Item
        function btnOnClickStockCountItemConfirmDeleteModalDelete() {
            document.getElementById("btnIdStockCountItemConfirmDeleteModalDelete").innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $("#btnIdStockCountItemConfirmDeleteModalDelete").prop("disabled", true);
            $("#btnIdConfirmDeleteModalClose").prop("disabled", true);

            stockCountItems.editItem(stockCountItems.currentItem);
            var stockCountItem = stockCountItems.currentEditItem;
            var id = stockCountItem.Id;

            var SCId = getParameterValue("id");

            $.ajax({
                url: '/api/stockCountItem/delete/' + id + '/' + SCId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#cboSCItemConfirmDeleteModal').modal('hide');
                        refreshStockCountFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#cboSCItemConfirmDeleteModal').modal('hide');
                        document.getElementById("btnIdStockCountItemConfirmDeleteModalDelete").innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnIdStockCountItemConfirmDeleteModalDelete").prop("disabled", false);
                        $("#btnIdConfirmDeleteModalClose").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#cboSCItemConfirmDeleteModal').modal('hide');
                        document.getElementById("btnIdStockCountItemConfirmDeleteModalDelete").innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnIdStockCountItemConfirmDeleteModalDelete").prop("disabled", false);
                        $("#btnIdConfirmDeleteModalClose").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#cboSCItemConfirmDeleteModal').modal('hide');
                        document.getElementById("btnIdStockCountItemConfirmDeleteModalDelete").innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnIdStockCountItemConfirmDeleteModalDelete").prop("disabled", false);
                        $("#btnIdConfirmDeleteModalClose").prop("disabled", false);
                    }
                }
            });
        }

        // ==========
        // item query
        // ==========
        function btnOnclickStockCountItemQuery() {
            $('#SCItemQuery').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingItemQuery").show();
            document.getElementById("loadingItemQuery").innerHTML = "<b><i class='fa fa-spinner fa-spin'></i></b>";
            $("#itemQueryPanel").hide();

            setTimeout(function() {
                createItemQueryFlexGrid();
            }, 500)
        }

        // ========================
        // get Items for Item Query
        // ========================
        function getArticleItemForItemQuery() {
            var items = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCountItem/popUp/list/itemQuery',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            items.push({
                                Id: results[i]["Id"],
                                ArticleCode: results[i]["ArticleCode"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                Article: results[i]["Article"],
                                Price: results[i]["Price"],
                                PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='pickToApplyOnClick()'><i class='fa fa-hand-o-right'></i> Pick</button>"
                            });
                        }
                    }

                    $("#loadingItemQuery").hide();
                    $("#itemQueryPanel").show();
                }
            });

            return items;
        }

        function pickToApplyOnClick() {
            $('#cboSCItemFormModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#stockCountDetailForm").hide();

            document.getElementById("btnIdStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnIdStockCountItemSave").prop("disabled", true);
            $("#btnIdStockCountItemClose").prop("disabled", false);

            itemQueryItemsCollection.editItem(itemQueryItemsCollection.currentItem);
            var stockCountItem = itemQueryItemsCollection.currentEditItem;
            SCItemId = 0;
            getItemForComboBox(stockCountItem.Id, stockCountItem.UnitId);
            document.getElementById("txtAreaIdStockCountItemParticulars").value = "NA";
            document.getElementById("inputIdStockCountItemQuantity").value = formatDecimalValues(1);
        }

        function createItemQueryFlexGrid() {
            itemQueryItemsCollection = new wijmo.collections.CollectionView(getArticleItemForItemQuery());
            itemQueryItemsCollection.canFilter = true;

            var filterText = '';
            $('#itemQueryFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryItemsCollection.refresh();
            });

            itemQueryItemsCollection.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                || (item.Article.toLowerCase().indexOf(filterText) > -1);
            }

            itemQueryGrid.dispose();
            itemQueryGrid = new wijmo.grid.FlexGrid('#itemQueryGrid');
            itemQueryGrid.initialize({
                columns: [
                    {
                        "header": "Code",
                        "binding": "ManualArticleCode",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "5*"
                    },
                    {
                        "header": "Price",
                        "binding": "PriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    },
                    {
                        "header": "Pick",
                        "binding": "Pick",
                        "width": "1*",
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryItemsCollection,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryGrid.trackChanges = true;
        }

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            getBranch();

            $(document).on('show.bs.modal', '.modal', function (event) {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () {
                    $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
                }, 0);
            });

            $(document).on('hidden.bs.modal', '.modal', function () {
                $('.modal:visible').length && $(document.body).addClass('modal-open');
            });
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>