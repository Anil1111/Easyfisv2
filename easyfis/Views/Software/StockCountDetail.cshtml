@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Count Detail</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock Count Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        =============================================
                        Options: Lock, Unlock, Print and Close Button
                        =============================================
                    -->
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-2">
                                <button class="btn btn-primary" id="btnStockCountSave" onclick="btnStockCountSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                            </div>
                            <div class="col-md-10" align="right">
                                @{
                                    if (canLock)
                                    {
                                        <button class="btn btn-primary" id="btnStockCountLock" onclick="btnStockCountLockOnclick()"><i class=" fa fa-lock"></i> Lock</button>
                                    }
                                    if (canUnlock)
                                    {
                                        <button class="btn btn-primary" id="btnStockCountUnlock" onclick="btnStockCountUnlockOnclick()"><i class=" fa fa-unlock"></i> Unlock</button>
                                    }
                                    if (canPrint)
                                    {
                                        <button class="btn btn-primary" id="btnStockCountPrint" onclick="btnStockCountPrintOnclick()"><i class="fa fa-print"></i> Print</button>
                                    }
                                }
                                <button class="btn btn-info" id="btnStockCountPost" onclick="btnStockCountPostOnclick()"><i class=" fa fa-thumb-tack"></i> Post</button>
                                <button class="btn btn-danger" id="btnStockCountClose" onclick="window.location.href='/Software/StockCount'"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>

                    <!--
                        ======================================
                        Details, Fields and Other Informations
                        ======================================
                    -->
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Branch</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockCountBranch"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SC Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredStockCount" id="inpStockCountSCNumber" placeholder="SC Number" disabled />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">SC Date</label>
                                        <div class="col-sm-8">
                                            <div class="" id="cboStockCountSCDate"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Particulars</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredStockCount" id="inpStockCountParticulars" placeholder="Particulars"></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Status</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockCountStatus"></div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Prepared by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockCountPreparedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Checked by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockCountCheckedBy"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Approved by</label>
                                        <div class="col-sm-8">
                                            <div class="comboBox-wide" id="cboStockCountApprovedBy"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <!--
                    ================
                    Stock Count Item
                    ================
                -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#tabItems" id="itemTabId">Items</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="tabItems" class="tab-pane fade in active">
                        <div class="panel panel-default">

                            <!--
                                =====================================================================
                                Stock Count Item: Search, Filter, Display Number of Rows and  Buttons
                                =====================================================================
                            -->
                            <div class="panel-heading">
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 49.5%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                                <input type="text" class="form-control" id="inpStockCountItemSearchFilter" placeholder="Search...">
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24%">
                                            <div class="input-group">
                                                <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                                <div class="comboBox-wide" id="cboStockCountItemsShowNumberOfRows"></div>
                                            </div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 24.5%" align="right">
                                            @{
                                                if (canAdd)
                                                {
                                                    <button class="btn btn-primary" id="btnStockCountItemAdd" onclick="btnStockCountItemAddOnclick()"><i class="fa fa-plus"></i> Add</button>
                                                    <button class="btn btn-primary" id="btnItemQuery" onclick="btnItemQueryOnclick()"><i class="fa fa-search-plus"></i> Item Query</button>
                                                }
                                            }
                                        </td>
                                    </tr>
                                </table>
                            </div>

                            <!--
                                ===========================
                                Stock Count Item: Flex Grid
                                ===========================
                            -->
                            <div class="panel-body">
                                <div id="stockCountItemFlexGrid"></div>
                            </div>

                            <!--
                                ====================================
                                Stock Count Item: Navigation Buttons
                                ====================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="stockCountItemNavigationPageGrid">
                                        <button type="button" class="btn btn-default border-custom" id="btnStockCountItemMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockCountItemMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnStockCountItemCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockCountItemMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnStockCountItemMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ==========
                    User Stamp
                    ==========
                -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!--
        ==============================
        Stock Count Item: Detail Modal
        ==============================
    -->
    <div class="modal fade" id="stockCountItemDetailModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="stockCountItemModalTitle">Stock Count Item</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="stockCountItemLoading"></span>
                    </center>
                    <div id="stockCountItemContent">
                        <dl class="dl-horizontal">
                            <dt>Item</dt>
                            <dd>
                                <table style="width: 100%" border="0">
                                    <tr>
                                        <td style="width: 30%">
                                            <div class="" id="cboStockCountItemCode"></div>
                                        </td>
                                        <td style="width: 1%"></td>
                                        <td style="width: 69%">
                                            <div class="" id="cboStockCountItemDescription"></div>
                                        </td>
                                    </tr>
                                </table>
                            </dd>
                            <dt>Particulars</dt>
                            <dd>
                                <textarea rows="5" class="form-control textarea-custom requiredStockCountItem" id="inpStockCountItemParticulars" placeholder="Particulars"></textarea>
                            </dd>
                            <dt>Quantity</dt>
                            <dd>
                                <input type="text" class="form-control numberField requiredStockCountItem" id="inpStockCountItemQuantity" placeholder="0.00" />
                            </dd>
                            <dt>Unit</dt>
                            <dd>
                                <div class="" id="cboStockCountItemUnit"></div>
                            </dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnStockCountItemSave" onclick="btnStockCountItemSaveOnclick()"><i class="fa fa-save"></i> Save</button>
                    <button class="btn btn-danger" id="btnStockCountItemCloseDetailModal" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ==============================
        Stock Count Item: Delete Modal
        ==============================
    -->
    <div class="modal fade" id="stockCountItemDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Delete Stock Count Item?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnStockCountItemConfirmDeleteModal" onclick="btnStockCountItemConfirmDeleteModalOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button class="btn btn-primary" id="btnStockCountItemCloseConfirmDeleteModal" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!--
        ==================================
        Stock Count Item: Item Query Modal
        ==================================
    -->
    <div class="modal fade" id="itemQueryModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Item Query</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="itemQueryLoading"></span>
                    </center>
                    <div id="itemQueryContent">
                        <div class="panel panel-default">

                            <!--
                                =====================================
                                Stock Count Item Query: Search Filter
                                =====================================
                            -->
                            <div class="panel-heading">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control" id="inpItemQuerySearchFilter" placeholder="Search">
                                </div>
                            </div>

                            <!--
                                =================================
                                Stock Count Item Query: Flex Grid
                                =================================
                            -->
                            <div class="panel-body">
                                <div id="itemQueryFlexGrid"></div>
                            </div>

                            <!--
                                ==========================================
                                Stock Count Item Query: Navigation Buttons
                                ==========================================
                            -->
                            <div class="panel-footer">
                                <div class="row">
                                    <div class="btn-group col-md-7" id="stockCountItemNavigationPageGridQuery">
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToFirstPageGrid">
                                            <span class="glyphicon glyphicon-fast-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToPreviousPageGrid">
                                            <span class="glyphicon glyphicon-step-backward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnItemQueryCurrentPageGrid"></button>
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToNextPageGrid">
                                            <span class="glyphicon glyphicon-step-forward"></span>
                                        </button>
                                        <button type="button" class="btn btn-default border-custom" id="btnItemQueryMoveToLastPageGrid">
                                            <span class="glyphicon glyphicon-fast-forward"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>
    
    <!--
        ===============================
        Stock Count: Confirm Post Modal
        ===============================
    -->
    <div class="modal fade" id="stockCountConfirmPostModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Post</h4>
                </div>
                <div class="modal-body">
                    Post Stock Count?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-info" id="btnStockCountConfirmPostModal" onclick="btnStockCountConfirmPostModalOnclick()"><i class="fa fa-thumb-tack"></i> Post</button>
                    <button class="btn btn-primary" id="btnStockCountCloseConfirmPostModal" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // =================================
        // Stock Count Combo Data and Fields
        // =================================
        var cboStockCountBranch = new wijmo.input.ComboBox('#cboStockCountBranch');
        var cboStockCountSCDate = new wijmo.input.InputDate('#cboStockCountSCDate');
        var cboStockCountStatus = new wijmo.input.ComboBox('#cboStockCountStatus');
        var cboStockCountPreparedBy = new wijmo.input.ComboBox('#cboStockCountPreparedBy');
        var cboStockCountCheckedBy = new wijmo.input.ComboBox('#cboStockCountCheckedBy');
        var cboStockCountApprovedBy = new wijmo.input.ComboBox('#cboStockCountApprovedBy');
        var isLocked = false;

        // ==================================================================
        // Stock Count Item Collection View, Flex Grid and Navigation Buttons
        // ==================================================================
        var stockCountItemCollectionView;
        var stockCountItemFlexGrid;
        var cboStockCountItemsShowNumberOfRows = new wijmo.input.ComboBox('#cboStockCountItemsShowNumberOfRows');
        var btnStockCountItemMoveToFirstPageGrid = document.getElementById('btnStockCountItemMoveToFirstPageGrid');
        var btnStockCountItemMoveToPreviousPageGrid = document.getElementById('btnStockCountItemMoveToPreviousPageGrid');
        var btnStockCountItemMoveToNextPageGrid = document.getElementById('btnStockCountItemMoveToNextPageGrid');
        var btnStockCountItemMoveToLastPageGrid = document.getElementById('btnStockCountItemMoveToLastPageGrid');
        var btnStockCountItemCurrentPageGrid = document.getElementById('btnStockCountItemCurrentPageGrid');

        // ======================================
        // Stock Count Item Combo Data and Fields
        // ======================================
        var stockCountItemId = 0;
        var cboStockCountItemCode = new wijmo.input.ComboBox('#cboStockCountItemCode');
        var cboStockCountItemDescription = new wijmo.input.ComboBox('#cboStockCountItemDescription');
        var cboStockCountItemUnit = new wijmo.input.ComboBox('#cboStockCountItemUnit');

        // ============================================================
        // Item Query Collection View, Flex Grid and Navigation Buttons
        // ============================================================
        var itemQueryCollectionView;
        var itemQueryFlexGrid = new wijmo.grid.FlexGrid('#itemQueryFlexGrid');
        var btnItemQueryMoveToFirstPageGrid = document.getElementById('btnItemQueryMoveToFirstPageGrid');
        var btnItemQueryMoveToPreviousPageGrid = document.getElementById('btnItemQueryMoveToPreviousPageGrid');
        var btnItemQueryMoveToNextPageGrid = document.getElementById('btnItemQueryMoveToNextPageGrid');
        var btnItemQueryMoveToLastPageGrid = document.getElementById('btnItemQueryMoveToLastPageGrid');
        var btnItemQueryCurrentPageGrid = document.getElementById('btnItemQueryCurrentPageGrid');
        var isItemQueryClicked = false;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getURLParameterValue(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);

            if (results == null)
                return "";
            else {
                return results[1];
            }
        }

        // ===============================
        // Create Stock Count Combo Branch
        // ===============================
        function createCboStockCountBranch() {
            NProgress.start();
            var branchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCount/dropdown/list/branch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branchesObservableArray.push({
                                Id: results[i]["Id"],
                                Branch: results[i]["Branch"]
                            });
                        }
                    }

                    cboStockCountBranch.dispose();
                    cboStockCountBranch = new wijmo.input.ComboBox('#cboStockCountBranch', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select Branch",
                        itemsSource: branchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "Id"
                    });

                    createCboStockCountUsers();
                }
            });
        }

        // ==============================
        // Create Stock Count Combo Users
        // ==============================
        function createCboStockCountUsers() {
            var usersObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCount/dropdown/list/users',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            usersObservableArray.push({
                                Id: results[i]["Id"],
                                FullName: results[i]["FullName"]
                            });
                        }
                    }

                    cboStockCountPreparedBy.dispose();
                    cboStockCountPreparedBy = new wijmo.input.ComboBox('#cboStockCountPreparedBy', {
                        disabled: true,
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockCountCheckedBy.dispose();
                    cboStockCountCheckedBy = new wijmo.input.ComboBox('#cboStockCountCheckedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    cboStockCountApprovedBy.dispose();
                    cboStockCountApprovedBy = new wijmo.input.ComboBox('#cboStockCountApprovedBy', {
                        isEditable: false,
                        placeholder: "Select User",
                        itemsSource: usersObservableArray,
                        displayMemberPath: "FullName",
                        selectedValuePath: "Id"
                    });

                    createCboStockCountStatus();
                }
            });
        }

        // ===============================
        // Create Stock Count Combo Status
        // ===============================
        function createCboStockCountStatus() {
            var statusObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCount/dropdown/list/status',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    var disabled = false;

                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            statusObservableArray.push({
                                Id: results[i]["Id"],
                                Status: results[i]["Status"]
                            });
                        }
                    } else {
                        disabled = true;
                    }

                    cboStockCountStatus.dispose();
                    cboStockCountStatus = new wijmo.input.ComboBox('#cboStockCountStatus', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: statusObservableArray,
                        displayMemberPath: "Status",
                        selectedValuePath: "Status"
                    });

                    getStockCountData();
                }
            });
        }

        // ===========================
        // Get Stock Count Detail Data
        // ===========================
        function getStockCountData() {
            if (document.location.search.length > 0) {
                var id = getURLParameterValue('id');
                $.ajax({
                    url: '/api/stockCount/detail/' + id,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results != null) {
                            cboStockCountBranch.selectedValue = results.BranchId;
                            document.getElementById("inpStockCountSCNumber").value = results.SCNumber;
                            var SCDate = results.SCDate;
                            cboStockCountSCDate.dispose();
                            cboStockCountSCDate = new wijmo.input.InputDate('#cboStockCountSCDate', {
                                format: 'MM-dd-yyyy',
                                value: new Date(results.SCDate),
                            });
                            document.getElementById("inpStockCountParticulars").value = results.Particulars;
                            cboStockCountPreparedBy.selectedValue = results.PreparedById;
                            cboStockCountCheckedBy.selectedValue = results.CheckedById;
                            cboStockCountApprovedBy.selectedValue = results.ApprovedById;
                            cboStockCountStatus.selectedValue = results.Status;

                            document.getElementById('createdBy').innerHTML = results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = results.UpdatedDateTime;

                            if (results.IsLocked) {
                                cboStockCountSCDate.disabled = true;
                                document.getElementById("inpStockCountParticulars").disabled = true;
                                cboStockCountPreparedBy.disabled = true;
                                cboStockCountCheckedBy.disabled = true;
                                cboStockCountApprovedBy.disabled = true;
                                cboStockCountStatus.disabled = true;

                                $("#btnStockCountLock").prop("disabled", true);
                                $("#btnStockCountItemAdd").prop("disabled", true);
                                $("#btnItemQuery").prop("disabled", true);

                                isLocked = true;
                            } else {
                                $("#btnStockCountPost").prop("disabled", true);
                                $("#btnStockCountUnlock").prop("disabled", true);
                                $("#btnStockCountPrint").prop("disabled", true);
                            }

                            createCboShowRows();
                            stockCountItemFlexGrid();
                        } else {
                            alert("No Data");
                            window.location = "/Software/StockCount";
                        }
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/StockCount";
            }
        }

        // ===================
        // Stock Count Objects
        // ===================
        function stockCountObjects() {
            var stockCountObject = new Object();
            stockCountObject.SCDate = cboStockCountSCDate.value.toLocaleDateString();
            stockCountObject.Particulars = document.getElementById("inpStockCountParticulars").value;
            stockCountObject.PreparedById = cboStockCountPreparedBy.selectedValue;
            stockCountObject.CheckedById = cboStockCountCheckedBy.selectedValue;
            stockCountObject.ApprovedById = cboStockCountApprovedBy.selectedValue;
            stockCountObject.Status = cboStockCountStatus.selectedValue;

            return JSON.stringify(stockCountObject);
        }

        // ===============
        // Form Validation
        // ===============
        function stockCountValidation() {
            var isValid = true;
            $(".requiredStockCount").each(function () {
                if ($.trim($(this).val()) == '') { isValid = false; $(this).css({ "border": "1px solid red" }); }
                else { $(this).css({ "border": "" }); }
            });

            return isValid;
        }

        // ================
        // Post Stock Count
        // ================
        function btnStockCountPostOnclick() {
            $('#stockCountConfirmPostModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById("btnStockCountConfirmPostModal").innerHTML = "<i class='fa fa-thumb-tack'></i> Post";
            $("#btnStockCountConfirmPostModal").prop("disabled", false);
            $("#btnStockCountCloseConfirmPostModal").prop("disabled", false);
        }

        // ========================
        // Confirm Post Stock Count
        // ========================
        function btnStockCountConfirmPostModalOnclick() {
            if (stockCountValidation()) {
                document.getElementById("btnStockCountConfirmPostModal").innerHTML = "<i class='fa fa-thumb-tack'></i> Posting...";
                $("#btnStockCountConfirmPostModal").prop("disabled", true);
                $("#btnStockCountCloseConfirmPostModal").prop("disabled", true);

                document.getElementById("btnStockCountPost").innerHTML = "<i class='fa fa-thumb-tack'></i> Posting...";
                $("#btnStockCountPost").prop("disabled", true);
                $("#btnStockCountLock").prop("disabled", true);
                $("#btnStockCountUnlock").prop("disabled", true);
                $("#btnStockCountPrint").prop("disabled", true);
                $("#btnStockCountClose").prop("disabled", true);

                var id = getURLParameterValue("id");

                $.ajax({
                    type: "POST",
                    url: '/api/stockCount/post/' + id,
                    contentType: "application/json; charset=utf-8",
                    statusCode: {
                        200: function (id) {
                            window.location = '/Software/StockOutDetail?id=' + id;
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById("btnStockCountPost").innerHTML = "<i class='fa fa-thumb-tack'></i> Post";
                            $("#btnStockCountPost").prop("disabled", false);
                            $("#btnStockCountUnlock").prop("disabled", false);
                            $("#btnStockCountPrint").prop("disabled", false);
                            $("#btnStockCountClose").prop("disabled", false);

                            document.getElementById("btnStockCountConfirmPostModal").innerHTML = "<i class='fa fa-thumb-tack'></i> Post";
                            $("#btnStockCountConfirmPostModal").prop("disabled", false);
                            $("#btnStockCountCloseConfirmPostModal").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById("btnStockCountPost").innerHTML = "<i class='fa fa-thumb-tack'></i> Post";
                            $("#btnStockCountPost").prop("disabled", false);
                            $("#btnStockCountUnlock").prop("disabled", false);
                            $("#btnStockCountPrint").prop("disabled", false);
                            $("#btnStockCountClose").prop("disabled", false);

                            document.getElementById("btnStockCountConfirmPostModal").innerHTML = "<i class='fa fa-thumb-tack'></i> Post";
                            $("#btnStockCountConfirmPostModal").prop("disabled", false);
                            $("#btnStockCountCloseConfirmPostModal").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById("btnStockCountPost").innerHTML = "<i class='fa fa-thumb-tack'></i> Post";
                            $("#btnStockCountPost").prop("disabled", false);
                            $("#btnStockCountUnlock").prop("disabled", false);
                            $("#btnStockCountPrint").prop("disabled", false);
                            $("#btnStockCountClose").prop("disabled", false);

                            document.getElementById("btnStockCountConfirmPostModal").innerHTML = "<i class='fa fa-thumb-tack'></i> Post";
                            $("#btnStockCountConfirmPostModal").prop("disabled", false);
                            $("#btnStockCountCloseConfirmPostModal").prop("disabled", false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ================
        // Save Stock Count
        // ================
        function btnStockCountSaveOnclick() {
            if (stockCountValidation()) {
                document.getElementById("btnStockCountSave").innerHTML = "<i class='fa fa-save'></i> Saving...";
                $("#btnStockCountSave").prop("disabled", true);
                $("#btnStockCountLock").prop("disabled", true);
                $("#btnStockCountUnlock").prop("disabled", true);
                $("#btnStockCountPrint").prop("disabled", true);
                $("#btnStockCountClose").prop("disabled", true);

                var id = getURLParameterValue("id");

                $.ajax({
                    type: "PUT",
                    url: '/api/stockCount/save/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: stockCountObjects(),
                    statusCode: {
                        200: function () {
                            toastr.success("Save Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnStockCountSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockCountSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockCountUnlock").prop("disabled", false);
                                $("#btnStockCountPrint").prop("disabled", false);
                            } else {
                                $("#btnStockCountLock").prop("disabled", false);
                            }

                            $("#btnStockCountClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnStockCountSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockCountSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockCountUnlock").prop("disabled", false);
                                $("#btnStockCountPrint").prop("disabled", false);
                            } else {
                                $("#btnStockCountLock").prop("disabled", false);
                            }

                            $("#btnStockCountClose").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnStockCountSave').innerHTML = "<i class='fa fa-save'></i> Save";
                            $("#btnStockCountSave").prop("disabled", false);

                            if (isLocked) {
                                $("#btnStockCountUnlock").prop("disabled", false);
                                $("#btnStockCountPrint").prop("disabled", false);
                            } else {
                                $("#btnStockCountLock").prop("disabled", false);
                            }

                            $("#btnStockCountClose").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ================
        // Lock Stock Count
        // ================
        function btnStockCountLockOnclick() {
            if (stockCountValidation()) {
                document.getElementById("btnStockCountLock").innerHTML = "<i class='fa fa-lock'></i> Locking...";
                $("#btnStockCountSave").prop("disabled", true);
                $("#btnStockCountLock").prop("disabled", true);
                $("#btnStockCountUnlock").prop("disabled", true);
                $("#btnStockCountPrint").prop("disabled", true);
                $("#btnStockCountClose").prop("disabled", true);

                var id = getURLParameterValue("id");

                $.ajax({
                    type: "PUT",
                    url: '/api/stockCount/lock/' + id,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: stockCountObjects(),
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById("btnStockCountLock").innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockCountSave").prop("disabled", false);
                            $("#btnStockCountLock").prop("disabled", false);
                            $("#btnStockCountClose").prop("disabled", false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById("btnStockCountLock").innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockCountSave").prop("disabled", false);
                            $("#btnStockCountLock").prop("disabled", false);
                            $("#btnStockCountClose").prop("disabled", false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById("btnStockCountLock").innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $("#btnStockCountSave").prop("disabled", false);
                            $("#btnStockCountLock").prop("disabled", false);
                            $("#btnStockCountClose").prop("disabled", false);
                        }
                    },
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ==================
        // Unlock Stock Count
        // ==================
        function btnStockCountUnlockOnclick() {
            document.getElementById("btnStockCountUnlock").innerHTML = "<i class='fa fa-unlock'></i> Unlocking...";
            $("#btnStockCountLock").prop("disabled", true);
            $("#btnStockCountPost").prop("disabled", true);
            $("#btnStockCountUnlock").prop("disabled", true);
            $("#btnStockCountPrint").prop("disabled", true);
            $("#btnStockCountClose").prop("disabled", true);

            var id = getURLParameterValue("id");

            $.ajax({
                type: "PUT",
                url: '/api/stockCount/unlock/' + id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById("btnStockCountUnlock").innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockCountPost").prop("disabled", false);
                        $("#btnStockCountUnlock").prop("disabled", false);
                        $("#btnStockCountPrint").prop("disabled", false);
                        $("#btnStockCountClose").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById("btnStockCountUnlock").innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockCountPost").prop("disabled", false);
                        $("#btnStockCountUnlock").prop("disabled", false);
                        $("#btnStockCountPrint").prop("disabled", false);
                        $("#btnStockCountClose").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById("btnStockCountUnlock").innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $("#btnStockCountUnlock").prop("disabled", false);
                        $("#btnStockCountPrint").prop("disabled", false);
                        $("#btnStockCountClose").prop("disabled", false);
                    }
                }
            });
        }

        // =================
        // Print Stock Count
        // =================
        function btnStockCountPrintOnclick() {
            var pirntLink = "/RepStockCount/StockCount?StockCountId=" + getURLParameterValue("id");
            window.open(pirntLink, '_blank');
        }

        // =========================
        // Get Stock Count Item Data
        // =========================
        function getStockCountItemData() {
            var stockCountItemObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/stockCountItem/list/' + getURLParameterValue("id"),
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnIdStockCountItemEdit()'><i class='fa fa-edit'></i> Edit</button>";
                                var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnStockCountItemDeleteOnclick()'><i class='fa fa-trash'></i> Delete</button>";
                                if (isLocked) {
                                    btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnIdStockCountItemEdit()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                    btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnStockCountItemDeleteOnclick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                                }

                                stockCountItemObservableArray.push({
                                    Edit: btnEditId,
                                    Delete: btnDeleteId,
                                    Id: results[i]["Id"],
                                    SCId: results[i]["SCId"],
                                    ItemId: results[i]["ItemId"],
                                    ItemCode: results[i]["ItemCode"],
                                    ItemManualArticleOldCode: results[i]["ItemManualArticleOldCode"],
                                    ItemDescription: results[i]["ItemDescription"],
                                    Particulars: results[i]["Particulars"],
                                    Quantity: results[i]["Quantity"],
                                    QuantityDisplay: parseFloat(results[i]["Quantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"]
                                });
                            }
                        }

                        NProgress.done();
                    }
                });
            }

            return stockCountItemObservableArray;
        }

        // ==========================
        // Stock Count Item Flex Grid
        // ==========================
        function stockCountItemFlexGrid() {
            stockCountItemCollectionView = new wijmo.collections.CollectionView(getStockCountItemData());
            stockCountItemCollectionView.canFilter = true;
            stockCountItemCollectionView.pageSize = cboStockCountItemsShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpStockCountItemSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockCountItemCollectionView.refresh();
            });

            stockCountItemCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            stockCountItemCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateStockCountItemNavigationButtons();
            });

            stockCountItemGrid = new wijmo.grid.FlexGrid('#stockCountItemFlexGrid');
            stockCountItemGrid.initialize({
                columns: [
                    @{
                        if (canEdit)
                        {
                            <text>
                                {
                                    "header": "Edit",
                                    "binding": "Edit",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                        if (canDelete)
                        {
                            <text>
                                {
                                    "header": "Delete",
                                    "binding": "Delete",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                    }
                    {
                        "header": "Barcode",
                        "binding": "ItemCode",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ItemManualArticleOldCode",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Description",
                        "binding": "ItemDescription",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Quantity",
                        "binding": "QuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*"
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": "1*"
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: stockCountItemCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockCountItemGrid.trackChanges = true;

            updateStockCountItemNavigationButtons();

            btnStockCountItemMoveToFirstPageGrid.addEventListener('click', function () {
                stockCountItemCollectionView.moveToFirstPage();
                updateStockCountItemNavigationButtons();
            });

            btnStockCountItemMoveToPreviousPageGrid.addEventListener('click', function () {
                stockCountItemCollectionView.moveToPreviousPage();
                updateStockCountItemNavigationButtons();
            });

            btnStockCountItemMoveToNextPageGrid.addEventListener('click', function () {
                stockCountItemCollectionView.moveToNextPage();
                updateStockCountItemNavigationButtons();
            });

            btnStockCountItemMoveToLastPageGrid.addEventListener('click', function () {
                stockCountItemCollectionView.moveToLastPage();
                updateStockCountItemNavigationButtons();
            });
        }

        // =========================
        // Update Navigation Buttons
        // =========================
        function updateStockCountItemNavigationButtons() {
            if (stockCountItemCollectionView.pageSize <= 0) {
                document.getElementById('stockCountItemNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('stockCountItemNavigationPageGrid').style.display = 'block';
            if (stockCountItemCollectionView.pageIndex === 0) {
                btnStockCountItemMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnStockCountItemMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnStockCountItemMoveToNextPageGrid.removeAttribute('disabled');
                btnStockCountItemMoveToLastPageGrid.removeAttribute('disabled');
            } else if (stockCountItemCollectionView.pageIndex === (stockCountItemCollectionView.pageCount - 1)) {
                btnStockCountItemMoveToFirstPageGrid.removeAttribute('disabled');
                btnStockCountItemMoveToPreviousPageGrid.removeAttribute('disabled');
                btnStockCountItemMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnStockCountItemMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnStockCountItemMoveToFirstPageGrid.removeAttribute('disabled');
                btnStockCountItemMoveToPreviousPageGrid.removeAttribute('disabled');
                btnStockCountItemMoveToNextPageGrid.removeAttribute('disabled');
                btnStockCountItemMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnStockCountItemCurrentPageGrid.innerHTML = (stockCountItemCollectionView.pageIndex + 1) + ' / ' + stockCountItemCollectionView.pageCount;
        }

        // ===============
        // Show Rows Table
        // ===============
        function createCboShowRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboStockCountItemsShowNumberOfRows.dispose();
            cboStockCountItemsShowNumberOfRows = new wijmo.input.ComboBox('#cboStockCountItemsShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboStockCountItemsShowNumberOfRows.selectedValue;
                        stockCountItemCollectionView.pageSize = parseInt(numberOfRows);
                        stockCountItemCollectionView.refresh();
                        stockCountItemGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });
        }

        // ============================
        // Refresh Stock Count FlexGrid
        // ============================
        function refreshStockCountFlexGrid() {
            stockCountItemCollectionView = new wijmo.collections.CollectionView(getStockCountItemData());
            stockCountItemCollectionView.canFilter = true;
            stockCountItemCollectionView.pageSize = cboStockCountItemsShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpStockCountItemSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockCountItemCollectionView.refresh();
            });

            stockCountItemCollectionView.filter = function (item) {
                return !filterText || (item.ItemCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemDescription.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ItemManualArticleOldCode.toLowerCase().indexOf(filterText) > -1);
            }

            stockCountItemCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateStockCountItemNavigationButtons();
            });

            stockCountItemGrid.itemsSource = stockCountItemCollectionView;
            stockCountItemGrid.trackChanges = true;
        }

        // ====================================
        // Create Stock Count Item Combo - Item
        // ====================================
        function createCboStockCountItem(itemId, unitId) {
            items = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCountItem/dropdown/list/item',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            items.push({
                                Id: results[i]["Id"],
                                ArticleCode: results[i]["ArticleCode"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                Article: results[i]["Article"],
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                        $("#btnStockCountItemSave").prop("disabled", false);
                    } else {
                        $("#btnStockCountItemSave").prop("disabled", true);
                    }

                    cboStockCountItemCode.dispose();
                    cboStockCountItemCode = new wijmo.input.ComboBox('#cboStockCountItemCode', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: items,
                        displayMemberPath: "ManualArticleCode",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboStockCountItemDescription.selectedValue = this.selectedValue;
                        }
                    });

                    cboStockCountItemDescription.dispose();
                    cboStockCountItemDescription = new wijmo.input.ComboBox('#cboStockCountItemDescription', {
                        isEditable: false,
                        itemsSource: items,
                        displayMemberPath: "Article",
                        selectedValuePath: "Id",
                        selectedValue: itemId,
                        onSelectedIndexChanged: function () {
                            cboStockCountItemCode.selectedValue = this.selectedValue;
                            createCboStockCountItemUnit(unitId);
                        }
                    });

                    createCboStockCountItemUnit(unitId);
                }
            });
        }

        // ====================================
        // Create Stock Count Item Combo - Unit
        // ====================================
        function createCboStockCountItemUnit(unitId) {
            var stockOutUnitsObservableArray = new wijmo.collections.ObservableArray();
            if (cboStockCountItemDescription.selectedValue != null) {
                $.ajax({
                    url: '/api/stockCountItem/dropdown/list/itemUnit/' + cboStockCountItemDescription.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                stockOutUnitsObservableArray.push({
                                    UnitId: results[i]["UnitId"],
                                    Unit: results[i]["Unit"],
                                    Multiplier: results[i]["Multiplier"]
                                });
                            }
                        }

                        var disabled = true;
                        if (results.length > 0) {
                            disabled = false;
                        } else {
                            $("#btnStockCountItemSave").prop("disabled", true);
                        }

                        cboStockCountItemUnit.dispose();
                        cboStockCountItemUnit = new wijmo.input.ComboBox('#cboStockCountItemUnit', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: stockOutUnitsObservableArray,
                            displayMemberPath: "Unit",
                            selectedValuePath: "UnitId",
                            selectedValue: unitId
                        });

                        $("#stockCountItemLoading").hide();
                        $("#stockCountItemContent").show();
                    }
                });
            } else {
                cboStockCountItemUnit.dispose();
                cboStockCountItemUnit = new wijmo.input.ComboBox('#cboStockCountItemUnit', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: stockOutUnitsObservableArray,
                });

                $("#stockCountItemLoading").hide();
                $("#stockCountItemContent").show();
            }
        }

        // ====================
        // Add Stock Count Item
        // ====================
        function btnStockCountItemAddOnclick() {
            $('#stockCountItemDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#stockCountItemLoading").show();
            document.getElementById("stockCountItemLoading").innerHTML = 'Loading...';
            $("#stockCountItemContent").hide();

            document.getElementById("stockCountItemModalTitle").innerHTML = 'Add Stock Count Item';

            document.getElementById("btnStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockCountItemSave").prop("disabled", true);
            $("#btnStockCountItemCloseDetailModal").prop("disabled", false);

            stockCountItemId = 0;
            createCboStockCountItem(0, 0);
            document.getElementById("inpStockCountItemParticulars").value = "NA";
            document.getElementById("inpStockCountItemQuantity").value = formatDecimalValues(1);
        }

        // =====================
        // Edit Stock Count Item
        // =====================
        function btnIdStockCountItemEdit() {
            $('#stockCountItemDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#stockCountItemLoading").show();
            document.getElementById("stockCountItemLoading").innerHTML = 'Loading...';
            $("#stockCountItemContent").hide();

            document.getElementById("stockCountItemModalTitle").innerHTML = 'Edit Stock Count Item';

            document.getElementById("btnStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockCountItemSave").prop("disabled", true);
            $("#btnStockCountItemCloseDetailModal").prop("disabled", false);

            stockCountItemCollectionView.editItem(stockCountItemCollectionView.currentItem);
            var stockCountItem = stockCountItemCollectionView.currentEditItem;
            stockCountItemId = stockCountItem.Id;
            createCboStockCountItem(stockCountItem.ItemId, stockCountItem.UnitId);
            document.getElementById("inpStockCountItemParticulars").value = stockCountItem.Particulars;
            document.getElementById("inpStockCountItemQuantity").value = formatDecimalValues(stockCountItem.Quantity);
        }

        // ========================
        // Stock Count Item Objects
        // ========================
        function stockCountItemObjects() {
            var stockCountItemObject = new Object();
            stockCountItemObject.SCId = getURLParameterValue("id");
            stockCountItemObject.ItemId = cboStockCountItemDescription.selectedValue;
            stockCountItemObject.Particulars = document.getElementById("inpStockCountItemParticulars").value;
            stockCountItemObject.Quantity = document.getElementById("inpStockCountItemQuantity").value;
            stockCountItemObject.UnitId = cboStockCountItemUnit.selectedValue;
            return JSON.stringify(stockCountItemObject);
        }

        // ===========================
        // Stock Count Item Validation
        // ===========================
        function stockCountItemValidation() {
            var isValid = true;
            $(".requiredStockCountItem").each(function () {
                if ($.trim($(this).val()) == '') { isValid = false; $(this).css({ "border": "1px solid red" }); }
                else { $(this).css({ "border": "" }); }
            });

            return isValid;
        }

        // =====================
        // Save Stock Count Item
        // =====================
        function btnStockCountItemSaveOnclick() {
            if (stockCountItemValidation()) {
                document.getElementById("btnStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Saving...";
                $("#btnStockCountItemSave").prop("disabled", true);
                $("#btnStockCountItemCloseDetailModal").prop("disabled", true);

                var SCId = getURLParameterValue("id");

                if (stockCountItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/stockCountItem/add/' + SCId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockCountItemObjects(),
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");
                                $('#stockCountItemDetailModal').modal('hide');
                                refreshStockCountFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById("btnStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockCountItemSave").prop("disabled", false);
                                $("#btnStockCountItemCloseDetailModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById("btnStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockCountItemSave").prop("disabled", false);
                                $("#btnStockCountItemCloseDetailModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById("btnStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockCountItemSave").prop("disabled", false);
                                $("#btnStockCountItemCloseDetailModal").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/stockCountItem/update/' + stockCountItemId + '/' + SCId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockCountItemObjects(),
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#stockCountItemDetailModal').modal('hide');
                                refreshStockCountFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                document.getElementById("btnStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockCountItemSave").prop("disabled", false);
                                $("#btnStockCountItemCloseDetailModal").prop("disabled", false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                document.getElementById("btnStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockCountItemSave").prop("disabled", false);
                                $("#btnStockCountItemCloseDetailModal").prop("disabled", false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                document.getElementById("btnStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
                                $("#btnStockCountItemSave").prop("disabled", false);
                                $("#btnStockCountItemCloseDetailModal").prop("disabled", false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // =======================
        // Delete Stock Count Item
        // =======================
        function btnStockCountItemDeleteOnclick() {
            $('#stockCountItemDeleteModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById("btnStockCountItemConfirmDeleteModal").innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#btnStockCountItemConfirmDeleteModal").prop("disabled", false);
            $("#btnStockCountItemCloseConfirmDeleteModal").prop("disabled", false);
        }

        // ===============================
        // Confirm Delete Stock Count Item
        // ===============================
        function btnStockCountItemConfirmDeleteModalOnclick() {
            document.getElementById("btnStockCountItemConfirmDeleteModal").innerHTML = "<i class='fa fa-trash'></i> Deleting...";
            $("#btnStockCountItemConfirmDeleteModal").prop("disabled", true);
            $("#btnStockCountItemCloseConfirmDeleteModal").prop("disabled", true);

            stockCountItemCollectionView.editItem(stockCountItemCollectionView.currentItem);
            var stockCountItem = stockCountItemCollectionView.currentEditItem;
            var id = stockCountItem.Id;

            var SCId = getURLParameterValue("id");

            $.ajax({
                url: '/api/stockCountItem/delete/' + id + '/' + SCId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#stockCountItemDeleteModal').modal('hide');
                        refreshStockCountFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#stockCountItemDeleteModal').modal('hide');
                        document.getElementById("btnStockCountItemConfirmDeleteModal").innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockCountItemConfirmDeleteModal").prop("disabled", false);
                        $("#btnStockCountItemCloseConfirmDeleteModal").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#stockCountItemDeleteModal').modal('hide');
                        document.getElementById("btnStockCountItemConfirmDeleteModal").innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockCountItemConfirmDeleteModal").prop("disabled", false);
                        $("#btnStockCountItemCloseConfirmDeleteModal").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#stockCountItemDeleteModal').modal('hide');
                        document.getElementById("btnStockCountItemConfirmDeleteModal").innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnStockCountItemConfirmDeleteModal").prop("disabled", false);
                        $("#btnStockCountItemCloseConfirmDeleteModal").prop("disabled", false);
                    }
                }
            });
        }

        // ===================
        // Get Item Query Data
        // ===================
        function getItemQueryData() {
            var items = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCountItem/popUp/list/itemQuery',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            items.push({
                                Id: results[i]["Id"],
                                ArticleCode: results[i]["ArticleCode"],
                                ManualArticleCode: results[i]["ManualArticleCode"],
                                ManualArticleOldCode: results[i]["ManualArticleOldCode"],
                                Article: results[i]["Article"],
                                Price: results[i]["Price"],
                                PriceDisplay: parseFloat(results[i]["Price"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='btnItemQueryPickOnclick()'><i class='fa fa-hand-o-right'></i> Pick</button>"
                            });
                        }
                    }

                    $("#itemQueryLoading").hide();
                    $("#itemQueryContent").show();
                }
            });

            return items;
        }

        // ===========================
        // Create Item Query Flex Grid
        // ===========================
        function createItemQueryFlexGrid() {
            itemQueryCollectionView = new wijmo.collections.CollectionView(getItemQueryData());
            itemQueryCollectionView.canFilter = true;
            itemQueryCollectionView.pageSize = 10;

            var filterText = '';
            $('#inpItemQuerySearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryCollectionView.refresh();
            });

            itemQueryCollectionView.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1);
            }

            itemQueryCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateItemQueryNavigationButtons();
            });

            itemQueryFlexGrid.dispose();
            itemQueryFlexGrid = new wijmo.grid.FlexGrid('#itemQueryFlexGrid');
            itemQueryFlexGrid.initialize({
                columns: [
                    {
                        "header": "Barcode",
                        "binding": "ManualArticleCode",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "SKU Code",
                        "binding": "ManualArticleOldCode",
                        "allowSorting": true,
                        "width": "3*"
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Price",
                        "binding": "PriceDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    },
                    {
                        "header": "Pick",
                        "binding": "Pick",
                        "width": "1*",
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryFlexGrid.trackChanges = true;

            if (!isItemQueryClicked) {
                updateItemQueryNavigationButtons();

                btnItemQueryMoveToFirstPageGrid.addEventListener('click', function () {
                    itemQueryCollectionView.moveToFirstPage();
                    updateItemQueryNavigationButtons();
                });

                btnItemQueryMoveToPreviousPageGrid.addEventListener('click', function () {
                    itemQueryCollectionView.moveToPreviousPage();
                    updateItemQueryNavigationButtons();
                });

                btnItemQueryMoveToNextPageGrid.addEventListener('click', function () {
                    itemQueryCollectionView.moveToNextPage();
                    updateItemQueryNavigationButtons();
                });

                btnItemQueryMoveToLastPageGrid.addEventListener('click', function () {
                    itemQueryCollectionView.moveToLastPage();
                    updateItemQueryNavigationButtons();
                });

                isItemQueryClicked = true;
            }
        }

        // ====================================
        // Update Item Query Navigation Buttons
        // ====================================
        function updateItemQueryNavigationButtons() {
            if (itemQueryCollectionView.pageSize <= 0) {
                document.getElementById('stockCountItemNavigationPageGridQuery').style.display = 'none';
                return;
            }
            document.getElementById('stockCountItemNavigationPageGridQuery').style.display = 'block';
            if (itemQueryCollectionView.pageIndex === 0) {
                btnItemQueryMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToLastPageGrid.removeAttribute('disabled');
            } else if (itemQueryCollectionView.pageIndex === (itemQueryCollectionView.pageCount - 1)) {
                btnItemQueryMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToNextPageGrid.setAttribute('disabled', 'disabled');
                btnItemQueryMoveToLastPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnItemQueryMoveToFirstPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToPreviousPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToNextPageGrid.removeAttribute('disabled');
                btnItemQueryMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnItemQueryCurrentPageGrid.innerHTML = (itemQueryCollectionView.pageIndex + 1) + ' / ' + itemQueryCollectionView.pageCount;
        }

        // =======================
        // Launch Item Query Modal
        // =======================
        function btnItemQueryOnclick() {
            $('#itemQueryModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#itemQueryLoading").show();
            document.getElementById("itemQueryLoading").innerHTML = "Loading...";
            $("#itemQueryContent").hide();

            setTimeout(function() {
                createItemQueryFlexGrid();
            }, 500)
        }

        // ===============
        // Pick Item Query
        // ===============
        function btnItemQueryPickOnclick() {
            $('#stockCountItemDetailModal').modal({
                show: true,
                backdrop: 'static'
            });

            $("#stockCountItemLoading").show();
            document.getElementById("stockCountItemLoading").innerHTML = 'Loading...';
            $("#stockCountItemContent").hide();

            document.getElementById("stockCountItemModalTitle").innerHTML = 'Add Stock Count Item';

            document.getElementById("btnStockCountItemSave").innerHTML = "<i class='fa fa-save'></i> Save";
            $("#btnStockCountItemSave").prop("disabled", true);
            $("#btnStockCountItemCloseDetailModal").prop("disabled", false);

            itemQueryCollectionView.editItem(itemQueryCollectionView.currentItem);
            var stockCountItem = itemQueryCollectionView.currentEditItem;
            stockCountItemId = 0;
            createCboStockCountItem(stockCountItem.Id, stockCountItem.UnitId);
            document.getElementById("inpStockCountItemParticulars").value = "NA";
            document.getElementById("inpStockCountItemQuantity").value = formatDecimalValues(1);
        }

        // ======================
        // Launch Multiple Modals
        // ======================
        $(document).on('show.bs.modal', '.modal', function (event) {
            var zIndex = 1040 + (10 * $('.modal:visible').length);
            $(this).css('z-index', zIndex);
            setTimeout(function () {
                $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
            }, 0);
        });

        $(document).on('hidden.bs.modal', '.modal', function () {
            $('.modal:visible').length && $(document.body).addClass('modal-open');
        });

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            createCboStockCountBranch();
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>