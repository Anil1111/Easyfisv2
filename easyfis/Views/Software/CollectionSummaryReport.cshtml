<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Collection Summary Report</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Collection Summary Report
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 49%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control " id="InputFilter" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 50%" align="right">
                                    <button onclick="btnCollectionSummaryReportCSVOnclick()" id="btnCollectionSummaryReportCSV" class="btn btn-success"><i class="fa fa-file-excel-o" aria-hidden="true"></i> CSV</button>
                                    <button onclick="btnCollectionSummaryReportPrintPDFOnclick()" id="btnCollectionSummaryReportPrintPDF" class="btn btn-primary"><i class="fa fa-print"></i> Print</button>
                                    <a href="/Software/AccountsReceivable" class="btn btn-danger"><i class="fa fa-close"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Start Date</b></span>
                                        <div class="comboBox-wide" id="cboARCollectionSummaryReportStartDate"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%" align="right">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>End Date</b></span>
                                        <div class="comboBox-wide" id="cboARCollectionSummaryReportEndDate"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Company</b></span>
                                        <div class="comboBox-wide" id="cboARCollectionSummaryReportCompany"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Branch</b></span>
                                        <div class="comboBox-wide" id="cboARCollectionSummaryReportBranch"></div>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div id="collectionSummaryReportGrid" class="grid"></div>
                <br /><br />
                <div class="row">
                    <div class="col-md-6">

                    </div>
                    <div class="col-md-6">
                        <dl class="dl-horizontal dl-custom">
                            <dt>
                                <b>Total Amount</b>
                            </dt>
                            <dd>
                                <input type="text" class="form-control numberField" id="totalAmount" placeholder="0.00" disabled />
                            </dd>
                        </dl>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var cboARCollectionSummaryReportStartDate = new wijmo.input.InputDate('#cboARCollectionSummaryReportStartDate');
        var cboARCollectionSummaryReportEndDate = new wijmo.input.InputDate('#cboARCollectionSummaryReportEndDate');
        var isARCollectionSummaryReportStartDateSelected = false;
        var isARCollectionSummaryReportEndDateSelected = false;
        var cboARCollectionSummaryReportCompany = new wijmo.input.ComboBox('#cboARCollectionSummaryReportCompany');
        var cboARCollectionSummaryReportBranch = new wijmo.input.ComboBox('#cboARCollectionSummaryReportBranch');
        var collectionSummaryReportCollections;
        var collectionSummaryReportGrid;
        var isARCollectionSummaryReportCompanySelected = false;

        // ===================
        // Get Parameter Value
        // ===================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ============
        // Date Filters
        // ============
        function collectionSummaryReportDateFilters() {
            NProgress.start();
            cboARCollectionSummaryReportStartDate.dispose();
            cboARCollectionSummaryReportStartDate = new wijmo.input.InputDate('#cboARCollectionSummaryReportStartDate', {
                format: 'MM-dd-yyyy',
                value: new Date(getParam("StartDate")),
                onValueChanged: function () {
                    if (!isARCollectionSummaryReportStartDateSelected) {
                        NProgress.start();
                        refreshCollectionSummaryReportFlexGrid();
                    } else {
                        isARCollectionSummaryReportStartDateSelected = false;
                    }
                }
            });

            cboARCollectionSummaryReportEndDate.dispose();
            cboARCollectionSummaryReportEndDate = new wijmo.input.InputDate('#cboARCollectionSummaryReportEndDate', {
                format: 'MM-dd-yyyy',
                value: new Date(getParam("EndDate")),
                onValueChanged: function () {
                    if (!isARCollectionSummaryReportEndDateSelected) {
                        NProgress.start();
                        refreshCollectionSummaryReportFlexGrid();
                    } else {
                        isARCollectionSummaryReportEndDateSelected = false;
                    }
                }
            });

            createCboCompany();
        }

        // ==============
        // Company Filter
        // ==============
        function createCboCompany() {
            var companyObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/company/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (companyResults) {
                    if (companyResults.length > 0) {
                        for (i = 0; i < companyResults.length; i++) {
                            companyObservableArray.push({
                                Id: companyResults[i]["Id"],
                                Company: companyResults[i]["Company"],
                                Address: companyResults[i]["Address"],
                                ContactNumber: companyResults[i]["ContactNumber"],
                                TaxNumber: companyResults[i]["TaxNumber"],
                            });
                        }
                    }

                    var disabled = true;
                    if (companyResults.length > 0) {
                        disabled = false;
                    } else {
                        $("#btnCollectionSummaryReportCSV").prop("disabled", true);
                        $("#btnCollectionSummaryReportPrintPDF").prop("disabled", true);
                    }

                    cboARCollectionSummaryReportCompany.dispose();
                    cboARCollectionSummaryReportCompany = new wijmo.input.ComboBox('#cboARCollectionSummaryReportCompany', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: companyObservableArray,
                        displayMemberPath: "Company",
                        selectedValuePath: "Id",
                        selectedValue: getParam("CompanyId"),
                        onSelectedIndexChanged: function () {
                            NProgress.start();
                            $("#btnCollectionSummaryReportCSV").prop("disabled", false);
                            $("#btnCollectionSummaryReportPrintPDF").prop("disabled", false);
                            isARCollectionSummaryReportCompanySelected = true;
                            createCboBranch();
                        }
                    });

                    createCboBranch();
                }
            });
        }

        // =============
        // Branch Filter
        // =============
        function createCboBranch() {
            var branchObservableArray = new wijmo.collections.ObservableArray();
            if (cboARCollectionSummaryReportCompany.selectedValue != null) {
                $.ajax({
                    url: '/api/branch/byCompanyId/list/locked/' + cboARCollectionSummaryReportCompany.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (branchResults) {
                        if (branchResults.length > 0) {
                            for (i = 0; i < branchResults.length; i++) {
                                branchObservableArray.push({
                                    Id: branchResults[i]["Id"],
                                    CompanyId: branchResults[i]["CompanyId"],
                                    Branch: branchResults[i]["Branch"],
                                    Address: branchResults[i]["Address"],
                                    ContactNumber: branchResults[i]["ContactNumber"],
                                    TaxNumber: branchResults[i]["TaxNumber"]
                                });
                            }
                        }

                        var disabled = true;
                        if (branchResults.length > 0) {
                            disabled = false;
                        } else {
                            $("#btnCollectionSummaryReportCSV").prop("disabled", true);
                            $("#btnCollectionSummaryReportPrintPDF").prop("disabled", true);
                        }

                        cboARCollectionSummaryReportBranch.dispose();
                        cboARCollectionSummaryReportBranch = new wijmo.input.ComboBox('#cboARCollectionSummaryReportBranch', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: branchObservableArray,
                            displayMemberPath: "Branch",
                            selectedValuePath: "Id",
                            selectedValue: getParam("BranchId"),
                            onSelectedIndexChanged: function () {
                                NProgress.start();
                                refreshCollectionSummaryReportFlexGrid();
                            }
                        });

                        if (!isARCollectionSummaryReportCompanySelected) {
                            createCollectionSummaryReportFlexGrid();
                        } else {
                            refreshCollectionSummaryReportFlexGrid();
                        }
                    }
                });
            }
        }

        // ===============================
        // Get Collection Order Summary Data
        // ===============================
        function getCollectionSummaryReport() {
            var collectionSummaryReports = new wijmo.collections.ObservableArray;
            if (cboARCollectionSummaryReportCompany.selectedValue != null) {
                if (cboARCollectionSummaryReportBranch.selectedValue != null) {
                    var startDate = cboARCollectionSummaryReportStartDate.value.toLocaleDateString().replace(/\//g, '-');
                    var endDate = cboARCollectionSummaryReportEndDate.value.toLocaleDateString().replace(/\//g, '-');
                    var companyId = cboARCollectionSummaryReportCompany.selectedValue;
                    var branchId = cboARCollectionSummaryReportBranch.selectedValue;

                    $.ajax({
                        url: '/api/collectionSummaryReport/list/' + startDate + '/' + endDate + '/' + + companyId + '/' + branchId,
                        cache: false,
                        type: 'GET',
                        contentType: 'application/json; charset=utf-8',
                        success: function (collectionSummaryReportResult) {
                            var totalAmount = 0;
                            if (collectionSummaryReportResult.length > 0) {
                                for (i = 0; i < collectionSummaryReportResult.length; i++) {
                                    var docLink = "/Software/CollectionDetail?id=" + collectionSummaryReportResult[i]["Id"];

                                    var ORDateResult = new Date(collectionSummaryReportResult[i]["ORDate"])
                                    var ORDate = ('0' + (ORDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + ORDateResult.getDate()).slice(-2) + '-' + ORDateResult.getFullYear();

                                    collectionSummaryReports.push({
                                        Id: collectionSummaryReportResult[i]["Id"],
                                        Branch: collectionSummaryReportResult[i]["Branch"],
                                        ORNumber: collectionSummaryReportResult[i]["ORNumber"],
                                        ORNumberForCSV: "OR-" + collectionSummaryReportResult[i]["ORNumber"],
                                        ORNumberButton: "<a href='" + docLink + "' class='btn btn-primary btn-xs btn-block'>" + collectionSummaryReportResult[i]["ORNumber"],
                                        ORDate: ORDate,
                                        Customer: collectionSummaryReportResult[i]["Customer"],
                                        Particulars: collectionSummaryReportResult[i]["Particulars"],
                                        Amount: collectionSummaryReportResult[i]["Amount"],
                                        AmountDisplay: parseFloat(collectionSummaryReportResult[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                                    });

                                    totalAmount += collectionSummaryReportResult[i]["Amount"];
                                }
                            }

                            document.getElementById("totalAmount").value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                            NProgress.done();
                        }
                    });
                } else {
                    document.getElementById("totalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    NProgress.done();
                }
            } else {
                document.getElementById("totalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                NProgress.done();
            }

            return collectionSummaryReports;
        }

        // =================
        // Refresh Flex Grid
        // =================
        function refreshCollectionSummaryReportFlexGrid() {
            collectionSummaryReportCollections = new wijmo.collections.CollectionView(getCollectionSummaryReport());
            collectionSummaryReportCollections.canFilter = true;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                collectionSummaryReportCollections.refresh();

                if (collectionSummaryReportCollections.items.length > 0) {
                    var totalAmount = 0;
                    for (var i = 0; i < collectionSummaryReportCollections.items.length; i++) {
                        totalAmount += collectionSummaryReportCollections.items[i].Amount;
                    }

                    document.getElementById("totalAmount").value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                } else {
                    document.getElementById("totalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }
            });

            collectionSummaryReportCollections.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ORNumber.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Customer.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1);
            }

            collectionSummaryReportGrid.itemsSource = collectionSummaryReportCollections;
            collectionSummaryReportGrid.trackChanges = true;
        }

        // =========
        // Flex Grid
        // =========
        function createCollectionSummaryReportFlexGrid() {
            collectionSummaryReportCollections = new wijmo.collections.CollectionView(getCollectionSummaryReport());
            collectionSummaryReportCollections.canFilter = true;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                collectionSummaryReportCollections.refresh();

                if (collectionSummaryReportCollections.items.length > 0) {
                    var totalAmount = 0;
                    for (var i = 0; i < collectionSummaryReportCollections.items.length; i++) {
                        totalAmount += collectionSummaryReportCollections.items[i].Amount;
                    }

                    document.getElementById("totalAmount").value = parseFloat(totalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                } else {
                    document.getElementById("totalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }
            });

            collectionSummaryReportCollections.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ORNumber.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Customer.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Particulars.toLowerCase().indexOf(filterText) > -1);
            }

            collectionSummaryReportGrid = new wijmo.grid.FlexGrid('#collectionSummaryReportGrid');
            collectionSummaryReportGrid.initialize({
                columns: [
                    {
                        "header": "OR Number",
                        "binding": "ORNumberButton",
                        "isContentHtml": true,
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "OR Date ",
                        "binding": "ORDate",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Customer",
                        "binding": "Customer",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "1*"
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: collectionSummaryReportCollections,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            collectionSummaryReportGrid.trackChanges = true;
        }

        // ============
        // Download CSV
        // ============
        function btnCollectionSummaryReportCSVOnclick() {
            var CSV = '';
            var collectionSummaryReport = [];
            var fileName = 'CollectionSummaryReport.CSV';

            for (i = 0; i < collectionSummaryReportCollections.items.length; i++) {
                var IsClose = collectionSummaryReportCollections.items[i].IsClose;
                var isPOClose = "Not Closed";
                if (IsClose) {
                    isPOClose = "Closed"
                }

                collectionSummaryReport.push({
                    Branch: collectionSummaryReportCollections.items[i].Branch,
                    ORNumber: collectionSummaryReportCollections.items[i].ORNumberForCSV,
                    ORDate: collectionSummaryReportCollections.items[i].ORDate,
                    Customer: collectionSummaryReportCollections.items[i].Customer,
                    Particulars: collectionSummaryReportCollections.items[i].Particulars,
                    Amount: collectionSummaryReportCollections.items[i].Amount,
                });
            }

            var Headers = [];
            Headers.push({
                Branch: "Branch",
                ORNumber: "OR Number",
                ORDate: "OR Date",
                Customer: "Customer",
                Particulars: "Particulars",
                Amount: "Amount",
            });

            var header = '';
            for (var b in Headers[0]) {
                header += '"' + Headers[0][b] + '",';
            }

            CSV = header + '\r\n';
            for (var i = 0; i < collectionSummaryReport.length; i++) {
                var row = '';
                for (var a in collectionSummaryReport[i]) {
                    row += '"' + collectionSummaryReport[i][a] + '",';
                }

                row.slice(0, row.length - 1);
                CSV += row + '\r\n';
            }

            if (CSV == '') {
                toastr.error("No data.");
            } else {
                var link = document.createElement("a");
                if (link.download !== undefined) {
                    var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", fileName);
                    link.style = "visibility:hidden";
                }

                if (navigator.msSaveBlob) {
                    link.addEventListener("click", function (event) {
                        var blob = new Blob([CSV], {
                            "type": "text/csv;charset=utf-8;"
                        });
                        navigator.msSaveBlob(blob, fileName);
                    }, false);
                }

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                toastr.success("Dowload successful.");
            }
        }

        // =====================
        // Preview and Print PDF
        // =====================
        function btnCollectionSummaryReportPrintPDFOnclick() {
            if (cboARCollectionSummaryReportCompany.selectedValue != null) {
                if (cboARCollectionSummaryReportBranch.selectedValue != null) {
                    var startDate = cboARCollectionSummaryReportStartDate.value.toLocaleDateString().replace(/\//g, '-');
                    var endDate = cboARCollectionSummaryReportEndDate.value.toLocaleDateString().replace(/\//g, '-');
                    var companyId = cboARCollectionSummaryReportCompany.selectedValue;
                    var branchId = cboARCollectionSummaryReportBranch.selectedValue;

                    window.location.href = '/RepCollectionSummaryReport/CollectionSummaryReport?StartDate=' + startDate + '&EndDate=' + endDate + '&CompanyId=' + companyId + '&BranchId=' + branchId;
                } else {
                    toastr.error("Lacking Information");
                }
            } else {
                toastr.error("Lacking Information");
            }
        }

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            collectionSummaryReportDateFilters();
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>