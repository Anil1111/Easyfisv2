@{
    var branchId = Request.QueryString["BranchId"];
    var collectonId = Request.QueryString["CollectonId"];
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Collection Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Font-Awesome/css")
    @Styles.Render("~/Content/Software-css")
    @Styles.Render("~/WijmoCSS/Wijmo-css")
</head>
<body>
    <div id="wrapper" class="wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <br /><br /><br />
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <h4><i class="fa fa-cc-visa fa-2x"></i> Collection Detail</h4>
                        <br />
                        <div class="div_Current_Page">
                            <span id="currentPage"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="collectionDetailLabel"></h4>
                    </div>
                    <div class="col-md-6" align="right">
                        <button class="btn btn-primary btn-sm" id="cmdCollectionJournal"><i class="fa fa-book"></i> Journal</button>
                        <button class="btn btn-primary btn-sm" id="cmdCollectionSave" onclick="btnCollectionSave_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button class="btn btn-primary btn-sm" id="cmdCollectionEdit"><i class="fa fa-edit"></i> Edit</button>
                        <button class="btn btn-primary btn-sm" id="cmdCollectionPrint" onclick="window.location.href ='@Url.Action("CollectionPDF", "Software", new { CollectonId = collectonId })'"><i class="fa fa-print"></i> Print</button>
                        <button onclick="window.location.href = '@Url.Action("Collection", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="cmdCollectionClose"><i class="fa fa-times"></i> Close</button>
                    </div>
                </div>
                @*<hr />*@
                <div class="well">
                    <form class="form-horizontal" role="form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Branch:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="collection_Branch"></div>

                                        <input type="hidden" id="collection_Branch_data" class="requiredCollection" />
                                        <input type="hidden" id="collection_Branch_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">OR Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredCollection" id="collection_ORNumber" />
                                        <input type="hidden" id="collection_ORNumber_Display" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">OR Date:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="collection_ORDate"></div>
                                        <input type="hidden" id="collection_ORDate_data" class="requiredCollection" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Manual OR Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredCollection" id="collection_ManualORNumber">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Customer:</label>
                                    <div class="col-sm-8">
                                        <div class="input-group">
                                            <div class="comboBox-wide" id="collection_Customer"></div>

                                            <input type="hidden" id="collection_Customer_data" class="requiredCollection" />
                                            <input type="hidden" id="collection_Customer_selectedValue" />
                                            <div class="input-group-btn">
                                                <button type="button" class=" btn btn-primary btn-sm" id="cmdAR" onclick="collectionAR_OnClick()">AR</button>
                                                <button type="button" class="btn btn-primary btn-sm" id="cmdAdvances" onclick="collectionAdvances_OnClick()">Advances</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Particulars:</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control textarea-custom requiredCollection" id="collection_Particulars"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Prepared by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="collection_PreparedBy"></div>

                                        <input type="hidden" id="collection_PreparedBy_data" class="requiredCollection" />
                                        <input type="hidden" id="collection_PreparedBy_selectedValue" />
                                        <input type="hidden" id="userId_data" value="@userId" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Checked by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="collection_CheckedBy"></div>

                                        <input type="hidden" id="collection_CheckedBy_data" class="requiredCollection" />
                                        <input type="hidden" id="collection_CheckedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Approved by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="collection_ApprovedBy"></div>

                                        <input type="hidden" id="collection_ApprovedBy_data" class="requiredCollection" />
                                        <input type="hidden" id="collection_ApprovedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Lock:</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" id="collection_Lock">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <h4>Collection Line</h4>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="input-group input-group-sm">
                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                            <input type="text" class="form-control input-sm" id="InputFilterCollectionLine" placeholder="Search">
                        </div>
                    </div>
                    <div class="col-lg-8">
                        <button type="submit" class="btn btn-primary pull-right btn-sm" onclick="cmdAddCollectionLineButton_OnClick()"><i class="fa fa-plus"></i> Add</button>
                    </div>
                </div>
                <br />
                <div class="row" align="left">
                    <div class="col-lg-12">
                        <div id="CollectionLineGrid" class="grid" align="left"></div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="btn-group col-md-7" id="navigationPageGridCollectionLine">
                        <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridCollectionLine">
                            <span class="glyphicon glyphicon-fast-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridCollectionLine">
                            <span class="glyphicon glyphicon-step-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridCollectionLine"></button>
                        <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridCollectionLine">
                            <span class="glyphicon glyphicon-step-forward"></span>
                        </button>
                        <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridCollectionLine">
                            <span class="glyphicon glyphicon-fast-forward"></span>
                        </button>
                    </div>
                </div>
            </div>
        </section>

        <!-- Sales for Collection Modal -->
        <div class="modal fade" id="SalesStatus" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="POStatusModalLabel">Sales Invoice Status</h4>
                    </div>
                    <div class="modal-body">

                    </div>
                    <div class="modal-footer">
                        <!--tton class="btn btn-primary btn-sm" id="cmdSaveJournalVoucherLineButton" onclick="cmdJournalVoucherLineSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>-->
                        <button type="button" id="cmdPOStatusCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- customer Advances for Collection Modal -->
        <div class="modal fade" id="customerAdvances" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="POStatusModalLabel">Customer Advances</h4>
                    </div>
                    <div class="modal-body">

                    </div>
                    <div class="modal-footer">
                        <!--tton class="btn btn-primary btn-sm" id="cmdSaveJournalVoucherLineButton" onclick="cmdJournalVoucherLineSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>-->
                        <button type="button" id="cmdPOStatusCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Collection Line Edit Detail -->
        <div class="modal fade" id="collectionLineEdit" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="collectionLineModalLabel">Collection Line Detail</h4>
                    </div>
                    <div class="modal-body">
                        <form id="collectionLineDetailForm">
                            <input type="text" id="collectionLine_Id" />
                            <dl class="dl-horizontal">
                                <dt>Branch:</dt>
                                <dd>
                                    <div class="comboBox-wide" id="collectionLine_branch"></div>

                                    <input type="text" id="collectionLine_branch_data" class="requiredCollectionLine">
                                    <input type="text" id="collectionLine_branch_selectedValue" />
                                </dd>
                                <dt>Pay Type:</dt>
                                <dd>
                                    <div class="comboBox-wide" id="collectionLine_payType"></div>

                                    <input type="text" id="collectionLine_payType_data" class="requiredCollectionLine">
                                    <input type="text" id="collectionLine_payType_selectedValue" />
                                </dd>
                                <dt>Particulars:</dt>
                                <dd><textarea class="form-control textarea-custom requiredCollectionLine" id="collectionLine_Particulars"></textarea></dd>
                                <dt>SI No.:</dt>
                                <dd>
                                    <div class="comboBox-wide" id="collectionLine_SINo"></div>

                                    <input type="text" id="collectionLine_SINo_data" class="requiredCollectionLine">
                                    <input type="text" id="collectionLine_SINo_selectedValue" />
                                </dd>
                                <dt>Amount:</dt>
                                <dd><input class="form-control input-sm requiredCollectionLine" id="collectionLine_amount" /></dd>
                                <dt>Account:</dt>
                                <dd>
                                    <div class="comboBox-wide" id="collectionLine_account"></div>

                                    <input type="text" id="collectionLine_account_data" class="requiredCollectionLine">
                                    <input type="text" id="collectionLine_account_selectedValue" />
                                </dd>
                                <dt>Article:</dt>
                                <dd>
                                    <div class="comboBox-wide" id="collectionLine_article"></div>

                                    <input type="text" id="collectionLine_article_data" class="requiredCollectionLine">
                                    <input type="text" id="collectionLine_article_selectedValue" />
                                </dd>
                                <dt>Check No.:</dt>
                                <dd><input type="text" class=" form-control input-sm requiredCollectionLine" id="collectionLine_checkNo" /></dd>
                                <dt>Check Date:</dt>
                                <dd>
                                    <div class="comboBox-wide" id="collectionLine_checkDate"></div>
                                    
                                    <input class="form-control input-sm requiredCollectionLine" id="collectionLine_checkDate_data" />
                                </dd>
                                <dt>Depository Bank:</dt>
                                <dd>
                                    <div class="comboBox-wide" id="collectionLine_depositoryBank"></div>

                                    <input type="text" id="collectionLine_depositoryBank_data" class="requiredCollectionLine">
                                    <input type="text" id="collectionLine_depositoryBank_selectedValue" />
                                </dd>
                                <dt>Clear:</dt>
                                <dd><input type="checkbox" id="collectionLine_Clear"/></dd>
                            </dl>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary btn-sm" id="cmdSaveCollectionLineButton" onclick="cmdCollectionLineSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button id="cmdCollectionLineDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Collection Line Delete Modal Confirmation -->
        <div class="modal fade" id="deleteCollectionLineConfirm" role="dialog">
            <div class="modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Delete Collection Line <i class="fa fa-trash"></i></h4>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this?
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteCollectionLine" onclick="cmdCollectionLineConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                        <button id="cmdConfirmDeleteCollectionLineCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">
                        <h4>Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    <!-- Scripts JavaScripts -->
    @Scripts.Render("~/Scripts/Software-js")
    @Scripts.Render("~/WijmoScripts/Wijmo-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var collections;

        var branches;
        var customers;

        var ORDate;

        var cboBranch;
        var cboCustomer;
        var cboPreparedBy;

        var collectionLines;
        var collectionLineGrid;
        var btnFirstPageGridCollectionGrid;
        var btnPreviousPageGridCollectionGrid;
        var btnNextPageGridCollectionGrid;
        var btnLastPageGridCollectionGrid;
        var btnCurrentPageGridCollectionGrid;

        // ====================
        // GET Collection By Id
        // ====================
        function getCollectionById() {
            collections = new wijmo.collections.ObservableArray;
            var collectonId = @collectonId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/collection/' + collectonId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        collections.push({
                            Id: Results.Id,
                            BranchId: Results.BranchId,
                            Branch: Results.Branch,
                            ORNumber: Results.ORNumber,
                            ORDate: Results.ORDate,
                            CustomerId: Results.CustomerId,
                            Customer: Results.Customer,
                            Particulars: Results.Particulars,
                            ManualORNumber: Results.ManualORNumber,
                            PreparedById: Results.PreparedById,
                            PreparedBy: Results.PreparedBy,
                            CheckedById: Results.CheckedById,
                            CheckedBy: Results.CheckedBy,
                            ApprovedById: Results.ApprovedById,
                            ApprovedBy: Results.ApprovedBy,
                            IsLocked: Results.IsLocked,
                            CreatedById: Results.CreatedById,
                            CreatedBy: Results.CreatedBy,
                            CreatedDateTime: Results.CreatedDateTime,
                            UpdatedById: Results.UpdatedById,
                            UpdatedBy: Results.UpdatedBy,
                            UpdatedDateTime: Results.UpdatedDateTime
                        });
                    }

                    document.getElementById('collection_Branch_data').value = Results.BranchId;
                    document.getElementById('collection_Branch_selectedValue').value = Results.Branch;
                    document.getElementById('collection_ORNumber').value = Results.ORNumber;
                    document.getElementById('collection_ORNumber_Display').value = Results.ORNumber;
                    document.getElementById('collection_ORDate_data').value = Results.ORDate;
                    var ORdate_date = Results.ORDate;
                    ORDate.dispose();
                    ORDate = new wijmo.input.InputDate('#collection_ORDate', {
                        format: 'MM/dd/yyyy',
                        value: new Date(ORdate_date),
                        mask: '99/99/9999',
                        onValueChanged: function () {
                            document.getElementById('collection_ORDate_data').value = this.value.toLocaleDateString();
                        }
                    });
                    document.getElementById('collection_ManualORNumber').value = Results.ManualORNumber;
                    document.getElementById('collection_Customer_data').value = Results.CustomerId;
                    document.getElementById('collection_Customer_selectedValue').value = Results.Customer;
                    document.getElementById('collection_Particulars').value = Results.Particulars;
                    document.getElementById('collection_PreparedBy_data').value = Results.PreparedById;
                    document.getElementById('collection_PreparedBy_selectedValue').value = Results.PreparedBy;
                    document.getElementById('collection_CheckedBy_data').value = Results.CheckedById;
                    document.getElementById('collection_CheckedBy_selectedValue').value = Results.CheckedBy;
                    document.getElementById('collection_ApprovedBy_data').value = Results.ApprovedById;
                    document.getElementById('collection_ApprovedBy_selectedValue').value = Results.ApprovedBy;
                    document.getElementById('collection_Lock').checked = Results.IsLocked;
                    document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                    document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                    document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                    document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                    getBranchesForComboBox();
                    getCustomerForComboBox();
                    getUsersForComboBox();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return collections;
        }


        // ======================
        // GET Collection Last Id
        // ======================
        function getCollectionLastInsertedId() {
            var collections = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/collectionLastId',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        collections.push({
                            Id: Results.Id,
                            ORNumber: Results.ORNumber
                        });
                    }
                    window.location = '/Software/CollectionDetail?CollectonId=' + Results.Id + '&BranchId=' + @branchId;
                    window.setTimeout(function () { location.reload() }, 1000);
                }
            });
            return collections;
        }


        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var collectonId = @collectonId;
                        if(collectonId == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + @branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        branches.push({
                                            BranchId: results.Id,
                                            Branch: results.Branch
                                        });
                                    }
                                    document.getElementById('collection_Branch_data').value = results.Id;
                                    document.getElementById('collection_Branch_selectedValue').value = results.Branch;

                                    createCboBranch(branches);
                                }
                            });
                        } else {
                            createCboBranch(branches);
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
                );

            return branches;
        }

        // ======================
        // Combo Box for Branches
        // ======--==============
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#collection_Branch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('collection_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#collection_Branch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });
        }


        // ==========================
        // GET Customer for Combo Box
        // ==========================
        function getCustomerForComboBox() {
            customers = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/2',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            customers.push({
                                CustomerId: results[i]["Id"],
                                Customer: results[i]["Article"]
                            });
                        }
                        createCboCustomer(customers);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
                );

            return customers;
        }

        // =======================
        // Combo Box for Customer
        // =======================
        function createCboCustomer(customers) {
            var customerCollection = new wijmo.collections.CollectionView(customers);
            var customerList = new Array();
            for (var i = 0; i < customerCollection.items.length; i++) {
                customerList.push(customerCollection.items[i].Customer);
            }

            cboCustomer.dispose();
            cboCustomer = new wijmo.input.ComboBox('#collection_Customer', {
                placeholder: "Select Customer",
                itemsSource: customerList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('collection_Customer_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#collection_Customer_data").val(customerCollection.items[this.selectedIndex].CustomerId);
                }
            });
        }


        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        var collectonId = @collectonId;
                        if(collectonId == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        users.push({
                                            UserId: results.Id,
                                            UserFullName: results.FullName
                                        });
                                    }
                                    console.log(results.Id);
                                    document.getElementById('collection_PreparedBy_data').value = results.Id;
                                    document.getElementById('collection_PreparedBy_selectedValue').value =  results.FullName;

                                    createCboUserPreparedBy(users);
                                    createCboUserCheckedBy(users);
                                    createCboUserApprovedBy(users);
                                }
                            });
                        } else {
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return users;
        }

        // =================================
        // Combo Box for Users - Prepared By
        // =================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#collection_PreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('collection_PreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#collection_PreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // =================================
        // Combo Box for Users - Checked By
        // =================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboCheckedBy.dispose();
            cboCheckedBy = new wijmo.input.ComboBox('#collection_CheckedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('collection_CheckedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#collection_CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // =================================
        // Combo Box for Users - Approved By
        // =================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboApprovedBy.dispose();
            cboApprovedBy = new wijmo.input.ComboBox('#collection_ApprovedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('collection_ApprovedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#collection_ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // =====================================================
        // Function with leading zeroes to display the OR Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while(pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // ==============
        // ADD Collection
        // ==============
        function btnCollectionSave_OnClick() {
            var collectionObject = new Object();
            var collectonId = @collectonId;
            collectionObject.BranchId = document.getElementById('collection_Branch_data').value;
            collectionObject.ORNumber = document.getElementById('collection_ORNumber').value;
            collectionObject.ORDate = document.getElementById('collection_ORDate_data').value;
            collectionObject.CustomerId = document.getElementById('collection_Customer_data').value;
            collectionObject.Particulars = document.getElementById('collection_Particulars').value;
            collectionObject.ManualORNumber = document.getElementById('collection_ManualORNumber').value;
            collectionObject.PreparedById = document.getElementById('collection_PreparedBy_data').value;
            collectionObject.CheckedById = document.getElementById('collection_CheckedBy_data').value;
            collectionObject.ApprovedById = document.getElementById('collection_ApprovedBy_data').value;
            var data = JSON.stringify(collectionObject);

            if( document.getElementById('collection_Branch_data').value == '') {
                document.getElementById("collection_Branch").style.border = "1px solid red";
            } else {
                document.getElementById("collection_Branch").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('collection_ORDate_data').value == '') {
                document.getElementById("collection_ORDate").style.border = "1px solid red";
            } else {
                document.getElementById("collection_ORDate").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('collection_Customer_data').value == '') {
                document.getElementById("collection_Customer").style.border = "1px solid red";
            } else {
                document.getElementById("collection_Customer").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('collection_PreparedBy_data').value == '') {
                document.getElementById("collection_PreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("collection_PreparedBy").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('collection_CheckedBy_data').value == '') {
                document.getElementById("collection_CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("collection_CheckedBy").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('collection_ApprovedBy_data').value == '') {
                document.getElementById("collection_ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("collection_ApprovedBy").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredCollection').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                if (collectonId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addCollection',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdCollectionJournal").prop("disabled", true);
                                $("#cmdCollectionSave").prop("disabled", true);
                                $("#cmdCollectionEdit").prop("disabled", true);
                                $("#cmdCollectionPrint").prop("disabled", true);
                                $("#cmdCollectionClose").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getCollectionLastInsertedId, 1000)
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdCollectionJournal").prop("disabled", true);
                                $("#cmdCollectionSave").prop("disabled", true);
                                $("#cmdCollectionEdit").prop("disabled", true);
                                $("#cmdCollectionPrint").prop("disabled", true);
                                $("#cmdCollectionClose").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdCollectionJournal").prop("disabled", true);
                                $("#cmdCollectionSave").prop("disabled", true);
                                $("#cmdCollectionEdit").prop("disabled", true);
                                $("#cmdCollectionPrint").prop("disabled", true);
                                $("#cmdCollectionClose").prop("disabled", true);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateCollectionIsLock/' + collectonId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdCollectionJournal").prop("disabled", true);
                                $("#cmdCollectionSave").prop("disabled", true);
                                $("#cmdCollectionEdit").prop("disabled", true);
                                $("#cmdCollectionPrint").prop("disabled", true);
                                $("#cmdCollectionClose").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdCollectionJournal").prop("disabled", true);
                                $("#cmdCollectionSave").prop("disabled", true);
                                $("#cmdCollectionEdit").prop("disabled", true);
                                $("#cmdCollectionPrint").prop("disabled", true);
                                $("#cmdCollectionClose").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdCollectionJournal").prop("disabled", true);
                                $("#cmdCollectionSave").prop("disabled", true);
                                $("#cmdCollectionEdit").prop("disabled", true);
                                $("#cmdCollectionPrint").prop("disabled", true);
                                $("#cmdCollectionClose").prop("disabled", true);
                            }
                        }
                    });
                }
            }
        }

        // ========================
        // GET Collection Line List
        // ========================
        function getCollectionLines() {
            var collectionLines = new wijmo.collections.ObservableArray;
            var ORId = @collectonId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listCollectionLineByORId/' + ORId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            collectionLines.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditCollectionLine_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteCollectionLine_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: Results[i]["Id"],
                                ORId: Results[i]["ORId"],
                                OR: Results[i]["OR"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                AccountId: Results[i]["AccountId"],
                                Account: Results[i]["Account"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                SIId: Results[i]["SIId"],
                                SI: Results[i]["SI"],
                                Particulars: Results[i]["Particulars"],
                                Amount: Results[i]["Amount"],
                                PayTypeId: Results[i]["PayTypeId"],
                                PayType: Results[i]["PayType"],
                                CheckNumber: Results[i]["CheckNumber"],
                                CheckDate: Results[i]["CheckDate"],
                                CheckBank: Results[i]["CheckBank"],
                                DepositoryBankId: Results[i]["DepositoryBankId"],
                                DepositoryBank: Results[i]["DepositoryBank"],
                                IsClear: Results[i]["IsClear"]
                            });
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return collectionLines;
        }

        // =====================
        // ADD Disbursement Line
        // =====================
        function cmdAddCollectionLineButton_OnClick() {
            $('#collectionLineEdit').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('collectionLine_Id').value = 0;
            document.getElementById('collectionLine_branch_data').value = '';
            document.getElementById('collectionLine_branch_selectedValue').value = '';
            document.getElementById('collectionLine_payType_data').value = '';
            document.getElementById('collectionLine_payType_selectedValue').value = '';
            document.getElementById('collectionLine_Particulars').value = '';
            document.getElementById('collectionLine_SINo_data').value = '';
            document.getElementById('collectionLine_SINo_selectedValue').value = '';
            document.getElementById('collectionLine_amount').value = '';
            document.getElementById('collectionLine_account_data').value = '';
            document.getElementById('collectionLine_account_selectedValue').value = '';
            document.getElementById('collectionLine_article_data').value = '';
            document.getElementById('collectionLine_article_selectedValue').value = '';
            document.getElementById('collectionLine_checkNo').value = '';
            document.getElementById('collectionLine_checkDate_data').value = '';
            document.getElementById('collectionLine_depositoryBank_data').value = '';
            document.getElementById('collectionLine_depositoryBank_selectedValue').value = '';
            document.getElementById('collectionLine_Clear').checked = false;
        }

        // ======================
        // Edit Disbursement Line
        // ======================
        function btnEditCollectionLine_OnClick() {
            collectionLines.editItem(collectionLines.currentItem);
            $('#collectionLineEdit').modal({
                show: true,
                backdrop: 'static'
            });

            var collectionLine = collectionLines.currentEditItem;
            document.getElementById('collectionLine_Id').value = collectionLine.Id;
            document.getElementById('collectionLine_branch_data').value = collectionLine.BranchId;
            document.getElementById('collectionLine_branch_selectedValue').value = collectionLine.Branch;
            document.getElementById('collectionLine_payType_data').value = collectionLine.PayTypeId;
            document.getElementById('collectionLine_payType_selectedValue').value = collectionLine.PayType;
            document.getElementById('collectionLine_Particulars').value = collectionLine.Particulars;
            document.getElementById('collectionLine_SINo_data').value = collectionLine.SIId;
            document.getElementById('collectionLine_SINo_selectedValue').value = collectionLine.SI;
            document.getElementById('collectionLine_amount').value = collectionLine.Amount;
            document.getElementById('collectionLine_account_data').value = collectionLine.AccountId;
            document.getElementById('collectionLine_account_selectedValue').value = collectionLine.Account;
            document.getElementById('collectionLine_article_data').value = collectionLine.ArticleId;
            document.getElementById('collectionLine_article_selectedValue').value = collectionLine.Article;
            document.getElementById('collectionLine_checkNo').value = collectionLine.CheckNumber;
            document.getElementById('collectionLine_checkDate_data').value = collectionLine.CheckDate;
            document.getElementById('collectionLine_depositoryBank_data').value = collectionLine.DepositoryBankId;
            document.getElementById('collectionLine_depositoryBank_selectedValue').value = collectionLine.DepositoryBank;
            document.getElementById('collectionLine_Clear').checked = collectionLine.IsClear;
        }

        // ========================
        // Delete Disbursement Line
        // ========================
        function btnDeleteCollectionLine_OnClick() {
            $('#deleteCollectionLineConfirm').modal({
                show: true,
                backdrop: 'static'
            });
        }


        // ======================================
        // Navigation Buttons for Collection Line
        // ======================================
        function updateNavigateButtonsCollectionLine() {
            if (collectionLines.pageSize <= 0) {
                document.getElementById('navigationPageGridCollectionLine').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridCollectionLine').style.display = 'block';
            if (collectionLines.pageIndex === 0) {
                btnFirstPageGridCollectionGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGridCollectionGrid.setAttribute('disabled', 'disabled');
                btnNextPageGridCollectionGrid.removeAttribute('disabled');
                btnLastPageGridCollectionGrid.removeAttribute('disabled');
            } else if (collectionLines.pageIndex === (collectionLines.pageCount - 1)) {
                btnFirstPageGridCollectionGrid.removeAttribute('disabled');
                btnPreviousPageGridCollectionGrid.removeAttribute('disabled');
                btnLastPageGridCollectionGrid.setAttribute('disabled', 'disabled');
                btnNextPageGridCollectionGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridCollectionGrid.removeAttribute('disabled');
                btnPreviousPageGridCollectionGrid.removeAttribute('disabled');
                btnNextPageGridCollectionGrid.removeAttribute('disabled');
                btnLastPageGridCollectionGrid.removeAttribute('disabled');
            }
            btnCurrentPageGridCollectionGrid.innerHTML = (collectionLines.pageIndex + 1) + ' / ' + collectionLines.pageCount;
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            $('#cmdAR').click(function () {
                $('#SalesStatus').modal({
                    show: true,
                    backdrop: 'static'
                });
            });

            $('#cmdAdvances').click(function () {
                $('#customerAdvances').modal({
                    show: true,
                    backdrop: 'static'
                });
            });

            document.getElementById('currentPage').innerHTML = '<a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Main Menu</a> > ' + ' <a href="@Url.Action("Collection", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Collection</a> ' + ' > Collection Detail';
            document.getElementById('collection_ORNumber').disabled = true;
            document.getElementById('collection_Lock').disabled = true;

            cboBranch = new wijmo.input.ComboBox('#collection_Branch');
            cboCustomer = new wijmo.input.ComboBox('#collection_Customer');
            cboPreparedBy = new wijmo.input.ComboBox('#collection_PreparedBy');
            cboCheckedBy = new wijmo.input.ComboBox('#collection_CheckedBy');
            cboApprovedBy = new wijmo.input.ComboBox('#collection_ApprovedBy');

            var d = new Date();
            document.getElementById("collection_ORDate_data").value = [ d.getMonth()+1, d.getDate(), d.getFullYear()].join('/');
            ORDate = new wijmo.input.InputDate('#collection_ORDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('collection_ORDate_data').value = this.value.toLocaleDateString();
                }
            });

            getCollectionById();

            var collectionId = @collectonId;
            if(collectionId == 0) {

                getBranchesForComboBox();
                getCustomerForComboBox();
                getUsersForComboBox();

                if(document.getElementById('collection_ORNumber').value == 0) {
                    document.getElementById('collection_ORNumber_Display').value = "0000000001";
                }

                document.getElementById('collection_ORNumber').value = 0;
                var collections = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/collectionLastORNumber',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            collections.push({
                                Id: Results.Id,
                                ORNumber: Results.ORNumber
                            });
                        }
                        var OR_Number = parseInt(Results.ORNumber);
                        var OR_Number_PlusOne = 0000000001;
                        var OR_Num_Results = OR_Number + OR_Number_PlusOne;

                        document.getElementById('collection_ORNumber').value = zerofill(OR_Num_Results, 10);
                        document.getElementById('collection_ORNumber_Display').value = zerofill(OR_Num_Results, 10);
                    }
                });
            }

            collectionLines = new wijmo.collections.CollectionView(getCollectionLines());
            collectionLines.canFilter = true;
            collectionLines.pageSize = 15;

            var filterTextCollectionLine = '';
            $('#InputFilterCollectionLine').keyup(function () {
                filterTextCollectionLine = this.value.toLowerCase();
                collectionLines.refresh();
            });
            collectionLines.filter = function (item) {
                return !filterTextCollectionLine || (item.Branch.toLowerCase().indexOf(filterTextCollectionLine) > -1);
            }
            collectionLines.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsCollectionLine();
            });

            // Flex Grid for Purchase Collection Line
            collectionLineGrid = new wijmo.grid.FlexGrid('#CollectionLineGrid');
            collectionLineGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Branch",
                                "binding": "Branch",
                                "allowSorting": true,
                                "width": 250
                            },
                            {
                                "header": "Pay Type",
                                "binding": "PayType",
                                "allowSorting": true,
                                "width": 220
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": 300
                            },
                            {
                                "header": "SI No.",
                                "binding": "SI",
                                "allowSorting": true,
                                "width": 200
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Account",
                                "binding": "Account",
                                "allowSorting": true,
                                "width": 220
                            },
                            {
                                "header": "Article",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": 350
                            },
                            {
                                "header": "Check No.",
                                "binding": "CheckNumber",
                                "allowSorting": true,
                                "width": 220
                            },
                           {
                               "header": "Check Date",
                               "binding": "CheckDate",
                               "allowSorting": true,
                               "width": 220
                           },
                           {
                               "header": "Check Bank",
                               "binding": "CheckBank",
                               "allowSorting": true,
                               "width": 220
                           },
                           {
                               "header": "Depository Bank",
                               "binding": "DepositoryBank",
                               "allowSorting": true,
                               "width": 220
                           },
                           {
                               "header": "Clear",
                               "binding": "IsClear",
                               "allowSorting": true,
                               "width": 50
                           }
                ],
                autoGenerateColumns: false,
                itemsSource: collectionLines,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            collectionLineGrid.trackChanges = true;

            //Navigation button for Purchase Collection Line
            btnFirstPageGridCollectionGrid = document.getElementById('btnMoveToFirstPageGridCollectionLine');
            btnPreviousPageGridCollectionGrid = document.getElementById('btnMoveToPreviousPageGridCollectionLine');
            btnNextPageGridCollectionGrid = document.getElementById('btnMoveToNextPageGridCollectionLine');
            btnLastPageGridCollectionGrid = document.getElementById('btnMoveToLastPageGridCollectionLine');
            btnCurrentPageGridCollectionGrid = document.getElementById('btnCurrentPageGridCollectionLine');

            updateNavigateButtonsCollectionLine();

            btnFirstPageGridCollectionGrid.addEventListener('click', function () {
                collectionLines.moveToFirstPage();
                updateNavigateButtonsCollectionLine();
            });
            btnPreviousPageGridCollectionGrid.addEventListener('click', function () {
                collectionLines.moveToPreviousPage();
                updateNavigateButtonsCollectionLine();
            });
            btnNextPageGridCollectionGrid.addEventListener('click', function () {
                collectionLines.moveToNextPage();
                updateNavigateButtonsCollectionLine();
            });
            btnLastPageGridCollectionGrid.addEventListener('click', function () {
                collectionLines.moveToLastPage();
                updateNavigateButtonsCollectionLine();
            });

        });

    </script>
</body>
</html>