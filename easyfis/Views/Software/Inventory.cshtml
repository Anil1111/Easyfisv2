<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Inventory</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Inventory 
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; @ViewData["Branch"]
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 49%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control " id="InputFilter" placeholder="Search">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 50%" align="right">
                                    <button onclick="inventoryReportInventoryCSV_OnClick()" class="btn btn-primary "><i class="fa fa-file-excel-o" aria-hidden="true"></i> CSV</button>
                                    <button onclick="inventoryReportInventoryPDF_OnClick()" class="btn btn-primary "><i class="fa fa-print"></i> Print</button>
                                    <a href="/Software/InventoryReport" class="btn btn-danger "><i class="fa fa-close"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 49%">
                                    <div class="input-group ">
                                        <span class="input-group-addon">Filter Company</span>
                                        <input type="text" class="form-control " id="companyname" placeholder="filter company" disabled>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 50%" align="right">
                                    <div class="input-group ">
                                        <span class="input-group-addon">Date</span>
                                        <input type="text" class="form-control " id="inventoryDate" placeholder="Date" disabled>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">
                        <div id="inventoryGrid" class="grid"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6"></div>
                    <div class="col-md-6">
                        <table class="table table-responsive table-bordered">
                            <tr>
                                <td align="right">
                                    <b>Total Amount: </b>
                                </td>
                                <td style="padding-left: 10px" align="right">
                                    <span id="totalAmount">NA</span>
                                </td>
                            </tr>
                        </table>
                        <hr />
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        var inventoryGrid;

        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        function getInventory() {
            NProgress.start();
            var inventories = new wijmo.collections.ObservableArray;
            document.getElementById("inventoryDate").value = "Date from " + getParam("StartDate") + " to " + getParam("EndDate");
            $.ajax({
                url: '/api/inventoryReport/list/' + getParam("StartDate") + "/" + getParam("EndDate") + "/" + getParam("CompanyId"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (inventoryResults) {
                    if (inventoryResults.length > 0) {
                        var totalBeg = 0;
                        var totalIn = 0;
                        var totalOut = 0;
                        var totalEnd = 0;
                        var totalAllAmount = 0;
                        var totalVarianceAmount = 0;

                        for (i = 0; i < inventoryResults.length; i++) {
                            var totalAmount = inventoryResults[i]["Cost"] * inventoryResults[i]["EndQuantity"];
                            var quantityVariance = inventoryResults[i]["EndQuantity"] - 0;
                            var varianceAmount = inventoryResults[i]["Cost"] * quantityVariance;

                            var branchId = inventoryResults[i]["BranchId"],

                                articleLink = '/Software/StockCard?StartDate=' + getParam("StartDate") + '&EndDate=' + getParam("EndDate") + '&BranchId=' + branchId + '&ItemId=' + inventoryResults[i]["ArticleId"];

                            totalAllAmount = totalAllAmount + totalAmount;
                            totalVarianceAmount = totalVarianceAmount + varianceAmount;

                            document.getElementById("totalAmount").innerHTML = (Math.round(totalAllAmount * 100) / 100).toLocaleString();

                            inventories.push({
                                Branch: inventoryResults[i]["Branch"],
                                ArticleId: inventoryResults[i]["ArticleId"],
                                Article: "<a href='" + articleLink + "' class='btn btn-default btn-xs btn-block' style='text-align: left;'>" + inventoryResults[i]["Article"] + "</a>",
                                ArticleForCSV: inventoryResults[i]["Article"],
                                InventoryCode: inventoryResults[i]["InventoryCode"],
                                Cost: inventoryResults[i]["Cost"],
                                UnitId: inventoryResults[i]["UnitId"],
                                Unit: inventoryResults[i]["Unit"],
                                BegQuantity: inventoryResults[i]["BegQuantity"],
                                InQuantity: inventoryResults[i]["InQuantity"],
                                OutQuantity: inventoryResults[i]["OutQuantity"],
                                EndQuantity: inventoryResults[i]["EndQuantity"],
                                Amount: inventoryResults[i]["Amount"],
                                TotalAmount: totalAmount,
                                QuantityVariance: quantityVariance,
                                VarianceAmount: varianceAmount,
                                Count: "0.00"
                            });
                        }

                        NProgress.done();
                    }
                }
            });
            return inventories;
        }

        function inventoryReportInventoryPDF_OnClick() {
            window.location.href = '/RepInventoryReport/InventoryReport?StartDate=' + getParam("StartDate") + '&EndDate=' + getParam("EndDate") + '&CompanyId=' + getParam("CompanyId");
        }

        //CSV Inventory
        var inventoryCollections;

        function inventoryReportInventoryCSV_OnClick() {

            var CSV = '';
            var inventories = [];
            var fileName = 'Inventory.CSV';

            for (i = 0; i < inventoryCollections.items.length; i++) {
                inventories.push({
                    Branch: inventoryCollections.items[i].Branch,
                    InventoryCode: inventoryCollections.items[i].InventoryCode,
                    ArticleForCSV: inventoryCollections.items[i].ArticleForCSV,
                    Unit: inventoryCollections.items[i].Unit,
                    Cost: inventoryCollections.items[i].Cost,
                    BegQuantity: inventoryCollections.items[i].BegQuantity,
                    InQuantity: inventoryCollections.items[i].InQuantity,
                    OutQuantity: inventoryCollections.items[i].OutQuantity,
                    EndQuantity: inventoryCollections.items[i].EndQuantity,
                    TotalAmount: inventoryCollections.items[i].TotalAmount,
                    Count: inventoryCollections.items[i].Count,
                    QuantityVariance: inventoryCollections.items[i].QuantityVariance,
                    VarianceAmount: inventoryCollections.items[i].VarianceAmount,

                });
            }

            //for (var i = 0; i < symbols.length; i++) {
            //    CSV += '"' + symbols[i].AccountCode + '"\r\n';
            //}

            var Headers = [];
            Headers.push({
                Branch: "Branch",
                InventoryCode: "Code",
                ArticleForCSV: "Item",
                Unit: "Unit",
                Cost: "Cost",
                BegQuantity: "Beg",
                InQuantity: "In",
                OutQuantity: "Out",
                EndQuantity: "End",
                TotalAmount: "Total Amount",
                Count: "Count",
                QuantityVariance: "Variance",
                VarianceAmount: "Variance Amount",


            });

            var header = '';
            // Rows
            for (var b in Headers[0]) {
                header += '"' + Headers[0][b] + '",';
            }



            CSV = header + '\r\n';
            for (var i = 0; i < inventories.length; i++) {
                var row = '';
                for (var a in inventories[i]) {
                    row += '"' + inventories[i][a] + '",';
                }

                row.slice(0, row.length - 1);
                CSV += row + '\r\n';
            }


            if (CSV == '') {
                toastr.error("No data.");
            } else {
                var link = document.createElement("a");

                if (link.download !== undefined) {
                    var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", fileName);
                    link.style = "visibility:hidden";
                }

                if (navigator.msSaveBlob) {
                    link.addEventListener("click", function (event) {
                        var blob = new Blob([CSV], {
                            "type": "text/csv;charset=utf-8;"
                        });
                        navigator.msSaveBlob(blob, fileName);
                    }, false);
                }

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                toastr.success("Dowload successful.");
            }
        }

        $(document).ready(function () {
            $.ajax({
                url: '/api/company/' + getParam("CompanyId"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (companyResults) {
                    document.getElementById("companyname").value = companyResults.Company;
                }
            });

            inventoryCollections = new wijmo.collections.CollectionView(getInventory());
            inventoryCollections.canFilter = true;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                inventoryCollections.refresh();
            });
            inventoryCollections.filter = function (item) {
                return !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.InventoryCode.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)

            }
            // Flex Grid
            inventoryGrid = new wijmo.grid.FlexGrid('#inventoryGrid');
            inventoryGrid.initialize({
                columns: [
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": 200
                    },
                    {
                        "header": "Code",
                        "binding": "InventoryCode",
                        "allowSorting": true,
                        "width": 200,
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "allowSorting": true,
                        "width": 200,
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 120
                    },
                    {
                        "header": "Cost",
                        "binding": "Cost",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Beg",
                        "binding": "BegQuantity",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "In",
                        "binding": "InQuantity",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Out",
                        "binding": "OutQuantity",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "End",
                        "binding": "EndQuantity",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Total Amount",
                        "binding": "TotalAmount",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Count",
                        "binding": "Count",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Variance",
                        "binding": "QuantityVariance",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Variance Amount",
                        "binding": "VarianceAmount",
                        "allowSorting": true,
                        "width": 150
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryCollections,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            inventoryGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            inventoryGrid.columnHeaders.rows.push(hr);
            inventoryGrid.columnHeaders.rows[0].allowMerging = true;

            inventoryGrid.columnHeaders.columns[0].allowMerging = true;
            inventoryGrid.columnHeaders.setCellData(0, 0, 'Branch');

            inventoryGrid.columnHeaders.columns[1].allowMerging = true;
            inventoryGrid.columnHeaders.setCellData(0, 1, 'Code');

            inventoryGrid.columnHeaders.columns[2].allowMerging = true;
            inventoryGrid.columnHeaders.setCellData(0, 2, 'Item');

            inventoryGrid.columnHeaders.columns[3].allowMerging = true;
            inventoryGrid.columnHeaders.setCellData(0, 3, 'Unit');

            inventoryGrid.columnHeaders.columns[4].allowMerging = true;
            inventoryGrid.columnHeaders.setCellData(0, 4, 'Cost');

            for (var columnBasicUnitConversion = 5; columnBasicUnitConversion <= 8; columnBasicUnitConversion++) {
                inventoryGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Quantity');
            }

            inventoryGrid.columnHeaders.columns[9].allowMerging = true;
            inventoryGrid.columnHeaders.setCellData(0, 9, 'Total Amount');

            for (var columnBasicUnitConversion = 10; columnBasicUnitConversion <= 11; columnBasicUnitConversion++) {
                inventoryGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Quantity');
            }

            inventoryGrid.columnHeaders.columns[12].allowMerging = true;
            inventoryGrid.columnHeaders.setCellData(0, 12, 'Variance Amount');
        });
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>