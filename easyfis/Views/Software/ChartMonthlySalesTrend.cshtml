<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title> Chart Monthly Sales Trend </title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body class="">
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Chart Monthly Sales Trend
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; @ViewData["Branch"]
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 29%">
                                    <select id="typeMenu">
                                        <option value="0" selected="selected">Column</option>
                                        <option value="1">Bar</option>
                                        <option value="2">Scatter</option>
                                        <option value="3">Line</option>
                                        <option value="4">LineSymbols</option>
                                        <option value="5">Area</option>
                                        <option value="9">Spline</option>
                                        <option value="10">SplineSymbols</option>
                                        <option value="11">SplineArea</option>
                                    </select>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 29%">
                                    <select id="stackingMenu">
                                        <option value="0" selected="selected">None</option>
                                        <option value="1">Stacked</option>
                                        <option value="2">Stacked 100%</option>
                                    </select>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 29%">
                                    <select id="rotatedMenu">
                                        <option value="false" selected="selected">False</option>
                                        <option value="true">True</option>
                                    </select>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 10%" align="right">
                                    <a href="/Software/AccountsReceivable" class="btn btn-danger "><i class="fa fa-close"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">
                        <div id="chartTypes"></div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <b>
                            Data
                        </b>
                    </div>
                    <div class="panel-body">
                        <div id="dataGrid"></div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        var salesItemCollectionView;
        var chartTypes = new wijmo.chart.FlexChart('#chartTypes');
        var typeMenu = new wijmo.input.Menu('#typeMenu');
        var stackingMenu = new wijmo.input.Menu('#stackingMenu');
        var rotatedMenu = new wijmo.input.Menu('#rotatedMenu');

        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);

            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        function getSalesItemData() {
            NProgress.start();
            var salesItemDataObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/chartMonthlySalesTrend/list/' + getParam("StartDate") + '/' + getParam("EndDate"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            salesItemDataObservableArray.push({
                                SalesItemTimeStamp: Results[i]["SalesItemTimeStamp"],
                                Amount: Results[i]["Amount"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return salesItemDataObservableArray;
        }

        function updateMenuHeader(menu, prefix) {
            menu.header = '<b>' + prefix + '</b>: ' + menu.text;
        }

        window.onload = function () {
            salesItemCollectionView = new wijmo.collections.CollectionView(getSalesItemData());

            var dataGrid = new wijmo.grid.FlexGrid('#dataGrid');
            dataGrid.initialize({
                columns: [
                    {
                        "header": "Month",
                        "binding": "SalesItemTimeStamp",
                        "allowSorting": true,
                        "width": "*"
                    },
                    {
                        "header": "Amount",
                        "binding": "Amount",
                        "allowSorting": true,
                        "width": "*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: salesItemCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            dataGrid.trackChanges = true;

            chartTypes.initialize({
                itemsSource: salesItemCollectionView,
                bindingX: 'SalesItemTimeStamp',
                series: [
                    { name: 'Sales Amount', binding: 'Amount' },
                ]
            });

            // update the menus' headers
            updateMenuHeader(typeMenu, 'Chart Type');
            updateMenuHeader(stackingMenu, 'Stacking');
            updateMenuHeader(rotatedMenu, 'Rotated');

            typeMenu.selectedIndexChanged.addHandler(function () {
                if (typeMenu.selectedValue) {
                    chartTypes.chartType = parseInt(typeMenu.selectedValue);
                    updateMenuHeader(typeMenu, 'Chart Type');
                }
            });

            stackingMenu.selectedIndexChanged.addHandler(function () {
                if (stackingMenu.selectedValue) {
                    chartTypes.stacking = parseInt(stackingMenu.selectedValue);
                    updateMenuHeader(stackingMenu, 'Stacking');
                }
            });

            rotatedMenu.selectedIndexChanged.addHandler(function () {
                if (rotatedMenu.selectedValue) {
                    chartTypes.rotated = rotatedMenu.selectedValue === 'true';
                    updateMenuHeader(rotatedMenu, 'Rotated');
                }
            });
        }
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>