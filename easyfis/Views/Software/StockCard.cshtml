<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Card</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body class="hold-transition skin-blue fixed sidebar-mini">
    <div class="wrapper">
        @Html.Partial("_SoftwareHeader")
        @Html.Partial("_SoftwareSideBarMenu")

        <div class="content-wrapper">
            <section class="content-header">
                <h1>
                    Stock Card
                    <small><i class="fa fa-building"></i> @ViewData["Company"] / @ViewData["Branch"]</small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="/Software"> Dashboard</a></li>
                    <li> <a href="/Software/InventoryReport"> Inventory Report </a></li>
                    <li> Stock Card </li>
                </ol>
            </section>

            <section class="content">
                <div class="box box-default">
                    <div class="box-body">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-md-6">
                                        <h4>
                                            <span id="companyname">@ViewData["Company"]</span>
                                            <small>
                                                <i class="fa fa-calendar fa-fw"></i> <span id="inventoryDate"></span>
                                            </small>
                                        </h4>
                                    </div>
                                    <div class="col-md-6" align="right">
                                        <button onclick="InventoryStockCardPDF_OnClick()" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                        <a href="/Software/InventoryReport" class="btn btn-danger btn-sm"><i class="fa fa-close"></i> Close</a>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-lg-4">
                                        <div class="input-group input-group-sm">
                                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                            <input type="text" class="form-control input-sm" id="InputFilter" placeholder="Search">
                                        </div>
                                    </div>
                                    <div class="col-lg-8"></div>
                                </div>
                            </div>
                            <div class="panel-body">
                                <h5>
                                    <span id="branchTitle">branch</span>
                                </h5>
                                <h5>
                                    <b><span id="itemTitle">item</span></b>
                                </h5>
                                <div id="stockCardGrid" class="grid"></div>
                            </div>
                            <div class="panel-footer">
                                <div align="right">
                                    <div class="row">
                                        <div class="col-md-8"></div>
                                        <div class="col-md-4">
                                            <table class="table table-responsive table-bordered">
                                                <tr>
                                                    <td align="right">
                                                        <b>Total Quantity: </b>
                                                    </td>
                                                    <td style="padding-left: 10px" align="right">
                                                        <span id="totalEnd">NA</span>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td align="right">
                                                        <b>Total Amount: </b>
                                                    </td>
                                                    <td style="padding-left: 10px" align="right">
                                                        <span id="totalAmount">NA</span>
                                                    </td>
                                                </tr>
                                            </table>
                                            <hr />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        @Html.Partial("_SoftwareFooter")
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        var stockCardGrid;

        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        function getStockCard() {
            NProgress.start();
            var stockCards = new wijmo.collections.ObservableArray;
            document.getElementById("inventoryDate").innerHTML = "Date from " + getParam("StartDate") + " to " + getParam("EndDate");
            $.ajax({
                url: '/api/stockCard/list/' + getParam("StartDate") + "/" + getParam("EndDate") + "/" + getParam("BranchId") + "/" + getParam("ItemId"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (Results) {
                    if (Results.length > 0) {
                        var totalBeg = 0;
                        var totalIn = 0;
                        var totalOut = 0;
                        var totalEnd = 0;
                        var totalAmount = 0;

                        for (i = 0; i < Results.length; i++) {
                            document.getElementById("branchTitle").innerHTML = Results[i]["Branch"];
                            document.getElementById("itemTitle").innerHTML = Results[i]["Article"];

                            var docRef;
                            var docRefLink;

                            if (Results[i]["RRId"] != null) {
                                docRef = "RR-" + Results[i]["BranchCode"] + "-" + Results[i]["RRNumber"];
                                docRefLink = "/Software/ReceivingReceiptDetail?ReceivingReceiptId=" + Results[i]["RRId"];
                            } else if (Results[i]["SIId"] != null) {
                                docRef = "SI-" + Results[i]["BranchCode"] + "-" + Results[i]["SINumber"];
                                docRefLink = "/Software/SalesDetail?SalesId=" + Results[i]["SIId"];
                            } else if (Results[i]["INId"] != null) {
                                docRef = "IN-" + Results[i]["BranchCode"] + "-" + Results[i]["INNumber"];
                                docRefLink = "/Software/StockInDetail?StockInId=" + Results[i]["INId"];
                            } else if (Results[i]["OTId"] != null) {
                                docRef = "OT-" + Results[i]["BranchCode"] + "-" + Results[i]["OTNumber"];
                                docRefLink = "/Software/StockOutDetail?StockOutId=" + Results[i]["OTId"];
                            } else if (Results[i]["STId"] != null) {
                                docRef = "ST-" + Results[i]["BranchCode"] + "-" + Results[i]["STNumber"];
                                docRefLink = "/Software/StockTransferDetail?StockTransferId=" + Results[i]["STId"];
                            } else {
                                docRef = "";
                                docRefLink = "#";
                            }

                            stockCards.push({
                                Id: Results[i]["Id"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                BranchCode: Results[i]["BranchCode"],
                                DocumentReference: "<a href='" + docRefLink + "' class='btn btn-default btn-xs btn-block'>" + docRef + " </a>",
                                DocumentReferenceValue: docRef,
                                InventoryDate: Results[i]["InventoryDate"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                ArticleInventoryId: Results[i]["ArticleInventoryId"],
                                ArticleInventoryCode: Results[i]["ArticleInventoryCode"],
                                RRId: Results[i]["RRId"],
                                RRNumber: Results[i]["RRNumber"],
                                SIId: Results[i]["SIId"],
                                SINumber: Results[i]["SINumber"],
                                INId: Results[i]["INId"],
                                INNumber: Results[i]["INNumber"],
                                OTId: Results[i]["OTId"],
                                OTNumber: Results[i]["OTNumber"],
                                STId: Results[i]["STId"],
                                STNumber: Results[i]["STNumber"],
                                QuantityIn: Results[i]["QuantityIn"],
                                Quantity: Results[i]["Quantity"],
                                QuantityOut: Results[i]["QuantityOut"],
                                Amount: Results[i]["Amount"],
                                Particulars: Results[i]["Particulars"],
                                Cost: Results[i]["Cost"],
                                Unit: Results[i]["Unit"],
                                Beg: "0.00",
                            });


                            totalBeg = totalBeg + 0;
                            totalIn = totalBeg + Results[i]["QuantityIn"];
                            totalOut = totalOut + Results[i]["QuantityOut"];
                            totalEnd = totalEnd + Results[i]["Quantity"];
                            totalAmount = totalAmount + Results[i]["Amount"];

                            document.getElementById("totalEnd").innerHTML = Math.round(totalEnd * 100) / 100;
                            document.getElementById("totalAmount").innerHTML = Math.round(totalAmount * 100) / 100;
                        }
                    }
                    NProgress.done();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });

            return stockCards;
        }

        function InventoryStockCardPDF_OnClick() {
            window.location.href = '/RepStockCard/StockCard?StartDate=' + getParam("StartDate") + '&EndDate=' + getParam("EndDate") + '&BranchId=' + getParam("BranchId") + '&ItemId=' + getParam("ItemId");
        }

        $(document).ready(function () {
            var stockCards = new wijmo.collections.CollectionView(getStockCard());
            stockCards.canFilter = true;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockCards.refresh();
            });
            stockCards.filter = function (item) {
                return !filterText || (item.DocumentReferenceValue.toLowerCase().indexOf(filterText) > -1)
                  
            }
            // Flex Grid
            stockCardGrid = new wijmo.grid.FlexGrid('#stockCardGrid');
            stockCardGrid.initialize({
                columns: [
                            {
                                "header": "Date",
                                "binding": "InventoryDate",
                                "allowSorting": true,
                                "width": "1.5*",
                            },
                            {
                                "header": "Document",
                                "binding": "DocumentReference",
                                "width": "4*",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Beg",
                                "binding": "Beg",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "In",
                                "binding": "QuantityIn",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Out",
                                "binding": "QuantityOut",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "End",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Cost",
                                "binding": "Cost",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": "2*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: stockCards,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockCardGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            stockCardGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            stockCardGrid.columnHeaders.rows.push(hr);
            stockCardGrid.columnHeaders.rows[0].allowMerging = true;

            stockCardGrid.columnHeaders.columns[0].allowMerging = true;
            stockCardGrid.columnHeaders.setCellData(0, 0, 'Date');

            stockCardGrid.columnHeaders.columns[1].allowMerging = true;
            stockCardGrid.columnHeaders.setCellData(0, 1, 'Document');

            for (var columnBasicUnitConversion = 2; columnBasicUnitConversion <= 5; columnBasicUnitConversion++) {
                stockCardGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Quantity');
            }


            stockCardGrid.columnHeaders.columns[6].allowMerging = true;
            stockCardGrid.columnHeaders.setCellData(0, 6, 'Unit');

            stockCardGrid.columnHeaders.columns[7].allowMerging = true;
            stockCardGrid.columnHeaders.setCellData(0, 7, 'Cost');

            stockCardGrid.columnHeaders.columns[8].allowMerging = true;
            stockCardGrid.columnHeaders.setCellData(0, 8, 'Amount');

        });
    </script>
</body>
</html>