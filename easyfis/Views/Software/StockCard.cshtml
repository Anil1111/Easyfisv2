<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Card</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock Card
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        ========================================
                        Input Filters and Display Number of Rows
                        ========================================
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 49.5%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control" id="inpStockCardSearchFilter" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b><i class="fa fa-table"></i></b></span>
                                        <div class="comboBox-wide" id="cboStockCardShowNumberOfRows"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24.5%" align="right">
                                    <button onclick="btnStockCardDownloadCSVOnclick()" id="btnStockCardDownloadCSV" class="btn btn-success"><i class="fa fa-file-excel-o" aria-hidden="true"></i> CSV</button>
                                    <button onclick="btnStockCardPrintPDFOnclick()" id="btnStockCardPrintPDF" class="btn btn-primary"><i class="fa fa-print"></i> Print</button>
                                    <a href="/Software/Inventory" class="btn btn-danger"><i class="fa fa-close"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        ================================
                        Date, Company and Branch Filters
                        ================================
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Start Date</b></span>
                                        <div class="comboBox-wide" id="cboStockCardStartDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%" align="right">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>End Date</b></span>
                                        <div class="comboBox-wide" id="cboStockCardEndDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Company</b></span>
                                        <div class="comboBox-wide" id="cboStockCardCompanyFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Branch</b></span>
                                        <div class="comboBox-wide" id="cboStockCardBranchFilter"></div>
                                    </div>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        ===========
                        Item Filter
                        ===========
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 24%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Manual Code</b></span>
                                        <div class="comboBox-wide" id="cboStockCardItemCodeFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 49.5%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Item Description</b></span>
                                        <div class="comboBox-wide" id="cboStockCardItemDescriptionFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 25.5%"></td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        =========
                        Flex Grid
                        =========
                    -->
                    <div class="panel-body">
                        <div id="stockCardFlexGrid" class="grid" style="font-size: 12.5px;"></div>
                    </div>

                    <!--
                        ==================
                        Navigation Buttons
                        ==================
                    -->
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="stockCardNavigationPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnStockCardMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnStockCardMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnStockCardCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnStockCardMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnStockCardMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ======
                    Totals
                    ======
                -->
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6"></div>
                            <div class="col-md-6">
                                <dl class="dl-horizontal dl-custom">
                                    <dt>
                                        <b>Total In</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpTotalIn" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Out</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpTotalOut" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Balance</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpTotalBalance" placeholder="0.00" disabled />
                                    </dd>
                                    <dt>
                                        <b>Total Amount</b>
                                    </dt>
                                    <dd>
                                        <input type="text" class="form-control numberField" id="inpTotalAmount" placeholder="0.00" disabled />
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ============
        // Date Filters
        // ============
        var cboStockCardStartDateFilter = new wijmo.input.InputDate('#cboStockCardStartDateFilter');
        var cboStockCardEndDateFilter = new wijmo.input.InputDate('#cboStockCardEndDateFilter');
        var isCboStockCardStartDateSelected = false;
        var isCboStockCardEndDateSelected = false;

        // =========================
        // Company and Branch Filter
        // =========================
        var cboStockCardCompanyFilter = new wijmo.input.ComboBox('#cboStockCardCompanyFilter');
        var cboStockCardBranchFilter = new wijmo.input.ComboBox('#cboStockCardBranchFilter');
        var isCboStockCardCompanySelected = false;
        var isCboStockCardBranchSelected = false;

        // ===========
        // Item Filter
        // ===========
        var cboStockCardItemCodeFilter = new wijmo.input.ComboBox('#cboStockCardItemCodeFilter');
        var cboStockCardItemDescriptionFilter = new wijmo.input.ComboBox('#cboStockCardItemDescriptionFilter');

        // =============================
        // Collection View and Flex Grid
        // =============================
        var stockCardCollectionView;
        var stockCardFlexGrid;
        var cboStockCardShowNumberOfRows = new wijmo.input.ComboBox('#cboStockCardShowNumberOfRows');

        // ==================
        // Navigation Buttons
        // ==================
        var btnStockCardMoveToFirstPageGrid = document.getElementById('btnStockCardMoveToFirstPageGrid');
        var btnStockCardMoveToPreviousPageGrid = document.getElementById('btnStockCardMoveToPreviousPageGrid');
        var btnStockCardMoveToNextPageGrid = document.getElementById('btnStockCardMoveToNextPageGrid');
        var btnStockCardMoveToLastPageGrid = document.getElementById('btnStockCardMoveToLastPageGrid');
        var btnStockCardCurrentPageGrid = document.getElementById('btnStockCardCurrentPageGrid');
        var currentPageIndex = 0;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getURLParameterValue(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ================================
        // Create Combo Date Ranged Filters
        // ================================
        function createCboDateRangeFilters() {
            NProgress.start();
            cboStockCardStartDateFilter.dispose();
            cboStockCardStartDateFilter = new wijmo.input.InputDate('#cboStockCardStartDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(getURLParameterValue("StartDate")),
                onValueChanged: function () {
                    if (!isCboStockCardStartDateSelected) {
                        NProgress.start();
                        refreshStockCardFlexGrid();
                    } else {
                        isCboStockCardStartDateSelected = false;
                    }
                }
            });

            cboStockCardEndDateFilter.dispose();
            cboStockCardEndDateFilter = new wijmo.input.InputDate('#cboStockCardEndDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(getURLParameterValue("EndDate")),
                onValueChanged: function () {
                    if (!isCboStockCardEndDateSelected) {
                        NProgress.start();
                        refreshStockCardFlexGrid();
                    } else {
                        isCboStockCardEndDateSelected = false;
                    }
                }
            });

            createCboCompanyFilter();
        }

        // ===========================
        // Create Combo Company Filter
        // ===========================
        function createCboCompanyFilter() {
            var companyObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCard/dropdown/list/company',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (companyResults) {
                    if (companyResults.length > 0) {
                        for (i = 0; i < companyResults.length; i++) {
                            companyObservableArray.push({
                                Id: companyResults[i]["Id"],
                                Company: companyResults[i]["Company"],
                                Address: companyResults[i]["Address"],
                                ContactNumber: companyResults[i]["ContactNumber"],
                                TaxNumber: companyResults[i]["TaxNumber"],
                            });
                        }
                    }

                    var disabled = true;
                    if (companyResults.length > 0) {
                        disabled = false;
                    } else {
                        $("#btnStockCardDownloadCSV").prop("disabled", true);
                        $("#btnStockCardPrintPDF").prop("disabled", true);
                    }

                    cboStockCardCompanyFilter.dispose();
                    cboStockCardCompanyFilter = new wijmo.input.ComboBox('#cboStockCardCompanyFilter', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: companyObservableArray,
                        displayMemberPath: "Company",
                        selectedValuePath: "Id",
                        selectedValue: getURLParameterValue("CompanyId"),
                        onSelectedIndexChanged: function () {
                            NProgress.start();
                            $("#btnStockCardDownloadCSV").prop("disabled", false);
                            $("#btnStockCardPrintPDF").prop("disabled", false);
                            isCboStockCardCompanySelected = true;
                            isCboStockCardBranchSelected = true;
                            createCboBranchFilter();
                        }
                    });

                    createCboBranchFilter();
                }
            });
        }

        // ==========================
        // Create Combo Branch Filter
        // ==========================
        function createCboBranchFilter() {
            var branchObservableArray = new wijmo.collections.ObservableArray();
            if (cboStockCardCompanyFilter.selectedValue != null) {
                $.ajax({
                    url: '/api/stockCard/dropdown/list/branch/' + cboStockCardCompanyFilter.selectedValue,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (branchResults) {
                        if (branchResults.length > 0) {
                            for (i = 0; i < branchResults.length; i++) {
                                branchObservableArray.push({
                                    Id: branchResults[i]["Id"],
                                    CompanyId: branchResults[i]["CompanyId"],
                                    Branch: branchResults[i]["Branch"],
                                    Address: branchResults[i]["Address"],
                                    ContactNumber: branchResults[i]["ContactNumber"],
                                    TaxNumber: branchResults[i]["TaxNumber"]
                                });
                            }
                        }

                        var disabled = true;
                        if (branchResults.length > 0) {
                            disabled = false;
                        } else {
                            $("#btnStockCardDownloadCSV").prop("disabled", true);
                            $("#btnStockCardPrintPDF").prop("disabled", true);
                        }

                        cboStockCardBranchFilter.dispose();
                        cboStockCardBranchFilter = new wijmo.input.ComboBox('#cboStockCardBranchFilter', {
                            disabled: disabled,
                            isEditable: false,
                            itemsSource: branchObservableArray,
                            displayMemberPath: "Branch",
                            selectedValuePath: "Id",
                            selectedValue: getURLParameterValue("BranchId"),
                            onSelectedIndexChanged: function () {
                                NProgress.start();
                                isCboStockCardBranchSelected = true;
                                refreshStockCardFlexGrid();
                            }
                        });

                        if (!isCboStockCardBranchSelected) {
                            createCboItemFilter();
                        } else {
                            refreshStockCardFlexGrid();
                        }
                    }
                });
            }
        }

        // ========================
        // Create Combo Item Filter
        // ========================
        function createCboItemFilter() {
            var itemsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/stockCard/dropdown/list/item',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (Results) {
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            itemsObservableArray.push({
                                Id: Results[i]["Id"],
                                ManualArticleCode: Results[i]["ManualArticleCode"],
                                Article: Results[i]["Article"]
                            });
                        }
                    }

                    var disabled = true;
                    if (Results.length > 0) {
                        disabled = false;
                    } else {

                    }

                    cboStockCardItemCodeFilter.dispose();
                    cboStockCardItemCodeFilter = new wijmo.input.ComboBox('#cboStockCardItemCodeFilter', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: itemsObservableArray,
                        displayMemberPath: "ManualArticleCode",
                        selectedValuePath: "Id",
                        selectedValue: getURLParameterValue("ItemId"),
                        onSelectedIndexChanged: function () {
                            cboStockCardItemDescriptionFilter.selectedValue = this.selectedValue;
                        }
                    });

                    cboStockCardItemDescriptionFilter.dispose();
                    cboStockCardItemDescriptionFilter = new wijmo.input.ComboBox('#cboStockCardItemDescriptionFilter', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: itemsObservableArray,
                        displayMemberPath: "Article",
                        selectedValuePath: "Id",
                        selectedValue: getURLParameterValue("ItemId"),
                        onSelectedIndexChanged: function () {
                            NProgress.start();
                            cboStockCardItemCodeFilter.selectedValue = this.selectedValue;
                            refreshStockCardFlexGrid();
                        }
                    });

                    createCboShowRows();
                }
            });
        }

        // ===================================
        // Create Combo Display Number of Rows
        // ===================================
        function createCboShowRows() {
            var rowsObservableArray = new wijmo.collections.ObservableArray();

            for (var i = 0; i <= 4; i++) {
                var rows = 0;
                var rowsString = "";

                if (i == 0) {
                    rows = 15;
                    rowsString = "Show 15 Rows";
                } else if (i == 1) {
                    rows = 50;
                    rowsString = "Show 50 Rows";
                } else if (i == 2) {
                    rows = 100;
                    rowsString = "Show 100 Rows";
                } else if (i == 3) {
                    rows = 150;
                    rowsString = "Show 150 Rows";
                } else {
                    rows = 200;
                    rowsString = "Show 200 Rows";
                }

                rowsObservableArray.push({
                    rowNumber: rows,
                    rowString: rowsString
                });
            }

            cboStockCardShowNumberOfRows.dispose();
            cboStockCardShowNumberOfRows = new wijmo.input.ComboBox('#cboStockCardShowNumberOfRows', {
                isEditable: false,
                itemsSource: rowsObservableArray,
                displayMemberPath: "rowString",
                selectedValuePath: "rowNumber",
                selectedValue: 50,
                onSelectedIndexChanged: function () {
                    NProgress.start();

                    setTimeout(function () {
                        var numberOfRows = cboStockCardShowNumberOfRows.selectedValue;
                        stockCardCollectionView.pageSize = parseInt(numberOfRows);
                        stockCardCollectionView.refresh();
                        stockCardFlexGrid.refresh();

                        NProgress.done();
                    }, 300);
                }
            });

            if (!isCboStockCardCompanySelected) {
                createStockCardFlexGrid();
            } else {
                refreshStockCardFlexGrid();
            }
        }

        // ====================
        // Get Stock Card  Data
        // ====================
        function getStockCardData() {
            var stockCards = new wijmo.collections.ObservableArray;
            if (cboStockCardCompanyFilter.selectedValue != null) {
                if (cboStockCardBranchFilter.selectedValue != null) {
                    if (cboStockCardItemDescriptionFilter.selectedValue != null) {
                        var startDate = cboStockCardStartDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                        var endDate = cboStockCardEndDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                        var companyId = cboStockCardCompanyFilter.selectedValue;
                        var branchId = cboStockCardBranchFilter.selectedValue;
                        var itemId = cboStockCardItemDescriptionFilter.selectedValue;

                        $.ajax({
                            url: '/api/stockCard/list/' + startDate + '/' + endDate + '/' + + companyId + '/' + branchId + '/' + itemId,
                            cache: false,
                            type: 'GET',
                            contentType: 'application/json; charset=utf-8',
                            success: function (stockCardResult) {
                                var inpTotalIn = 0;
                                var inpTotalOut = 0;
                                var inpTotalBalance = 0;
                                var inpTotalAmount = 0;

                                if (stockCardResult != null) {
                                    if (stockCardResult.length > 0) {
                                        for (i = 0; i < stockCardResult.length; i++) {
                                            var docRef = "";
                                            var docRefLink = "";

                                            if (stockCardResult[i]["RRId"] != null) {
                                                docRef = "RR-" + stockCardResult[i]["BranchCode"] + "-" + stockCardResult[i]["RRNumber"];
                                                docRefLink = "/Software/ReceivingReceiptDetail?id=" + stockCardResult[i]["RRId"];
                                            } else if (stockCardResult[i]["SIId"] != null) {
                                                docRef = "SI-" + stockCardResult[i]["BranchCode"] + "-" + stockCardResult[i]["SINumber"];
                                                docRefLink = "/Software/SalesDetail?id=" + stockCardResult[i]["SIId"];
                                            } else if (stockCardResult[i]["INId"] != null) {
                                                docRef = "IN-" + stockCardResult[i]["BranchCode"] + "-" + stockCardResult[i]["INNumber"];
                                                docRefLink = "/Software/StockInDetail?id=" + stockCardResult[i]["INId"];
                                            } else if (stockCardResult[i]["OTId"] != null) {
                                                docRef = "OT-" + stockCardResult[i]["BranchCode"] + "-" + stockCardResult[i]["OTNumber"];
                                                docRefLink = "/Software/StockOutDetail?id=" + stockCardResult[i]["OTId"];
                                            } else if (stockCardResult[i]["STId"] != null) {
                                                docRef = "ST-" + stockCardResult[i]["BranchCode"] + "-" + stockCardResult[i]["STNumber"];
                                                docRefLink = "/Software/StockTransferDetail?id=" + stockCardResult[i]["STId"];
                                            } else {
                                                docRef = "Beginning Balance";
                                                docRefLink = "#";
                                            }

                                            var InventoryDateResult = new Date(stockCardResult[i]["InventoryDate"]);
                                            var InventoryDate = ('0' + (InventoryDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + InventoryDateResult.getDate()).slice(-2) + '-' + InventoryDateResult.getFullYear();

                                            stockCards.push({
                                                Id: stockCardResult[i]["Id"],
                                                BtnDetail: "<a href='" + docRefLink + "' class='btn btn-primary btn-xs btn-block' style='font-size: 9.5px;'><i class='fa fa-edit'></i> Detail</a>",
                                                Document: docRef,
                                                Branch: stockCardResult[i]["Branch"],
                                                InventoryDate: InventoryDate,
                                                ManualNumber: stockCardResult[i]["ManualNumber"],
                                                Cost: stockCardResult[i]["Cost"],
                                                CostDisplay: parseFloat(stockCardResult[i]["Cost"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                                Unit: stockCardResult[i]["Unit"],
                                                InQuantity: stockCardResult[i]["InQuantity"],
                                                InQuantityDisplay: parseFloat(stockCardResult[i]["InQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                                OutQuantity: stockCardResult[i]["OutQuantity"],
                                                OutQuantityDisplay: parseFloat(stockCardResult[i]["OutQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                                BalanceQuantity: stockCardResult[i]["BalanceQuantity"],
                                                BalanceQuantityDisplay: parseFloat(stockCardResult[i]["BalanceQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                                RunningQuantity: stockCardResult[i]["RunningQuantity"],
                                                RunningQuantityDisplay: parseFloat(stockCardResult[i]["RunningQuantity"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                                Amount: stockCardResult[i]["Amount"],
                                                AmountDisplay: parseFloat(stockCardResult[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                            });

                                            inpTotalIn += stockCardResult[i]["InQuantity"];
                                            inpTotalOut += stockCardResult[i]["OutQuantity"];
                                            inpTotalBalance += stockCardResult[i]["BalanceQuantity"];
                                            inpTotalAmount = inpTotalAmount + stockCardResult[i]["Amount"];
                                        }

                                        document.getElementById("inpTotalIn").value = parseFloat(inpTotalIn).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                        document.getElementById("inpTotalOut").value = parseFloat(inpTotalOut).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                        document.getElementById("inpTotalBalance").value = parseFloat(inpTotalBalance).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                        document.getElementById("inpTotalAmount").value = parseFloat(inpTotalAmount).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                        NProgress.done();
                                    } else {
                                        document.getElementById("inpTotalIn").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                        document.getElementById("inpTotalOut").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                        document.getElementById("inpTotalBalance").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                        document.getElementById("inpTotalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                        NProgress.done();
                                    }
                                } else {
                                    document.getElementById("inpTotalIn").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                    document.getElementById("inpTotalOut").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                    document.getElementById("inpTotalBalance").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                    document.getElementById("inpTotalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                                    NProgress.done();
                                }
                            }
                        });
                    } else {
                        document.getElementById("inpTotalIn").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        document.getElementById("inpTotalOut").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        document.getElementById("inpTotalBalance").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        document.getElementById("inpTotalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                        NProgress.done();
                    }
                } else {
                    document.getElementById("inpTotalIn").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalOut").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalBalance").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    document.getElementById("inpTotalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                    NProgress.done();
                }
            } else {
                document.getElementById("inpTotalIn").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                document.getElementById("inpTotalOut").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                document.getElementById("inpTotalBalance").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                document.getElementById("inpTotalAmount").value = parseFloat(0).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                NProgress.done();
            }

            return stockCards;
        }

        // ==================================
        // Create Stock Card  Flex Grid
        // ==================================
        function createStockCardFlexGrid() {
            stockCardCollectionView = new wijmo.collections.CollectionView(getStockCardData());
            stockCardCollectionView.canFilter = true;
            stockCardCollectionView.pageSize = cboStockCardShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpStockCardSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockCardCollectionView.refresh();
            });

            stockCardCollectionView.filter = function (item) {
                return !filterText || (item.Document.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ManualNumber.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1);
            }

            stockCardCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateStockCardNavigationButtons();
            });

            stockCardFlexGrid = new wijmo.grid.FlexGrid('#stockCardFlexGrid');
            stockCardFlexGrid.initialize({
                columns: [
                    {
                        "header": "Detail",
                        "binding": "BtnDetail",
                        "width": "0.7*",
                        "allowSorting": true,
                        "isContentHtml": true
                    },
                    {
                        "header": "Document",
                        "binding": "Document",
                        "width": "1.5*",
                        "isContentHtml": true
                    },
                    {
                        "header": "Date",
                        "binding": "InventoryDate",
                        "allowSorting": true,
                        "width": "1*"
                    },
                    {
                        "header": "Manual No.",
                        "binding": "ManualNumber",
                        "width": "1.2*",
                        "allowSorting": true
                    },
                    {
                        "header": "In",
                        "binding": "InQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "*"
                    },
                    {
                        "header": "Out",
                        "binding": "OutQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "*"
                    },
                    {
                        "header": "Balance",
                        "binding": "BalanceQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "*"
                    },
                    {
                        "header": "Running",
                        "binding": "RunningQuantityDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "*"
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": "0.7*"
                    },
                    {
                        "header": "Cost",
                        "binding": "CostDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "*"
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: stockCardCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            stockCardFlexGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            stockCardFlexGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            stockCardFlexGrid.columnHeaders.rows.push(hr);
            stockCardFlexGrid.columnHeaders.rows[0].allowMerging = true;

            stockCardFlexGrid.columnHeaders.columns[0].allowMerging = true;
            stockCardFlexGrid.columnHeaders.setCellData(0, 0, 'Detail');

            stockCardFlexGrid.columnHeaders.columns[1].allowMerging = true;
            stockCardFlexGrid.columnHeaders.setCellData(0, 1, 'Document');

            stockCardFlexGrid.columnHeaders.columns[2].allowMerging = true;
            stockCardFlexGrid.columnHeaders.setCellData(0, 2, 'Date');

            stockCardFlexGrid.columnHeaders.columns[3].allowMerging = true;
            stockCardFlexGrid.columnHeaders.setCellData(0, 3, 'Manual No.');

            for (var columnBasicUnitConversion = 4; columnBasicUnitConversion <= 7; columnBasicUnitConversion++) {
                stockCardFlexGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Quantity');
            }

            stockCardFlexGrid.columnHeaders.columns[8].allowMerging = true;
            stockCardFlexGrid.columnHeaders.setCellData(0, 8, 'Unit');

            stockCardFlexGrid.columnHeaders.columns[9].allowMerging = true;
            stockCardFlexGrid.columnHeaders.setCellData(0, 9, 'Cost');

            stockCardFlexGrid.columnHeaders.columns[10].allowMerging = true;
            stockCardFlexGrid.columnHeaders.setCellData(0, 10, 'Amount');

            updateStockCardNavigationButtons();

            btnStockCardMoveToFirstPageGrid.addEventListener('click', function () {
                stockCardCollectionView.moveToFirstPage();
                currentPageIndex = stockCardCollectionView.pageIndex + 1;
                updateStockCardNavigationButtons();
            });

            btnStockCardMoveToPreviousPageGrid.addEventListener('click', function () {
                stockCardCollectionView.moveToPreviousPage();
                currentPageIndex = stockCardCollectionView.pageIndex + 1;
                updateStockCardNavigationButtons();
            });

            btnStockCardMoveToNextPageGrid.addEventListener('click', function () {
                stockCardCollectionView.moveToNextPage();
                currentPageIndex = stockCardCollectionView.pageIndex + 1;
                updateStockCardNavigationButtons();
            });

            btnStockCardMoveToLastPageGrid.addEventListener('click', function () {
                stockCardCollectionView.moveToLastPage();
                currentPageIndex = stockCardCollectionView.pageIndex + 1;
                updateStockCardNavigationButtons();
            });
        }

        // =====================================
        // Update Stock Card  Navigation Buttons
        // =====================================
        function updateStockCardNavigationButtons() {
            if (stockCardCollectionView.pageSize <= 0) {
                document.getElementById('stockCardNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('stockCardNavigationPageGrid').style.display = 'block';
            if (stockCardCollectionView.pageIndex === 0) {
                btnStockCardMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnStockCardMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnStockCardMoveToNextPageGrid.removeAttribute('disabled');
                btnStockCardMoveToLastPageGrid.removeAttribute('disabled');
            } else if (stockCardCollectionView.pageIndex === (stockCardCollectionView.pageCount - 1)) {
                btnStockCardMoveToFirstPageGrid.removeAttribute('disabled');
                btnStockCardMoveToPreviousPageGrid.removeAttribute('disabled');
                btnStockCardMoveToLastPageGrid.setAttribute('disabled', 'disabled');
                btnStockCardMoveToNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnStockCardMoveToFirstPageGrid.removeAttribute('disabled');
                btnStockCardMoveToPreviousPageGrid.removeAttribute('disabled');
                btnStockCardMoveToNextPageGrid.removeAttribute('disabled');
                btnStockCardMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnStockCardCurrentPageGrid.innerHTML = (stockCardCollectionView.pageIndex + 1) + ' / ' + stockCardCollectionView.pageCount;
        }

        // =================
        // Refresh Flex Grid
        // =================
        function refreshStockCardFlexGrid() {
            stockCardCollectionView = new wijmo.collections.CollectionView(getStockCardData());
            stockCardCollectionView.canFilter = true;
            stockCardCollectionView.pageSize = cboStockCardShowNumberOfRows.selectedValue;

            var filterText = '';
            $('#inpStockCardSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                stockCardCollectionView.refresh();
            });

            stockCardCollectionView.filter = function (item) {
                return !filterText || (item.Document.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.ManualNumber.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1);
            }

            stockCardCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateStockCardNavigationButtons();
            });

            stockCardFlexGrid.itemsSource = stockCardCollectionView;
            stockCardFlexGrid.trackChanges = true;
        }

        // ============
        // Download CSV
        // ============
        function btnStockCardDownloadCSVOnclick() {
            var CSV = '';
            var stockCard = [];
            var fileName = 'StockCard.CSV';

            stockCardCollectionView.moveToFirstPage();

            for (var p = 1; p <= stockCardCollectionView.pageCount; p++) {
                for (i = 0; i < stockCardCollectionView.items.length; i++) {
                    stockCard.push({
                        Branch: stockCardCollectionView.items[i].Branch,
                        Document: stockCardCollectionView.items[i].Document,
                        InventoryDate: stockCardCollectionView.items[i].InventoryDate,
                        ManualNumber: stockCardCollectionView.items[i].ManualNumber,
                        InQuantity: stockCardCollectionView.items[i].InQuantity,
                        OutQuantity: stockCardCollectionView.items[i].OutQuantity,
                        BalanceQuantity: stockCardCollectionView.items[i].BalanceQuantity,
                        RunningQuantity: stockCardCollectionView.items[i].RunningQuantity,
                        Unit: stockCardCollectionView.items[i].Unit,
                        Cost: stockCardCollectionView.items[i].Cost,
                        Amount: stockCardCollectionView.items[i].Amount
                    });
                }

                stockCardCollectionView.moveToNextPage();
                if (p == stockCardCollectionView.pageCount) {
                    stockCardCollectionView.moveToPage(currentPageIndex - 1);
                }
            }

            var Headers = [];
            Headers.push({
                Branch: "Branch",
                Document: "Document",
                InventoryDate: "Inventory Date",
                ManualNumber: "Manual Number",
                InQuantity: "In Quantity",
                OutQuantity: "Out Quantity",
                BalanceQuantity: "Balance Quantity",
                RunningQuantity: "Running Quantity",
                Unit: "Unit",
                Cost: "Cost",
                Amount: "Amount"
            });

            var header = '';
            for (var b in Headers[0]) {
                header += '"' + Headers[0][b] + '",';
            }

            CSV = header + '\r\n';
            for (var i = 0; i < stockCard.length; i++) {
                var row = '';
                for (var a in stockCard[i]) {
                    row += '"' + stockCard[i][a] + '",';
                }

                row.slice(0, row.length - 1);
                CSV += row + '\r\n';
            }

            if (CSV == '') {
                toastr.error("No data.");
            } else {
                var link = document.createElement("a");
                if (link.download !== undefined) {
                    var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", fileName);
                    link.style = "visibility:hidden";
                }

                if (navigator.msSaveBlob) {
                    link.addEventListener("click", function (event) {
                        var blob = new Blob([CSV], {
                            "type": "text/csv;charset=utf-8;"
                        });
                        navigator.msSaveBlob(blob, fileName);
                    }, false);
                }

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                toastr.success("Dowload successful.");
            }
        }

        // =====================
        // Preview and Print PDF
        // =====================
        function btnStockCardPrintPDFOnclick() {
            if (cboStockCardCompanyFilter.selectedValue != null) {
                if (cboStockCardBranchFilter.selectedValue != null) {
                    if (cboStockCardItemDescriptionFilter.selectedValue != null) {
                        var startDate = cboStockCardStartDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                        var endDate = cboStockCardEndDateFilter.value.toLocaleDateString().replace(/\//g, '-');
                        var companyId = cboStockCardCompanyFilter.selectedValue;
                        var branchId = cboStockCardBranchFilter.selectedValue;
                        var itemId = cboStockCardItemDescriptionFilter.selectedValue;

                        window.location.href = '/RepStockCard/StockCard?StartDate=' + startDate + '&EndDate=' + endDate + '&CompanyId=' + companyId + '&BranchId=' + branchId + '&ItemId=' + itemId;
                    } else {
                        toastr.error("Lacking Information");
                    }
                } else {
                    toastr.error("Lacking Information");
                }
            } else {
                toastr.error("Lacking Information");
            }
        }

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            createCboDateRangeFilters();
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>