<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Purchase Summary Report</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body class="hold-transition skin-blue fixed sidebar-mini">
    <div class="wrapper">
        @Html.Partial("_SoftwareHeader")
        @Html.Partial("_SoftwareSideBarMenu")

        <div class="content-wrapper">
            <section class="content-header">
                <h1>
                    Purchase Summary Report
                    <small><i class="fa fa-building"></i> @ViewData["Company"] / @ViewData["Branch"]</small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="/Software"> Dashboard</a></li>
                    <li> <a href="/Software/AccountsPayable"> Accounts Payable </a></li>
                    <li> Purchase Summary Report </li>
                </ol>
            </section>

            <section class="content">
                <div class="box box-default">
                    <div class="box-header">
                        <div class="row">
                            <div class="col-md-6">
                                <h4>
                                    @ViewData["Company"]
                                    <small>
                                        <i class="fa fa-calendar fa-fw"></i> <span id="dateFrom"></span>
                                    </small>
                                </h4>
                            </div>
                            <div class="col-md-6" align="right">
                                <button onclick="purchaseSummaryReportCSV_OnClick()" class="btn btn-primary btn-sm"><i class="fa fa-file-excel-o" aria-hidden="true"></i> CSV</button>
                                <button onclick="purchaseSummaryReportPDF_OnClick()" class="btn btn-primary btn-sm"><i class="fa fa-print"></i> Print</button>
                                <a href="/Software/AccountsPayable" class="btn btn-danger btn-sm"><i class="fa fa-close"></i> Close</a>
                            </div>
                        </div>
                    </div>
                    <div class="box-body">
                        <div id="purchaseSummaryReportGrid" class="grid"></div>
                        <br /><br /><br />
                        <div align="right">
                            <div class="row">
                                <div class="col-md-8"></div>
                                <div class="col-md-4">
                                    <table class="table table-responsive table-bordered">
                                        <tr>
                                            <td align="right">
                                                <b>Total: </b>
                                            </td>
                                            <td style="padding-left: 10px" align="right">
                                                <span id="total">NA</span>
                                            </td>
                                        </tr>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        @Html.Partial("_SoftwareFooter")
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        function purchaseSummaryReportPDF_OnClick() {
            window.location.href = '/RepPurchaseSummaryReport/PurchaseSummaryReport?StartDate=' + getParam("StartDate") + '&EndDate=' + getParam("EndDate");
        }

        function getPurchaseSummaryReport() {
            var purchaseSummaryReports = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/purchaseSummaryReport/list/' + getParam("StartDate") + '/' + getParam("EndDate"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (purchaseSummaryReportResults) {
                    if (purchaseSummaryReportResults.length > 0) {
                        var totalAmount = 0;

                        for (i = 0; i < purchaseSummaryReportResults.length; i++) {

                            // Array Push
                            purchaseSummaryReports.push({
                                Id: purchaseSummaryReportResults[i]["Id"],
                                Branch: purchaseSummaryReportResults[i]["Branch"],
                                PONumber: purchaseSummaryReportResults[i]["PONumber"],
                                PODate: purchaseSummaryReportResults[i]["PODate"],
                                Supplier: purchaseSummaryReportResults[i]["Supplier"],
                                Remarks: purchaseSummaryReportResults[i]["Remarks"],
                                IsClose: purchaseSummaryReportResults[i]["IsClose"],
                                Amount: purchaseSummaryReportResults[i]["Amount"]
                            });

                            totalAmount += purchaseSummaryReportResults[i]["Amount"];
                        }

                        document.getElementById("total").innerHTML = totalAmount.toLocaleString();
                    }
                    NProgress.done();
                }
            });

            return purchaseSummaryReports;
        }
        var purchaseSummaryReportCollections;

        function purchaseSummaryReportCSV_OnClick() {


            var CSV = '';
            var purchaseSummaryReport = [];
            var fileName = 'PurchaseSummaryReport.CSV';

            for (i = 0; i < purchaseSummaryReportCollections.items.length; i++) {
                purchaseSummaryReport.push({
                    Branch: purchaseSummaryReportCollections.items[i].Branch,
                    PODate: purchaseSummaryReportCollections.items[i].PODate,
                    PONumber: purchaseSummaryReportCollections.items[i].PONumber,
                    Supplier: purchaseSummaryReportCollections.items[i].Supplier,
                    Remarks: purchaseSummaryReportCollections.items[i].Remarks,
                    IsClose: purchaseSummaryReportCollections.items[i].IsClose,
                    Amount: purchaseSummaryReportCollections.items[i].Amount,
                   
                    
                });
            }

            //for (var i = 0; i < symbols.length; i++) {
            //    CSV += '"' + symbols[i].AccountCode + '"\r\n';
            //}

            // Rows
            for (var i = 0; i < purchaseSummaryReport.length; i++) {
                var row = '';
                for (var a in purchaseSummaryReport[i]) {
                    row += '"' + purchaseSummaryReport[i][a] + '",';
                }
                row.slice(0, row.length - 1);
                CSV += row + '\r\n';
            }
            if (CSV == '') {
                toastr.error("No data.");
            } else {
                var link = document.createElement("a");

                if (link.download !== undefined) {
                    var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", fileName);
                    link.style = "visibility:hidden";
                }

                if (navigator.msSaveBlob) {
                    link.addEventListener("click", function (event) {
                        var blob = new Blob([CSV], {
                            "type": "text/csv;charset=utf-8;"
                        });
                        navigator.msSaveBlob(blob, fileName);
                    }, false);
                }

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                toastr.success("Dowload successful.");
            }
        }


        $(document).ready(function () {
            NProgress.start();
            document.getElementById("dateFrom").innerHTML = "Date from " + getParam("StartDate") + " to " + getParam("EndDate");

            purchaseSummaryReportCollections = new wijmo.collections.CollectionView(getPurchaseSummaryReport());

            // Flex Grid
            var purchaseSummaryReportGrid = new wijmo.grid.FlexGrid('#purchaseSummaryReportGrid');
            purchaseSummaryReportGrid.initialize({
                columns: [
                            {
                                "header": "Branch",
                                "binding": "Branch",
                                "allowSorting": true,
                                "width": "1*",
                            },
                            {
                                "header": "PO Date",
                                "binding": "PODate",
                                "allowSorting": true,
                                "width": "0.5*"
                            },
                            {
                                "header": "PO Number",
                                "binding": "PONumber",
                                "allowSorting": true,
                                "width": "0.5*"
                            },
                            {
                                "header": "Supplier",
                                "binding": "Supplier",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Remarks",
                                "binding": "Remarks",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Is Close",
                                "binding": "IsClose",
                                "allowSorting": true,
                                "width": "0.5*"
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": "1*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: purchaseSummaryReportCollections,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            purchaseSummaryReportGrid.trackChanges = true;
        });
    </script>
</body>
</html>