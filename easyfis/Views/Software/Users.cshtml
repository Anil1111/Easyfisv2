<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Users</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body class="hold-transition skin-blue fixed sidebar-mini">
    <div class="wrapper">
        @Html.Partial("_SoftwareHeader")
        @Html.Partial("_SoftwareSideBarMenu")

        <div class="content-wrapper">
            <section class="content-header">
                <h1>
                    Users
                    <small><i class="fa fa-building"></i> @ViewData["Company"] / @ViewData["Branch"]</small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="/Software"> Dashboard</a></li>
                    <li>Users</li>
                </ol>
            </section>

            <section class="content">
                <div class="box box-default">
                    <div class="box-header">

                    </div>
                    <div class="box-body">
                        <!-- User List -->
                        <div id="customerLst">
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="input-group input-group-sm">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control input-sm" id="InputFilter" placeholder="Search">
                                    </div>
                                </div>
                                <div class="col-lg-8" align="right">
                                    <button class="btn btn-danger btn-sm" onclick="btnCloseUser_OnClick()"><i class=" fa fa-times"></i> Close</button>
                                </div>
                            </div>
                            <br />
                            <div class="row" align="left">
                                <div class="col-lg-12">
                                    <div id="UserGrid" class="grid" align="left"></div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="btn-group col-md-7" id="naviagtionPageGrid">
                                    <button type="button" class="btn btn-default" id="btnMoveToFirstPageGrid">
                                        <span class="glyphicon glyphicon-fast-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGrid">
                                        <span class="glyphicon glyphicon-step-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGrid"></button>
                                    <button type="button" class="btn btn-default" id="btnMoveToNextPageGrid">
                                        <span class="glyphicon glyphicon-step-forward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" id="btnMoveToLastPageGrid">
                                        <span class="glyphicon glyphicon-fast-forward"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- User Delete -->
    <div class="modal fade" id="deleteUserConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete User <i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" id="cmdConfirmUserCompany" onclick="cmdUserConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmUserCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Lock -->
    <div class="modal fade" id="deleteRecordLock" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Record Locked <i class="fa fa-lock"></i></h4>
                </div>
                <div class="modal-body">
                    Sorry, the record is lock! It can't be deleted!
                </div>
                <div class="modal-footer">
                    <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"> Okay</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var users;
        var userGrid;

        // =============
        // GET User List
        // =============
        function getUsers() {
            var users = new wijmo.collections.ObservableArray;
            NProgress.start();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            if (Results[i]["IsLocked"] == true) {
                                users.push({
                                    EditId: "<button class='btn btn-primary btn-xs btn-block' id='' onclick='btnEditUser_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='' onclick='btnDeleteLockUser_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                    Id: Results[i]["Id"],
                                    FullName: Results[i]["FullName"],
                                    UserName: Results[i]["UserName"],
                                    Password: Results[i]["Password"],
                                    UserId: Results[i]["UserId"],
                                    IsLocked: Results[i]["IsLocked"],
                                    CreatedById: Results[i]["CreatedById"],
                                    CreatedBy: Results[i]["CreatedBy"],
                                    CreatedDateTime: Results[i]["CreatedDateTime"],
                                    UpdatedById: Results[i]["UpdatedById"],
                                    UpdatedBy: Results[i]["UpdatedBy"],
                                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
                                });
                            } else {
                                users.push({
                                    EditId: "<button class='btn btn-primary btn-xs btn-block' id='' onclick='btnEditUser_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='' onclick='btnDeleteUser_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                    Id: Results[i]["Id"],
                                    FullName: Results[i]["FullName"],
                                    UserName: Results[i]["UserName"],
                                    Password: Results[i]["Password"],
                                    UserId: Results[i]["UserId"],
                                    IsLocked: Results[i]["IsLocked"],
                                    CreatedById: Results[i]["CreatedById"],
                                    CreatedBy: Results[i]["CreatedBy"],
                                    CreatedDateTime: Results[i]["CreatedDateTime"],
                                    UpdatedById: Results[i]["UpdatedById"],
                                    UpdatedBy: Results[i]["UpdatedBy"],
                                    UpdatedDateTime: Results[i]["UpdatedDateTime"]
                                });
                            }
                        }
                    }
                    NProgress.done();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return users;
        }

        // ================
        // Delete Lock User
        // ================
        function btnDeleteLockUser_OnClick() {
            $('#deleteRecordLock').modal({
                show: true,
                backdrop: 'static'
            });
        }

        // ===============
        // User Add Button
        // ===============
        function btnAddUser_OnClick() {
            window.location = '/Software/UsersDetail';
        }

        // =================
        // User Close Button
        // =================
        function btnCloseUser_OnClick() {
            window.location = '/Software';
        }

        // =========
        // Edit User
        // =========
        function btnEditUser_OnClick() {
            users.editItem(users.currentItem);
            var user = users.currentEditItem;
            var userId = user.Id;
            window.location = '/Software/UsersDetail?UserId=' + userId;
        }

        // ===========
        // Delete User
        // ===========
        function btnDeleteUser_OnClick() {
            $('#deleteUserConfirm').modal({
                show: true,
                backdrop: 'static'
            });
        }

        // ===================
        // FlexGrid Selection
        // ===================
        function updateDetails() {
            var user = users.currentItem;
            document.getElementById('createdBy').innerHTML = user.CreatedById;
            document.getElementById('createdDate').innerHTML = user.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = user.UpdatedById;
            document.getElementById('updatedDate').innerHTML = user.UpdatedDateTime;
        }

        // ===============================
        // Navigation Buttons for Customer
        // ===============================
        function updateNavigateButtonsUsers() {
            if (users.pageSize <= 0) {
                document.getElementById('naviagtionPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGrid').style.display = 'block';
            if (users.pageIndex === 0) {
                btnFirstPageGrid.setAttribute('disabled', 'disabled');
                btnPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            } else if (users.pageIndex === (users.pageCount - 1)) {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnLastPageGrid.setAttribute('disabled', 'disabled');
                btnNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGrid.removeAttribute('disabled');
                btnPreviousPageGrid.removeAttribute('disabled');
                btnNextPageGrid.removeAttribute('disabled');
                btnLastPageGrid.removeAttribute('disabled');
            }
            btnCurrentPageGrid.innerHTML = (users.pageIndex + 1) + ' / ' + users.pageCount;
        }

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            users = new wijmo.collections.CollectionView(getUsers());
            users.canFilter = true;
            users.pageSize = 15;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                users.refresh();
            });
            users.filter = function (item) {
                return !filterText || (item.UserName.toLowerCase().indexOf(filterText) > -1);
            }
            users.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsUsers();
            });
            users.currentChanged.addHandler(function (sender, args) {
                updateDetails();
            });

            // Flex Grid
            userGrid = new wijmo.grid.FlexGrid('#UserGrid');
            userGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Username",
                                "binding": "UserName",
                                "allowSorting": true,
                                "width": "3*",
                            },
                            {
                                "header": "Fullname",
                                "binding": "FullName",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Lock",
                                "binding": "IsLocked",
                                "allowSorting": true,
                                "width": "0.5*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: users,
                isReadOnly: true,
                //frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            userGrid.trackChanges = true;

            //Navigation button
            btnFirstPageGrid = document.getElementById('btnMoveToFirstPageGrid');
            btnPreviousPageGrid = document.getElementById('btnMoveToPreviousPageGrid');
            btnNextPageGrid = document.getElementById('btnMoveToNextPageGrid');
            btnLastPageGrid = document.getElementById('btnMoveToLastPageGrid');
            btnCurrentPageGrid = document.getElementById('btnCurrentPageGrid');

            updateNavigateButtonsUsers();

            btnFirstPageGrid.addEventListener('click', function () {
                users.moveToFirstPage();
                updateNavigateButtonsUsers();
            });
            btnPreviousPageGrid.addEventListener('click', function () {
                users.moveToPreviousPage();
                updateNavigateButtonsUsers();
            });
            btnNextPageGrid.addEventListener('click', function () {
                users.moveToNextPage();
                updateNavigateButtonsUsers();
            });
            btnLastPageGrid.addEventListener('click', function () {
                users.moveToLastPage();
                updateNavigateButtonsUsers();
            });
        });

    </script>
</body>
</html>