@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>Sales Invoice</title>
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Sales Invoice
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        ===============
                        Search / Filter
                        ===============
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control" id="inpSalesInvoiceFilterSearch" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 40%" align="right">
                                    @{
                                        if (canAdd)
                                        {
                                            <button class="btn btn-primary" id="btnAddSalesInvoice" onclick="btnSalesInvoiceAddOnclick()"><i class="fa fa-plus"></i> Add</button>
                                        }
                                    }
                                    <button class="btn btn-danger" id="btnCloseSalesInvoice" onclick="btnSalesInvoiceCloseOnclick()"><i class=" fa fa-times"></i> Close</button>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        ==================
                        Date Range Filters
                        ==================
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 29%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b>Start Date</b></span>
                                        <div id="cboSalesInvoiceStartDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 29%">
                                    <div class="input-group">
                                        <span class="input-group-addon"><b>End Date</b></span>
                                        <div id="cboSalesInvoiceEndDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 41%"></td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        =========
                        Flex Grid
                        =========
                    -->
                    <div class="panel-body">
                        <div id="salesInvoiceFlexGrid" class="grid" align="left"></div>
                    </div>

                    <!--
                        ==================
                        Navigation Buttons
                        ==================
                    -->
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="salesInvoiceNavigationPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnSalesInvoiceCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnSalesInvoiceMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ==========
                    User Stamp
                    ==========
                -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!--
        ====================================
        Sales Invoice Confirm Delete (Modal)
        ====================================
    -->
    <div class="modal fade" id="salesInvoiceConfirmDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Delete Sales Invoice?
                </div>
                <div class="modal-footer">
                    <button id="btnSalesInvoiceConfirmDelete" class="btn btn-danger" onclick="btnSalesInvoiceConfirmDeleteOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="btnSalesInvoiceConfirmDeleteCloseModal" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================================
        // Sales Invoice Date Range Filters
        // ================================
        var cboSalesInvoiceStartDateFilter = new wijmo.input.InputDate('#cboSalesInvoiceStartDateFilter');
        var cboSalesInvoiceEndDateFilter = new wijmo.input.InputDate('#cboSalesInvoiceEndDateFilter');
        var isCboSalesInvoiceStartDateFilterSelected = true;
        var isCboSalesInvoiceEndDateFilterSelected = true;

        // ===========================================
        // Sales Invoice Collection View and Flex Grid
        // ===========================================
        var salesInvoiceCollectionView;
        var salesInvoiceFlexGrid;

        // ================================
        // Sales Invoice Navigation Buttons
        // ================================
        var btnSalesInvoiceMoveToFirstPageGrid;
        var btnSalesInvoiceMoveToPreviousPageGrid;
        var btnSalesInvoiceMoveToNextPageGrid;
        var btnSalesInvoiceMoveToLastPageGrid;
        var btnSalesInvoiceCurrentPageGrid;

        // ===============================
        // Create Combo Date Range Filters
        // ===============================
        function createCboDateRangeFilters() {
            cboSalesInvoiceStartDateFilter.dispose();
            cboSalesInvoiceStartDateFilter = new wijmo.input.InputDate('#cboSalesInvoiceStartDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                onValueChanged: function () {
                    if (!isCboSalesInvoiceStartDateFilterSelected) {
                        refreshSalesInvoiceFlexGrid();
                    } else {
                        isCboSalesInvoiceStartDateFilterSelected = false;
                    }
                }
            });

            cboSalesInvoiceEndDateFilter.dispose();
            cboSalesInvoiceEndDateFilter = new wijmo.input.InputDate('#cboSalesInvoiceEndDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                onValueChanged: function () {
                    if (!isCboSalesInvoiceEndDateFilterSelected) {
                        refreshSalesInvoiceFlexGrid();
                    } else {
                        isCboSalesInvoiceEndDateFilterSelected = false;
                    }
                }
            });
        }

        // ======================
        // Get Sales Invoice Data
        // ======================
        function getSalesInvoiceData() {
            NProgress.start();
            var startDate = cboSalesInvoiceStartDateFilter.value.toLocaleDateString().replace(/\//g, '-');
            var endDate = cboSalesInvoiceEndDateFilter.value.toLocaleDateString().replace(/\//g, '-');

            var salesObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/salesInvoice/list/' + startDate + '/' + endDate,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            var SIDateResult = new Date(results[i]["SIDate"])
                            var SIDate = ('0' + (SIDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + SIDateResult.getDate()).slice(-2) + '-' + SIDateResult.getFullYear();

                            salesObservableArray.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='salesEditButton' onclick='btnEditSalesInvoiceOnclick()'><i class='fa fa-edit'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteSalesInvoiceOnclick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: results[i]["Id"],
                                SINumber: results[i]["SINumber"],
                                SIDate: SIDate,
                                ManualSINumber: results[i]["ManualSINumber"],
                                Customer: results[i]["Customer"],
                                Remarks: results[i]["Remarks"],
                                DocumentReference: results[i]["DocumentReference"],
                                Amount: results[i]["Amount"],
                                AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                IsLocked: results[i]["IsLocked"],
                                IsCancelled: results[i]["IsCancelled"],
                                CreatedBy: results[i]["CreatedBy"],
                                CreatedDateTime: results[i]["CreatedDateTime"],
                                UpdatedBy: results[i]["UpdatedBy"],
                                UpdatedDateTime: results[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return salesObservableArray;
        }

        // =============================
        // Create Sales Invoice FlexGrid
        // =============================
        function createSalesInvoiceFlexGrid() {
            createCboDateRangeFilters();
            salesInvoiceCollectionView = new wijmo.collections.CollectionView(getSalesInvoiceData());
            salesInvoiceCollectionView.canFilter = true;
            salesInvoiceCollectionView.pageSize = 15;

            var filterText = '';
            $('#inpSalesInvoiceFilterSearch').keyup(function () {
                filterText = this.value.toLowerCase();
                salesInvoiceCollectionView.refresh();
            });

            salesInvoiceCollectionView.filter = function (item) {
                return !filterText || (item.SINumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualSINumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.Customer.toLowerCase().indexOf(filterText) > -1)
                    || (item.Remarks.toLowerCase().indexOf(filterText) > -1)
                    || (item.DocumentReference.toLowerCase().indexOf(filterText) > -1);
            }

            salesInvoiceCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateSalesInvoiceNavigationButtons();
            });

            salesInvoiceCollectionView.currentChanged.addHandler(function (sender, args) {
                updateSalesInvoiceDetailsFlexGridSelection();
            });

            salesInvoiceFlexGrid = new wijmo.grid.FlexGrid('#salesInvoiceFlexGrid');
            salesInvoiceFlexGrid.initialize({
                columns: [
                    @{
                        if (canEdit)
                        {
                            <text>
                                {
                                    "header": "Edit",
                                    "binding": "EditId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                        if (canDelete)
                        {
                            <text>
                                {
                                    "header": "Delete",
                                    "binding": "DeleteId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                    }
                    {
                        "header": "SI Number",
                        "binding": "SINumber",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "SI Date",
                        "binding": "SIDate",
                        "allowSorting": true,
                        "width": 90
                    },
                    {
                        "header": "Manual SI No.",
                        "binding": "ManualSINumber",
                        "allowSorting": true,
                        "width": 120
                    },
                    {
                        "header": "Customer",
                        "binding": "Customer",
                        "allowSorting": true,
                        "width": "2.5*"
                    },
                    {
                        "header": "Remarks",
                        "binding": "Remarks",
                        "allowSorting": true,
                        "width": "2.5*"
                    },
                    {
                        "header": "Doc. Reference",
                        "binding": "DocumentReference",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Amount",
                        "binding": "AmountDisplay",
                        "allowSorting": true,
                        "align": "right",
                        "width": "2*"
                    },
                    {
                        "header": "L",
                        "binding": "IsLocked",
                        "allowSorting": true,
                        "width": 50
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: salesInvoiceCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            salesInvoiceFlexGrid.trackChanges = true;
            salesInvoiceFlexGrid.itemFormatter = function (panel, r, c, cell) {
                var flex = panel.grid;

                if (wijmo.grid.CellType.Cell === panel.cellType) {
                    if (flex.rows[r]._data.IsCancelled == true) {
                        cell.style.backgroundColor = '#f9deb9';
                        cell.style.color = "Black";
                    }
                }
            }

            btnSalesInvoiceMoveToFirstPageGrid = document.getElementById('btnSalesInvoiceMoveToFirstPageGrid');
            btnSalesInvoiceMoveToPreviousPageGrid = document.getElementById('btnSalesInvoiceMoveToPreviousPageGrid');
            btnSalesInvoiceMoveToNextPageGrid = document.getElementById('btnSalesInvoiceMoveToNextPageGrid');
            btnSalesInvoiceMoveToLastPageGrid = document.getElementById('btnSalesInvoiceMoveToLastPageGrid');
            btnSalesInvoiceCurrentPageGrid = document.getElementById('btnSalesInvoiceCurrentPageGrid');

            updateSalesInvoiceNavigationButtons();

            btnSalesInvoiceMoveToFirstPageGrid.addEventListener('click', function () {
                salesInvoiceCollectionView.moveToFirstPage();
                updateSalesInvoiceNavigationButtons();
            });

            btnSalesInvoiceMoveToPreviousPageGrid.addEventListener('click', function () {
                salesInvoiceCollectionView.moveToPreviousPage();
                updateSalesInvoiceNavigationButtons();
            });

            btnSalesInvoiceMoveToNextPageGrid.addEventListener('click', function () {
                salesInvoiceCollectionView.moveToNextPage();
                updateSalesInvoiceNavigationButtons();
            });

            btnSalesInvoiceMoveToLastPageGrid.addEventListener('click', function () {
                salesInvoiceCollectionView.moveToLastPage();
                updateSalesInvoiceNavigationButtons();
            });
        }

        // ================================================
        // Update Sales Invoice Details Flex Grid Selection
        // ================================================
        function updateSalesInvoiceDetailsFlexGridSelection() {
            var item = salesInvoiceCollectionView.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // =======================================
        // Update Sales Invoice Navigation Buttons
        // =======================================
        function updateSalesInvoiceNavigationButtons() {
            if (salesInvoiceCollectionView.pageSize <= 0) {
                document.getElementById('salesInvoiceNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('salesInvoiceNavigationPageGrid').style.display = 'block';
            if (salesInvoiceCollectionView.pageIndex === 0) {
                btnSalesInvoiceMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnSalesInvoiceMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnSalesInvoiceMoveToNextPageGrid.removeAttribute('disabled');
                btnSalesInvoiceMoveToLastPageGrid.removeAttribute('disabled');
            } else if (salesInvoiceCollectionView.pageIndex === (salesInvoiceCollectionView.pageCount - 1)) {
                btnSalesInvoiceMoveToFirstPageGrid.removeAttribute('disabled');
                btnSalesInvoiceMoveToPreviousPageGrid.removeAttribute('disabled');
                btnSalesInvoiceMoveToLastPageGrid.setAttribute('disabled', 'disabled');
                btnSalesInvoiceMoveToNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnSalesInvoiceMoveToFirstPageGrid.removeAttribute('disabled');
                btnSalesInvoiceMoveToPreviousPageGrid.removeAttribute('disabled');
                btnSalesInvoiceMoveToNextPageGrid.removeAttribute('disabled');
                btnSalesInvoiceMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnSalesInvoiceCurrentPageGrid.innerHTML = (salesInvoiceCollectionView.pageIndex + 1) + ' / ' + salesInvoiceCollectionView.pageCount;
        }

        // ==============================
        // Refresh Sales Invoice FlexGrid
        // ==============================
        function refreshSalesInvoiceFlexGrid() {
            salesInvoiceCollectionView = new wijmo.collections.CollectionView(getSalesInvoiceData());
            salesInvoiceCollectionView.canFilter = true;
            salesInvoiceCollectionView.pageSize = 15;

            var filterText = '';
            $('#inpSalesInvoiceFilterSearch').keyup(function () {
                filterText = this.value.toLowerCase();
                salesInvoiceCollectionView.refresh();
            });

            salesInvoiceCollectionView.filter = function (item) {
                return !filterText || (item.SINumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualSINumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.Customer.toLowerCase().indexOf(filterText) > -1)
                    || (item.Remarks.toLowerCase().indexOf(filterText) > -1)
                    || (item.DocumentReference.toLowerCase().indexOf(filterText) > -1);
            }

            salesInvoiceCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateSalesInvoiceNavigationButtons();
            });

            salesInvoiceCollectionView.currentChanged.addHandler(function (sender, args) {
                updateSalesInvoiceDetailsFlexGridSelection();
            });

            salesInvoiceFlexGrid.itemsSource = salesInvoiceCollectionView;
            salesInvoiceFlexGrid.trackChanges = true;
        }

        // =================
        // Add Sales Invoice
        // =================
        function btnSalesInvoiceAddOnclick() {
            document.getElementById('btnAddSalesInvoice').innerHTML = "<i class='fa fa-plus'></i> Adding...";
            $('#btnAddSalesInvoice').prop('disabled', true);
            $('#btnCloseSalesInvoice').prop('disabled', true);

            $.ajax({
                type: "POST",
                url: '/api/salesInvoice/add',
                contentType: "application/json; charset=utf-8",
                statusCode: {
                    200: function (id) {
                        window.location = '/Software/SalesDetail?id=' + id;
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnAddSalesInvoice').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnAddSalesInvoice').prop('disabled', false);
                        $('#btnCloseSalesInvoice').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnAddSalesInvoice').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnAddSalesInvoice').prop('disabled', false);
                        $('#btnCloseSalesInvoice').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnAddSalesInvoice').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnAddSalesInvoice').prop('disabled', false);
                        $('#btnCloseSalesInvoice').prop('disabled', false);
                    }
                }
            });
        }

        // ==================
        // Edit Sales Invoice
        // ==================
        function btnEditSalesInvoiceOnclick() {
            salesInvoiceCollectionView.editItem(salesInvoiceCollectionView.currentItem);
            var sale = salesInvoiceCollectionView.currentEditItem;
            var saleId = sale.Id;
            window.location = '/Software/SalesDetail?id=' + saleId;
        }

        // ====================
        // Delete Sales Invoice
        // ====================
        function btnDeleteSalesInvoiceOnclick() {
            salesInvoiceCollectionView.editItem(salesInvoiceCollectionView.currentItem);
            var sale = salesInvoiceCollectionView.currentEditItem;
            if (sale.IsLocked) {
                toastr.error("Delete is not allowed when the selected record is locked!");
            } else {
                $('#salesInvoiceConfirmDeleteModal').modal({
                    show: true,
                    backdrop: 'static'
                });

                document.getElementById('btnSalesInvoiceConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                $("#btnSalesInvoiceConfirmDelete").prop("disabled", false);
                $("#btnSalesInvoiceConfirmDeleteCloseModal").prop("disabled", false);
            }
        }

        // ============================
        // Confirm Delete Sales Invoice
        // ============================
        function btnSalesInvoiceConfirmDeleteOnclick() {
            document.getElementById('btnSalesInvoiceConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Deleting...";
            $("#btnSalesInvoiceConfirmDelete").prop("disabled", true);
            $("#btnSalesInvoiceConfirmDeleteCloseModal").prop("disabled", true);

            salesInvoiceCollectionView.editItem(salesInvoiceCollectionView.currentItem);
            var id = salesInvoiceCollectionView.currentEditItem.Id;

            $.ajax({
                url: '/api/salesInvoice/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#salesInvoiceConfirmDeleteModal').modal('hide');
                        refreshSalesInvoiceFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#salesInvoiceConfirmDeleteModal').modal('hide');
                        document.getElementById('btnSalesInvoiceConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnSalesInvoiceConfirmDelete").prop("disabled", false);
                        $("#btnSalesInvoiceConfirmDeleteCloseModal").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#salesInvoiceConfirmDeleteModal').modal('hide');
                        document.getElementById('btnSalesInvoiceConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnSalesInvoiceConfirmDelete").prop("disabled", false);
                        $("#btnSalesInvoiceConfirmDeleteCloseModal").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#salesInvoiceConfirmDeleteModal').modal('hide');
                        document.getElementById('btnSalesInvoiceConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnSalesInvoiceConfirmDelete").prop("disabled", false);
                        $("#btnSalesInvoiceConfirmDeleteCloseModal").prop("disabled", false);
                    }
                }
            });
        }

        // ===================
        // Close Sales Invoice
        // ===================
        function btnSalesInvoiceCloseOnclick() {
            window.location = '/Software';
        }

        // ============
        // On Load Page
        // ============
        $(document).ready(function () {
            createSalesInvoiceFlexGrid();
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>