@{
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Purchase Order Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body class="hold-transition skin-blue fixed sidebar-mini">
    <div class="wrapper">
        @Html.Partial("_SoftwareHeader")
        @Html.Partial("_SoftwareSideBarMenu")

        <div class="content-wrapper">
            <section class="content-header">
                <h1>
                    Purchase Order Detail
                    <small><i class="fa fa-building"></i> @ViewData["Company"] / @ViewData["Branch"]</small>
                </h1>
                <ol class="breadcrumb">
                    <li><a href="/Software"><i class="fa fa-dashboard"></i> Dashboard</a></li>
                    <li><a href="/Software/PurchaseOrder"> Purchase Order</a></li>
                    <li> Purchase Order Detail</li>
                </ol>
            </section>

            <section class="content">
                <div class="box box-default">
                    <div class="box-header">
                        <div class="row">
                            <div class="col-md-6"></div>
                            <div class="col-md-6" align="right">
                                <button class="btn btn-primary btn-sm" id="cmdSaveLockPO" onclick="btnSaveLockPO_OnClick()"><i class="fa fa-lock"></i> Lock</button>
                                <button class="btn btn-primary btn-sm" id="cmdSavePO" onclick="btnSavePO_OnClick()"><i class="fa fa-save"></i> Save</button>
                                <button class="btn btn-primary btn-sm" id="cmdEditPO" onclick="btnEditPO_OnClick()"><i class="fa fa-unlock"></i> Unlock</button>
                                <button class="btn btn-primary btn-sm" id="cmdPrintPO" onclick="btnPrintPO_OnClick()"><i class="fa fa-print"></i> Print</button>
                                <button onclick="window.location.href = '@Url.Action("PurchaseOrder", "Software")'" class="btn btn-danger btn-sm" id="cmdClosePO"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="well">
                            <form class="form-horizontal" role="form">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Branch</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="PO_Branch"></div>

                                                <input type="hidden" class="requiredPO" id="PO_Branch_data" />
                                                <input type="hidden" id="PO_Branch_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">PO Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-30 input-sm requiredPO" id="PO_PONumber_Display" />
                                                <input type="hidden" id="PO_PONumber" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">PO Date</label>
                                            <div class="col-sm-8">
                                                <div class="input-50" id="PO_Date"></div>
                                                <input type="hidden" class="requiredPO" id="PO_Date_data" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Manual PO Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-sm requiredPO" id="PO_ManualPONumber" placeholder="Manual PO Number" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Supplier</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="PO_Supplier"></div>

                                                <input type="hidden" class="requiredPO" id="PO_Supplier_data" />
                                                <input type="hidden" id="PO_Supplier_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Term</label>
                                            <div class="col-sm-8">
                                                <div class="input-70" id="PO_Term"></div>

                                                <input type="hidden" class="requiredPO" id="PO_Term_data" />
                                                <input type="hidden" id="PO_Term_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Remarks</label>
                                            <div class="col-sm-8">
                                                <textarea class="form-control textarea-custom requiredPO" id="PO_Remarks" placeholder="Remarks"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Request Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control input-sm requiredPO" id="PO_RequestNumber" placeholder="Request Number">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Date Needed</label>
                                            <div class="col-sm-8">
                                                <div class="input-50" id="PO_DateNeeded"></div>
                                                <input type="hidden" class="requiredPO" id="PO_DateNeeded_data" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Requested by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="RequestedBy"></div>

                                                <input type="hidden" class="requiredPO" id="RequestedBy_data" />
                                                <input type="hidden" id="RequestedBy_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Prepared by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="PreparedBy"></div>

                                                <input type="hidden" class="requiredPO" id="PreparedBy_data" />
                                                <input type="hidden" id="PreparedBy_selectedValue" />
                                                <input type="hidden" id="userId_data" value="@userId" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Checked by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="CheckedBy"></div>

                                                <input type="hidden" class="requiredPO" id="CheckedBy_data" />
                                                <input type="hidden" id="CheckedBy_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Approved by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="ApprovedBy"></div>

                                                <input type="hidden" class="requiredPO" id="ApprovedBy_data" />
                                                <input type="hidden" id="ApprovedBy_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Close PO</label>
                                            <div class="col-sm-8">
                                                <input type="checkbox" id="PO_ClosePO">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Lock</label>
                                            <div class="col-sm-8">
                                                <input type="checkbox" id="PO_Lock">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <div class="col-sm-4"></div>
                                            <div class="col-sm-8">
                                                <input type="hidden" id="PO_IsLocked">
                                                <input type="hidden" id="PO_IsLocked_defaultTrue">
                                                <input type="hidden" id="PO_IsLocked_defaultFalse">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <br />
                        <ul class="nav nav-tabs" role="tablist" id="myTab">
                            <li role="presentation" class="active"><a data-toggle="tab" href="#Item" id="itemTabId">Purchase Order Items</a></li>
                        </ul>
                        <br />
                        <div class="tab-content">
                            <div id="Item" class="tab-pane fade in active">
                                <div class="row">
                                    <div class="col-lg-12" align="right">
                                        <button class="btn btn-primary btn-sm" id="cmdPOLineAddButton" onclick="cmdPOLineAddButton_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                        <button class="btn btn-primary btn-sm" id="cmdPOLineItemQueryButton" onclick="cmdPOLineItemQueryButton_OnClick()"><i class="fa fa-search-plus"></i> Item Query</button>
                                    </div>
                                </div>
                                <br />
                                <div class="row" align="left">
                                    <div class="col-lg-12">
                                        <div id="POGrid" class="grid"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- Modal for POLines -->
    <div class="modal fade" id="POLinesEdit" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="POLinesNameModalLabel">Purchase Order Item Detail</h4>
                </div>
                <div class="modal-body">
                    <form id="POLinesDetailForm">
                        <input type="hidden" id="POLine_Id" />
                        <dl class="dl-horizontal">
                            <dt>Item</dt>
                            <dd>
                                <div class="input-30" id="POLine_ItemCode"></div>
                                <div class="input-68" id="POLine_ItemDescription"></div>

                                <input type="hidden" id="POLine_ItemCode_data" class="requiredPOLine">
                                <input type="hidden" id="POLine_ItemCode_selectedValue" />
                                <input type="hidden" id="POLine_ItemDescription_data" class="requiredPOLine">
                                <input type="hidden" id="POLine_ItemDescription_selectedValue" />
                            </dd>
                            <dt>Particulars</dt>
                            <dd><textarea class="form-control textarea-custom requiredPOLine" id="POLine_Particulars" placeholder="Particulars"></textarea></dd>
                            <dt>Quantity</dt>
                            <dd><input type="text" class="form-control input-50 numberField input-sm requiredPOLine" id="POLine_Quantity" placeholder="0.00" /></dd>
                            <dt>Unit</dt>
                            <dd>
                                <div class="input-50" id="POLine_Unit"></div>

                                <input type="hidden" id="POLine_Unit_data" class="requiredPOLine">
                                <input type="hidden" id="POLine_Unit_selectedValue" />
                            </dd>
                            <dt>Cost</dt>
                            <dd><input type="text" class="form-control input-50 numberField input-sm requiredPOLine" id="POLine_Cost" placeholder="0.00" /></dd>
                            <dt>Amount</dt>
                            <dd><input type="text" class="form-control input-50 numberField input-sm requiredPOLine" id="POLine_Amount" placeholder="0.00" /></dd>
                        </dl>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary btn-sm" id="cmdSavePOLinesButton" onclick="cmdPOLinesSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdPOLinesDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal for Item Query -->
    <div class="modal fade" id="POLinesItemQuery" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Item Query</h4>
                </div>
                <div class="modal-body">
                    <div class="panel panel-default" id="itemQueryPanel">
                        <div class="panel-heading">
                            <div class="input-group input-group-sm input-50">
                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                <input type="text" class="form-control input-sm" id="itemQueryFilter" placeholder="Search">
                            </div>
                        </div>
                        <div class="panel-body">
                            <div id="itemQueryGrid" class="grid"></div>
                        </div>
                        <div class="panel-footer">
                            <div class="row">
                                <div class="btn-group col-md-7" id="naviagtionPageGridItemQuery">
                                    <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridItemQuery">
                                        <span class="glyphicon glyphicon-fast-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridItemQuery">
                                        <span class="glyphicon glyphicon-step-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridItemQuery"></button>
                                    <button type="button" class="btn btn-default" id="btnMoveToNextPageGridItemQuery">
                                        <span class="glyphicon glyphicon-step-forward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" id="btnMoveToLastPageGridItemQuery">
                                        <span class="glyphicon glyphicon-fast-forward"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <center>
                        <span id="loadingItemQuery"></span>
                    </center>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Apply -->
    <div class="modal fade" id="applyItems" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Apply Item <i class="fa fa-check-square-o"></i></h4>
                </div>
                <div class="modal-body">
                    Are you sure that you want to apply?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary btn-sm" id="btnConfirmApply" onclick="btnConfrimApplyPOItems_OnClick()"><i class="fa fa-check-square-o"></i> Apply</button>
                    <button id="btnConfirmClose" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- POLines Delete Modal Confirmation -->
    <div class="modal fade" id="deletePOLinesConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete PO Item <i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger btn-sm" id="cmdConfirmDeletePOLines" onclick="cmdPOLinesConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var POs;
        var branches;
        var PODate;
        var PODateNeeded;
        var users;
        var suppliers;
        var terms;
        var POLines;
        var POLineGrid;
        var btnFirstPageGridPOLine;
        var btnPreviousPageGridPOLine;
        var btnNextPageGridPOLine;
        var btnLastPageGridPOLine;
        var btnCurrentPageGridPOLine;
        var cboBranch;
        var cboSupplier;
        var cboTerm;
        var cboRequestedBy;
        var cboPreparedBy;
        var cboCheckedBy;
        var cboApprovedBy;
        var POLines;
        var itemCodes;
        var itemDescriptions;
        var units;
        var cboItemCode;
        var cboItemDescription;
        var cboUnit;
        
        var itemQueryItemsCollection;
        var itemQueryGrid;

        var btnFirstPageGridItemQuery;
        var btnPreviousPageGridItemQuery;
        var btnNextPageGridItemQuery;
        var btnLastPageGridItemQuery;
        var btnCurrentPageGridItemQuery;

        function btnConfrimApplyPOItems_OnClick() {
            $("#btnConfirmApply").prop("disabled", true);
            $("#btnConfirmClose").prop("disabled", true);


        }

        // item query
        function cmdPOLineItemQueryButton_OnClick() {
            $('#POLinesItemQuery').modal({
                show: true,
                backdrop: 'static'
            });
            
            $("#itemQueryPanel").hide();
            $("#loadingItemQuery").show();
            document.getElementById("loadingItemQuery").innerHTML = "<b><i class='fa fa-spinner fa-spin'></i></b>";

            setTimeout(function() {
                createItemQueryFlexGrid();
                window.createItemQueryFlexGrid = function() {
                    return true;
                }

                itemQueryItemsCollection = new wijmo.collections.CollectionView(getArticleItemForItemQuery());
                itemQueryItemsCollection.canFilter = true;
                itemQueryItemsCollection.pageSize = 7;

                var filterText = '';
                $('#itemQueryFilter').keyup(function () {
                    filterText = this.value.toLowerCase();
                    itemQueryItemsCollection.refresh();
                });
                itemQueryItemsCollection.filter = function (item) {
                    return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1);
                }
                itemQueryItemsCollection.collectionChanged.addHandler(function (sender, args) {
                    updateNavigateButtonsItemQuery();
                });

                // Flex Grid for Purchase Order Line
                itemQueryGrid.itemsSource = itemQueryItemsCollection;
                itemQueryGrid.trackChanges = true;
            }, 1000)
        }

        // get Items for Item Query
        function getArticleItemForItemQuery() {
            var items = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeIdLocked/1',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (articleItemsResult) {
                    $("#itemQueryPanel").show();
                    $("#loadingItemQuery").hide();

                    for(i = 0; i < articleItemsResult.length; i++) {
                        items.push({
                            Id: articleItemsResult[i]["Id"],
                            ArticleCode: articleItemsResult[i]["ArticleCode"],
                            ManualArticleCode: articleItemsResult[i]["ManualArticleCode"],
                            Article: articleItemsResult[i]["Article"],
                            Category: articleItemsResult[i]["Category"],
                            ArticleTypeId: articleItemsResult[i]["ArticleTypeId"],
                            ArticleType: articleItemsResult[i]["ArticleType"],
                            ArticleGroupId: articleItemsResult[i]["ArticleGroupId"],
                            ArticleGroup: articleItemsResult[i]["ArticleGroup"],
                            AccountId: articleItemsResult[i]["AccountId"],
                            AccountCode: articleItemsResult[i]["AccountCode"],
                            Account: articleItemsResult[i]["Account"],
                            SalesAccountId: articleItemsResult[i]["SalesAccountId"],
                            SalesAccount: articleItemsResult[i]["SalesAccount"],
                            CostAccountId: articleItemsResult[i]["CostAccountId"],
                            CostAccount: articleItemsResult[i]["CostAccount"],
                            AssetAccountId: articleItemsResult[i]["AssetAccountId"],
                            AssetAccount: articleItemsResult[i]["AssetAccount"],
                            ExpenseAccountId: articleItemsResult[i]["ExpenseAccountId"],
                            ExpenseAccount: articleItemsResult[i]["ExpenseAccount"],
                            UnitId: articleItemsResult[i]["UnitId"],
                            Unit: articleItemsResult[i]["Unit"],
                            InputTaxId: articleItemsResult[i]["InputTaxId"],
                            InputTax: articleItemsResult[i]["InputTax"],
                            OutputTaxId: articleItemsResult[i]["OutputTaxId"],
                            OutputTax: articleItemsResult[i]["OutputTax"],
                            WTaxTypeId: articleItemsResult[i]["WTaxTypeId"],
                            WTaxType: articleItemsResult[i]["WTaxType"],
                            Price: articleItemsResult[i]["Price"],
                            Cost: articleItemsResult[i]["Cost"],
                            IsInventory: articleItemsResult[i]["IsInventory"],
                            Particulars: articleItemsResult[i]["Particulars"],
                            Address: articleItemsResult[i]["Address"],
                            TermId: articleItemsResult[i]["TermId"],
                            Term: articleItemsResult[i]["Term"],
                            ContactNumber: articleItemsResult[i]["ContactNumber"],
                            ContactPerson: articleItemsResult[i]["ContactPerson"],
                            TaxNumber: articleItemsResult[i]["TaxNumber"],
                            CreditLimit: articleItemsResult[i]["CreditLimit"],
                            DateAcquired: articleItemsResult[i]["DateAcquired"],
                            UsefulLife: articleItemsResult[i]["UsefulLife"],
                            SalvageValue: articleItemsResult[i]["SalvageValue"],
                            ManualArticleOldCode: articleItemsResult[i]["ManualArticleOldCode"],
                            IsLocked: articleItemsResult[i]["IsLocked"],
                            CreatedById: articleItemsResult[i]["CreatedById"],
                            CreatedBy: articleItemsResult[i]["CreatedBy"],
                            CreatedDateTime: articleItemsResult[i]["CreatedDateTime"],
                            UpdatedById: articleItemsResult[i]["UpdatedById"],
                            UpdatedBy: articleItemsResult[i]["UpdatedBy"],
                            UpdatedDateTime: articleItemsResult[i]["UpdatedDateTime"],
                            Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='pickToApplyOnClick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                        });
                    }
                }
            });
            return items;
        }

        function pickToApplyOnClick() {
            itemQueryItemsCollection.editItem(itemQueryItemsCollection.currentItem);
            $('#POLinesEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#cmdSavePOLinesButton").prop("disabled", false);
            $("#cmdPOLinesDetailCloseButton").prop("disabled", false);

            getItemCodeForComboBox();
            getItemDescriptionForComboBox();

            var item = itemQueryItemsCollection.currentEditItem;
            document.getElementById('POLine_Id').value = '0';
            document.getElementById('POLine_ItemCode_data').value = item.Id;
            document.getElementById('POLine_ItemCode_selectedValue').value = item.ManualArticleCode;
            document.getElementById('POLine_ItemDescription_data').value = item.Id;
            document.getElementById('POLine_ItemDescription_selectedValue').value = item.Article;
            document.getElementById('POLine_Particulars').value = item.Particulars;
            document.getElementById('POLine_Quantity').value = '0';
            document.getElementById('POLine_Unit_data').value = item.UnitId;
            document.getElementById('POLine_Unit_selectedValue').value = item.Unit;
            document.getElementById('POLine_Cost').value = '0';
            document.getElementById('POLine_Amount').value = '0'
        }

        function createItemQueryFlexGrid() {
            itemQueryItemsCollection = new wijmo.collections.CollectionView(getArticleItemForItemQuery());
            itemQueryItemsCollection.canFilter = true;
            itemQueryItemsCollection.pageSize = 7;

            var filterText = '';
            $('#itemQueryFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryItemsCollection.refresh();
            });
            itemQueryItemsCollection.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                || (item.Article.toLowerCase().indexOf(filterText) > -1);
            }
            itemQueryItemsCollection.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItemQuery();
            });
          
            // Flex Grid for Purchase Order Line
            itemQueryGrid = new wijmo.grid.FlexGrid('#itemQueryGrid');
            itemQueryGrid.initialize({
                columns: [
                            {
                                "header": "Code",
                                "binding": "ManualArticleCode",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": "1.5*"
                            },
                            {
                                "header": "Last Purchase Price",
                                "binding": "Price",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Pick",
                                "binding": "Pick",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryItemsCollection,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryGrid.trackChanges = true;

            //Navigation button for account
            btnFirstPageGridItemQuery = document.getElementById('btnMoveToFirstPageGridItemQuery');
            btnPreviousPageGridItemQuery = document.getElementById('btnMoveToPreviousPageGridItemQuery');
            btnNextPageGridItemQuery = document.getElementById('btnMoveToNextPageGridItemQuery');
            btnLastPageGridItemQuery = document.getElementById('btnMoveToLastPageGridItemQuery');
            btnCurrentPageGridItemQuery = document.getElementById('btnCurrentPageGridItemQuery');

            updateNavigateButtonsItemQuery();

            btnFirstPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToFirstPage();
                updateNavigateButtonsItemQuery();
            });
            btnPreviousPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToPreviousPage();
                updateNavigateButtonsItemQuery();
            });
            btnNextPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToNextPage();
                updateNavigateButtonsItemQuery();
            });
            btnLastPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToLastPage();
                updateNavigateButtonsItemQuery();
            });
        }

        // Navigation Buttons for Account
        function updateNavigateButtonsItemQuery() {
            if (itemQueryItemsCollection.pageSize <= 0) {
                document.getElementById('naviagtionPageGridItemQuery').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridItemQuery').style.display = 'block';
            if (itemQueryItemsCollection.pageIndex === 0) {
                btnFirstPageGridItemQuery.setAttribute('disabled', 'disabled');
                btnPreviousPageGridItemQuery.setAttribute('disabled', 'disabled');
                btnNextPageGridItemQuery.removeAttribute('disabled');
                btnLastPageGridItemQuery.removeAttribute('disabled');
            } else if (itemQueryItemsCollection.pageIndex === (itemQueryItemsCollection.pageCount - 1)) {
                btnFirstPageGridItemQuery.removeAttribute('disabled');
                btnPreviousPageGridItemQuery.removeAttribute('disabled');
                btnNextPageGridItemQuery.setAttribute('disabled', 'disabled');
                btnLastPageGridItemQuery.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridItemQuery.removeAttribute('disabled');
                btnPreviousPageGridItemQuery.removeAttribute('disabled');
                btnNextPageGridItemQuery.removeAttribute('disabled');
                btnLastPageGridItemQuery.removeAttribute('disabled');
            }
            btnCurrentPageGridItemQuery.innerHTML = (itemQueryItemsCollection.pageIndex + 1) + ' / ' + itemQueryItemsCollection.pageCount;
        }

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        // ==================
        // GET Purchase by Id
        // ==================
        function getPOById() {
            var PurchaseOrderId = getParam('PurchaseOrderId');
            if (document.location.search.length == 0) {
                document.getElementById('PO_ManualPONumber').value = "NA";
                document.getElementById('PO_Remarks').value = "NA";
                document.getElementById('PO_RequestNumber').value = "NA";

                NProgress.done();
            } else {
                NProgress.start();
                $.ajax({
                    url: '/api/purchaseOrder/' + PurchaseOrderId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results != null) {
                            document.getElementById('PO_Branch_data').value = Results.BranchId;
                            document.getElementById('PO_Branch_selectedValue').value = Results.Branch;
                            document.getElementById('PO_PONumber').value = Results.PONumber;
                            document.getElementById('PO_PONumber_Display').value = Results.PONumber;
                            document.getElementById('PO_Date_data').value = Results.PODate;

                            var PODate_Result = Results.PODate
                            PODate.dispose();
                            PODate = new wijmo.input.InputDate('#PO_Date', {
                                format: 'MM/dd/yyyy',
                                value: new Date(PODate_Result),
                                mask: '99/99/9999',
                                onValueChanged: function () {
                                    document.getElementById('PO_Date_data').value = this.value.toLocaleDateString();
                                }
                            });

                            document.getElementById('PO_ManualPONumber').value = Results.ManualPONumber;
                            document.getElementById('PO_Supplier_data').value = Results.SupplierId;
                            document.getElementById('PO_Supplier_selectedValue').value = Results.Supplier;
                            document.getElementById('PO_Term_data').value = Results.TermId;
                            document.getElementById('PO_Term_selectedValue').value = Results.Term;
                            document.getElementById('PO_Remarks').value = Results.Remarks;
                            document.getElementById('PO_RequestNumber').value = Results.ManualRequestNumber;
                            document.getElementById('PO_DateNeeded_data').value = Results.DateNeeded;

                            var PODateNeeded_Result = Results.DateNeeded
                            PODateNeeded.dispose();
                            PODateNeeded = new wijmo.input.InputDate('#PO_DateNeeded', {
                                format: 'MM/dd/yyyy',
                                value: new Date(PODateNeeded_Result),
                                mask: '99/99/9999',
                                onValueChanged: function () {
                                    document.getElementById('PO_DateNeeded_data').value = this.value.toLocaleDateString();
                                }
                            });

                            document.getElementById('PO_ClosePO').checked = Results.IsClose;
                            document.getElementById('RequestedBy_data').value = Results.RequestedById;
                            document.getElementById('RequestedBy_selectedValue').value = Results.RequestedBy;
                            document.getElementById('PreparedBy_data').value = Results.PreparedById;
                            document.getElementById('PreparedBy_selectedValue').value = Results.PreparedBy;
                            document.getElementById('CheckedBy_data').value = Results.CheckedById;
                            document.getElementById('CheckedBy_selectedValue').value = Results.CheckedBy;
                            document.getElementById('ApprovedBy_data').value = Results.ApprovedById;
                            document.getElementById('ApprovedBy_selectedValue').value = Results.ApprovedBy;
                            document.getElementById('PO_Lock').checked = Results.IsLocked;

                            document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                            document.getElementById('PO_IsLocked').value = Results.IsLocked;

                            NProgress.done();
                            if (document.getElementById('PO_IsLocked').value == 'true') {
                                document.getElementById('PO_PONumber_Display').disabled = true;
                                document.getElementById('PO_ManualPONumber').disabled = true;
                                document.getElementById('PO_Remarks').disabled = true;
                                document.getElementById('PO_RequestNumber').disabled = true;
                                document.getElementById('PO_ClosePO').disabled = true;

                                var PODate_Result = Results.PODate
                                PODate.dispose();
                                PODate = new wijmo.input.InputDate('#PO_Date', {
                                    disabled: true,
                                    format: 'MM/dd/yyyy',
                                    value: new Date(PODate_Result),
                                    mask: '99/99/9999',
                                    onValueChanged: function () {
                                        document.getElementById('PO_Date_data').value = this.value.toLocaleDateString();
                                    }
                                });

                                var PODateNeeded_Result = Results.DateNeeded
                                PODateNeeded.dispose();
                                PODateNeeded = new wijmo.input.InputDate('#PO_DateNeeded', {
                                    disabled: true,
                                    format: 'MM/dd/yyyy',
                                    value: new Date(PODateNeeded_Result),
                                    mask: '99/99/9999',
                                    onValueChanged: function () {
                                        document.getElementById('PO_DateNeeded_data').value = this.value.toLocaleDateString();
                                    }
                                });

                                $("#cmdSaveLockPO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", false);
                                $("#cmdPrintPO").prop("disabled", false);
                                $("#cmdPOLineAddButton").prop("disabled", true);
                                $("#cmdPOLineItemQueryButton").prop("disabled", true);
                            } else if (document.getElementById('PO_IsLocked').value == 'false') {
                                document.getElementById('PO_ManualPONumber').disabled = false;
                                document.getElementById('PO_Remarks').disabled = false;
                                document.getElementById('PO_RequestNumber').disabled = false;
                                document.getElementById('PO_ClosePO').disabled = false;
                                $("#cmdPOLineItemQueryButton").prop("disabled", false);

                                var PODate_Result = Results.PODate
                                PODate.dispose();
                                PODate = new wijmo.input.InputDate('#PO_Date', {
                                    disabled: false,
                                    format: 'MM/dd/yyyy',
                                    value: new Date(PODate_Result),
                                    mask: '99/99/9999',
                                    onValueChanged: function () {
                                        document.getElementById('PO_Date_data').value = this.value.toLocaleDateString();
                                    }
                                });

                                var PODateNeeded_Result = Results.DateNeeded
                                PODateNeeded.dispose();
                                PODateNeeded = new wijmo.input.InputDate('#PO_DateNeeded', {
                                    disabled: false,
                                    format: 'MM/dd/yyyy',
                                    value: new Date(PODateNeeded_Result),
                                    mask: '99/99/9999',
                                    onValueChanged: function () {
                                        document.getElementById('PO_DateNeeded_data').value = this.value.toLocaleDateString();
                                    }
                                });

                                $("#cmdSaveLockPO").prop("disabled", false);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdPOLineAddButton").prop("disabled", false);

                            } else {
                                console.log("Invalid Lock");
                            }

                            getBranchesForComboBox();
                            getSupplierForComboBox();
                            getTermForComboBox();
                            getUsersForComboBox();
                        }
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            }
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var PurchaseOrderId = getParam('PurchaseOrderId');
                        var branchId = @ViewData["BranchId"];
                        if (document.location.search.length == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (branchResults) {
                                    if (branchResults != null) {
                                        document.getElementById('PO_Branch_data').value = branchResults.Id;
                                        document.getElementById('PO_Branch_selectedValue').value = branchResults.Branch;

                                        createCboBranch(branches);
                                    }
                                }
                            });
                        } else {
                            createCboBranch(branches);
                        }
                    } else {
                        createCboBranch(branches);
                    }
                }
            });
            return branches;
        }

        // ======================
        // Combo Box for Branches
        // ======--==============
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            var disabled;
            if (branches == 0) {
                disabled = true;
            } else {
                if (document.getElementById('PO_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#PO_Branch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                selectedValue: document.getElementById('PO_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#PO_Branch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });

            document.getElementById('PO_Branch_data').value = branchCollections.items[cboBranch.selectedIndex].BranchId;
        }

        // ==========================
        // GET Supplier for Combo Box
        // ==========================
        function getSupplierForComboBox() {
            suppliers = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/3',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            suppliers.push({
                                SupplierId: results[i]["Id"],
                                Supplier: results[i]["Article"]
                            });
                        }
                        createCbosupplier(suppliers);
                    } else {
                        createCbosupplier(suppliers);
                    }
                }
            });
            return suppliers;
        }

        // =======================
        // Combo Box for Suppliers
        // =======================
        function createCbosupplier(suppliers) {
            var supplierCollection = new wijmo.collections.CollectionView(suppliers);
            var supplierList = new Array();
            for (var i = 0; i < supplierCollection.items.length; i++) {
                supplierList.push(supplierCollection.items[i].Supplier);
            }

            var disabled;
            if (suppliers == 0) {
                disabled = true;
            } else {
                if (document.getElementById('PO_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboSupplier.dispose();
            cboSupplier = new wijmo.input.ComboBox('#PO_Supplier', {
                disabled: disabled,
                placeholder: "Select Supplier",
                itemsSource: supplierList,
                isEditable: false,
                selectedValue: document.getElementById('PO_Supplier_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#PO_Supplier_data").val(supplierCollection.items[this.selectedIndex].SupplierId);
                }
            });

            document.getElementById('PO_Supplier_data').value = supplierCollection.items[cboSupplier.selectedIndex].SupplierId;
        }

        // =======================
        // GET Terms for Combo Box
        // =======================
        function getTermForComboBox() {
            terms = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTerm',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            terms.push({
                                TermId: results[i]["Id"],
                                Term: results[i]["Term"]
                            });
                        }
                        createCboTerm(terms);
                    } else {
                        createCboTerm(terms);
                    }
                }
            });
            return terms;
        }

        // ===================
        // Combo Box for Terms
        // ===================
        function createCboTerm(terms) {
            var termCollections = new wijmo.collections.CollectionView(terms);
            var termList = new Array();
            for (var i = 0; i < termCollections.items.length; i++) {
                termList.push(termCollections.items[i].Term);
            }

            var disabled;
            if (terms == 0) {
                disabled = true;
            } else {
                if (document.getElementById('PO_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboTerm.dispose();
            cboTerm = new wijmo.input.ComboBox('#PO_Term', {
                disabled: disabled,
                placeholder: "Select Term",
                itemsSource: termList,
                isEditable: false,
                selectedValue: document.getElementById('PO_Term_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#PO_Term_data").val(termCollections.items[this.selectedIndex].TermId);
                }
            });

            document.getElementById('PO_Term_data').value = termCollections.items[cboTerm.selectedIndex].TermId;
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        var PurchaseOrderId = getParam('PurchaseOrderId');
                        if (document.location.search.length == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (mstUserResults) {
                                    if (mstUserResults != null) {
                                        document.getElementById('RequestedBy_data').value = mstUserResults.Id;
                                        document.getElementById('PreparedBy_data').value = mstUserResults.Id;
                                        document.getElementById('CheckedBy_data').value = mstUserResults.Id;
                                        document.getElementById('ApprovedBy_data').value = mstUserResults.Id;

                                        document.getElementById('RequestedBy_selectedValue').value = mstUserResults.FullName;
                                        document.getElementById('PreparedBy_selectedValue').value = mstUserResults.FullName;
                                        document.getElementById('CheckedBy_selectedValue').value = mstUserResults.FullName;
                                        document.getElementById('ApprovedBy_selectedValue').value = mstUserResults.FullName;

                                        createCboUserRequestedBy(users);
                                        createCboUserPreparedBy(users);
                                        createCboUserCheckedBy(users);
                                        createCboUserApprovedBy(users);
                                    }
                                }
                            });

                        } else {
                            createCboUserRequestedBy(users);
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);

                        }
                    } else {
                        createCboUserRequestedBy(users);
                        createCboUserPreparedBy(users);
                        createCboUserCheckedBy(users);
                        createCboUserApprovedBy(users);
                    }
                }
            });
            return users;
        }

        // ==================================
        // Combo Box for Users - Requested By
        // ==================================
        function createCboUserRequestedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('PO_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboRequestedBy.dispose();
            cboRequestedBy = new wijmo.input.ComboBox('#RequestedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('RequestedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#RequestedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            document.getElementById('RequestedBy_data').value = usersCollection.items[cboRequestedBy.selectedIndex].UserId;
        }

        // ==================================
        // Combo Box for Users - Prepared By
        // ==================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('PO_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#PreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('PreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#PreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // ==================================
        // Combo Box for Users - Checked By
        // ==================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('PO_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboCheckedBy.dispose();
            cboCheckedBy = new wijmo.input.ComboBox('#CheckedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('CheckedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            document.getElementById('CheckedBy_data').value = usersCollection.items[cboCheckedBy.selectedIndex].UserId;
        }

        // ==================================
        // Combo Box for Users - Approved By
        // ==================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if (users == 0) {
                disabled = true;
            } else {
                if (document.getElementById('PO_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboApprovedBy.dispose();
            cboApprovedBy = new wijmo.input.ComboBox('#ApprovedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('ApprovedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            document.getElementById('ApprovedBy_data').value = usersCollection.items[cboApprovedBy.selectedIndex].UserId;
        }

        // =====================================================
        // Function with leading zeroes to display the PO Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while (pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // ======
        // ADD PO
        // ======
        function btnSavePO_OnClick() {
            var POObject = new Object();
            var PurchaseOrderId = getParam('PurchaseOrderId');
            POObject.BranchId = document.getElementById('PO_Branch_data').value;
            POObject.PONumber = document.getElementById('PO_PONumber_Display').value;
            POObject.PODate = document.getElementById('PO_Date_data').value;
            POObject.SupplierId = document.getElementById('PO_Supplier_data').value;
            POObject.TermId = document.getElementById('PO_Term_data').value;
            POObject.ManualRequestNumber = document.getElementById('PO_RequestNumber').value;
            POObject.ManualPONumber = document.getElementById('PO_ManualPONumber').value;
            POObject.DateNeeded = document.getElementById('PO_DateNeeded_data').value;
            POObject.Remarks = document.getElementById('PO_Remarks').value;
            POObject.IsClose = document.getElementById('PO_ClosePO').checked;
            POObject.RequestedById = document.getElementById('RequestedBy_data').value;
            POObject.PreparedById = document.getElementById('PreparedBy_data').value;
            POObject.CheckedById = document.getElementById('CheckedBy_data').value;
            POObject.ApprovedById = document.getElementById('ApprovedBy_data').value;
            var data = JSON.stringify(POObject);

            if (document.getElementById('PO_Branch_data').value == '') {
                document.getElementById("PO_Branch").style.border = "1px solid red";
            } else {
                document.getElementById("PO_Branch").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('PO_Supplier_data').value == '') {
                document.getElementById("PO_Supplier").style.border = "1px solid red";
            } else {
                document.getElementById("PO_Supplier").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('PO_Term_data').value == '') {
                document.getElementById("PO_Term").style.border = "1px solid red";
            } else {
                document.getElementById("PO_Term").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('RequestedBy_data').value == '') {
                document.getElementById("RequestedBy").style.border = "1px solid red";
            } else {
                document.getElementById("RequestedBy").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('CheckedBy_data').value == '') {
                document.getElementById("CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("CheckedBy").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('ApprovedBy_data').value == '') {
                document.getElementById("ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("ApprovedBy").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredPO').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
            }
            else {
                if (document.location.search.length == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addPurchaseOrder',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        success: function(id) {
                            if(id > 0) {
                                $("#cmdSaveLockPO").prop("disabled", true);
                                $("#cmdSavePO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdClosePO").prop("disabled", true);
                                window.location = '/Software/PurchaseOrderDetail?PurchaseOrderId=' + id;
                            } else {
                                window.history.back();
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updatePurchaseOrder/' + PurchaseOrderId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveLockPO").prop("disabled", true);
                                $("#cmdSavePO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdClosePO").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdSaveLockPO").prop("disabled", false);
                                $("#cmdSavePO").prop("disabled", false);
                                $("#cmdEditPO").prop("disabled", false);
                                $("#cmdPrintPO").prop("disabled", false);
                                $("#cmdClosePO").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSaveLockPO").prop("disabled", false);
                                $("#cmdSavePO").prop("disabled", false);
                                $("#cmdEditPO").prop("disabled", false);
                                $("#cmdPrintPO").prop("disabled", false);
                                $("#cmdClosePO").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ==================
        // Save Lock PO Lines
        // ==================
        function btnSaveLockPO_OnClick() {
            var POObject = new Object();
            var PurchaseOrderId = getParam('PurchaseOrderId');
            POObject.BranchId = document.getElementById('PO_Branch_data').value;
            POObject.PONumber = document.getElementById('PO_PONumber_Display').value;
            POObject.PODate = document.getElementById('PO_Date_data').value;
            POObject.SupplierId = document.getElementById('PO_Supplier_data').value;
            POObject.TermId = document.getElementById('PO_Term_data').value;
            POObject.ManualRequestNumber = document.getElementById('PO_RequestNumber').value;
            POObject.ManualPONumber = document.getElementById('PO_ManualPONumber').value;
            POObject.DateNeeded = document.getElementById('PO_DateNeeded_data').value;
            POObject.Remarks = document.getElementById('PO_Remarks').value;
            POObject.IsClose = document.getElementById('PO_ClosePO').checked;
            POObject.RequestedById = document.getElementById('RequestedBy_data').value;
            POObject.PreparedById = document.getElementById('PreparedBy_data').value;
            POObject.CheckedById = document.getElementById('CheckedBy_data').value;
            POObject.ApprovedById = document.getElementById('ApprovedBy_data').value;
            POObject.IsLocked = true;
            var data = JSON.stringify(POObject);

            if (document.getElementById('PO_Branch_data').value == '') {
                document.getElementById("PO_Branch").style.border = "1px solid red";
            } else {
                document.getElementById("PO_Branch").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('PO_Supplier_data').value == '') {
                document.getElementById("PO_Supplier").style.border = "1px solid red";
            } else {
                document.getElementById("PO_Supplier").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('PO_Term_data').value == '') {
                document.getElementById("PO_Term").style.border = "1px solid red";
            } else {
                document.getElementById("PO_Term").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('RequestedBy_data').value == '') {
                document.getElementById("RequestedBy").style.border = "1px solid red";
            } else {
                document.getElementById("RequestedBy").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('CheckedBy_data').value == '') {
                document.getElementById("CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("CheckedBy").style.border = "1px solid #C8C8C8";
            }

            if (document.getElementById('ApprovedBy_data').value == '') {
                document.getElementById("ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("ApprovedBy").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredPO').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
            }
            else {
                if (document.location.search.length == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addPurchaseOrder',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        success: function(id) {
                            if(id > 0) {
                                $("#cmdSaveLockPO").prop("disabled", true);
                                $("#cmdSavePO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdClosePO").prop("disabled", true);
                                window.location = '/Software/PurchaseOrderDetail?PurchaseOrderId=' + id;
                            } else {
                                window.history.back();
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updatePurchaseOrder/' + PurchaseOrderId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveLockPO").prop("disabled", true);
                                $("#cmdSavePO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdClosePO").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdSaveLockPO").prop("disabled", false);
                                $("#cmdSavePO").prop("disabled", false);
                                $("#cmdEditPO").prop("disabled", false);
                                $("#cmdPrintPO").prop("disabled", false);
                                $("#cmdClosePO").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSaveLockPO").prop("disabled", false);
                                $("#cmdSavePO").prop("disabled", false);
                                $("#cmdEditPO").prop("disabled", false);
                                $("#cmdPrintPO").prop("disabled", false);
                                $("#cmdClosePO").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ==================
        // Edit PO - unlocked
        // ==================
        function btnEditPO_OnClick() {
            var POObject = new Object();
            var PurchaseOrderId = getParam('PurchaseOrderId');
            POObject.IsLocked = false;
            var data = JSON.stringify(POObject);
            $.ajax({
                type: "PUT",
                url: '/api/updatePurchaseOrderIsLocked/' + PurchaseOrderId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: data,
                statusCode: {
                    200: function () {
                        $("#cmdSaveLockPO").prop("disabled", true);
                        $("#cmdSavePO").prop("disabled", true);
                        $("#cmdEditPO").prop("disabled", true);
                        $("#cmdPrintPO").prop("disabled", true);
                        $("#cmdClosePO").prop("disabled", true);
                        toastr.success("Unlocked");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Can't Unlock");
                        $("#cmdSaveLockPO").prop("disabled", false);
                        $("#cmdSavePO").prop("disabled", false);
                        $("#cmdEditPO").prop("disabled", false);
                        $("#cmdPrintPO").prop("disabled", false);
                        $("#cmdClosePO").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#cmdSaveLockPO").prop("disabled", false);
                        $("#cmdSavePO").prop("disabled", false);
                        $("#cmdEditPO").prop("disabled", false);
                        $("#cmdPrintPO").prop("disabled", false);
                        $("#cmdClosePO").prop("disabled", false);
                    }
                }
            });
        }

        // =========
        // Print PO
        // ========
        function btnPrintPO_OnClick() {
            var PurchaseOrderId = getParam('PurchaseOrderId');
            window.location = "/RepPurchaseOrder/PurchaseOrder?POId=" + PurchaseOrderId;
        }

        // ==========================
        // Purchase Order Line / Item
        // ==========================
        function getPurchaseOrderItem() {
            var POLines = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                var PurchaseOrderId = getParam('PurchaseOrderId');
                NProgress.start();
                $.ajax({
                    url: '/api/listPurchaseOrderItemByPOId/' + PurchaseOrderId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        NProgress.done();
                        if (Results.length > 0) {
                            var POs = new wijmo.collections.ObservableArray;
                            var PurchaseOrderId = getParam('PurchaseOrderId');
                            $.ajax({
                                url: '/api/purchaseOrder/' + PurchaseOrderId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (POResults) {
                                    if (POResults.IsLocked == true) {
                                        for (i = 0; i < Results.length; i++) {
                                            POLines.push({
                                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='' onclick='btnEditPOLines_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>",
                                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='' onclick='btnDeletePOLines_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>",
                                                Id: Results[i]["Id"],
                                                ItemId: Results[i]["ItemId"],
                                                Item: Results[i]["Item"],
                                                ItemCode: Results[i]["ItemCode"],
                                                POId: Results[i]["POId"],
                                                Quantity: Results[i]["Quantity"],
                                                UnitId: Results[i]["UnitId"],
                                                Unit: Results[i]["Unit"],
                                                Particulars: Results[i]["Particulars"],
                                                Cost: Results[i]["Cost"],
                                                Amount: Results[i]["Amount"]
                                            });
                                        }
                                    } else {
                                        for (i = 0; i < Results.length; i++) {
                                            POLines.push({
                                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='' onclick='btnEditPOLines_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' id='' onclick='btnDeletePOLines_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                                Id: Results[i]["Id"],
                                                ItemId: Results[i]["ItemId"],
                                                Item: Results[i]["Item"],
                                                ItemCode: Results[i]["ItemCode"],
                                                POId: Results[i]["POId"],
                                                Quantity: Results[i]["Quantity"],
                                                UnitId: Results[i]["UnitId"],
                                                Unit: Results[i]["Unit"],
                                                Particulars: Results[i]["Particulars"],
                                                Cost: Results[i]["Cost"],
                                                Amount: Results[i]["Amount"]
                                            });
                                        }
                                    }
                                }
                            });
                        }
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            }
            return POLines;
        }

        // ===========================
        // GET Item Code for Combo Box
        // ===========================
        function getItemCodeForComboBox() {
            itemCodes = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/1',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            itemCodes.push({
                                ItemId: results[i]["Id"],
                                ItemCode: results[i]["ManualArticleCode"],
                                ItemDescription: results[i]["Article"],
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"]
                            });
                        }
                        createCboItemCode(itemCodes);
                    } else {
                        createCboItemCode(itemCodes);
                    }
                }
            });
            return itemCodes;
        }

        // =======================
        // Combo Box for Item Code
        // =======================
        function createCboItemCode(itemCodes) {
            var itemCodeCollection = new wijmo.collections.CollectionView(itemCodes);
            var itemCodeList = new Array();
            for (var i = 0; i < itemCodeCollection.items.length; i++) {
                itemCodeList.push(itemCodeCollection.items[i].ItemCode);
            }

            var disabled;
            if (itemCodes == 0) {
                disabled = true;
            } else {
                if (document.getElementById('PO_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboItemCode.dispose();
            cboItemCode = new wijmo.input.ComboBox('#POLine_ItemCode', {
                disabled: disabled,
                placeholder: "Select Item Code",
                itemsSource: itemCodeList,
                isEditable: false,
                selectedValue: document.getElementById('POLine_ItemCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#POLine_ItemCode_data").val(itemCodeCollection.items[this.selectedIndex].ItemId);
                    $("#POLine_ItemDescription_data").val(itemCodeCollection.items[this.selectedIndex].ItemId);
                    $("#POLine_ItemDescription_selectedValue").val(itemCodeCollection.items[this.selectedIndex].ItemDescription);
                    //$("#POLine_Unit_data").val(itemCodeCollection.items[this.selectedIndex].UnitId);
                    //$("#POLine_Unit_selectedValue").val(itemCodeCollection.items[this.selectedIndex].Unit);

                    getItemDescriptionForComboBox();
                    getItemUnitForComboBox(itemCodeCollection.items[this.selectedIndex].ItemId);
                }
            });

            document.getElementById('POLine_ItemCode_data').value = itemCodeCollection.items[cboItemCode.selectedIndex].ItemId;
            document.getElementById('POLine_ItemDescription_data').value = itemCodeCollection.items[cboItemCode.selectedIndex].ItemId;
            document.getElementById('POLine_ItemDescription_selectedValue').value = itemCodeCollection.items[cboItemCode.selectedIndex].ItemDescription;
            //document.getElementById('POLine_Unit_data').value = itemCodeCollection.items[cboItemCode.selectedIndex].UnitId;
            //document.getElementById('POLine_Unit_selectedValue').value = itemCodeCollection.items[cboItemCode.selectedIndex].Unit;
        }

        // ==================================
        // GET Item Description for Combo Box
        // ==================================
        function getItemDescriptionForComboBox() {
            itemDescriptions = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/1',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            itemDescriptions.push({
                                ItemId: results[i]["Id"],
                                ItemCode: results[i]["ManualArticleCode"],
                                ItemDescription: results[i]["Article"],
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"]
                            });
                        }
                        createCboItemDescription(itemDescriptions);
                    } else {
                        createCboItemDescription(itemDescriptions);
                    }
                }
            });
            return itemDescriptions;
        }

        // ==============================
        // Combo Box for Item Description
        // ==============================
        function createCboItemDescription(itemDescriptions) {
            var itemDescriptionCollection = new wijmo.collections.CollectionView(itemDescriptions);
            var itemDescriptionList = new Array();
            for (var i = 0; i < itemDescriptionCollection.items.length; i++) {
                itemDescriptionList.push(itemDescriptionCollection.items[i].ItemDescription);
            }

            var disabled;
            if (itemDescriptions == 0) {
                disabled = true;
            } else {
                if (document.getElementById('PO_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboItemDescription.dispose();
            cboItemDescription = new wijmo.input.ComboBox('#POLine_ItemDescription', {
                disabled: disabled,
                placeholder: "Select Item Description",
                itemsSource: itemDescriptionList,
                isEditable: false,
                selectedValue: document.getElementById('POLine_ItemDescription_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#POLine_ItemDescription_data").val(itemDescriptionCollection.items[this.selectedIndex].ItemId);
                    $("#POLine_ItemCode_data").val(itemDescriptionCollection.items[this.selectedIndex].ItemId);
                    $("#POLine_ItemCode_selectedValue").val(itemDescriptionCollection.items[this.selectedIndex].ItemCode);
                    //$("#POLine_Unit_data").val(itemDescriptionCollection.items[this.selectedIndex].UnitId);
                    //$("#POLine_Unit_selectedValue").val(itemDescriptionCollection.items[this.selectedIndex].Unit);

                    getItemCodeForComboBox();
                    getItemUnitForComboBox(itemDescriptionCollection.items[this.selectedIndex].ItemId);
                }
            });

            document.getElementById('POLine_ItemDescription_data').value = itemDescriptionCollection.items[cboItemDescription.selectedIndex].ItemId;
            document.getElementById('POLine_ItemCode_data').value = itemDescriptionCollection.items[cboItemDescription.selectedIndex].ItemId;
            document.getElementById('POLine_ItemCode_selectedValue').value = itemDescriptionCollection.items[cboItemDescription.selectedIndex].ItemCode;
            //document.getElementById('POLine_Unit_data').value = itemDescriptionCollection.items[cboItemDescription.selectedIndex].UnitId;
            //document.getElementById('POLine_Unit_selectedValue').value = itemDescriptionCollection.items[cboItemDescription.selectedIndex].Unit;

            getItemUnitForComboBox(itemDescriptionCollection.items[cboItemDescription.selectedIndex].ItemId);
        }

        // ==============
        // Get  Item Unit
        // ==============
        function getItemUnitForComboBox(itemId) {
            units = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleUnitByArticleId/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            units.push({
                                Id: results[i]["Id"],
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"]
                            });
                        }
                        createItemUnit(units);
                    } else {
                        createItemUnit(units);
                    }
                }
            });
        }

        // =============
        // CBO for  Unit
        // =============
        function createItemUnit(units) {
            var itemUnitCollection = new wijmo.collections.CollectionView(units);
            var unitList = new Array();
            for (var i = 0; i < itemUnitCollection.items.length; i++) {
                unitList.push(itemUnitCollection.items[i].Unit);
            }

            var disabled;
            if (units == 0) {
                document.getElementById('POLine_Unit_data').value = "";
                disabled = true;
            } else {
                if (document.getElementById('PO_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboUnit.dispose();
            cboUnit = new wijmo.input.ComboBox('#POLine_Unit', {
                disabled: disabled,
                placeholder: "Select Unit",
                itemsSource: unitList,
                isEditable: false,
                selectedValue: document.getElementById('POLine_Unit_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#POLine_Unit_data").val(itemUnitCollection.items[this.selectedIndex].UnitId);
                }
            });

            if (units == 0) {
                document.getElementById('POLine_Unit_data').value = "";
            } else {
                document.getElementById('POLine_Unit_data').value = itemUnitCollection.items[cboUnit.selectedIndex].UnitId;
            }
        }


        // =============
        // Edit PO Lines
        // =============
        function btnEditPOLines_OnClick() {
            POLines.editItem(POLines.currentItem);
            $('#POLinesEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#cmdSavePOLinesButton").prop("disabled", false);
            $("#cmdPOLinesDetailCloseButton").prop("disabled", false);

            getItemCodeForComboBox();
            getItemDescriptionForComboBox();

            var POLine = POLines.currentEditItem;
            document.getElementById('POLine_Id').value = POLine.Id ? POLine.Id : '';
            document.getElementById('POLine_ItemCode_data').value = POLine.ItemId ? POLine.ItemId : '';
            document.getElementById('POLine_ItemCode_selectedValue').value = POLine.ItemCode ? POLine.ItemCode : '';
            document.getElementById('POLine_ItemDescription_data').value = POLine.ItemId ? POLine.ItemId : '';
            document.getElementById('POLine_ItemDescription_selectedValue').value = POLine.Item ? POLine.Item : '';
            document.getElementById('POLine_Particulars').value = POLine.Particulars ? POLine.Particulars : '';
            document.getElementById('POLine_Quantity').value = POLine.Quantity ? POLine.Quantity : '';
            document.getElementById('POLine_Unit_data').value = POLine.UnitId ? POLine.UnitId : '';
            document.getElementById('POLine_Unit_selectedValue').value = POLine.Unit ? POLine.Unit : '';
            document.getElementById('POLine_Cost').value = POLine.Cost.toLocaleString() ? POLine.Cost.toLocaleString() : '';
            document.getElementById('POLine_Amount').value = POLine.Amount.toLocaleString() ? POLine.Amount.toLocaleString() : '';
        }

        // =================
        // ADD PO Lines Page
        // =================
        function cmdPOLineAddButton_OnClick() {
            $('#POLinesEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $("#cmdSavePOLinesButton").prop("disabled", false);
            $("#cmdPOLinesDetailCloseButton").prop("disabled", false);

            getItemCodeForComboBox();
            getItemDescriptionForComboBox();

            document.getElementById('POLine_Id').value = 0;
            document.getElementById('POLine_ItemCode_data').value = '';
            document.getElementById('POLine_ItemCode_selectedValue').value = '';
            document.getElementById('POLine_ItemDescription_data').value = '';
            document.getElementById('POLine_ItemDescription_selectedValue').value = '';
            document.getElementById('POLine_Particulars').value = "NA";
            document.getElementById('POLine_Quantity').value = 0;
            document.getElementById('POLine_Unit_data').value = '';
            document.getElementById('POLine_Unit_selectedValue').value = '';
            document.getElementById('POLine_Cost').value = 0;
            document.getElementById('POLine_Amount').value = 0;
        }

        // ====================
        // Delete PO Lines item
        // ====================
        function btnDeletePOLines_OnClick() {
            $('#deletePOLinesConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            $("#cmdConfirmDeletePOLines").prop("disabled", false);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
        }
        // POItem Confirm Delete
        function cmdPOLinesConfirmDeleteButton_OnClick() {
            $("#cmdConfirmDeletePOLines").prop("disabled", true);
            $("#cmdConfirmDeleteCloseButton").prop("disabled", true);

            POLines.editItem(POLines.currentItem);
            var POLineId = POLines.currentEditItem.Id;
            $.ajax({
                url: '/api/deletePurchaseOrderItem/' + POLineId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeletePOLines").prop("disabled", true);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");
                        $('#deletePOLinesConfirm').modal('hide');

                        POLines = new wijmo.collections.CollectionView(getPurchaseOrderItem());

                        // Flex Grid for Purchase Order Line
                        POLineGrid.itemsSource = POLines;
                        POLineGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deletePOLinesConfirm').modal('hide');
                        $("#cmdConfirmDeletePOLines").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deletePOLinesConfirm').modal('hide');
                        $("#cmdConfirmDeletePOLines").prop("disabled", false);
                        $("#cmdConfirmDeleteCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // =============
        // Save PO Lines
        // =============
        function cmdPOLinesSaveButton_OnClick() {
            var POItemObject = new Object();
            var POItemId = document.getElementById('POLine_Id').value;
            var PurchaseOrderId = getParam('PurchaseOrderId');
            POItemObject.POId = PurchaseOrderId;
            POItemObject.ItemId = document.getElementById('POLine_ItemCode_data').value;
            POItemObject.Particulars = document.getElementById('POLine_Particulars').value;
            POItemObject.UnitId = document.getElementById('POLine_Unit_data').value;
            POItemObject.Quantity = document.getElementById('POLine_Quantity').value;
            POItemObject.Cost = document.getElementById('POLine_Cost').value;
            POItemObject.Amount = document.getElementById('POLine_Amount').value;
            var POItemData = JSON.stringify(POItemObject);

            if (document.getElementById('POLine_ItemCode_data').value == '') {
                document.getElementById("POLine_ItemCode").style.border = "1px solid red";
            } else {
                document.getElementById("POLine_ItemCode").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('POLine_ItemDescription_data').value == '') {
                document.getElementById("POLine_ItemDescription").style.border = "1px solid red";
            } else {
                document.getElementById("POLine_ItemDescription").style.border = "1px solid #C8C8C8   ";
            }

            if (document.getElementById('POLine_Unit_data').value == '') {
                document.getElementById("POLine_Unit").style.border = "1px solid red";
            } else {
                document.getElementById("POLine_Unit").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredPOLine').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
            }
            else {
                $("#cmdSavePOLinesButton").prop("disabled", true);
                $("#cmdPOLinesDetailCloseButton").prop("disabled", true);

                if (POItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addPurchaseOrderItem',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: POItemData,
                        success: function(id) {
                            if(id > 0) {
                                $("#cmdSavePOLinesButton").prop("disabled", true);
                                $("#cmdPOLinesDetailCloseButton").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                $('#POLinesEdit').modal('hide');

                                POLines = new wijmo.collections.CollectionView(getPurchaseOrderItem());

                                // Flex Grid for Purchase Order Line
                                POLineGrid.itemsSource = POLines;
                                POLineGrid.trackChanges = true;
                            } else {
                                $("#cmdSavePOLinesButton").prop("disabled", false);
                                $("#cmdPOLinesDetailCloseButton").prop("disabled", false);
                                toastr.error("Save unsuccessful");
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updatePurchaseOrderItem/' + POItemId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: POItemData,
                        statusCode: {
                            200: function () {
                                $("#cmdSavePOLinesButton").prop("disabled", true);
                                $("#cmdPOLinesDetailCloseButton").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                $('#POLinesEdit').modal('hide');

                                POLines = new wijmo.collections.CollectionView(getPurchaseOrderItem());
                                // Flex Grid for Purchase Order Line
                                POLineGrid.itemsSource = POLines;
                                POLineGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Can't Update");
                                $("#cmdSavePOLinesButton").prop("disabled", false);
                                $("#cmdPOLinesDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSavePOLinesButton").prop("disabled", false);
                                $("#cmdPOLinesDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            var userId = '@ViewData["MstUserId"]';
            rightsAccessValidation(userId);

            var PurchaseOrderId = getParam('PurchaseOrderId');
            if (document.location.search.length == 0) {
                $('#cmdSaveLockPO').hide();
                $('#cmdSavePO').show();
                $('#cmdEditPO').hide();
                $("#cmdPrintPO").prop("disabled", true);
                $('#cmdPOLineAddButton').prop('disabled', true);

            } else {
                $('#cmdSaveLockPO').show();
                $('#cmdSavePO').hide();
                $('#cmdEditPO').prop('disabled', true);
            }

            $('#POLine_Quantity').keyup(function () {
                var inputQuantity = this.value;
                var inputCost = document.getElementById('POLine_Cost').value;

                var replacedCost = inputCost.replace(/\,/g, '');
                var replacedQuantity = inputQuantity.replace(/\,/g, '');
                var amount = replacedCost * replacedQuantity;

                document.getElementById('POLine_Amount').value = amount.toLocaleString();
            });

            $('#POLine_Cost').keyup(function () {
                var inputQuantity = document.getElementById('POLine_Quantity').value;
                var inputCost = this.value;

                var replacedCost = inputCost.replace(/\,/g, '');
                var replacedQuantity = inputQuantity.replace(/\,/g, '');
                var amount = replacedCost * replacedQuantity;

                document.getElementById('POLine_Amount').value = amount.toLocaleString();
            });

            document.getElementById('POLine_Amount').disabled = true;

            document.getElementById('PO_Branch').disabled = true;
            document.getElementById('PO_PONumber_Display').disabled = true;
            document.getElementById('PO_Lock').disabled = true;

            cboBranch = new wijmo.input.ComboBox('#PO_Branch');

            var d = new Date();
            document.getElementById("PO_Date_data").value = [d.getMonth() + 1, d.getDate(), d.getFullYear()].join('/');
            PODate = new wijmo.input.InputDate('#PO_Date', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('PO_Date_data').value = this.value.toLocaleDateString();
                }
            });
            document.getElementById("PO_DateNeeded_data").value = [d.getMonth() + 1, d.getDate(), d.getFullYear()].join('/');
            PODateNeeded = new wijmo.input.InputDate('#PO_DateNeeded', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('PO_DateNeeded_data').value = this.value.toLocaleDateString();
                }
            });

            cboSupplier = new wijmo.input.ComboBox('#PO_Supplier');
            cboTerm = new wijmo.input.ComboBox('#PO_Term');
            cboRequestedBy = new wijmo.input.ComboBox('#RequestedBy');
            cboPreparedBy = new wijmo.input.ComboBox('#PreparedBy');
            cboCheckedBy = new wijmo.input.ComboBox('#CheckedBy');
            cboApprovedBy = new wijmo.input.ComboBox('#ApprovedBy');

            getPOById();

            cboItemCode = new wijmo.input.ComboBox('#POLine_ItemCode');
            cboItemDescription = new wijmo.input.ComboBox('#POLine_ItemDescription');
            cboUnit = new wijmo.input.ComboBox('#POLine_Unit');

            var PurchaseOrderId = getParam('PurchaseOrderId');
            if (document.location.search.length == 0) {
                getBranchesForComboBox();
                getSupplierForComboBox();
                getTermForComboBox();
                getUsersForComboBox();

                if (document.getElementById('PO_PONumber').value == 0) {
                    document.getElementById('PO_PONumber_Display').value = "0000000001";
                }

                document.getElementById('PO_PONumber').value = 0;
                //document.getElementById('journalVoucher_No_Display').value = "000-000000";
                var POs = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/purchaseOrderLastPONumber',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        //if (Results.length > 0) {
                        //    POs.push({
                        //        Id: Results.Id,
                        //        PONumber: Results.PONumber
                        //    });
                        //}
                        if (Results != null) {
                            var PO_Number = parseInt(Results.PONumber);
                            var PO_Number_PlusOne = 0000000001;
                            var PO_Num_Results = PO_Number + PO_Number_PlusOne;

                            document.getElementById('PO_PONumber').value = zerofill(PO_Num_Results, 10);
                            document.getElementById('PO_PONumber_Display').value = zerofill(PO_Num_Results, 10);
                        }
                    }
                });
            }

            POLines = new wijmo.collections.CollectionView(getPurchaseOrderItem());

            // Flex Grid for Purchase Order Line
            POLineGrid = new wijmo.grid.FlexGrid('#POGrid');
            POLineGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Item Code",
                                "binding": "ItemCode",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Item Description",
                                "binding": "Item",
                                "allowSorting": true,
                                "width": "4*"
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": "3*"
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Cost",
                                "binding": "Cost",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": "1*"
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: POLines,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            POLineGrid.trackChanges = true;

            $(document).ajaxStop(function () {
                if (document.location.search.length == 0) {
                    btnSavePO_OnClick();
                    window.btnSavePO_OnClick = function () {
                        return true;
                    }
                }
            });
            
            $(document).on('show.bs.modal', '.modal', function (event) {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () {
                    $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
                }, 0);
            });

            $(document).on('hidden.bs.modal', '.modal', function () {
                $('.modal:visible').length && $(document.body).addClass('modal-open');
            });
        });
    </script>
</body>
</html>