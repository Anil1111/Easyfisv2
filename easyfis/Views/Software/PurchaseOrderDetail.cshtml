@{
    var branchId = Request.QueryString["BranchId"];
    var POId = Request.QueryString["POId"];
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Purchase Order Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Font-Awesome/css")
    @Styles.Render("~/Content/Software-css")
    @Styles.Render("~/WijmoCSS/Wijmo-css")
</head>
<body>
    <div id="wrapper" class="wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <br /><br /><br />
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <h4><i class="fa fa-shopping-cart fa-2x"></i> Purchase Order Detail</h4>
                        <br />
                        <div class="div_Current_Page">
                            <span id="currentPage"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="PODetailLabel"></h4>
                    </div>
                    <div class="col-md-6" align="right">
                        <!-- <button class="btn btn-primary btn-sm" id=""><i class="fa fa-save"></i> Save and Lock</button> -->
                        <button class="btn btn-primary btn-sm" id="cmdSavePO" onclick="btnSavePO_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button class="btn btn-primary btn-sm" id="cmdEditPO"><i class="fa fa-edit"></i> Edit</button>
                        <button class="btn btn-primary btn-sm" id="cmdPrintPO" onclick="window.location.href ='@Url.Action("PurchaseOrderPDF", "Software", new { POId = POId })'"><i class="fa fa-print"></i> Print</button>
                        <button onclick="window.location.href = '@Url.Action("PurchaseOrder", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="cmdClosePO"><i class="fa fa-times"></i> Close</button>
                    </div>
                </div>
                @*<hr />*@
                <div class="well">
                    <form class="form-horizontal" role="form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Branch:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="PO_Branch"></div>

                                        <input type="hidden" class="requiredPO" id="PO_Branch_data" />
                                        <input type="hidden" id="PO_Branch_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">PO Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredPO" id="PO_PONumber" />
                                        <input type="hidden" id="PO_PONumber_Display" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">PO Date:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="PO_Date"></div>
                                        <input type="hidden" class="requiredPO" id="PO_Date_data" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Manual PO Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredPO" id="PO_ManualPONumber">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Supplier:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="PO_Supplier"></div>

                                        <input type="hidden" class="requiredPO" id="PO_Supplier_data" />
                                        <input type="hidden" id="PO_Supplier_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Term:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="PO_Term"></div>

                                        <input type="hidden" class="requiredPO" id="PO_Term_data" />
                                        <input type="hidden" id="PO_Term_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Remarks:</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control textarea-custom requiredPO" id="PO_Remarks"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Request Number:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredPO" id="PO_RequestNumber">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Date Needed:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="PO_DateNeeded"></div>
                                        <input type="hidden" class="requiredPO" id="PO_DateNeeded_data" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Requested by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="RequestedBy"></div>

                                        <input type="hidden" class="requiredPO" id="RequestedBy_data" />
                                        <input type="hidden" id="RequestedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Prepared by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="PreparedBy"></div>

                                        <input type="hidden" class="requiredPO" id="PreparedBy_data" />
                                        <input type="hidden" id="PreparedBy_selectedValue" />
                                        <input type="hidden" id="userId_data" value="@userId" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Checked by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="CheckedBy"></div>

                                        <input type="hidden" class="requiredPO" id="CheckedBy_data" />
                                        <input type="hidden" id="CheckedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Approved by:</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="ApprovedBy"></div>

                                        <input type="hidden" class="requiredPO" id="ApprovedBy_data" />
                                        <input type="hidden" id="ApprovedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Close PO:</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" id="PO_ClosePO">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Lock:</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" id="PO_Lock">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-4"></div>
                                    <div class="col-sm-8">
                                        <input type="hidden" id="PO_IsLocked">
                                        <input type="hidden" id="PO_IsLocked_defaultTrue">
                                        <input type="hidden" id="PO_IsLocked_defaultFalse">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <h4>Purchase Order Line</h4>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="input-group input-group-sm">
                            <span class="input-group-addon"><i class="fa fa-search"></i></span>
                            <input type="text" class="form-control input-sm" id="InputFilterPOLine" placeholder="Search Branch">
                        </div>
                    </div>
                    <div class="col-lg-8">
                        <button type="submit" class="btn btn-primary pull-right btn-sm" id="cmdBranchAddBranchButton" onclick="cmdbranchAddBranchButton_OnClick()"><i class="fa fa-plus"></i> Add</button>
                    </div>
                </div>
                <br />
                <div class="row" align="left">
                    <div class="col-lg-12">
                        <div id="POGrid" class="grid" align="left"></div>
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="btn-group col-md-7" id="navigationPageGridPOLine">
                        <button type="button" class="btn btn-default border-custom" id="btnMoveToFirstPageGridPOLine">
                            <span class="glyphicon glyphicon-fast-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default border-custom" id="btnMoveToPreviousPageGridPOLine">
                            <span class="glyphicon glyphicon-step-backward"></span>
                        </button>
                        <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCurrentPageGridPOLine"></button>
                        <button type="button" class="btn btn-default border-custom" id="btnMoveToNextPageGridPOLine">
                            <span class="glyphicon glyphicon-step-forward"></span>
                        </button>
                        <button type="button" class="btn btn-default border-custom" id="btnMoveToLastPageGridPOLine">
                            <span class="glyphicon glyphicon-fast-forward"></span>
                        </button>
                    </div>
                </div>
            </div>
        </section>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">
                        <h4>Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    @Scripts.Render("~/Scripts/Software-js")
    @Scripts.Render("~/WijmoScripts/Wijmo-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var POs;
        var branches;
        var PODate;
        var PODateNeeded;
        var users;
        var suppliers;
        var terms;

        var POLines;
        var POLineGrid;
        var btnFirstPageGridPOLine;
        var btnPreviousPageGridPOLine;
        var btnNextPageGridPOLine;
        var btnLastPageGridPOLine;
        var btnCurrentPageGridPOLine;
        
        var cboBranch;
        var cboSupplier;
        var cboTerm;
        var cboRequestedBy;
        var cboPreparedBy;
        var cboCheckedBy;
        var cboApprovedBy;

        // ==================
        // GET Purchase by Id
        // ==================
        function getPOById() {
            POs = new wijmo.collections.ObservableArray;
            var POId = @POId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/purchaseOrder/' + POId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        POs.push({
                            Id: Results.Id,
                            BranchId: Results.BranchId,
                            Branch: Results.Branch,
                            PONumber: Results.PONumber,
                            PODate: Results.PODate,
                            SupplierId: Results.SupplierId,
                            Supplier: Results.Supplier,
                            TermId: Results.TermId,
                            Term: Results.Term,
                            ManualRequestNumber: Results.ManualRequestNumber,
                            ManualPONumber: Results.ManualPONumber,
                            DateNeeded: Results.DateNeeded,
                            Remarks: Results.Remarks,
                            IsClose: Results.IsClose,
                            RequestedById: Results.RequestedById,
                            RequestedBy: Results.RequestedBy,
                            PreparedById: Results.PreparedById,
                            PreparedBy: Results.PreparedBy,
                            CheckedById: Results.CheckedById,
                            CheckedBy: Results.CheckedBy,
                            ApprovedById: Results.ApprovedById,
                            ApprovedBy: Results.ApprovedBy,
                            IsLocked: Results.IsLocked,
                            CreatedById: Results.CreatedById,
                            CreatedBy: Results.CreatedBy,
                            CreatedDateTime: Results.CreatedDateTime,
                            UpdatedById: Results.UpdatedById,
                            UpdatedBy: Results.UpdatedBy,
                            UpdatedDateTime: Results.UpdatedDateTime
                        });
                    }

                    document.getElementById('PO_Branch_data').value = Results.BranchId;
                    document.getElementById('PO_Branch_selectedValue').value = Results.Branch;
                    document.getElementById('PO_PONumber').value = Results.PONumber;
                    document.getElementById('PO_Date_data').value = Results.PODate;

                    var PODate_Result = Results.PODate
                    PODate.dispose();
                    PODate = new wijmo.input.InputDate('#PO_Date', {
                        format: 'MM/dd/yyyy',
                        value: new Date(PODate_Result),
                        mask: '99/99/9999',
                        onValueChanged: function () {
                            document.getElementById('PO_Date_data').value = this.value.toLocaleDateString();
                        }
                    });

                    document.getElementById('PO_ManualPONumber').value = Results.ManualPONumber;
                    document.getElementById('PO_Supplier_data').value = Results.SupplierId;
                    document.getElementById('PO_Supplier_selectedValue').value = Results.Supplier;
                    document.getElementById('PO_Term_data').value = Results.TermId;
                    document.getElementById('PO_Term_selectedValue').value = Results.Term;
                    document.getElementById('PO_Remarks').value = Results.Remarks;
                    document.getElementById('PO_RequestNumber').value = Results.ManualRequestNumber;
                    document.getElementById('PO_DateNeeded_data').value = Results.DateNeeded;

                    var PODateNeeded_Result = Results.DateNeeded
                    PODateNeeded.dispose();
                    PODateNeeded = new wijmo.input.InputDate('#PO_DateNeeded', {
                        format: 'MM/dd/yyyy',
                        value: new Date(PODateNeeded_Result),
                        mask: '99/99/9999',
                        onValueChanged: function () {
                            document.getElementById('PO_DateNeeded_data').value = this.value.toLocaleDateString();
                        }
                    });

                    document.getElementById('PO_ClosePO').checked = Results.IsClose;
                    document.getElementById('RequestedBy_data').value = Results.RequestedById;
                    document.getElementById('RequestedBy_selectedValue').value = Results.RequestedBy;
                    document.getElementById('PreparedBy_data').value = Results.PreparedById;
                    document.getElementById('PreparedBy_selectedValue').value = Results.PreparedBy;
                    document.getElementById('CheckedBy_data').value = Results.CheckedById;
                    document.getElementById('CheckedBy_selectedValue').value = Results.CheckedBy;
                    document.getElementById('ApprovedBy_data').value = Results.ApprovedById;
                    document.getElementById('ApprovedBy_selectedValue').value = Results.ApprovedBy;
                    document.getElementById('PO_Lock').checked = Results.IsLocked;

                    document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                    document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                    document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                    document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                    getBranchesForComboBox();
                    getSupplierForComboBox();
                    getTermForComboBox();
                    getUsersForComboBox();
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return POs;
        }

        // ==========================
        // GET Purchase Order Last Id
        // ==========================
        function getPOLastInsertedId() {
            var POs = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/purchaseOrderLastId',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        POs.push({
                            Id: Results.Id,
                            PONumber: Results.PONumber
                        });
                    }
                    window.location = '/Software/PurchaseOrderDetail?POId=' + Results.Id + '&BranchId=' + @branchId;
                    window.setTimeout(function () { location.reload() }, 1000);
                }
            });
            return POs;
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var POId = @POId;
                        if(POId == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + @branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        branches.push({
                                            BranchId: results.Id,
                                            Branch: results.Branch
                                        });
                                    }
                                    document.getElementById('PO_Branch_data').value = results.Id;
                                    document.getElementById('PO_Branch_selectedValue').value = results.Branch;

                                    createCboBranch(branches);
                                }
                            });
                        } else {
                            createCboBranch(branches);
                        }
                    }
                }
            });
            return branches;
        }

        // ======================
        // Combo Box for Branches
        // ======--==============
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#PO_Branch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('PO_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#PO_Branch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });
        }

        // ==========================
        // GET Supplier for Combo Box
        // ==========================
        function getSupplierForComboBox() {
            suppliers = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleByArticleTypeId/3',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            suppliers.push({
                                SupplierId: results[i]["Id"],
                                Supplier: results[i]["Article"]
                            });
                        }
                        createCbosupplier(suppliers);
                    }
                }
            });
            return suppliers;
        }

        // =======================
        // Combo Box for Suppliers
        // =======================
        function createCbosupplier(suppliers) {
            var supplierCollection = new wijmo.collections.CollectionView(suppliers);
            var supplierList = new Array();
            for (var i = 0; i < supplierCollection.items.length; i++) {
                supplierList.push(supplierCollection.items[i].Supplier);
            }

            cboSupplier.dispose();
            cboSupplier = new wijmo.input.ComboBox('#PO_Supplier', {
                placeholder: "Select Supplier",
                itemsSource: supplierList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('PO_Supplier_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#PO_Supplier_data").val(supplierCollection.items[this.selectedIndex].SupplierId);
                }
            });
        }

        // =======================
        // GET Terms for Combo Box
        // =======================
        function getTermForComboBox() {
            terms = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTerm',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            terms.push({
                                TermId: results[i]["Id"],
                                Term: results[i]["Term"]
                            });
                        }
                        createCboTerm(terms);
                    }
                }
            });
            return terms;
        }

        // ===================
        // Combo Box for Terms
        // ===================
        function createCboTerm(terms) {
            var termCollections = new wijmo.collections.CollectionView(terms);
            var termList = new Array();
            for (var i = 0; i < termCollections.items.length; i++) {
                termList.push(termCollections.items[i].Term);
            }

            cboTerm.dispose();
            cboTerm = new wijmo.input.ComboBox('#PO_Term', {
                placeholder: "Select Term",
                itemsSource: termList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('PO_Term_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#PO_Term_data").val(termCollections.items[this.selectedIndex].TermId);
                }
            });
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        var POId = @POId;
                        if(POId == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        users.push({
                                            UserId: results.Id,
                                            UserFullName: results.FullName
                                        });
                                    }

                                    document.getElementById('PreparedBy_data').value = results.Id;
                                    document.getElementById('PreparedBy_selectedValue').value =  results.FullName;

                                    createCboUserRequestedBy(users);
                                    createCboUserPreparedBy(users);
                                    createCboUserCheckedBy(users);
                                    createCboUserApprovedBy(users);
                                }
                            });
                        } else {
                            createCboUserRequestedBy(users);
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);

                        }
                    }
                }
            });
            return users;
        }

        // ==================================
        // Combo Box for Users - Requested By
        // ==================================
        function createCboUserRequestedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboRequestedBy.dispose();
            cboRequestedBy = new wijmo.input.ComboBox('#RequestedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('RequestedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#RequestedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // ==================================
        // Combo Box for Users - Prepared By
        // ==================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#PreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('PreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#PreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // ==================================
        // Combo Box for Users - Checked By
        // ==================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboCheckedBy.dispose();
            cboCheckedBy = new wijmo.input.ComboBox('#CheckedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('CheckedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // ==================================
        // Combo Box for Users - Approved By
        // ==================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            cboApprovedBy.dispose();
            cboApprovedBy = new wijmo.input.ComboBox('#ApprovedBy', {
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('ApprovedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });
        }

        // =====================================================
        // Function with leading zeroes to display the PO Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while(pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // ======
        // ADD PO
        // ======
        function btnSavePO_OnClick() {
            var POObject = new Object();
            var POId = @POId;
            POObject.BranchId = document.getElementById('PO_Branch_data').value;
            POObject.PONumber = document.getElementById('PO_PONumber').value;
            POObject.PODate = document.getElementById('PO_Date_data').value;
            POObject.SupplierId = document.getElementById('PO_Supplier_data').value;
            POObject.TermId = document.getElementById('PO_Term_data').value;
            POObject.ManualRequestNumber = document.getElementById('PO_RequestNumber').value;
            POObject.ManualPONumber = document.getElementById('PO_ManualPONumber').value;
            POObject.DateNeeded = document.getElementById('PO_DateNeeded_data').value;
            POObject.Remarks = document.getElementById('PO_Remarks').value;
            POObject.IsClose = document.getElementById('PO_ClosePO').checked;
            POObject.RequestedById = document.getElementById('RequestedBy_data').value;
            POObject.PreparedById = document.getElementById('PreparedBy_data').value;
            POObject.CheckedById = document.getElementById('CheckedBy_data').value;
            POObject.ApprovedById = document.getElementById('ApprovedBy_data').value;
            var data = JSON.stringify(POObject);

            if( document.getElementById('PO_Branch_data').value == '') {
                document.getElementById("PO_Branch").style.border = "1px solid red";
            } else {
                document.getElementById("PO_Branch").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('PO_Supplier_data').value == '') {
                document.getElementById("PO_Supplier").style.border = "1px solid red";
            } else {
                document.getElementById("PO_Supplier").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('PO_Term_data').value == '') {
                document.getElementById("PO_Term").style.border = "1px solid red";
            } else {
                document.getElementById("PO_Term").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('RequestedBy_data').value == '') {
                document.getElementById("RequestedBy").style.border = "1px solid red";
            } else {
                document.getElementById("RequestedBy").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('CheckedBy_data').value == '') {
                document.getElementById("CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("CheckedBy").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('ApprovedBy_data').value == '') {
                document.getElementById("ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("ApprovedBy").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredPO').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                if (POId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addPurchaseOrder',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdSavePO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdClosePO").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getPOLastInsertedId, 1000)
                            },
                            404: function () {
                                toastr.error("Can't Save");

                                $("#cmdSavePO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdClosePO").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSavePO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdClosePO").prop("disabled", true);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updatePurchaseOrder/' + POId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdSavePO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdClosePO").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");

                                $("#cmdSavePO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdClosePO").prop("disabled", true);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdSavePO").prop("disabled", true);
                                $("#cmdEditPO").prop("disabled", true);
                                $("#cmdPrintPO").prop("disabled", true);
                                $("#cmdClosePO").prop("disabled", true);
                            }
                        }
                    });
                }
            }
        }

        // ==========================================
        // Navigation Buttons for Purchase Order Line
        // ==========================================
        function updateNavigateButtonsPOLine() {
            if (POLines.pageSize <= 0) {
                document.getElementById('navigationPageGridPOLine').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridPOLine').style.display = 'block';
            if (POLines.pageIndex === 0) {
                btnFirstPageGridPOLine.setAttribute('disabled', 'disabled');
                btnPreviousPageGridPOLine.setAttribute('disabled', 'disabled');
                btnNextPageGridPOLine.removeAttribute('disabled');
                btnLastPageGridPOLine.removeAttribute('disabled');
            } else if (POLines.pageIndex === (POLines.pageCount - 1)) {
                btnFirstPageGridPOLine.removeAttribute('disabled');
                btnPreviousPageGridPOLine.removeAttribute('disabled');
                btnLastPageGridPOLine.setAttribute('disabled', 'disabled');
                btnNextPageGridPOLine.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridPOLine.removeAttribute('disabled');
                btnPreviousPageGridPOLine.removeAttribute('disabled');
                btnNextPageGridPOLine.removeAttribute('disabled');
                btnLastPageGridPOLine.removeAttribute('disabled');
            }
            btnCurrentPageGridPOLine.innerHTML = (POLines.pageIndex + 1) + ' / ' + POLines.pageCount;
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            document.getElementById('PO_Branch').disabled = true;
            document.getElementById('PO_PONumber').disabled = true;
            document.getElementById('PO_Lock').disabled = true;
            document.getElementById('currentPage').innerHTML = '<a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Main Menu</a> > ' + ' <a href="@Url.Action("PurchaseOrder", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Purchase Order</a> ' + ' > Purchase Order Detail';

            cboBranch = new wijmo.input.ComboBox('#PO_Branch');

            var d = new Date();
            document.getElementById("PO_Date_data").value = [ d.getMonth()+1, d.getDate(), d.getFullYear()].join('/');
            PODate = new wijmo.input.InputDate('#PO_Date', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('PO_Date_data').value = this.value.toLocaleDateString();
                }
            });
            document.getElementById("PO_DateNeeded_data").value = [ d.getMonth()+1, d.getDate(), d.getFullYear()].join('/');
            PODateNeeded = new wijmo.input.InputDate('#PO_DateNeeded', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('PO_DateNeeded_data').value = this.value.toLocaleDateString();
                }
            });

            cboSupplier = new wijmo.input.ComboBox('#PO_Supplier');
            cboTerm = new wijmo.input.ComboBox('#PO_Term');
            cboRequestedBy  = new wijmo.input.ComboBox('#RequestedBy');
            cboPreparedBy  = new wijmo.input.ComboBox('#PreparedBy');
            cboCheckedBy  = new wijmo.input.ComboBox('#CheckedBy');
            cboApprovedBy  = new wijmo.input.ComboBox('#ApprovedBy');

            getPOById();

            var POId = @POId;
            if(POId == 0) {
                getBranchesForComboBox();
                getSupplierForComboBox();
                getTermForComboBox();
                getUsersForComboBox();

                if(document.getElementById('PO_PONumber').value == 0) {
                    document.getElementById('PO_PONumber_Display').value = "0000000001";
                }

                document.getElementById('PO_PONumber').value = 0;
                //document.getElementById('journalVoucher_No_Display').value = "000-000000";
                var POs = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/purchaseOrderLastPONumber',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            POs.push({
                                Id: Results.Id,
                                PONumber: Results.PONumber
                            });
                        }
                        var PO_Number = parseInt(Results.PONumber);
                        var PO_Number_PlusOne = 0000000001;
                        var PO_Num_Results = PO_Number + PO_Number_PlusOne;
                        //var JV_Number_Display = JV_Num_Results.toString().replace(/(\d{3})(\d+)/, '$1-$2');

                        document.getElementById('PO_PONumber').value = zerofill(PO_Num_Results, 10);
                        document.getElementById('PO_PONumber_Display').value = zerofill(PO_Num_Results, 10);
                    }
                });
            }

            POLines = new wijmo.collections.CollectionView();
            POLines.canFilter = true;
            POLines.pageSize = 15;

            var filterTextPOLine = '';
            $('#InputFilterPOLine').keyup(function () {
                filterTextPOLine = this.value.toLowerCase();
                POLines.refresh();
            });
            POLines.filter = function (item) {
                return !filterTextPOLine || (item.POLines.toLowerCase().indexOf(filterTextPOLine) > -1);
            }
            POLines.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsPOLine();
            });
            //POLines.currentChanged.addHandler(function (sender, args) {
            //    updateDetailsPOLine();
            //});

            // Flex Grid for Purchase Order Line
            POLineGrid = new wijmo.grid.FlexGrid('#POGrid');
            POLineGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Item",
                                //"binding": "Branch",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*",
                            },
                            {
                                "header": "Particulars",
                                //"binding": "BranchCode",
                                "align": "left",
                                "allowSorting": true,
                                "width": "4*"
                            },
                            {
                                "header": "Quantity",
                                //"binding": "Address",
                                "align": "left",
                                "allowSorting": true,
                                "width": "1*"
                            },
                            {
                                "header": "Unit",
                                //"binding": "ContactNumber",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Cost",
                                //"binding": "TaxNumber",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            },
                            {
                                "header": "Amount",
                                //"binding": "TaxNumber",
                                "align": "left",
                                "allowSorting": true,
                                "width": "2*"
                            }
                ],
                autoGenerateColumns: false,
                //itemsSource: branches,
                isReadOnly: true,
                //frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            POLineGrid.trackChanges = true;

            //Navigation button for Purchase Order Line
            btnFirstPageGridPOLine = document.getElementById('btnMoveToFirstPageGridPOLine');
            btnPreviousPageGridPOLine = document.getElementById('btnMoveToPreviousPageGridPOLine');
            btnNextPageGridPOLine = document.getElementById('btnMoveToNextPageGridPOLine');
            btnLastPageGridPOLine = document.getElementById('btnMoveToLastPageGridPOLine');
            btnCurrentPageGridPOLine = document.getElementById('btnCurrentPageGridPOLine');

            updateNavigateButtonsPOLine();

            btnFirstPageGridPOLine.addEventListener('click', function () {
                POLines.moveToFirstPage();
                updateNavigateButtonsPOLine();
            });
            btnPreviousPageGridPOLine.addEventListener('click', function () {
                POLines.moveToPreviousPage();
                updateNavigateButtonsPOLine();
            });
            btnNextPageGridPOLine.addEventListener('click', function () {
                POLines.moveToNextPage();
                updateNavigateButtonsPOLine();
            });
            btnLastPageGridPOLine.addEventListener('click', function () {
                POLines.moveToLastPage();
                updateNavigateButtonsPOLine();
            });
        });
    </script>
</body>
</html>