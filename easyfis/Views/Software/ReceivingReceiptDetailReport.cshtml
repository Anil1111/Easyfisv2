<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Receiving Receipt Detail Report</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Receiving Receipt Detail Report 
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; @ViewData["Branch"]
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control " id="InputFilter" placeholder="Search">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 40%" align="right">
                                    <button onclick="receivingReceiptDetailReportCSV_OnClick()" class="btn btn-primary "><i class="fa fa-file-excel-o" aria-hidden="true"></i> CSV</button>
                                    <button onclick="receivingReceiptDetailReportPDF_OnClick()" class="btn btn-primary "><i class="fa fa-print"></i> Print</button>
                                    <a href="/Software/AccountsPayable" class="btn btn-danger "><i class="fa fa-close"></i> Close</a>
                                </td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group ">
                                        <span class="input-group-addon">Date:</span>
                                        <input type="text" class="form-control " id="dateFrom" placeholder="filter date" disabled>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 20%" align="right"></td>
                                <td style="width: 20%"></td>
                            </tr>
                        </table>
                    </div>
                    <div class="panel-body">
                        <div id="receivingReceiptDetailReportGrid" class="grid"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6"></div>
                    <div class="col-md-6">
                        <table class="table table-responsive table-bordered">
                            <tr>
                                <td align="right">
                                    <b>Total: </b>
                                </td>
                                <td style="padding-left: 10px" align="right">
                                    <span id="total">NA</span>
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        function receivingReceiptDetailReportPDF_OnClick() {
            window.location.href = '/RepReceivingReceiptDetailReport/ReceivingReceiptDetailReport?StartDate=' + getParam("StartDate") + '&EndDate=' + getParam("EndDate");
        }

        function getReceivingReceiptDetailReport() {
            var receivingReceiptDetailReport = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/ReceivingReceiptDetailReport/list/' + getParam("StartDate") + '/' + getParam("EndDate"),
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (receivingReceiptDetailReportResults) {
                    if (receivingReceiptDetailReportResults.length > 0) {
                        var totalAmount = 0;

                        for (i = 0; i < receivingReceiptDetailReportResults.length; i++) {
                            var docLink = "/Software/ReceivingReceiptDetail?ReceivingReceiptId=" + receivingReceiptDetailReportResults[i]["RRId"];
                            // Array Push
                            receivingReceiptDetailReport.push({


                                RRId: receivingReceiptDetailReportResults[i]["RRId"],
                                Id: receivingReceiptDetailReportResults[i]["Id"],
                                RRDate: receivingReceiptDetailReportResults[i]["RRDate"],
                                RR: receivingReceiptDetailReportResults[i]["RR"],
                                RRForCSV: "RR-" + receivingReceiptDetailReportResults[i]["RR"],
                                RRButton: "<a href='" + docLink + "' class='btn btn-default btn-xs btn-block' style='text-align: left'>" + receivingReceiptDetailReportResults[i]["RR"],
                                PO: receivingReceiptDetailReportResults[i]["PO"],
                                POForCSV: "PO-" + receivingReceiptDetailReportResults[i]["PO"],
                                Item: receivingReceiptDetailReportResults[i]["Item"],
                                Price: receivingReceiptDetailReportResults[i]["Price"],
                                Unit: receivingReceiptDetailReportResults[i]["Unit"],
                                Quantity: receivingReceiptDetailReportResults[i]["Quantity"],
                                Cost: receivingReceiptDetailReportResults[i]["Cost"],
                                Amount: receivingReceiptDetailReportResults[i]["Amount"],
                                Branch: receivingReceiptDetailReportResults[i]["Branch"]
                            });

                            totalAmount += receivingReceiptDetailReportResults[i]["Amount"];
                        }

                        document.getElementById("total").innerHTML = totalAmount.toLocaleString();
                    }
                    NProgress.done();
                }
            });

            return receivingReceiptDetailReport;
        }

        var receivingReceiptDetailReportCollection;

        function receivingReceiptDetailReportCSV_OnClick() {
            var CSV = '';
            var receivingReceiptDetailReport = [];
            var fileName = 'ReceivingReceiptDetailReport.CSV';

            for (i = 0; i < receivingReceiptDetailReportCollection.items.length; i++) {
                receivingReceiptDetailReport.push({
                    RR: receivingReceiptDetailReportCollection.items[i].RRForCSV,
                    RRDate: receivingReceiptDetailReportCollection.items[i].RRDate,
                    PO: receivingReceiptDetailReportCollection.items[i].POForCSV,
                    Item: receivingReceiptDetailReportCollection.items[i].Item,
                    Price: receivingReceiptDetailReportCollection.items[i].Price,
                    Unit: receivingReceiptDetailReportCollection.items[i].Unit,
                    Quantity: receivingReceiptDetailReportCollection.items[i].Quantity,
                    Branch: receivingReceiptDetailReportCollection.items[i].Branch,
                    Amount: receivingReceiptDetailReportCollection.items[i].Amount,


                });
            }

            //for (var i = 0; i < symbols.length; i++) {
            //    CSV += '"' + symbols[i].AccountCode + '"\r\n';
            //}

            // Rows
            var Headers = [];
            Headers.push({

                RR: "RR Number",
                RRDate: "RR Date",
                PO: "PO Number",
                Item: "Item",
                Price: "Price",
                Unit: "Unit",
                Quantity: "Quantity",
                Branch: "Branch",
                Amount: "Amount",

            });

            var header = '';
            // Rows
            for (var b in Headers[0]) {
                header += '"' + Headers[0][b] + '",';
            }

            CSV = header + '\r\n';
            for (var i = 0; i < receivingReceiptDetailReport.length; i++) {
                var row = '';
                for (var a in receivingReceiptDetailReport[i]) {
                    row += '"' + receivingReceiptDetailReport[i][a] + '",';
                }
                row.slice(0, row.length - 1);
                CSV += row + '\r\n';
            }

            if (CSV == '') {
                toastr.error("No data.");
            } else {
                var link = document.createElement("a");

                if (link.download !== undefined) {
                    var blob = new Blob([CSV], { type: 'text/csv;charset=utf-8;' });
                    var url = URL.createObjectURL(blob);
                    link.setAttribute("href", url);
                    link.setAttribute("download", fileName);
                    link.style = "visibility:hidden";
                }

                if (navigator.msSaveBlob) {
                    link.addEventListener("click", function (event) {
                        var blob = new Blob([CSV], {
                            "type": "text/csv;charset=utf-8;"
                        });
                        navigator.msSaveBlob(blob, fileName);
                    }, false);
                }

                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);

                toastr.success("Dowload successful.");
            }
        }

        $(document).ready(function () {
            NProgress.start();
            document.getElementById("dateFrom").value = "Date from " + getParam("StartDate") + " to " + getParam("EndDate");

            receivingReceiptDetailReportCollection = new wijmo.collections.CollectionView(getReceivingReceiptDetailReport());
            receivingReceiptDetailReportCollection.canFilter = true;

            var filterText = '';
            $('#InputFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                receivingReceiptDetailReportCollection.refresh();
            });
            receivingReceiptDetailReportCollection.filter = function (item) {
                return !filterText || (item.RR.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.PO.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Item.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Unit.toLowerCase().indexOf(filterText) > -1)
                    || !filterText || (item.Branch.toLowerCase().indexOf(filterText) > -1)

            }
            // Flex Grid
            var receivingReceiptDetailReportGrid = new wijmo.grid.FlexGrid('#receivingReceiptDetailReportGrid');
            receivingReceiptDetailReportGrid.initialize({
                columns: [
                    {
                        "header": "RR Number ",
                        "binding": "RRButton",
                        "isContentHtml": true,
                        "allowSorting": true,
                        "width": 110
                    },
                    {
                        "header": "RR Date",
                        "binding": "RRDate",
                        "allowSorting": true,
                        "width": 100
                    },
                    {
                        "header": "PO Number ",
                        "binding": "PO",
                        "allowSorting": true,
                        "width": 110
                    },
                    {
                        "header": "Item",
                        "binding": "Item",
                        "allowSorting": true,
                        "width": 200
                    },
                    {
                        "header": "Price",
                        "binding": "Price",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 120
                    },
                    {
                        "header": "Quantity",
                        "binding": "Quantity",
                        "allowSorting": true,
                        "width": 150
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": 200
                    },
                    {
                        "header": "Amount",
                        "binding": "Amount",
                        "allowSorting": true,
                        "width": 150
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: receivingReceiptDetailReportCollection,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            receivingReceiptDetailReportGrid.trackChanges = true;
        });

    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>


</body>
</html>