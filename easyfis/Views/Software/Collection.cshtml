@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Collection</title>

    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")

            <section class="content-header">
                <div class="container">
                    <h3>
                        Collection
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">

                    <!--
                        ===============
                        Search / Filter
                        ===============
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 59%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                        <input type="text" class="form-control" id="inpCollectionSearchFilter" placeholder="Search...">
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 40%" align="right">
                                    @{
                                        if (canAdd)
                                        {
                                            <button class="btn btn-primary" id="btnCollectionAdd" onclick="btnCollectionAddOnclick()"><i class="fa fa-plus"></i> Add</button>
                                        }
                                    }
                                    <button class="btn btn-danger" id="btnCollectionClose" onclick="btnCollectionCloseOnclick()"><i class=" fa fa-times"></i> Close</button>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        ==================
                        Date Range Filters
                        ==================
                    -->
                    <div class="panel-heading">
                        <table style="width: 100%" border="0">
                            <tr>
                                <td style="width: 29%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>Start Date</b></span>
                                        <div id="cboCollectionStartDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 1%"></td>
                                <td style="width: 29%">
                                    <div class="input-group ">
                                        <span class="input-group-addon"><b>End Date</b></span>
                                        <div id="cboCollectionEndDateFilter"></div>
                                    </div>
                                </td>
                                <td style="width: 41%"></td>
                            </tr>
                        </table>
                    </div>

                    <!--
                        =========
                        Flex Grid
                        =========
                    -->
                    <div class="panel-body">
                        <div id="collectionFlexGrid" class="grid" align="left"></div>
                    </div>

                    <!--
                        ==================
                        Navigation Buttons
                        ==================
                    -->
                    <div class="panel-footer">
                        <div class="row">
                            <div class="btn-group col-md-7" id="collectionNavigationPageGrid">
                                <button type="button" class="btn btn-default border-custom" id="btnCollectionMoveToFirstPageGrid">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnCollectionMoveToPreviousPageGrid">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" disabled style="width: 100px" id="btnCollectionCurrentPageGrid"></button>
                                <button type="button" class="btn btn-default border-custom" id="btnCollectionMoveToNextPageGrid">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default border-custom" id="btnCollectionMoveToLastPageGrid">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!--
                    ==========
                    User Stamp
                    ==========
                -->
                <div class="panel panel-default">
                    <div class="panel-heading">
                        User stamp
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p>Created by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="createdBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="createdDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                            <div class="col-md-6">
                                <p>Updated by:</p>
                                <div style="padding-left: 10px;">
                                    <i class="fa fa-key fa-fw"></i> <label id="updatedBy">NA</label>
                                    <br />
                                    <small><i class="fa fa-calendar fa-fw"></i> &nbsp;<span id="updatedDate">mm/dd/yyyy</span></small>
                                </div>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </section>

            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!--
        =================================
        Collection Confirm Delete (Modal)
        =================================
    -->
    <div class="modal fade" id="collectionConfirmDeleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete</h4>
                </div>
                <div class="modal-body">
                    Delete Collection?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger" id="btnCollecionConfirmDelete" onclick="btnCollectionConfirmDeleteOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button class="btn btn-primary" id="btnCollectionConfirmDeleteCloseModal" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // =============================
        // Collection Date Range Filters
        // =============================
        var cboCollectionStartDateFilter = new wijmo.input.InputDate('#cboCollectionStartDateFilter');
        var cboCollectionEndDateFilter = new wijmo.input.InputDate('#cboCollectionEndDateFilter');
        var isCboCollectionStartDateFilterSelected = true;
        var isCboCollectionEndDateFilterSelected = true;

        // ========================================
        // Collection Collection View and Flex Grid
        // ========================================
        var collectionCollectionView;
        var collectionFlexGrid;

        // =============================
        // Collection Navigation Buttons
        // =============================
        var btnCollectionMoveToFirstPageGrid = document.getElementById('btnCollectionMoveToFirstPageGrid');
        var btnCollectionMoveToPreviousPageGrid = document.getElementById('btnCollectionMoveToPreviousPageGrid');
        var btnCollectionMoveToNextPageGrid = document.getElementById('btnCollectionMoveToNextPageGrid');
        var btnCollectionMoveToLastPageGrid = document.getElementById('btnCollectionMoveToLastPageGrid');
        var btnCollectionCurrentPageGrid = document.getElementById('btnCollectionCurrentPageGrid');

        // ===============================
        // Create Combo Date Range Filters
        // ===============================
        function createCboDateRangeFilters() {
            cboCollectionStartDateFilter.dispose();
            cboCollectionStartDateFilter = new wijmo.input.InputDate('#cboCollectionStartDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                onValueChanged: function () {
                    if (!isCboCollectionStartDateFilterSelected) {
                        refreshCollectionFlexGrid();
                    } else {
                        isCboCollectionStartDateFilterSelected = false;
                    }
                }
            });

            cboCollectionEndDateFilter.dispose();
            cboCollectionEndDateFilter = new wijmo.input.InputDate('#cboCollectionEndDateFilter', {
                format: 'MM-dd-yyyy',
                value: new Date(),
                onValueChanged: function () {
                    if (!isCboCollectionEndDateFilterSelected) {
                        refreshCollectionFlexGrid();
                    } else {
                        isCboCollectionEndDateFilterSelected = false;
                    }
                }
            });
        }

        // ===================
        // Get Collection Data
        // ===================
        function getCollectionData() {
            NProgress.start();
            var startDate = cboCollectionStartDateFilter.value.toLocaleDateString().replace(/\//g, '-');
            var endDate = cboCollectionEndDateFilter.value.toLocaleDateString().replace(/\//g, '-');

            var collectionsObservableArray = new wijmo.collections.ObservableArray;

            $.ajax({
                url: '/api/collection/list/' + startDate + '/' + endDate,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            var ORDateResult = new Date(results[i]["ORDate"])
                            var ORDate = ('0' + (ORDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + ORDateResult.getDate()).slice(-2) + '-' + ORDateResult.getFullYear();

                            collectionsObservableArray.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' id='collectionEditButton' onclick='btnCollectionEditOnclick()'><i class='fa fa-edit'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnCollectionDeleteOnclick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: results[i]["Id"],
                                ORNumber: results[i]["ORNumber"],
                                ORDate: ORDate,
                                ManualORNumber: results[i]["ManualORNumber"],
                                Customer: results[i]["Customer"],
                                Particulars: results[i]["Particulars"],
                                Amount: results[i]["Amount"],
                                AmountDisplay: parseFloat(results[i]["Amount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                IsLocked: results[i]["IsLocked"],
                                CreatedBy: results[i]["CreatedBy"],
                                CreatedDateTime: results[i]["CreatedDateTime"],
                                UpdatedBy: results[i]["UpdatedBy"],
                                UpdatedDateTime: results[i]["UpdatedDateTime"]
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return collectionsObservableArray;
        }

        // ===========================
        // Create Collection Flex Gird
        // ===========================
        function createCollectionFlexGrid() {
            createCboDateRangeFilters();

            collectionCollectionView = new wijmo.collections.CollectionView(getCollectionData());
            collectionCollectionView.canFilter = true;
            collectionCollectionView.pageSize = 15;

            var filterText = '';
            $('#inpCollectionSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                collectionCollectionView.refresh();
            });

            collectionCollectionView.filter = function (item) {
                return !filterText || (item.ORNumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualORNumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || (item.Customer.toLowerCase().indexOf(filterText) > -1);
            }

            collectionCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateCollectionNavigationButtons();
            });

            collectionCollectionView.currentChanged.addHandler(function (sender, args) {
                updateCollectionDetailsFlexGridSelection();
            });

            collectionFlexGrid = new wijmo.grid.FlexGrid('#collectionFlexGrid');
            collectionFlexGrid.initialize({
                columns: [
                            @{
                                if (canEdit)
                                {
                                    <text>
                                        {
                                            "header": "Edit",
                                            "binding": "EditId",
                                            "width": 70,
                                            "align": "center",
                                            "allowResizing": false,
                                            "allowSorting": false,
                                            "isContentHtml": true
                                        },
                                    </text>
                                }
                                if (canDelete)
                                {
                                    <text>
                                        {
                                            "header": "Delete",
                                            "binding": "DeleteId",
                                            "width": 70,
                                            "align": "center",
                                            "allowResizing": false,
                                            "allowSorting": false,
                                            "isContentHtml": true
                                        },
                                    </text>
                                }
                            }
                            {
                                "header": "OR Number",
                                "binding": "ORNumber",
                                "allowSorting": true,
                                "width": 100
                            },
                            {
                                "header": "OR Date",
                                "binding": "ORDate",
                                "allowSorting": true,
                                "width": 90
                            },
                            {
                                "header": "Manual OR No.",
                                "binding": "ManualORNumber",
                                "allowSorting": true,
                                "width": 120
                            },
                            {
                                "header": "Customer",
                                "binding": "Customer",
                                "allowSorting": true,
                                "width": "2.5*"
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": "2.5*"
                            },
                            {
                                "header": "Amount",
                                "binding": "AmountDisplay",
                                "allowSorting": true,
                                "align": "right",
                                "width": "2*"
                            },
                            {
                                "header": "L",
                                "binding": "IsLocked",
                                "allowSorting": true,
                                "width": 50
                            }
                ],
                autoGenerateColumns: false,
                itemsSource: collectionCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            collectionFlexGrid.trackChanges = true;

            updateCollectionNavigationButtons();

            btnCollectionMoveToFirstPageGrid.addEventListener('click', function () {
                collectionCollectionView.moveToFirstPage();
                updateCollectionNavigationButtons();
            });

            btnCollectionMoveToPreviousPageGrid.addEventListener('click', function () {
                collectionCollectionView.moveToPreviousPage();
                updateCollectionNavigationButtons();
            });

            btnCollectionMoveToNextPageGrid.addEventListener('click', function () {
                collectionCollectionView.moveToNextPage();
                updateCollectionNavigationButtons();
            });

            btnCollectionMoveToLastPageGrid.addEventListener('click', function () {
                collectionCollectionView.moveToLastPage();
                updateCollectionNavigationButtons();
            });
        }

        // =============================================
        // Update Collection Details Flex Grid Selection
        // =============================================
        function updateCollectionDetailsFlexGridSelection() {
            var item = collectionCollectionView.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ====================================
        // Update Collection Navigation Buttons
        // ====================================
        function updateCollectionNavigationButtons() {
            if (collectionCollectionView.pageSize <= 0) {
                document.getElementById('collectionNavigationPageGrid').style.display = 'none';
                return;
            }
            document.getElementById('collectionNavigationPageGrid').style.display = 'block';
            if (collectionCollectionView.pageIndex === 0) {
                btnCollectionMoveToFirstPageGrid.setAttribute('disabled', 'disabled');
                btnCollectionMoveToPreviousPageGrid.setAttribute('disabled', 'disabled');
                btnCollectionMoveToNextPageGrid.removeAttribute('disabled');
                btnCollectionMoveToLastPageGrid.removeAttribute('disabled');
            } else if (collectionCollectionView.pageIndex === (collectionCollectionView.pageCount - 1)) {
                btnCollectionMoveToFirstPageGrid.removeAttribute('disabled');
                btnCollectionMoveToPreviousPageGrid.removeAttribute('disabled');
                btnCollectionMoveToLastPageGrid.setAttribute('disabled', 'disabled');
                btnCollectionMoveToNextPageGrid.setAttribute('disabled', 'disabled');
            } else {
                btnCollectionMoveToFirstPageGrid.removeAttribute('disabled');
                btnCollectionMoveToPreviousPageGrid.removeAttribute('disabled');
                btnCollectionMoveToNextPageGrid.removeAttribute('disabled');
                btnCollectionMoveToLastPageGrid.removeAttribute('disabled');
            }
            btnCollectionCurrentPageGrid.innerHTML = (collectionCollectionView.pageIndex + 1) + ' / ' + collectionCollectionView.pageCount;
        }

        // ============================
        // Refresh Collection Flex Grid
        // ============================
        function refreshCollectionFlexGrid() {
            collectionCollectionView = new wijmo.collections.CollectionView(getCollectionData());
            collectionCollectionView.canFilter = true;
            collectionCollectionView.pageSize = 15;

            var filterText = '';
            $('#inpCollectionSearchFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                collectionCollectionView.refresh();
            });

            collectionCollectionView.filter = function (item) {
                return !filterText || (item.ORNumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.ManualORNumber.toLowerCase().indexOf(filterText) > -1)
                    || (item.Particulars.toLowerCase().indexOf(filterText) > -1)
                    || (item.Customer.toLowerCase().indexOf(filterText) > -1);
            }

            collectionCollectionView.collectionChanged.addHandler(function (sender, args) {
                updateCollectionNavigationButtons();
            });

            collectionCollectionView.currentChanged.addHandler(function (sender, args) {
                updateCollectionDetailsFlexGridSelection();
            });

            collectionFlexGrid.itemsSource = collectionCollectionView;
            collectionFlexGrid.trackChanges = true;
        }

        // ==============
        // Add Collection
        // ==============
        function btnCollectionAddOnclick() {
            document.getElementById('btnCollectionAdd').innerHTML = "<i class='fa fa-plus'></i> Adding...";
            $('#btnCollectionAdd').prop('disabled', true);
            $('#btnCollectionClose').prop('disabled', true);

            $.ajax({
                type: "POST",
                url: '/api/collection/add',
                contentType: "application/json; charset=utf-8",
                statusCode: {
                    200: function (id) {
                        window.location = '/Software/CollectionDetail?id=' + id;
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnCollectionAdd').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnCollectionAdd').prop('disabled', false);
                        $('#btnCollectionClose').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnCollectionAdd').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnCollectionAdd').prop('disabled', false);
                        $('#btnCollectionClose').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnCollectionAdd').innerHTML = "<i class='fa fa-plus'></i> Add";
                        $('#btnCollectionAdd').prop('disabled', false);
                        $('#btnCollectionClose').prop('disabled', false);
                    }
                }
            });
        }

        // ===============
        // Edit Collection
        // ===============
        function btnCollectionEditOnclick() {
            collectionCollectionView.editItem(collectionCollectionView.currentItem);
            var collection = collectionCollectionView.currentEditItem;
            var collectionId = collection.Id;
            window.location = '/Software/CollectionDetail?id=' + collectionId;
        }

        // =================
        // Delete Collection
        // =================
        function btnCollectionDeleteOnclick() {
            collectionCollectionView.editItem(collectionCollectionView.currentItem);
            var collection = collectionCollectionView.currentEditItem;
            if (collection.IsLocked) {
                toastr.error("Delete is not allowed when the selected record is locked!");
            } else {
                $('#collectionConfirmDeleteModal').modal({
                    show: true,
                    backdrop: 'static'
                });

                document.getElementById('btnCollecionConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                $("#btnCollecionConfirmDelete").prop("disabled", false);
                $("#btnCollectionConfirmDeleteCloseModal").prop("disabled", false);
            }
        }

        // =========================
        // Confirm Delete Collection
        // =========================
        function btnCollectionConfirmDeleteOnclick() {
            document.getElementById('btnCollecionConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Deleting...";
            $("#btnCollecionConfirmDelete").prop("disabled", true);
            $("#btnCollectionConfirmDeleteCloseModal").prop("disabled", true);

            collectionCollectionView.editItem(collectionCollectionView.currentItem);
            var id = collectionCollectionView.currentEditItem.Id;

            $.ajax({
                url: '/api/collection/delete/' + id,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#collectionConfirmDeleteModal').modal('hide');
                        refreshCollectionFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnCollecionConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnCollecionConfirmDelete").prop("disabled", false);
                        $("#btnCollectionConfirmDeleteCloseModal").prop("disabled", false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnCollecionConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnCollecionConfirmDelete").prop("disabled", false);
                        $("#btnCollectionConfirmDeleteCloseModal").prop("disabled", false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnCollecionConfirmDelete').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $("#btnCollecionConfirmDelete").prop("disabled", false);
                        $("#btnCollectionConfirmDeleteCloseModal").prop("disabled", false);
                    }
                }
            });
        }

        // ================
        // Close Collection
        // ================
        function btnCollectionCloseOnclick() {
            window.location = '/Software';
        }

        // =============================
        // Document Ready - On load Page
        // =============================
        $(document).ready(function () {
            createCollectionFlexGrid();
        });
    </script>
    <script type="text/javascript">
        // =================
        // User Branch Combo
        // =================
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');

        // =========================
        // Get Current User Branches
        // =========================
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        // ==========================
        // Update Current User Branch
        // ==========================
        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
    <script type="text/javascript">
        // ======================
        // Side Bar Menu Settings
        // ======================
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>