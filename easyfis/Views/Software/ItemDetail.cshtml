@{
    var branchId = Request.QueryString["BranchId"];
    var itemId = Request.QueryString["ItemId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Item Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Font-Awesome/css")
    @Styles.Render("~/Content/Software-css")
    @Styles.Render("~/WijmoCSS/Wijmo-css")
</head>
<body>
    <div id="wrapper" class="wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <br /><br /><br />
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        @*<h4><img src='~/images/Icons/iItems.png'> Item Detail</h4>*@
                        <h4><i class="fa fa-cart-arrow-down fa-2x"></i> Item Detail</h4>
                        <br />
                        <div class="div_Current_Page">
                            @*<label id="currentBranchName"></label>*@
                            <span id="currentPage"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="itemDetailLabel"></h4>
                    </div>
                    <div class="col-md-6" align="right">
                        <button class="btn btn-primary btn-sm" id="item_saveSaveItem" onclick="itemSaveItemButton_OnClick()"><i class="fa fa-save"></i> Save and Lock</button>
                        <button class="btn btn-primary btn-sm" id="item_saveItem"><i class="fa fa-save"></i> Save</button>
                        <button class="btn btn-primary btn-sm" id="item_editItem" onclick="itemEditButton_OnClick()"><i class="fa fa-edit"></i> Edit</button>
                        <button class="btn btn-primary btn-sm" id="item_printItem" onclick="window.location.href ='@Url.Action("ItemPDF", "Software", new { ItemId = itemId })'"><i class="fa fa-print"></i> Print</button>
                        <button onclick="window.location.href = '@Url.Action("Items", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="item_closeItem"><i class="fa fa-times"></i> Close</button>
                    </div>
                </div>
                @*<hr />*@
                <div class="well">
                    <form class="form-horizontal" role="form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Code:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm" id="articleItem_code" />
                                        <input type="hidden" id="articleItem_code_data" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Manual Code:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm" id="articleItem_manualCode" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Item:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm" id="articleItem_item" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Item Group:</label>
                                    <div class="col-sm-8">
                                        <div type="text" class="comboBox-wide" id="articleItem_itemGroup"></div>

                                        <input type="hidden" id="articleItem_itemGroup_data" />
                                        <input type="hidden" id="articleItem_itemGroup_SelectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Category:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm" id="articleItem_category">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Unit:</label>
                                    <div class="col-sm-8">
                                        <div type="text" class="comboBox-wide" id="articleItem_unit"></div>

                                        <input type="hidden" id="articleItem_unit_data" />
                                        <input type="hidden" id="articleItem_unit_SelectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Price:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm" id="articleItem_price">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Particulars:</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control textarea-custom" id="articleItem_particulars"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Input Tax:</label>
                                    <div class="col-sm-8">
                                        <div type="text" class="comboBox-wide" id="articleItem_inputTax"></div>

                                        <input type="hidden" id="articleItem_inputTax_data" />
                                        <input type="hidden" id="articleItem_inputTax_SelectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Output Tax:</label>
                                    <div class="col-sm-8">
                                        <div type="text" class="comboBox-wide" id="articleItem_outputTax"></div>

                                        <input type="hidden" id="articleItem_outputTax_data" />
                                        <input type="hidden" id="articleItem_outputTax_SelectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Withholding Tax:</label>
                                    <div class="col-sm-8">
                                        <div type="text" class="comboBox-wide" id="articleItem_withholdingTax"></div>

                                        <input type="hidden" id="articleItem_withholdingTax_data" />
                                        <input type="hidden" id="articleItem_withholdingTax_SelectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Inventory:</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" id="articleItem_Inventory">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Old Manual Code:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm" id="articleItem_oldManualCode">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Manual Cost:</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm" id="articleItem_manualCost">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Lock:</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" class="checkbox_custom" id="isLocked_Status" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-sm-4"></div>
                                    <div class="col-sm-8">
                                        <input type="hidden" id="Item_IsLocked">
                                        <input type="hidden" id="Item_IsLocked_defaultTrue">
                                        <input type="hidden" id="Item_IsLocked_defaultFalse">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>

                <ul class="nav nav-tabs " role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#UnitConversion" id="unitConvertionTabId">Unit Conversion</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#Component" id="componentTabId">Component</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#Price" id="priceTabId">Price</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#Inventory" id="inventoryTabId">Inventory</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#GLAccount" id="glAccountTabId">GL Account</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#FixedAsset" id="fixedAssetId">Fixed Asset</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="UnitConversion" class="tab-pane fade in active">
                        <!-- UnitConversion List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Unit Conversion</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterAccount" placeholder="Search">
                                </div>
                            </div>
                            @*<div class="col-lg-8" align="right">
                    <button class="btn btn-primary btn-sm" onclick="cmdAddNewAccount_OnClick()"><i class="fa fa-plus"></i> Add</button>
                    <button onclick="window.location.href = '@Url.Action("Index", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="cmdCloseButtonChartOfAccounts"><i class="fa fa-times"></i> Close</button>
                </div>*@
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="AccountGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGridAccount">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridAccount">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridAccount"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridAccount">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="Component" class="tab-pane fade in active">
                        <!-- Component List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Component</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterAccount" placeholder="Search">
                                </div>
                            </div>
                            @*<div class="col-lg-8" align="right">
                    <button class="btn btn-primary btn-sm" onclick="cmdAddNewAccount_OnClick()"><i class="fa fa-plus"></i> Add</button>
                    <button onclick="window.location.href = '@Url.Action("Index", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="cmdCloseButtonChartOfAccounts"><i class="fa fa-times"></i> Close</button>
                </div>*@
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="AccountGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGridAccount">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridAccount">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridAccount"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridAccount">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="Price" class="tab-pane fade in active">
                        <!-- Price List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Price</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterAccount" placeholder="Search">
                                </div>
                            </div>
                            @*<div class="col-lg-8" align="right">
                    <button class="btn btn-primary btn-sm" onclick="cmdAddNewAccount_OnClick()"><i class="fa fa-plus"></i> Add</button>
                    <button onclick="window.location.href = '@Url.Action("Index", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="cmdCloseButtonChartOfAccounts"><i class="fa fa-times"></i> Close</button>
                </div>*@
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="AccountGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGridAccount">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridAccount">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridAccount"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridAccount">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="Inventory" class="tab-pane fade in active">
                        <!-- Inventory List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Inventory</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterAccount" placeholder="Search">
                                </div>
                            </div>
                            @*<div class="col-lg-8" align="right">
                    <button class="btn btn-primary btn-sm" onclick="cmdAddNewAccount_OnClick()"><i class="fa fa-plus"></i> Add</button>
                    <button onclick="window.location.href = '@Url.Action("Index", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="cmdCloseButtonChartOfAccounts"><i class="fa fa-times"></i> Close</button>
                </div>*@
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="AccountGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGridAccount">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridAccount">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridAccount"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridAccount">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="GLAccount" class="tab-pane fade in active">
                        <!-- GL Account List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>GL Account</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterAccount" placeholder="Search">
                                </div>
                            </div>
                            @*<div class="col-lg-8" align="right">
                    <button class="btn btn-primary btn-sm" onclick="cmdAddNewAccount_OnClick()"><i class="fa fa-plus"></i> Add</button>
                    <button onclick="window.location.href = '@Url.Action("Index", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="cmdCloseButtonChartOfAccounts"><i class="fa fa-times"></i> Close</button>
                </div>*@
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="AccountGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGridAccount">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridAccount">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridAccount"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridAccount">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                    <div id="FixedAsset" class="tab-pane fade in active">
                        <!-- Fixed Asset List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Fixed Asset</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterAccount" placeholder="Search">
                                </div>
                            </div>
                            @*<div class="col-lg-8" align="right">
                    <button class="btn btn-primary btn-sm" onclick="cmdAddNewAccount_OnClick()"><i class="fa fa-plus"></i> Add</button>
                    <button onclick="window.location.href = '@Url.Action("Index", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="cmdCloseButtonChartOfAccounts"><i class="fa fa-times"></i> Close</button>
                </div>*@
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="AccountGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="naviagtionPageGridAccount">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridAccount">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridAccount"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridAccount">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridAccount">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
        </section>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">
                        <h4>Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    @Scripts.Render("~/Scripts/Software-js")
    @Scripts.Render("~/WijmoScripts/Wijmo-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var items;

        var articleItemGroups;
        var articleItemUnits;
        var taxTypes;

        var cboArticleGroupForItem;
        var cboArticleUnitForItem;
        var cboArticleInputTaxTypeForItem;
        var cboArticleOutputTaxTypeForItem;
        var cboArticleWithholdingTaxTypeForItem;


        // ==============================
        // Get Article for item by its ID
        // ==============================
        function getArticleItemById() {
            $('#loadingModal').modal('show');
            var items = new wijmo.collections.ObservableArray;
            var articleId = @itemId;
            $.ajax({
                url: '/api/article/' +  articleId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        items.push ({
                            Id: Results.Id,
                            ArticleCode : Results.ArticleCode,
                            ManualArticleCode : Result.ManualArticleCode,
                            Article : Results.Article,
                            Category : Results.Category,
                            ArticleTypeId : Results.ArticleTypeId,
                            ArticleType : Results.ArticleType,
                            ArticleGroupId : Results.ArticleGroupId,
                            ArticleGroup : Results.ArticleGroup,
                            AccountId : Results.AccountId,
                            Account : Results.Account,
                            SalesAccountId : Results.SalesAccountId,
                            CostAccountId : Results.CostAccountId,
                            AssetAccountId : Results.AssetAccountId,
                            ExpenseAccountId : Results.ExpenseAccountId,
                            UnitId : Results.UnitId,
                            Unit : Results.Unit,
                            OutputTaxId : Results.OutputTaxId,
                            OutputTax : Results.OutputTax,
                            InputTaxId : Results.InputTaxId,
                            InputTax : Results.InputTax,
                            WTaxTypeId : Results.WTaxTypeId,
                            WTaxType : Results.WTaxType,
                            Price : Results.Price,
                            Cost : Results.Cost,
                            IsInventory : Results.IsInventory,
                            Particulars : Results.Particulars,
                            Address : Results.Address,
                            TermId : Results.TermId,
                            Term : Results.Term,
                            ContactNumber : Results.ContactNumber,
                            ContactPerson : Results.ContactPerson,
                            TaxNumber : Results.TaxNumber,
                            CreditLimit : Results.CreditLimit,
                            DateAcquired : Results.DateAcquired,
                            UsefulLife : Results.UsefulLife,
                            SalvageValue : Results.SalvageValue,
                            ManualArticleOldCode : Results.ManualArticleOldCode,
                            IsLocked: Results.IsLocked,
                            CreatedById: Results.CreatedById,
                            CreatedBy: Results.CreatedBy,
                            CreatedDateTime: Results.CreatedDateTime,
                            UpdatedById: Results.UpdatedById,
                            UpdatedBy: Results.UpdatedBy,
                            UpdatedDateTime: Results.UpdatedDateTime
                        });
                    }
                    document.getElementById('articleItem_code').value = Results.ArticleCode;
                    document.getElementById('articleItem_code_data').value = Results.ArticleCode;

                    document.getElementById('articleItem_manualCode').value = Results.ManualArticleCode;
                    document.getElementById('articleItem_item').value = Results.Article;

                    document.getElementById('articleItem_category').value = Results.Category;

                    document.getElementById('articleItem_itemGroup_data').value = Results.ArticleGroupId;
                    document.getElementById('articleItem_itemGroup_SelectedValue').value = Results.ArticleGroup;

                    document.getElementById('articleItem_unit_data').value = Results.UnitId;
                    document.getElementById('articleItem_unit_SelectedValue').value = Results.Unit;

                    document.getElementById('articleItem_price').value = Results.Price;
                    document.getElementById('articleItem_particulars').value = Results.Particulars;

                    if(Results.IsInventory == 0) {
                        document.getElementById('articleItem_Inventory').checked = false;
                    } else {
                        document.getElementById('articleItem_Inventory').checked = true;
                    }

                    document.getElementById('articleItem_inputTax_data').value = Results.InputTaxId;
                    document.getElementById('articleItem_inputTax_SelectedValue').value = Results.InputTax;

                    document.getElementById('articleItem_outputTax_data').value = Results.OutputTaxId;
                    document.getElementById('articleItem_outputTax_SelectedValue').value = Results.OutputTax;

                    document.getElementById('articleItem_withholdingTax_data').value = Results.WTaxTypeId;
                    document.getElementById('articleItem_withholdingTax_SelectedValue').value = Results.WTaxType;

                    document.getElementById('articleItem_oldManualCode').value = Results.ManualArticleOldCode;
                    document.getElementById('articleItem_manualCost').value = Results.Cost;

                    document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                    document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                    document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                    document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                    document.getElementById('Item_IsLocked').value = Results.IsLocked;

                    if(document.getElementById('Item_IsLocked').value == 'true') {
                        document.getElementById('articleItem_manualCode').disabled = true;
                        document.getElementById('articleItem_item').disabled = true;
                        document.getElementById('articleItem_category').disabled = true;
                        document.getElementById('articleItem_price').disabled = true;
                        document.getElementById('articleItem_particulars').disabled = true;
                        document.getElementById('articleItem_Inventory').disabled = true;
                        document.getElementById('articleItem_oldManualCode').disabled = true;
                        document.getElementById('articleItem_manualCost').disabled = true;

                        document.getElementById('isLocked_Status').checked = true;

                        $("#item_saveSaveItem").prop("disabled", true);
                        $("#item_saveItem").prop("disabled", true);
                        $("#item_editItem").prop("disabled", false);
                        $("#item_printItem").prop("disabled", false);

                    } else if(document.getElementById('Item_IsLocked').value == 'false') {
                        document.getElementById('articleItem_manualCode').disabled = false;
                        document.getElementById('articleItem_item').disabled = false;
                        document.getElementById('articleItem_category').disabled = false;
                        document.getElementById('articleItem_price').disabled = false;
                        document.getElementById('articleItem_particulars').disabled = false;
                        document.getElementById('articleItem_Inventory').disabled = false;
                        document.getElementById('articleItem_oldManualCode').disabled = false;
                        document.getElementById('articleItem_manualCost').disabled = false;

                        document.getElementById('isLocked_Status').checked = false;

                        $("#item_saveSaveItem").prop("disabled", false);
                        $("#item_saveItem").prop("disabled", false);
                        $("#item_editItem").prop("disabled", true);
                        $("#item_printItem").prop("disabled", true);
                    }

                    // comboboxes
                    getArticleItemGroupForComboBox();
                    getArticleItemUnitForComboBox();
                    getArticleTaxTypeForComboBox();
                }
            });
            return items;
        }

        // =====================
        // Get Artile Item Group
        // =====================
        function getArticleItemGroupForComboBox() {
            articleItemGroups = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleGroupByArticleTypeId/1',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleItemGroups.push({
                                ArticleGroupId: results[i]["Id"],
                                ArticleGroupArticleGroup: results[i]["ArticleGroup"]
                            });
                        }
                        createCboForArticleItemGroup(articleItemGroups);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
            );
        }

        // ======================
        // CBO for Customer Group
        // ======================
        function createCboForArticleItemGroup(articleItemGroups) {
            var articleItemGroupCollection = new wijmo.collections.CollectionView(articleItemGroups);
            var articleGroupList = new Array();
            for (var i = 0; i < articleItemGroupCollection.items.length; i++) {
                articleGroupList.push(articleItemGroupCollection.items[i].ArticleGroupArticleGroup);
            }

            if(document.getElementById('Item_IsLocked').value == 'true') {
                cboArticleGroupForItem.dispose();
                cboArticleGroupForItem = new wijmo.input.ComboBox('#articleItem_itemGroup', {
                    disabled: true,
                    placeholder: "Select Item Group",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_itemGroup_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_itemGroup_data").val(articleItemGroupCollection.items[this.selectedIndex].ArticleGroupId);
                    }
                });
            } else if(document.getElementById('Item_IsLocked').value == 'false') {
                cboArticleGroupForItem.dispose();
                cboArticleGroupForItem = new wijmo.input.ComboBox('#articleItem_itemGroup', {
                    disabled: false,
                    placeholder: "Select Item Group",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_itemGroup_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_itemGroup_data").val(articleItemGroupCollection.items[this.selectedIndex].ArticleGroupId);
                    }
                });
            } else {
                cboArticleGroupForItem.dispose();
                cboArticleGroupForItem = new wijmo.input.ComboBox('#articleItem_itemGroup', {
                    placeholder: "Select Item Group",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_itemGroup_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_itemGroup_data").val(articleItemGroupCollection.items[this.selectedIndex].ArticleGroupId);
                    }
                });
            }

        }

        // ====================
        // Get Artile Item Unit
        // ====================
        function getArticleItemUnitForComboBox() {
            articleItemUnits = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUnit',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleItemUnits.push({
                                ArticleUnitId: results[i]["Id"],
                                ArticleUnitArticleUnit: results[i]["Unit"]
                            });
                        }
                        createCboForArticleItemUnit(articleItemUnits);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
            );
        }

        // =====================
        // CBO for Customer Unit
        // =====================
        function createCboForArticleItemUnit(articleItemUnits) {
            var articleItemUnitCollection = new wijmo.collections.CollectionView(articleItemUnits);
            var articleGroupList = new Array();
            for (var i = 0; i < articleItemUnitCollection.items.length; i++) {
                articleGroupList.push(articleItemUnitCollection.items[i].ArticleUnitArticleUnit);
            }

            if(document.getElementById('Item_IsLocked').value == 'true') {
                cboArticleUnitForItem.dispose();
                cboArticleUnitForItem = new wijmo.input.ComboBox('#articleItem_unit', {
                    disabled: true,
                    placeholder: "Select Item Group",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_unit_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_unit_data").val(articleItemUnitCollection.items[this.selectedIndex].ArticleUnitId);
                    }
                });
            } else if(document.getElementById('Item_IsLocked').value == 'false') {
                cboArticleUnitForItem.dispose();
                cboArticleUnitForItem = new wijmo.input.ComboBox('#articleItem_unit', {
                    disabled: false,
                    placeholder: "Select Item Group",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_unit_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_unit_data").val(articleItemUnitCollection.items[this.selectedIndex].ArticleUnitId);
                    }
                });
            } else {
                cboArticleUnitForItem.dispose();
                cboArticleUnitForItem = new wijmo.input.ComboBox('#articleItem_unit', {
                    placeholder: "Select Item Group",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_unit_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_unit_data").val(articleItemUnitCollection.items[this.selectedIndex].ArticleUnitId);
                    }
                });
            }
        }

        // ===================
        // Get Artile Tax Type
        // ===================
        function getArticleTaxTypeForComboBox() {
            taxTypes = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTaxType',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            taxTypes.push({
                                ArticleTaxTypeId: results[i]["Id"],
                                ArticleTaxTypeTaxType: results[i]["TaxType"]
                            });
                        }
                        createCboForArticleInputTaxType(taxTypes);
                        createCboForArticleOutputTaxType(taxTypes);
                        createCboForArticleWithholdingTaxType(taxTypes);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
            );
        }

        // ======================
        // CBO for input tax type
        // ======================
        function createCboForArticleInputTaxType(taxTypes) {
            var articleInputTaxTypeCollection = new wijmo.collections.CollectionView(taxTypes);
            var articleGroupList = new Array();
            for (var i = 0; i < articleInputTaxTypeCollection.items.length; i++) {
                articleGroupList.push(articleInputTaxTypeCollection.items[i].ArticleTaxTypeTaxType);
            }

            if(document.getElementById('Item_IsLocked').value == 'true') {
                cboArticleInputTaxTypeForItem.dispose();
                cboArticleInputTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_inputTax', {
                    disabled: true,
                    placeholder: "Select Input Tax Type",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_inputTax_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_inputTax_data").val(articleInputTaxTypeCollection.items[this.selectedIndex].ArticleTaxTypeId);
                    }
                });
            } else if(document.getElementById('Item_IsLocked').value == 'false') {
                cboArticleInputTaxTypeForItem.dispose();
                cboArticleInputTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_inputTax', {
                    disabled: false,
                    placeholder: "Select Input Tax Type",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_inputTax_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_inputTax_data").val(articleInputTaxTypeCollection.items[this.selectedIndex].ArticleTaxTypeId);
                    }
                });
            } else {
                cboArticleInputTaxTypeForItem.dispose();
                cboArticleInputTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_inputTax', {
                    placeholder: "Select Input Tax Type",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_inputTax_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_inputTax_data").val(articleInputTaxTypeCollection.items[this.selectedIndex].ArticleTaxTypeId);
                    }
                });
            }
        }

        // ======================
        // CBO for output tax type
        // ======================
        function createCboForArticleOutputTaxType(taxTypes) {
            var articleOutputTaxTypeCollection = new wijmo.collections.CollectionView(taxTypes);
            var articleGroupList = new Array();
            for (var i = 0; i < articleOutputTaxTypeCollection.items.length; i++) {
                articleGroupList.push(articleOutputTaxTypeCollection.items[i].ArticleTaxTypeTaxType);
            }

            if(document.getElementById('Item_IsLocked').value == 'true') {
                cboArticleOutputTaxTypeForItem.dispose();
                cboArticleOutputTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_outputTax', {
                    disabled: true,
                    placeholder: "Select Output Tax Type",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_outputTax_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_outputTax_data").val(articleOutputTaxTypeCollection.items[this.selectedIndex].ArticleTaxTypeId);
                    }
                });
            } else if(document.getElementById('Item_IsLocked').value == 'false') {
                cboArticleOutputTaxTypeForItem.dispose();
                cboArticleOutputTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_outputTax', {
                    disabled: false,
                    placeholder: "Select Output Tax Type",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_outputTax_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_outputTax_data").val(articleOutputTaxTypeCollection.items[this.selectedIndex].ArticleTaxTypeId);
                    }
                });
            } else {
                cboArticleOutputTaxTypeForItem.dispose();
                cboArticleOutputTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_outputTax', {
                    placeholder: "Select Output Tax Type",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_outputTax_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_outputTax_data").val(articleOutputTaxTypeCollection.items[this.selectedIndex].ArticleTaxTypeId);
                    }
                });
            }

        }

        // =============================
        // CBO for Withholding  tax type
        // =============================
        function createCboForArticleWithholdingTaxType(taxTypes) {
            var articleWithholdingTaxTypeCollection = new wijmo.collections.CollectionView(taxTypes);
            var articleGroupList = new Array();
            for (var i = 0; i < articleWithholdingTaxTypeCollection.items.length; i++) {
                articleGroupList.push(articleWithholdingTaxTypeCollection.items[i].ArticleTaxTypeTaxType);
            }

            if(document.getElementById('Item_IsLocked').value == 'true') {
                cboArticleWithholdingTaxTypeForItem.dispose();
                cboArticleWithholdingTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_withholdingTax', {
                    disabled: true,
                    placeholder: "Select Withholding Tax Type",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_withholdingTax_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_withholdingTax_data").val(articleWithholdingTaxTypeCollection.items[this.selectedIndex].ArticleTaxTypeId);
                    }
                });
            } else if(document.getElementById('Item_IsLocked').value == 'false') {
                cboArticleWithholdingTaxTypeForItem.dispose();
                cboArticleWithholdingTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_withholdingTax', {
                    disabled: false,
                    placeholder: "Select Withholding Tax Type",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_withholdingTax_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_withholdingTax_data").val(articleWithholdingTaxTypeCollection.items[this.selectedIndex].ArticleTaxTypeId);
                    }
                });
            } else {
                cboArticleWithholdingTaxTypeForItem.dispose();
                cboArticleWithholdingTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_withholdingTax', {
                    placeholder: "Select Withholding Tax Type",
                    itemsSource: articleGroupList,
                    isEditable: false,
                    required: false,
                    selectedValue: document.getElementById('articleItem_withholdingTax_SelectedValue').value.toString(),
                    onSelectedIndexChanged: function () {
                        $("#articleItem_withholdingTax_data").val(articleWithholdingTaxTypeCollection.items[this.selectedIndex].ArticleTaxTypeId);
                    }
                });
            }
        }

        // ========================================================
        // Function with leading zeroes to display the article code
        // ========================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while(pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // =========
        // SAVE Item
        // =========
        function itemSaveItemButton_OnClick() {
            $("#item_saveSaveItem").prop("disabled", true);
            $("#item_saveItem").prop("disabled", true);
            $("#item_editItem").prop("disabled", true);
            $("#item_printItem").prop("disabled", true);
            $("#item_closeItem").prop("disabled", true);

            var itemObject = new Object();
            var itemId = @itemId;

            if(itemId > 0) {
                itemObject.IsLocked = document.getElementById('Item_IsLocked_defaultTrue').value;
            } else {
                itemObject.IsLocked = document.getElementById('Item_IsLocked_defaultFalse').value;
            }

            console.log(document.getElementById('Item_IsLocked_defaultFalse').value);

            var dataUpdate = JSON.stringify(itemObject);
            $.ajax({
                type: "PUT",
                url: '/api/updateArticleIsLock/' + itemId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: dataUpdate,
                statusCode: {
                    200: function () {
                        toastr.success("Saved Item");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                        $("#item_saveSaveItem").prop("disabled", true);
                        $("#item_saveItem").prop("disabled", true);
                        $("#item_editItem").prop("disabled", true);
                        $("#item_printItem").prop("disabled", true);
                        $("#item_closeItem").prop("disabled", true);
                    },
                    404: function () {
                        toastr.error("Can't Update");
                        $("#item_saveSaveItem").prop("disabled", false);
                        $("#item_saveItem").prop("disabled", false);
                        $("#item_editItem").prop("disabled", false);
                        $("#item_printItem").prop("disabled", false);
                        $("#item_closeItem").prop("disabled", false);

                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#item_saveSaveItem").prop("disabled", false);
                        $("#item_saveItem").prop("disabled", false);
                        $("#item_editItem").prop("disabled", false);
                        $("#item_printItem").prop("disabled", false);
                        $("#item_closeItem").prop("disabled", false);
                    }
                }
            });
        }

        // =========
        // EDIT Item
        // =========
        function itemEditButton_OnClick() {
            $("#item_saveSaveItem").prop("disabled", true);
            $("#item_saveItem").prop("disabled", true);
            $("#item_editItem").prop("disabled", true);
            $("#item_printItem").prop("disabled", true);
            $("#item_closeItem").prop("disabled", true);

            var itemObject = new Object();
            var itemId = @itemId;

            if(itemId > 0) {
                itemObject.IsLocked = document.getElementById('Item_IsLocked_defaultFalse').value;
            } else {
                itemObject.IsLocked = document.getElementById('Item_IsLocked_defaultTrue').value;
            }

            console.log(document.getElementById('Item_IsLocked_defaultFalse').value);

            var dataUpdate = JSON.stringify(itemObject);
            $.ajax({
                type: "PUT",
                url: '/api/updateArticleIsLock/' + itemId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: dataUpdate,
                statusCode: {
                    200: function () {
                        toastr.success("Unlocked");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                        $("#item_saveSaveItem").prop("disabled", true);
                        $("#item_saveItem").prop("disabled", true);
                        $("#item_editItem").prop("disabled", true);
                        $("#item_printItem").prop("disabled", true);
                        $("#item_closeItem").prop("disabled", true);
                    },
                    404: function () {
                        toastr.error("Can't Update");
                        $("#item_saveSaveItem").prop("disabled", false);
                        $("#item_saveItem").prop("disabled", false);
                        $("#item_editItem").prop("disabled", false);
                        $("#item_printItem").prop("disabled", false);
                        $("#item_closeItem").prop("disabled", false);

                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#item_saveSaveItem").prop("disabled", false);
                        $("#item_saveItem").prop("disabled", false);
                        $("#item_editItem").prop("disabled", false);
                        $("#item_printItem").prop("disabled", false);
                        $("#item_closeItem").prop("disabled", false);
                    }
                }
            });
        }

        // ===========
        // Onload Page
        // ===========
        $(document).ready(function () {
            document.getElementById('isLocked_Status').disabled = true;
            document.getElementById('Item_IsLocked_defaultTrue').value = 'true';
            document.getElementById('Item_IsLocked_defaultFalse').value = 'false';
            document.getElementById('currentPage').innerHTML = '<a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Main Menu</a> > ' + ' <a href="@Url.Action("Items", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Items</a> ' + ' > Item Detail';

            getArticleItemById();

            if(@itemId == 0) {
                // comboboxes
                getArticleItemGroupForComboBox();
                getArticleItemUnitForComboBox();
                getArticleTaxTypeForComboBox();

                if(document.getElementById('articleItem_code_data').value == 0) {
                    document.getElementById('articleItem_code').value = "0000000001";
                }

                document.getElementById('articleItem_code_data').value = 0;

                var items = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/articleLastArticleCodeByArticleTypeId/1',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            items.push({
                                Id: Results.Id,
                                ItemArticleCode: Results.ArticleCode
                            });
                        }
                        var ArticleCode = parseInt(Results.ArticleCode);
                        var ArticleCode_plusOne = 0000000001;
                        var ArticleCode_Results = ArticleCode + ArticleCode_plusOne;
                        //var JV_Number_Display = JV_Num_Results.toString().replace(/(\d{3})(\d+)/, '$1-$2');

                        document.getElementById('articleItem_code_data').value = zerofill(ArticleCode_Results, 10);
                        document.getElementById('articleItem_code').value = zerofill(ArticleCode_Results, 10);
                    }
                });

                $("#item_saveSaveItem").prop("disabled", false);
                $("#item_saveItem").prop("disabled", false);
                $("#item_editItem").prop("disabled", true);
                $("#item_printItem").prop("disabled", true);

            }

            document.getElementById('articleItem_code').disabled = true;

            cboArticleGroupForItem  = new wijmo.input.ComboBox('#articleItem_itemGroup');
            cboArticleUnitForItem = new wijmo.input.ComboBox('#articleItem_unit');

            cboArticleInputTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_inputTax');
            cboArticleOutputTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_outputTax');
            cboArticleWithholdingTaxTypeForItem = new wijmo.input.ComboBox('#articleItem_withholdingTax');
        });
    </script>
</body>
</html>