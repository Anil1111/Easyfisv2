@{
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Stock Out Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Stock Out Detail 
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; @ViewData["Branch"]
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-12" align="right">
                                <button class="btn btn-primary " id="cmdStockOutJournal" onclick="stockOutJournal_OnClick()"><i class="fa fa-book"></i> Journal</button>
                                <button class="btn btn-primary " id="cmdStockOutSaveLock" onclick="btnStockOutSaveLock_OnClick()"><i class="fa fa-lock"></i> Lock</button>
                                @*<button class="btn btn-primary " id="cmdStockOutSave" onclick="btnStockOutSave_OnClick()"><i class="fa fa-save"></i> Save</button>*@
                                <button class="btn btn-primary " id="cmdStockOutEdit" onclick="btnStockOutEdit_OnClick()"><i class="fa fa-unlock"></i> Unlock</button>
                                <button class="btn btn-primary " id="cmdStockOutPrint" onclick="btnStockOutPrint_OnClick()"><i class="fa fa-print"></i> Print</button>
                                <button onclick="window.location.href = '@Url.Action("StockOut", "Software")'" class="btn btn-danger " id="cmdStockOutClose"><i class="fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="">
                            <form class="form-horizontal" role="form">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Branch</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="StockOut_Branch"></div>

                                                <input type="hidden" id="StockOut_Branch_data" class="requiredStockOut" />
                                                <input type="hidden" id="StockOut_Branch_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">OT Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control   requiredStockOut" id="StockOut_OTNumber_Display" />
                                                <input type="hidden" id="StockOut_OTNumber" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">OT Date</label>
                                            <div class="col-sm-8">
                                                <div class="" id="StockOut_OTDate"></div>
                                                <input type="hidden" id="StockOut_OTDate_data" class="requiredStockOut" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Account</label>
                                            <div class="col-sm-8">
                                                <table style="width: 100%" border="0">
                                                    <tr>
                                                        <td style="width: 30%">
                                                            <div class="" id="StockOut_AccountCode"></div>
                                                        </td>
                                                        <td style="width: 1%"></td>
                                                        <td style="width: 69%">
                                                            <div class="" id="StockOut_Account"></div>
                                                            <input type="hidden" id="StockOut_Account_data" class="requiredStockOut" />
                                                            <input type="hidden" id="StockOut_Account_selectedValue" />
                                                            <input type="hidden" id="StockOut_AccountCode_selectedValue" />
                                                        </td>
                                                    </tr>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Article</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="StockOut_Article"></div>

                                                <input type="hidden" id="StockOut_Article_data" class="requiredStockOut" />
                                                <input type="hidden" id="StockOut_Article_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Particulars</label>
                                            <div class="col-sm-8">
                                                <textarea rows="5" class="form-control textarea-custom requiredStockOut" id="StockOut_Particulars" placeholder="Particulars"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Manual OT Number</label>
                                            <div class="col-sm-8">
                                                <input type="text" class="form-control  requiredStockOut" id="StockOUt_ManualOTNumber" placeholder="Manual OT Number">
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Prepared by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="StockOut_PreparedBy"></div>

                                                <input type="hidden" id="StockOut_PreparedBy_data" class="requiredStockOut" />
                                                <input type="hidden" id="StockOut_PreparedBy_selectedValue" />
                                                <input type="hidden" id="userId_data" value="@userId" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Checked by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="StockOut_CheckedBy"></div>

                                                <input type="hidden" id="StockOut_CheckedBy_data" class="requiredStockOut" />
                                                <input type="hidden" id="StockOut_CheckedBy_selectedValue" />
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label col-sm-4">Approved by</label>
                                            <div class="col-sm-8">
                                                <div class="comboBox-wide" id="StockOut_ApprovedBy"></div>

                                                <input type="hidden" id="StockOut_ApprovedBy_data" class="requiredStockOut" />
                                                <input type="hidden" id="StockOut_ApprovedBy_selectedValue" />
                                            </div>
                                        </div>
                                        @*<div class="form-group">
                                                <label class="control-label col-sm-4">Lock</label>
                                                <div class="col-sm-8">
                                                    <input type="checkbox" id="StockOut_Lock">
                                                </div>
                                            </div>*@
                                        @*<div class="form-group">
                                                <div class="col-sm-4"></div>
                                                <div class="col-sm-8">
                                                    <button type="button" class="btn btn-primary ">FA Disposal</button>
                                                </div>
                                            </div>*@
                                        <div class="form-group">
                                            <div class="col-sm-4"></div>
                                            <div class="col-sm-8">
                                                <input type="hidden" id="StockOut_IsLocked">
                                                <input type="hidden" id="StockOut_IsLocked_defaultTrue">
                                                <input type="hidden" id="StockOut_IsLocked_defaultFalse">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <!-- Stock Out line -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#Items" id="itemTabId">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#InventoryEntries" id="inventoryEntryTabId">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="Items" class="tab-pane fade in active">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-lg-12" align="right">
                                        <button class="btn btn-primary " id="btnStockOutAddItem" onclick="cmdStockOutItem_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                        <button class="btn btn-primary " id="btnItemQueryStockOutItem" onclick="cmdItemQueryStockOutItem_OnClick()"><i class="fa fa-search-plus"></i> Item Query</button>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div id="ItemGrid" class="grid"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="InventoryEntries" class="tab-pane fade in">
                        <!-- Inventory Entries List -->
                        <div class="panel panel-default">
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-lg-12">
                                        <div id="InventoryEntryGrid" class="grid" align="left"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    <!-- ===================== -->
    <!-- Stock Out Item Detail -->
    <!-- ===================== -->
    <div class="modal fade" id="stockOutItemsEdit" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="stockOutItemsModalLabel">Stock-Out Item Detail</h4>
                </div>
                <div class="modal-body">
                    <form id="stockOutItemsDetailForm">
                        <ul class="nav nav-tabs" role="tablist" id="myTab">
                            <li role="presentation" class="active"><a data-toggle="tab" href="#OTItem" id="OTItemTabId">Items</a></li>
                            <li role="presentation"><a data-toggle="tab" href="#OTExpenseAccount" id="OTExpenseAccountTabId">Expense Account</a></li>
                            @*<li role="presentation"><a data-toggle="tab" href="#OTBUC" id="OTBUCTabId">Basic Unit Conversion</a></li>*@
                        </ul>
                        <br />
                        <div class="tab-content">
                            <div id="OTItem" class="tab-pane fade in active">
                                <input type="hidden" id="stockOutItem_Id" />
                                <dl class="dl-horizontal">
                                    <dt>Item</dt>
                                    <dd>
                                        <table style="width: 100%" border="0">
                                            <tr>
                                                <td style="width: 30%">
                                                    <div class="" id="stockOutItem_ItemCode"></div>
                                                </td>
                                                <td style="width: 1%"></td>
                                                <td style="width: 69%">
                                                    <div class="" id="stockOutItem_ItemDescription"></div>
                                                    <input type="hidden" id="stockOutItem_ItemId_data" class="requiredStockOutItem">
                                                    <input type="hidden" id="stockOutItem_ItemCode_selectedValue" />
                                                    <input type="hidden" id="stockOutItem_ItemDescription_selectedValue" />
                                                </td>
                                            </tr>
                                        </table>
                                    </dd>
                                    <dt>Particulars</dt>
                                    <dd><textarea rows="5" class="form-control textarea-custom requiredStockOutItem" id="stockOutItem_Particulars"></textarea></dd>
                                    <dt>Item Inventory Code</dt>
                                    <dd>
                                        <div class="comboBox-wide" id="stockOutItem_ItemInventoryCode"></div>

                                        <input type="hidden" id="stockOutItem_ItemInventoryCode_data" class="requiredStockOutItem">
                                        <input type="hidden" id="stockOutItem_ItemInventoryCode_selectedValue" />
                                    </dd>
                                    <dt>Quantity</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredStockOutItem" id="stockOutItem_Quantity" placeholder="0.00" /></dd>
                                    <dt>Unit</dt>
                                    <dd>
                                        <div class="" id="stockOutItem_Unit"></div>

                                        <input type="hidden" id="stockOutItem_Unit_data" class="requiredStockOutItem">
                                        <input type="hidden" id="stockOutItem_Unit_selectedValue" />
                                    </dd>
                                    <dt>Cost</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredStockOutItem" id="stockOutItem_Cost" placeholder="0.00" /></dd>
                                    <dt>Amount</dt>
                                    <dd><input type="text" class="form-control  numberField  requiredStockOutItem" id="stockOutItem_Amount" placeholder="0.00" /></dd>
                                </dl>
                            </div>
                            <div id="OTExpenseAccount" class="tab-pane fade in">
                                <dl class="dl-horizontal">
                                    <dt>Expense Account</dt>
                                    <dd>
                                        <table style="width: 100%" border="0">
                                            <tr>
                                                <td style="width: 30%">
                                                    <div class="" id="stockOutItem_ExpenseAccountCode"></div>
                                                </td>
                                                <td style="width: 1%"></td>
                                                <td style="width: 69%">
                                                    <div class="" id="stockOutItem_ExpenseAccount"></div>
                                                    <input type="hidden" id="stockOutItem_ExpenseAccount_data" class="requiredStockOutItem">
                                                    <input type="hidden" id="stockOutItem_ExpenseAccount_selectedValue" />
                                                    <input type="hidden" id="stockOutItem_ExpenseAccountCode_selectedValue" />
                                                </td>
                                            </tr>
                                        </table>
                                    </dd>
                                </dl>
                            </div>
                            <div id="OTBUC" class="tab-pane fade in">
                                <dl class="dl-horizontal">
                                    <dt>Unit</dt>
                                    <dd>
                                        <div class="" id="stockOutItem_BUCUnit"></div>

                                        <input type="hidden" id="stockOutItem_BUCUnit_data" class="requiredStockOutItem">
                                        <input type="hidden" id="stockOutItem_BUCUnit_selectedValue" />
                                    </dd>
                                    <dt>Quantity</dt>
                                    <dd><input type="text" class="form-control  numberField " id="stockOutItem_BUCQuantity" placeholder="0.00" /></dd>
                                    <dt>Cost</dt>
                                    <dd><input type="text" class="form-control  numberField " id="stockOutItem_BUCCost" placeholder="0.00" /></dd>
                                </dl>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary " id="cmdSaveStockOutItemButton" onclick="cmdStockOutItemSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdStockOutItemDetailCloseButton" class="btn btn-danger " data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Journal Detail -->
    <div class="modal fade" id="journalDetail" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="journalModalLabel"> Journal</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingJournalGridList"></span>
                    </center>
                    <div id="journal_Content">
                        <div id="journalGrid" class="grid"></div>
                        <div class="row">
                            <div class="col-md-6"></div>
                            <div class="col-md-6">
                                <table class="table table-responsive table-bordered">
                                    <tr>
                                        <td align="right">
                                            <b>Total Debit: </b>
                                        </td>
                                        <td style="padding-left: 10px" align="right">
                                            <span id="totalDebitInJournal">NA</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="right">
                                            <b>Total Credit: </b>
                                        </td>
                                        <td style="padding-left: 10px" align="right">
                                            <span id="totalCreditInJournal">NA</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td align="right">
                                            <b>Variance: </b>
                                        </td>
                                        <td style="padding-left: 10px" align="right">
                                            <span id="variance">NA</span>
                                        </td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdJournalDetailCloseButton" class="btn btn-danger " data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- ========================================= -->
    <!-- Stock Out Items Delete Modal Confirmation -->
    <!-- ========================================= -->
    <div class="modal fade" id="deletStockOutItemsConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete Stock-Out Item <i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this?
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger " id="cmdConfirmDeleteStockOutItems" onclick="cmdStockOutItemsConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteStockOutItemsCloseButton" class="btn btn-primary " data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    <!-- ========================== -->
    <!-- Stock Out Item Query Modal -->
    <!-- ========================== -->
    <div class="modal fade" id="stockOutItemsItemQuery" role="dialog">
        <div class="modal-dialog modal-lg">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Item Query</h4>
                </div>
                <div class="modal-body">
                    <div class="panel panel-default" id="itemQueryPanel">
                        <div class="panel-heading">
                            <div class="input-group  ">
                                <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                <input type="text" class="form-control " id="itemQueryFilter" placeholder="Search">
                            </div>
                        </div>
                        <div class="panel-body">
                            <div id="itemQueryGrid" class="grid"></div>
                        </div>
                        <div class="panel-footer">
                            <div class="row">
                                <div class="btn-group col-md-7" id="naviagtionPageGridItemQuery">
                                    <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridItemQuery">
                                        <span class="glyphicon glyphicon-fast-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridItemQuery">
                                        <span class="glyphicon glyphicon-step-backward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridItemQuery"></button>
                                    <button type="button" class="btn btn-default" id="btnMoveToNextPageGridItemQuery">
                                        <span class="glyphicon glyphicon-step-forward"></span>
                                    </button>
                                    <button type="button" class="btn btn-default" id="btnMoveToLastPageGridItemQuery">
                                        <span class="glyphicon glyphicon-fast-forward"></span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <center>
                        <span id="loadingItemQuery"></span>
                    </center>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-danger " data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var stockOuts;
        var branches;
        var accounts;
        var articles;
        var users;
        var OTDate;
        var cboBranch;
        var cboForAccountCode;
        var cboForAccount;
        var cboArticle;
        var cboPreparedBy;
        var cboCheckedBy;
        var cboApprovedBy;

        var itemQueryItemsCollection;
        var itemQueryGrid;

        var btnFirstPageGridItemQuery;
        var btnPreviousPageGridItemQuery;
        var btnNextPageGridItemQuery;
        var btnLastPageGridItemQuery;
        var btnCurrentPageGridItemQuery;

        // Item Query Stock Transfer Item
        function cmdItemQueryStockOutItem_OnClick() {
            $('#stockOutItemsItemQuery').modal({
                show: true,
                backdrop: 'static'
            });

            $("#itemQueryPanel").hide();
            $("#itemQueryGrid").hide();
            $("#loadingItemQuery").show();

            document.getElementById("loadingItemQuery").innerHTML = "<b><i class='fa fa-spinner fa-spin'></i></b>";

            setTimeout(function() {
                createFlexGridForItemQuery();
                window.createFlexGridForItemQuery = function() {
                    return true;
                }

                itemQueryItemsCollection = new wijmo.collections.CollectionView(getArticleInventoryForItemQuery());
                itemQueryItemsCollection.canFilter = true;
                itemQueryItemsCollection.pageSize = 7;

                var filterText = '';
                $('#itemQueryFilter').keyup(function () {
                    filterText = this.value.toLowerCase();
                    itemQueryItemsCollection.refresh();
                });
                itemQueryItemsCollection.filter = function (item) {
                    return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                    || (item.Article.toLowerCase().indexOf(filterText) > -1)
                    || (item.InventoryCode.toLowerCase().indexOf(filterText) > -1);
                }
                itemQueryItemsCollection.collectionChanged.addHandler(function (sender, args) {
                    updateNavigateButtonsItemQuery();
                });

                // Flex Grid for Purchase Order Line
                itemQueryGrid.itemsSource = itemQueryItemsCollection;
                itemQueryGrid.trackChanges = true;

                $("#itemQueryPanel").show();
                $("#loadingItemQuery").hide();
                $("#itemQueryGrid").show();

            }, 1000)
        }

        // get article inventory for stock transfer item query
        function getArticleInventoryForItemQuery() {
            var items = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleInventoryLocked',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (articleInventoryItemsResult) {
                    for(i = 0; i < articleInventoryItemsResult.length; i++) {
                        items.push({
                            Id: articleInventoryItemsResult[i]["Id"],
                            BranchId: articleInventoryItemsResult[i]["BranchId"],
                            ArticleId: articleInventoryItemsResult[i]["ArticleId"],
                            ManualArticleCode: articleInventoryItemsResult[i]["ManualArticleCode"],
                            Article: articleInventoryItemsResult[i]["Article"],
                            InventoryCode: articleInventoryItemsResult[i]["InventoryCode"],
                            Price: articleInventoryItemsResult[i]["Price"],
                            Quantity: articleInventoryItemsResult[i]["Quantity"],
                            Cost: articleInventoryItemsResult[i]["Cost"],
                            Amount: articleInventoryItemsResult[i]["Amount"],
                            Particulars: articleInventoryItemsResult[i]["Particulars"],
                            UnitId: articleInventoryItemsResult[i]["UnitId"],
                            Unit: articleInventoryItemsResult[i]["Unit"],
                            Pick: "<button class='btn btn-primary btn-xs btn-block' onclick='pickToApplyOnClick()'><i class='fa fa-hand-o-right'></i> Pick</button>",
                        });
                    }
                }
            });

            return items;
        }

        // creates flexgrid for the item query
        function createFlexGridForItemQuery() {
            itemQueryItemsCollection = new wijmo.collections.CollectionView(getArticleInventoryForItemQuery());
            itemQueryItemsCollection.canFilter = true;
            itemQueryItemsCollection.pageSize = 7;

            var filterText = '';
            $('#itemQueryFilter').keyup(function () {
                filterText = this.value.toLowerCase();
                itemQueryItemsCollection.refresh();
            });
            itemQueryItemsCollection.filter = function (item) {
                return !filterText || (item.ManualArticleCode.toLowerCase().indexOf(filterText) > -1)
                || (item.Article.toLowerCase().indexOf(filterText) > -1)
                || (item.InventoryCode.toLowerCase().indexOf(filterText) > -1);
            }
            itemQueryItemsCollection.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItemQuery();
            });

            // Flex Grid for Purchase Order Line
            itemQueryGrid = new wijmo.grid.FlexGrid('#itemQueryGrid');
            itemQueryGrid.initialize({
                columns: [
                            {
                                "header": "Code",
                                "binding": "ManualArticleCode",
                                "allowSorting": true,
                                "width": 110
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "allowSorting": true,
                                "width": 200
                            },
                            {
                                "header": "Inventory",
                                "binding": "InventoryCode",
                                "allowSorting": true,
                                "width": 200
                            },
                            {
                                "header": "Price",
                                "binding": "Price",
                                "allowSorting": true,
                                "width": 150
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": 150
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": 120
                            },
                            {
                                "header": "Pick",
                                "binding": "Pick",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: itemQueryItemsCollection,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemQueryGrid.trackChanges = true;

            //Navigation button for account
            btnFirstPageGridItemQuery = document.getElementById('btnMoveToFirstPageGridItemQuery');
            btnPreviousPageGridItemQuery = document.getElementById('btnMoveToPreviousPageGridItemQuery');
            btnNextPageGridItemQuery = document.getElementById('btnMoveToNextPageGridItemQuery');
            btnLastPageGridItemQuery = document.getElementById('btnMoveToLastPageGridItemQuery');
            btnCurrentPageGridItemQuery = document.getElementById('btnCurrentPageGridItemQuery');

            updateNavigateButtonsItemQuery();

            btnFirstPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToFirstPage();
                updateNavigateButtonsItemQuery();
            });
            btnPreviousPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToPreviousPage();
                updateNavigateButtonsItemQuery();
            });
            btnNextPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToNextPage();
                updateNavigateButtonsItemQuery();
            });
            btnLastPageGridItemQuery.addEventListener('click', function () {
                itemQueryItemsCollection.moveToLastPage();
                updateNavigateButtonsItemQuery();
            });
        }

        // Navigation Buttons for Account
        function updateNavigateButtonsItemQuery() {
            if (itemQueryItemsCollection.pageSize <= 0) {
                document.getElementById('naviagtionPageGridItemQuery').style.display = 'none';
                return;
            }
            document.getElementById('naviagtionPageGridItemQuery').style.display = 'block';
            if (itemQueryItemsCollection.pageIndex === 0) {
                btnFirstPageGridItemQuery.setAttribute('disabled', 'disabled');
                btnPreviousPageGridItemQuery.setAttribute('disabled', 'disabled');
                btnNextPageGridItemQuery.removeAttribute('disabled');
                btnLastPageGridItemQuery.removeAttribute('disabled');
            } else if (itemQueryItemsCollection.pageIndex === (itemQueryItemsCollection.pageCount - 1)) {
                btnFirstPageGridItemQuery.removeAttribute('disabled');
                btnPreviousPageGridItemQuery.removeAttribute('disabled');
                btnNextPageGridItemQuery.setAttribute('disabled', 'disabled');
                btnLastPageGridItemQuery.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridItemQuery.removeAttribute('disabled');
                btnPreviousPageGridItemQuery.removeAttribute('disabled');
                btnNextPageGridItemQuery.removeAttribute('disabled');
                btnLastPageGridItemQuery.removeAttribute('disabled');
            }
            btnCurrentPageGridItemQuery.innerHTML = (itemQueryItemsCollection.pageIndex + 1) + ' / ' + itemQueryItemsCollection.pageCount;
        }

        // pick
        function pickToApplyOnClick() {
            itemQueryItemsCollection.editItem(itemQueryItemsCollection.currentItem);
            $('#stockOutItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredStockOutItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById('cmdSaveStockOutItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveStockOutItemButton").prop("disabled", false);
            $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);

            var item = itemQueryItemsCollection.currentEditItem;
            document.getElementById('stockOutItem_Id').value = "0";
            document.getElementById('stockOutItem_ItemId_data').value = item.ArticleId;
            document.getElementById('stockOutItem_ItemCode_selectedValue').value = item.ManualArticleCode;
            document.getElementById('stockOutItem_ItemDescription_selectedValue').value = item.Article;
            document.getElementById('stockOutItem_Particulars').value = "NA";
            document.getElementById('stockOutItem_ItemInventoryCode_data').value = item.Id;
            document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = item.InventoryCode;
            document.getElementById('stockOutItem_Quantity').value = item.Quantity;
            document.getElementById('stockOutItem_Unit_data').value = item.UnitId;
            document.getElementById('stockOutItem_Unit_selectedValue').value = item.Unit;
            document.getElementById('stockOutItem_Cost').value = item.Cost;
            document.getElementById('stockOutItem_Amount').value = item.Amount;
            //document.getElementById('stockOutItem_BUCUnit_data').value = item.BaseUnitId;
            //document.getElementById('stockOutItem_BUCUnit_selectedValue').value = item.BaseUnit;
            //document.getElementById('stockOutItem_BUCQuantity').value = item.BaseQuantity;
            //document.getElementById('stockOutItem_BUCCost').value = item.BaseCost;
            //document.getElementById('stockOutItem_ExpenseAccount_data').value = item.ExpenseAccountId;
            //document.getElementById('stockOutItem_ExpenseAccount_selectedValue').value = item.ExpenseAccount;

            getArticleItemForManualCodeAndComponent();
            //getStockOutItemUnitForComboBox();
            getStockOutItemAccountForComboBox();
        }

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null)
                return "";
            else
                return results[1];
        }

        // ==================
        // GET Stock out List
        // ==================
        function getStockOutById() {
            var stockOutId = getParam("StockOutId");
            if(document.location.search.length == 0) {
                document.getElementById('StockOut_Particulars').value = "NA";
                document.getElementById('StockOUt_ManualOTNumber').value = "NA";

                NProgress.done();
            } else {
                NProgress.start();
                $.ajax({
                    url: '/api/stockOut/' + stockOutId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if(Results != null) {
                            document.getElementById('StockOut_Branch_data').value = Results.BranchId;
                            document.getElementById('StockOut_Branch_selectedValue').value = Results.Branch;
                            document.getElementById('StockOut_OTNumber').value = Results.OTNumber;
                            document.getElementById('StockOut_OTNumber_Display').value = Results.OTNumber;
                            document.getElementById('StockOut_OTDate_data').value = Results.OTDate;

                            var OTDate_date = Results.OTDate;
                            OTDate.dispose();
                            OTDate = new wijmo.input.InputDate('#StockOut_OTDate', {
                                format: 'MM/dd/yyyy',
                                value: new Date(OTDate_date),
                                mask: '99/99/9999',
                                onValueChanged: function () {
                                    document.getElementById('StockOut_OTDate_data').value = this.value.toLocaleDateString();
                                }
                            });

                            document.getElementById('StockOut_Account_data').value = Results.AccountId;
                            document.getElementById('StockOut_Account_selectedValue').value = Results.Account;
                            document.getElementById('StockOut_AccountCode_selectedValue').value = Results.AccountCode;

                            document.getElementById('StockOut_Article_data').value = Results.ArticleId;
                            document.getElementById('StockOut_Article_selectedValue').value = Results.Article;
                            document.getElementById('StockOut_Particulars').value = Results.Particulars;
                            document.getElementById('StockOUt_ManualOTNumber').value = Results.ManualOTNumber;
                            document.getElementById('StockOut_PreparedBy_data').value = Results.PreparedById;
                            document.getElementById('StockOut_PreparedBy_selectedValue').value = Results.PreparedBy;
                            document.getElementById('StockOut_CheckedBy_data').value = Results.CheckedById;
                            document.getElementById('StockOut_CheckedBy_selectedValue').value = Results.CheckedBy;
                            document.getElementById('StockOut_ApprovedBy_data').value = Results.ApprovedById;
                            document.getElementById('StockOut_ApprovedBy_selectedValue').value = Results.ApprovedBy;
                            //document.getElementById('StockOut_Lock').checked = Results.IsLocked;

                            document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                            document.getElementById('StockOut_IsLocked').value = Results.IsLocked;

                            NProgress.done();

                            if(Results.IsLocked == true) {
                                document.getElementById('StockOut_Particulars').disabled = true;
                                document.getElementById('StockOUt_ManualOTNumber').disabled = true;

                                var OTDate_date = Results.OTDate;
                                OTDate.dispose();
                                OTDate = new wijmo.input.InputDate('#StockOut_OTDate', {
                                    disabled: true,
                                    format: 'MM/dd/yyyy',
                                    value: new Date(OTDate_date),
                                    mask: '99/99/9999',
                                    onValueChanged: function () {
                                        document.getElementById('StockOut_OTDate_data').value = this.value.toLocaleDateString();
                                    }
                                });

                                $("#cmdStockOutJournal").prop("disabled", false);
                                $("#cmdStockOutSaveLock").prop("disabled", true);
                                //$("#cmdStockOutSave").prop("disabled", true);
                                $("#cmdStockOutEdit").prop("disabled", false);
                                $("#cmdStockOutPrint").prop("disabled", false);
                                $('#btnStockOutAddItem').prop("disabled", true);
                                $('#btnItemQueryStockOutItem').prop("disabled", true);

                                var canUnLock = "@ViewData["CanUnlock"]";
                                if (canUnLock == "True") {
                                    $("#cmdStockOutEdit").prop("disabled", false)
                                } else if (canUnLock == "False") {
                                    $("#cmdStockOutEdit").prop("disabled", true)
                                } else {
                                    $("#cmdStockOutEdit").prop("disabled", true)
                                }
                            } else {
                                document.getElementById('StockOut_Particulars').disabled = false;
                                document.getElementById('StockOUt_ManualOTNumber').disabled = false;
                                $('#btnItemQueryStockOutItem').prop("disabled", false);

                                var OTDate_date = Results.OTDate;
                                OTDate.dispose();
                                OTDate = new wijmo.input.InputDate('#StockOut_OTDate', {
                                    disabled: false,
                                    format: 'MM/dd/yyyy',
                                    value: new Date(OTDate_date),
                                    mask: '99/99/9999',
                                    onValueChanged: function () {
                                        document.getElementById('StockOut_OTDate_data').value = this.value.toLocaleDateString();
                                    }
                                });

                                $("#cmdStockOutJournal").prop("disabled", true);
                                $("#cmdStockOutSaveLock").prop("disabled", false);
                                //$("#cmdStockOutSave").prop("disabled", true);
                                $("#cmdStockOutEdit").prop("disabled", true);
                                $("#cmdStockOutPrint").prop("disabled", true);
                                $('#btnStockOutAddItem').prop("disabled", false);

                                var canLock = "@ViewData["CanLock"]";
                                if (canLock == "True") {
                                    $("#cmdStockOutSaveLock").prop("disabled", false)
                                } else if (canLock == "False") {
                                    $("#cmdStockOutSaveLock").prop("disabled", true)
                                } else {
                                    $("#cmdStockOutSaveLock").prop("disabled", true)
                                }

                                var canAdd = "@ViewData["CanAdd"]";
                                if (canAdd == "True") {
                                    $("#btnStockOutAddItem").prop("disabled", false)
                                    $("#btnItemQueryStockOutItem").prop("disabled", false)
                                } else if (canAdd == "False") {
                                    $("#btnStockOutAddItem").prop("disabled", true)
                                    $("#btnItemQueryStockOutItem").prop("disabled", true)
                                } else {
                                    $("#btnStockOutAddItem").prop("disabled", true)
                                    $("#btnItemQueryStockOutItem").prop("disabled", true)
                                }
                            }

                            var canPrint = "@ViewData["CanPrint"]";
                            if (canPrint == "True") {
                                $("#cmdStockOutPrint").prop("disabled", false)
                            } else if (canPrint == "False") {
                                $("#cmdStockOutPrint").prop("disabled", true)
                            } else {
                                $("#cmdStockOutPrint").prop("disabled", true)
                            }

                            getBranchesForComboBox();
                            getAccountForComboBox();
                            getArticlesForComboBox();
                            getUsersForComboBox();
                        }
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            }
            return stockOuts;
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var stockOutId = getParam("StockOutId");
                        var branchId = @ViewData["BranchId"];
                        if(document.location.search.length == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (branchResults) {
                                    //if (branchResults.length > 0) {
                                    //    branches.push({
                                    //        BranchId: results.Id,
                                    //        Branch: results.Branch
                                    //    });
                                    //}

                                    if(branchResults != null) {
                                        document.getElementById('StockOut_Branch_data').value = branchResults.Id;
                                        document.getElementById('StockOut_Branch_selectedValue').value = branchResults.Branch;

                                        createCboBranch(branches);
                                    }
                                }
                            });
                        } else {
                            createCboBranch(branches);
                        }
                    } else {
                        createCboBranch(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
                );
            return branches;
        }

        // ======================
        // Combo Box for Branches
        // ======================
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            var disabled;
            if(branches == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#StockOut_Branch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('StockOut_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_Branch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });

            if(branches == 0) {
                document.getElementById('StockOut_Branch_data').value = "";
            } else {
                document.getElementById('StockOut_Branch_data').value = branchCollections.items[cboBranch.selectedIndex].BranchId;
            }
        }

        // =====================
        // Get Stock Out Account
        // =====================
        function getAccountForComboBox() {
            accounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accounts.push({
                                AccountId: results[i]["Id"],
                                AccountCode: results[i]["AccountCode"],
                                AccountAccount: results[i]["Account"]
                            });
                        }
                        createCboForAccountCode(accounts);
                        createCboForAccount(accounts);
                    } else {
                        createCboForAccountCode(accounts);
                        createCboForAccount(accounts);
                    }

                    var accountCollection = new wijmo.collections.CollectionView(accounts);
                    if(accounts == 0) {
                        document.getElementById('StockOut_Account_data').value = "";
                        document.getElementById('StockOut_Account_selectedValue').value = "";
                        document.getElementById('StockOut_AccountCode_selectedValue').value = "";
                    } else {
                        document.getElementById('StockOut_Account_data').value = accountCollection.items[cboForAccount.selectedIndex].AccountId;
                        document.getElementById('StockOut_Account_selectedValue').value = accountCollection.items[cboForAccount.selectedIndex].AccountAccount;
                        document.getElementById('StockOut_AccountCode_selectedValue').value = accountCollection.items[cboForAccount.selectedIndex].AccountCode;
                        //getArticlesForComboBox();
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
            );
        }


        // ====================
        // CBO for Account Code
        // ====================
        function createCboForAccountCode(accounts) {
            var accountCollection = new wijmo.collections.CollectionView(accounts);
            var accountList = new Array();
            for (var i = 0; i < accountCollection.items.length; i++) {
                accountList.push(accountCollection.items[i].AccountCode);
            }

            var disabled;
            if(accounts == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboForAccountCode.dispose();
            cboForAccountCode = new wijmo.input.ComboBox('#StockOut_AccountCode', {
                disabled: disabled,
                placeholder: "Select Account Code",
                itemsSource: accountList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_AccountCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_AccountCode_data").val(stockOutAccountCollection.items[this.selectedIndex].AccountId);
                    $("#StockOut_Account_selectedValue").val(stockOutAccountCollection.items[this.selectedIndex].AccountAccount);
                    getArticlesForComboBox();
                    createCboForAccount(accounts);
                }
            });
        }

        // ===============
        // CBO for Account
        // ===============
        function createCboForAccount(accounts) {
            var accountCollection = new wijmo.collections.CollectionView(accounts);
            var accountList = new Array();
            for (var i = 0; i < accountCollection.items.length; i++) {
                accountList.push(accountCollection.items[i].AccountAccount);
            }

            var disabled;
            if(accounts == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboForAccount.dispose();
            cboForAccount = new wijmo.input.ComboBox('#StockOut_Account', {
                disabled: disabled,
                placeholder: "Select Account",
                itemsSource: accountList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_Account_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_Account_data").val(accountCollection.items[this.selectedIndex].AccountId);
                    $("#StockOut_AccountCode_selectedValue").val(accountCollection.items[this.selectedIndex].AccountCode);
                    getArticlesForComboBox();
                    createCboForAccountCode(accounts);
                }
            });
        }

        // ==========================
        // GET Articles for Combo Box
        // ==========================
        function getArticlesForComboBox() {
            articles = new wijmo.collections.ObservableArray();

            var accountId;
            if(document.getElementById('StockOut_Account_data').value == "") {
                accountId = 0;
            } else {
                accountId = document.getElementById('StockOut_Account_data').value;
            }

            articlesArticleTypes = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccountArticleTypeByAccountId/' + accountId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (articlesResults) {
                    if (articlesResults.length > 0) {
                        for (i = 0; i < articlesResults.length; i++) {
                            articlesArticleTypes.push({
                                Id: articlesResults[i]["Id"],
                                ArticleTypeId: articlesResults[i]["ArticleTypeId"]
                            });

                            $.ajax({
                                url: '/api/listArticleByArticleTypeId/' + articlesResults[i]["ArticleTypeId"],
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        for (i = 0; i < results.length; i++) {
                                            articles.push({
                                                ArticleId: results[i]["Id"],
                                                ArticleArticle: results[i]["Article"]
                                            });
                                        }
                                        createCboArticles(articles);
                                    } else {
                                        createCboArticles(articles);
                                    }
                                }
                            }).fail(function (xhr, textStatus, err) {
                                alert(err);
                            });

                        }
                    } else {
                        $.ajax({
                            url: '/api/listArticleByArticleTypeId/' + 0,
                            cache: false,
                            type: 'GET',
                            contentType: 'application/json; charset=utf-8',
                            data: {},
                            success: function (results) {
                                if (results.length > 0) {
                                    for (i = 0; i < results.length; i++) {
                                        articles.push({
                                            ArticleId: results[i]["Id"],
                                            ArticleArticle: results[i]["Article"]
                                        });
                                    }
                                    createCboArticles(articles);
                                } else {
                                    createCboArticles(articles);
                                }
                            }
                        }).fail(function (xhr, textStatus, err) {
                            alert(err);
                        });
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
        }

        // ======================
        // Combo Box for Articles
        // ======================
        function createCboArticles(articles) {
            var articleCollections = new wijmo.collections.CollectionView(articles);
            var articleList = new Array();
            for (var i = 0; i < articleCollections.items.length; i++) {
                articleList.push(articleCollections.items[i].ArticleArticle);
            }


            var disabled;
            if(articles == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                    if(document.getElementById('StockOut_Article_data').value == "") {
                        disabled = true;
                    }
                } else {
                    disabled = false;
                }
            }

            cboArticle.dispose();
            cboArticle = new wijmo.input.ComboBox('#StockOut_Article', {
                disabled: disabled,
                placeholder: "Select Article",
                itemsSource: articleList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_Article_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_Article_data").val(articleCollections.items[this.selectedIndex].ArticleId);
                }
            });

            if(articles == 0) {
                document.getElementById('StockOut_Article_data').value = "";
            } else {
                document.getElementById('StockOut_Article_data').value = articleCollections.items[cboArticle.selectedIndex].ArticleId;
            }
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        if(document.location.search.length == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        users.push({
                                            UserId: results.Id,
                                            UserFullName: results.FullName
                                        });
                                    }

                                    document.getElementById('StockOut_PreparedBy_data').value = results.Id;
                                    document.getElementById('StockOut_CheckedBy_data').value = results.Id;
                                    document.getElementById('StockOut_ApprovedBy_data').value = results.Id;

                                    document.getElementById('StockOut_PreparedBy_selectedValue').value = results.FullName;
                                    document.getElementById('StockOut_CheckedBy_selectedValue').value = results.FullName;
                                    document.getElementById('StockOut_ApprovedBy_selectedValue').value = results.FullName;


                                    createCboUserPreparedBy(users);
                                    createCboUserCheckedBy(users);
                                    createCboUserApprovedBy(users);
                                }
                            });
                        } else {
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);

                        }
                    } else {
                        createCboUserPreparedBy(users);
                        createCboUserCheckedBy(users);
                        createCboUserApprovedBy(users);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return users;
        }

        // ==================================
        // Combo Box for Users - Prepared By
        // ==================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if(users == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#StockOut_PreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_PreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_PreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if(users == 0) {
                document.getElementById('StockOut_PreparedBy_data').value = "";
            } else {
                document.getElementById('StockOut_PreparedBy_data').value = usersCollection.items[cboPreparedBy.selectedIndex].UserId;
            }
        }

        // ==================================
        // Combo Box for Users - Checked By
        // ==================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if(users == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboCheckedBy.dispose();
            cboCheckedBy = new wijmo.input.ComboBox('#StockOut_CheckedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_CheckedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if(users == 0) {
                document.getElementById('StockOut_CheckedBy_data').value = "";
            } else {
                document.getElementById('StockOut_CheckedBy_data').value = usersCollection.items[cboCheckedBy.selectedIndex].UserId;
            }
        }

        // ==================================
        // Combo Box for Users - Approved By
        // ==================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if(users == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboApprovedBy.dispose();
            cboApprovedBy = new wijmo.input.ComboBox('#StockOut_ApprovedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_ApprovedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if(users == 0) {
                document.getElementById('StockOut_ApprovedBy_data').value = "";
            } else {
                document.getElementById('StockOut_ApprovedBy_data').value = usersCollection.items[cboApprovedBy.selectedIndex].UserId;
            }
        }

        // =====================================================
        // Function with leading zeroes to display the OT Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while(pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // =============
        // Add Stock Out
        // =============
        //function btnStockOutSave_OnClick() {
        //    var stockOutObject = new Object();
        //    var stockOutId = getParam("StockOutId");
        //    stockOutObject.BranchId = document.getElementById('StockOut_Branch_data').value;
        //    stockOutObject.OTNumber = document.getElementById('StockOut_OTNumber_Display').value;
        //    stockOutObject.OTDate = document.getElementById('StockOut_OTDate_data').value;
        //    stockOutObject.AccountId = document.getElementById('StockOut_Account_data').value;
        //    stockOutObject.ArticleId = document.getElementById('StockOut_Article_data').value;
        //    stockOutObject.Particulars = document.getElementById('StockOut_Particulars').value;
        //    stockOutObject.ManualOTNumber = document.getElementById('StockOUt_ManualOTNumber').value;
        //    stockOutObject.PreparedById = document.getElementById('StockOut_PreparedBy_data').value;
        //    stockOutObject.CheckedById = document.getElementById('StockOut_CheckedBy_data').value;
        //    stockOutObject.ApprovedById = document.getElementById('StockOut_ApprovedBy_data').value;
        //    var data = JSON.stringify(stockOutObject);

        //    if( document.getElementById('StockOut_Branch_data').value == '') {
        //        document.getElementById("StockOut_Branch").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("StockOut_Branch").style.border = "1px solid #C8C8C8   ";
        //    }

        //    if( document.getElementById('StockOut_Account_data').value == '') {
        //        document.getElementById("StockOut_Account").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("StockOut_Account").style.border = "1px solid #C8C8C8   ";
        //    }

        //    if( document.getElementById('StockOut_Article_data').value == '') {
        //        document.getElementById("StockOut_Article").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("StockOut_Article").style.border = "1px solid #C8C8C8   ";
        //    }

        //    if( document.getElementById('StockOut_PreparedBy_data').value == '') {
        //        document.getElementById("StockOut_PreparedBy").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("StockOut_PreparedBy").style.border = "1px solid #C8C8C8   ";
        //    }

        //    if( document.getElementById('StockOut_CheckedBy_data').value == '') {
        //        document.getElementById("StockOut_CheckedBy").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("StockOut_CheckedBy").style.border = "1px solid #C8C8C8   ";
        //    }

        //    if( document.getElementById('StockOut_ApprovedBy_data').value == '') {
        //        document.getElementById("StockOut_ApprovedBy").style.border = "1px solid red";
        //    } else {
        //        document.getElementById("StockOut_ApprovedBy").style.border = "1px solid #C8C8C8   ";
        //    }

        //    var isValid = true;
        //    $('.requiredStockOut').each(function () {
        //        if ($.trim($(this).val()) == '') {
        //            isValid = false;
        //            $(this).css({
        //                "border": "1px solid red"
        //            });
        //        }
        //        else {
        //            $(this).css({
        //                "border": "",
        //            });
        //        }
        //    });

        //    if (isValid == false) {
        //        toastr.error("Invalid Entry");
        //        e.preventDefault();
        //    }
        //    else {
        //        if(document.location.search.length == 0) {
        //            $.ajax({
        //                type: "POST",
        //                url: '/api/addStockOut',
        //                contentType: "application/json; charset=utf-8",
        //                dataType: "json",
        //                data: data,
        //                success: function(id) {
        //                    if(id > 0) {
        //                        $("#cmdStockOutJournal").prop("disabled", true);
        //                        $("#cmdStockOutSaveLock").prop("disabled", true);
        //                        $("#cmdStockOutSave").prop("disabled", true);
        //                        $("#cmdStockOutEdit").prop("disabled", true);
        //                        $("#cmdStockOutPrint").prop("disabled", true);
        //                        $("#cmdStockOutClose").prop("disabled", true);
        //                        window.location = '/Software/StockOutDetail?StockOutId=' + id;
        //                    } else {
        //                        window.history.back();
        //                    }
        //                }
        //            });
        //        } else {
        //            $.ajax({
        //                type: "PUT",
        //                url: '/api/updateStockOut/' + stockOutId,
        //                contentType: "application/json; charset=utf-8",
        //                dataType: "json",
        //                data: data,
        //                statusCode: {
        //                    200: function () {
        //                        $("#cmdStockOutJournal").prop("disabled", true);
        //                        $("#cmdStockOutSaveLock").prop("disabled", true);
        //                        $("#cmdStockOutSave").prop("disabled", true);
        //                        $("#cmdStockOutEdit").prop("disabled", true);
        //                        $("#cmdStockOutPrint").prop("disabled", true);
        //                        $("#cmdStockOutClose").prop("disabled", true);
        //                        toastr.success("Successfully Updated");
        //                        window.setTimeout(function () {
        //                            location.reload()
        //                        }, 1000);
        //                    },
        //                    404: function () {
        //                        toastr.error("Can't Save");
        //                        $("#cmdStockOutJournal").prop("disabled", false);
        //                        $("#cmdStockOutSaveLock").prop("disabled", false);
        //                        $("#cmdStockOutSave").prop("disabled", false);
        //                        $("#cmdStockOutEdit").prop("disabled", false);
        //                        $("#cmdStockOutPrint").prop("disabled", false);
        //                        $("#cmdStockOutClose").prop("disabled", false);
        //                    },
        //                    400: function () {
        //                        toastr.error("Bad Request");
        //                        $("#cmdStockOutJournal").prop("disabled", false);
        //                        $("#cmdStockOutSaveLock").prop("disabled", false);
        //                        $("#cmdStockOutSave").prop("disabled", false);
        //                        $("#cmdStockOutEdit").prop("disabled", false);
        //                        $("#cmdStockOutPrint").prop("disabled", false);
        //                        $("#cmdStockOutClose").prop("disabled", false);
        //                    }
        //                }
        //            });
        //        }
        //    }
        //}

        // ======================
        // Save Stock Out - Lock
        // =====================
        function btnStockOutSaveLock_OnClick() {
            var stockOutObject = new Object();
            var stockOutId = getParam("StockOutId");
            stockOutObject.BranchId = document.getElementById('StockOut_Branch_data').value;
            stockOutObject.OTNumber = document.getElementById('StockOut_OTNumber_Display').value;
            stockOutObject.OTDate = document.getElementById('StockOut_OTDate_data').value;
            stockOutObject.AccountId = document.getElementById('StockOut_Account_data').value;
            stockOutObject.ArticleId = document.getElementById('StockOut_Article_data').value;
            stockOutObject.Particulars = document.getElementById('StockOut_Particulars').value;
            stockOutObject.ManualOTNumber = document.getElementById('StockOUt_ManualOTNumber').value;
            stockOutObject.PreparedById = document.getElementById('StockOut_PreparedBy_data').value;
            stockOutObject.CheckedById = document.getElementById('StockOut_CheckedBy_data').value;
            stockOutObject.ApprovedById = document.getElementById('StockOut_ApprovedBy_data').value;
            stockOutObject.IsLocked = true;
            var data = JSON.stringify(stockOutObject);

            if( document.getElementById('StockOut_Branch_data').value == '') {
                document.getElementById("StockOut_Branch").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_Branch").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_Account_data').value == '') {
                document.getElementById("StockOut_Account").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_Account").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_Article_data').value == '') {
                document.getElementById("StockOut_Article").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_Article").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_PreparedBy_data').value == '') {
                document.getElementById("StockOut_PreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_PreparedBy").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_CheckedBy_data').value == '') {
                document.getElementById("StockOut_CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_CheckedBy").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_ApprovedBy_data').value == '') {
                document.getElementById("StockOut_ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_ApprovedBy").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredStockOut').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            } else {
                document.getElementById('cmdStockOutSaveLock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $("#cmdStockOutJournal").prop("disabled", true);
                $("#cmdStockOutSaveLock").prop("disabled", true);
                //$("#cmdStockOutSave").prop("disabled", true);
                $("#cmdStockOutEdit").prop("disabled", true);
                $("#cmdStockOutPrint").prop("disabled", true);
                $("#cmdStockOutClose").prop("disabled", true);

                $.ajax({
                    type: "PUT",
                    url: '/api/updateStockOut/' + stockOutId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: data,
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function () {
                            toastr.error("Can't Save");
                            $("#cmdStockOutClose").prop("disabled", false);
                        },
                        400: function () {
                            toastr.error("Bad Request");
                            $("#cmdStockOutClose").prop("disabled", false);
                        }
                    }
                });
            }
        }

        // =========================
        // Save Stock Out - UnLocked
        // =========================
        function btnStockOutEdit_OnClick() {
            var stockOutObject = new Object();
            var stockOutId = getParam("StockOutId");
            stockOutObject.IsLocked = false;
            var data = JSON.stringify(stockOutObject);

            document.getElementById('cmdStockOutEdit').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $("#cmdStockOutJournal").prop("disabled", true);
            $("#cmdStockOutSaveLock").prop("disabled", true);
            //$("#cmdStockOutSave").prop("disabled", true);
            $("#cmdStockOutEdit").prop("disabled", true);
            $("#cmdStockOutPrint").prop("disabled", true);
            $("#cmdStockOutClose").prop("disabled", true);

            $.ajax({
                type: "PUT",
                url: '/api/updateStockOutIsLocked/' + stockOutId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: data,
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Can't Save");
                        $("#cmdStockOutClose").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#cmdStockOutClose").prop("disabled", false);
                    }
                }
            });
        }

        // ========
        // Print OT
        // ========
        function btnStockOutPrint_OnClick() {
            var stockOutId = getParam("StockOutId");
            window.location = "/RepStockOut/StockOut?StockOutId=" + stockOutId;
        }

        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            var stockOutId = getParam("StockOutId");
            if(document.location.search.length == 0) {
                $('#cmdStockOutJournal').hide();
                $('#cmdStockOutSaveLock').hide();
                //$('#cmdStockOutSave').show();
                $('#cmdStockOutEdit').hide();

                $("#cmdStockOutPrint").prop("disabled", true);
                $('#btnStockOutAddItem').prop("disabled", true);
            } else {
                $('#cmdStockOutJournal').show();
                //$('#cmdStockOutSave').hide();
                $('#cmdStockOutEdit').show();
            }

            document.getElementById('StockOut_OTNumber_Display').disabled = true;
            //document.getElementById('StockOut_Lock').disabled = true;

            cboBranch = new wijmo.input.ComboBox('#StockOut_Branch');

            var d = new Date();
            document.getElementById("StockOut_OTDate_data").value = [ d.getMonth()+1, d.getDate(), d.getFullYear()].join('/');
            OTDate = new wijmo.input.InputDate('#StockOut_OTDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('StockOut_OTDate_data').value = this.value.toLocaleDateString();
                }
            });

            cboForAccountCode = new wijmo.input.ComboBox('#StockOut_AccountCode');
            cboForAccount = new wijmo.input.ComboBox('#StockOut_Account');
            cboArticle = new wijmo.input.ComboBox('#StockOut_Article');
            cboPreparedBy = new wijmo.input.ComboBox('#StockOut_PreparedBy');
            cboCheckedBy = new wijmo.input.ComboBox('#StockOut_CheckedBy');
            cboApprovedBy = new wijmo.input.ComboBox('#StockOut_ApprovedBy');

            getStockOutById();

            var stockOutId = getParam("StockOutId");
            if(document.location.search.length == 0) {
                getBranchesForComboBox();
                getAccountForComboBox();
                getArticlesForComboBox();
                getUsersForComboBox();

                if(document.getElementById('StockOut_OTNumber').value == 0) {
                    document.getElementById('StockOut_OTNumber_Display').value = "0000000001";
                }

                document.getElementById('StockOut_OTNumber').value = 0;
                //document.getElementById('journalVoucher_No_Display').value = "000-000000";
                var stockOuts = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/stockOutLastOTNumber',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if(Results != null) {
                            var OT_Number = parseInt(Results.OTNumber);
                            var OT_Number_PlusOne = 0000000001;
                            var OT_Num_Results = OT_Number + OT_Number_PlusOne;
                            //var JV_Number_Display = JV_Num_Results.toString().replace(/(\d{3})(\d+)/, '$1-$2');

                            document.getElementById('StockOut_OTNumber').value = zerofill(OT_Num_Results, 10);
                            document.getElementById('StockOut_OTNumber_Display').value = zerofill(OT_Num_Results, 10);
                        }

                    }
                });
            }

            //$(document).ajaxStop(function () {
            //    if (document.location.search.length == 0) {
            //        btnStockOutSave_OnClick();
            //        window.btnStockOutSave_OnClick = function () {
            //            return true;
            //        }
            //    }
            //});
        });
    </script>

    <!-- ============= -->
    <!-- Items Scripts -->
    <!-- ============= -->
    <script type="text/javascript">
        // ==========================
        // Global Variables for Items
        // ==========================
        var items;
        var itemGrid;

        var btnFirstPageGridItem;
        var btnPreviousPageGridItem;
        var btnNextPageGridItem;
        var btnLastPageGridItem;
        var btnCurrentPageGridItem;

        var articleItems;
        var cboManualCodeArticleItems;
        var cboItemDescriptionArticleItems;

        var inventories;
        var cboInventoryCode;

        var stockOutUnits;
        var cboStockOutUnit;
        var cboBaseUnit;

        var stockOutItemAccounts;
        var cboStockOutAccount;

        // =======================
        // GET Stock OUT Item List
        // =======================
        function getItem() {
            var items = new wijmo.collections.ObservableArray;
            var stockOutId = getParam("StockOutId");
            if (document.location.search.length == 0) {
                NProgress.done();
            } else {
                NProgress.start();
                $.ajax({
                    url: '/api/listStockOutItemByOTId/' + stockOutId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            stockOuts = new wijmo.collections.ObservableArray;
                            var stockOutId = getParam("StockOutId");
                            $.ajax({
                                url: '/api/stockOut/' + stockOutId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (StockOutResults) {
                                    if (StockOutResults.length > 0) {
                                        stockOuts.push({
                                            Id: StockOutResults.Id,
                                            IsLocked: StockOutResults.IsLocked
                                        });
                                    }

                                    var canEdit = "@ViewData["CanEdit"]";
                                    var editDisabled = "disabled";

                                    if (canEdit == "True") {
                                        editDisabled = "";
                                    } else if (canEdit == "False") {
                                        editDisabled = "disabled";
                                    } else {
                                        editDisabled = "disabled";
                                    }

                                    var canDelete = "@ViewData["CanDelete"]";
                                    var deleteDisabled = "disabled";

                                    if (canDelete == "True") {
                                        deleteDisabled = "";
                                    } else if (canDelete == "False") {
                                        deleteDisabled = "disabled";
                                    } else {
                                        deleteDisabled = "disabled";
                                    }

                                    var btnEditId;
                                    var btnDeleteId;
                                    if (StockOutResults.IsLocked == true) {
                                        btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditStockOutItem_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                        btnDeleteId =  "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteStockOutItem_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                                    } else {
                                        btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditStockOutItem_OnClick()' " + editDisabled + "><i class='fa fa-edit'></i> Edit</button>";
                                        btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteStockOutItem_OnClick()'" + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                                    }

                                    for (i = 0; i < Results.length; i++) {
                                        items.push({
                                            EditId: btnEditId,
                                            DeleteId: btnDeleteId,
                                            Id: Results[i]["Id"],
                                            OTId: Results[i]["OTId"],
                                            OT: Results[i]["OT"],
                                            ExpenseAccountId: Results[i]["ExpenseAccountId"],
                                            ExpenseAccountCode: Results[i]["ExpenseAccountCode"],
                                            ExpenseAccount: Results[i]["ExpenseAccount"],
                                            ItemId: Results[i]["ItemId"],
                                            ItemCode: Results[i]["ItemCode"],
                                            Item: Results[i]["Item"],
                                            ItemInventoryId: Results[i]["ItemInventoryId"],
                                            ItemInventory: Results[i]["ItemInventory"],
                                            Particulars: Results[i]["Particulars"],
                                            UnitId: Results[i]["UnitId"],
                                            Unit: Results[i]["Unit"],
                                            Quantity: Results[i]["Quantity"],
                                            Cost: Results[i]["Cost"],
                                            Amount: Results[i]["Amount"],
                                            BaseUnitId: Results[i]["BaseUnitId"],
                                            BaseUnit: Results[i]["BaseUnit"],
                                            BaseQuantity: Results[i]["BaseQuantity"],
                                            BaseCost: Results[i]["BaseCost"]
                                        });
                                    }
                                }
                            });
                        }
                        NProgress.done();
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            }
            return items;
        }

        // ======================================
        // GET Item Id, Manual Code and Component
        // ======================================
        function getArticleItemForManualCodeAndComponent() {
            var articleInventories = new wijmo.collections.ObservableArray();
            var branchId =  document.getElementById('StockOut_Branch_data').value;

            $.ajax({
                url: '/api/listArticleInventoryBybranchId/' + branchId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (articleInventoryResults) {
                    if (articleInventoryResults.length > 0) {
                        for (i = 0; i < articleInventoryResults.length; i++) {
                            articleInventories.push({
                                Id: articleInventoryResults[i]["Id"],
                                ItemId: articleInventoryResults[i]["ArticleId"],
                                ItemDescription: articleInventoryResults[i]["Article"],
                                Cost: articleInventoryResults[i]["Cost"],
                                ItemCode: articleInventoryResults[i]["ManualArticleCode"],
                                Unit: articleInventoryResults[i]["Unit"],
                                UnitId: articleInventoryResults[i]["UnitId"]
                            });

                            //articleItems = new wijmo.collections.ObservableArray();
                            //$.ajax({
                            //    url: '/api/article/' + articleInventoryResults[i]["ArticleId"],
                            //    cache: false,
                            //    type: 'GET',
                            //    contentType: 'application/json; charset=utf-8',
                            //    data: {},
                            //    success: function (results) {
                            //        if (results.length > 0) {
                            //            for (i = 0; i < results.length; i++) {
                            //                articleItems.push({
                            //                    ItemId: results[i]["Id"],
                            //                    ItemCode: results[i]["ManualArticleCode"],
                            //                    ItemDescription: results[i]["Article"],
                            //                    UnitId: results[i]["UnitId"],
                            //                    Unit: results[i]["Unit"],
                            //                    Particulars: results[i]["Particulars"]
                            //                });
                            //            }
                            //            createCboForManualCode(articleItems);
                            //            createCboForItemDescription(articleItems);
                            //        }
                            //    }
                            //});

                        }

                        createCboForManualCode(articleInventories);
                        createCboForItemDescription(articleInventories);
                    } else {
                        createCboForManualCode(articleInventories);
                        createCboForItemDescription(articleInventories);
                    }
                }
            });
        }

        // ===============
        // CBO Manual Code
        // ===============
        function createCboForManualCode(articleItems) {
            var ManualCodeCollections = new wijmo.collections.CollectionView(articleItems);
            var ManualCodeList = new Array();
            for (var i = 0; i < ManualCodeCollections.items.length; i++) {
                ManualCodeList.push(ManualCodeCollections.items[i].ItemCode);
            }

            var disabled;
            if(articleItems == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboManualCodeArticleItems.dispose();
            cboManualCodeArticleItems = new wijmo.input.ComboBox('#stockOutItem_ItemCode', {
                disabled: disabled,
                placeholder: "Select Manual Code",
                itemsSource: ManualCodeList,
                isEditable: false,
                selectedValue: document.getElementById('stockOutItem_ItemCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_ItemId_data").val(ManualCodeCollections.items[this.selectedIndex].ItemId);
                    $("#stockOutItem_ItemCode_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemCode);
                    $("#stockOutItem_ItemDescription_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemDescription);
                    //$("#stockOutItem_Unit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
                    //$("#stockOutItem_Unit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
                    //$("#stockOutItem_BUCUnit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
                    //$("#stockOutItem_BUCUnit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
                    //$("#stockOutItem_Particulars").val(ManualCodeCollections.items[this.selectedIndex].Particulars);
                    //$("#stockOutItem_Cost").val(ManualCodeCollections.items[this.selectedIndex].Cost);

                    createCboForItemDescription(articleItems);
                    createCboForInventoryCode(ManualCodeCollections.items[this.selectedIndex].ItemId);

                    //getStockOutItemUnitForComboBox();

                    var stockOut_Quantity = document.getElementById('stockOutItem_Quantity').value;
                    var stockOut_Cost = document.getElementById('stockOutItem_Cost').value;

                    document.getElementById('stockOutItem_Amount').value = Math.round(( stockOut_Quantity * stockOut_Cost ) * 100 ) / 100;
                    if(document.getElementById('stockOutItem_BUCQuantity').value == 0) {
                        document.getElementById('stockOutItem_BUCCost').value = 0;
                    } else {
                        document.getElementById('stockOutItem_BUCCost').value = stockOut_Cost;
                    }
                }
            });
        }

        // ====================
        // CBO Item Description
        // ====================
        function createCboForItemDescription(articleItems) {
            var ItemDescriptionCollections = new wijmo.collections.CollectionView(articleItems);
            var ItemDescriptionList = new Array();
            for (var i = 0; i < ItemDescriptionCollections.items.length; i++) {
                ItemDescriptionList.push(ItemDescriptionCollections.items[i].ItemDescription);
            }

            var disabled;
            if(articleItems == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboItemDescriptionArticleItems.dispose();
            cboItemDescriptionArticleItems = new wijmo.input.ComboBox('#stockOutItem_ItemDescription', {
                disabled: disabled,
                placeholder: "Select Item Description",
                itemsSource: ItemDescriptionList,
                isEditable: false,
                selectedValue: document.getElementById('stockOutItem_ItemDescription_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_ItemId_data").val(ItemDescriptionCollections.items[this.selectedIndex].ItemId);
                    $("#stockOutItem_ItemCode_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].ItemCode);
                    $("#stockOutItem_ItemDescription_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].ItemDescription);
                    //$("#stockOutItem_Unit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
                    //$("#stockOutItem_Unit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
                    //$("#stockOutItem_BUCUnit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
                    //$("#stockOutItem_BUCUnit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
                    ///$("#stockOutItem_Particulars").val(ItemDescriptionCollections.items[this.selectedIndex].Particulars);
                    //$("#stockOutItem_Cost").val(ItemDescriptionCollections.items[this.selectedIndex].Cost);

                    createCboForManualCode(articleItems);
                    createCboForInventoryCode(ItemDescriptionCollections.items[this.selectedIndex].ItemId);

                    getStockOutItemUnitForComboBox(ItemDescriptionCollections.items[this.selectedIndex].ItemId);
                    getBUCUnitForComboBox(ItemDescriptionCollections.items[this.selectedIndex].ItemId);

                    var stockOut_Quantity = document.getElementById('stockOutItem_Quantity').value;
                    var stockOut_Cost = document.getElementById('stockOutItem_Cost').value;

                    document.getElementById('stockOutItem_Amount').value = Math.round(( stockOut_Quantity * stockOut_Cost ) * 100 ) / 100;
                    if(document.getElementById('stockOutItem_BUCQuantity').value == 0) {
                        document.getElementById('stockOutItem_BUCCost').value = 0;
                    } else {
                        document.getElementById('stockOutItem_BUCCost').value = stockOut_Cost;
                    }
                }
            });

            if(articleItems == 0) {
                document.getElementById('stockOutItem_ItemId_data').value = "";
                document.getElementById('stockOutItem_ItemCode_selectedValue').value = "";
                document.getElementById('stockOutItem_ItemDescription_selectedValue').value = "";
                document.getElementById('stockOutItem_Unit_data').value = "";
                document.getElementById('stockOutItem_Unit_selectedValue').value = "";
                //document.getElementById('stockOutItem_BUCUnit_data').value = "";
                //document.getElementById('stockOutItem_BUCUnit_selectedValue').value = "";
                //document.getElementById('stockOutItem_Particulars').value = "";
                //document.getElementById('stockOutItem_ItemInventoryCode_data').value = "";
                //document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = "";
                document.getElementById('stockOutItem_Cost').value = "";
            } else {
                document.getElementById('stockOutItem_ItemId_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemId;
                document.getElementById('stockOutItem_ItemCode_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemCode;
                document.getElementById('stockOutItem_ItemDescription_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemDescription;
                //document.getElementById('stockOutItem_Unit_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].UnitId;
                //document.getElementById('stockOutItem_Unit_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Unit;
                //document.getElementById('stockOutItem_BUCUnit_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].UnitId;
                //document.getElementById('stockOutItem_BUCUnit_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Unit;
                //document.getElementById('stockOutItem_Particulars').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Particulars;
                //document.getElementById('stockOutItem_ItemInventoryCode_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Id;
                //document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].InventoryCode;
                document.getElementById('stockOutItem_Cost').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Cost;

                getStockOutItemUnitForComboBox(ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemId);
                getBUCUnitForComboBox(ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemId);
                createCboForInventoryCode(ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemId);
            }
        }

        // ===========================
        // CBO for Item Inventory Code
        // ===========================
        function createCboForInventoryCode(ItemId) {
            var articleInventories = [];
            $.ajax({
                url: '/api/listArticleInventoryByArticleId/' + ItemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (articleInventoryResults) {
                    if (articleInventoryResults.length > 0) {
                        for (i = 0; i < articleInventoryResults.length; i++) {
                            articleInventories.push({
                                Id: articleInventoryResults[i]["Id"],
                                BranchId: articleInventoryResults[i]["BranchId"],
                                ItemId: articleInventoryResults[i]["ArticleId"],
                                ItemDescription: articleInventoryResults[i]["Article"],
                                InventoryCode: articleInventoryResults[i]["InventoryCode"],
                                Quantity: articleInventoryResults[i]["Quantity"],
                                Cost: articleInventoryResults[i]["Cost"],
                                Amount: articleInventoryResults[i]["Amount"],
                                Particulars: articleInventoryResults[i]["Particulars"],
                                ItemCode: articleInventoryResults[i]["ManualArticleCode"],
                                Unit: articleInventoryResults[i]["Unit"],
                                UnitId: articleInventoryResults[i]["UnitId"]
                            });
                        }

                        var InventoryCodeCollection = new wijmo.collections.CollectionView(articleInventories);
                        var InventoryCodeList = new Array();
                        for (var i = 0; i < InventoryCodeCollection.items.length; i++) {
                            InventoryCodeList.push(InventoryCodeCollection.items[i].InventoryCode);
                        }


                        var disabled = false;
                        var InventoryType = "@ViewData["InventoryType"]";
                        if(InventoryType == "Moving Average") {
                            disabled = true;
                        } else {
                            if(articleInventories == 0) {
                                disabled = true;
                            } else {
                                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                                    disabled = true;
                                } else {
                                    disabled = false;
                                }
                            }
                        }


                        cboInventoryCode.dispose();
                        cboInventoryCode = new wijmo.input.ComboBox('#stockOutItem_ItemInventoryCode', {
                            disabled: disabled,
                            placeholder: "Select Inventory Code",
                            itemsSource: InventoryCodeList,
                            isEditable: false,
                            selectedValue: document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value.toString(),
                            onSelectedIndexChanged: function () {
                                $("#stockOutItem_ItemInventoryCode_data").val(InventoryCodeCollection.items[this.selectedIndex].Id);
                                $("#stockOutItem_ItemInventoryCode_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].InventoryCode);
                                $("#stockOutItem_Cost").val( Math.round( InventoryCodeCollection.items[this.selectedIndex].Cost * 100 ) / 100);

                                var stockOut_Quantity = document.getElementById('stockOutItem_Quantity').value;
                                var stockOut_Cost = document.getElementById('stockOutItem_Cost').value;

                                document.getElementById('stockOutItem_Amount').value = Math.round(( stockOut_Quantity * stockOut_Cost ) * 100 ) / 100;
                                if(document.getElementById('stockOutItem_BUCQuantity').value == 0) {
                                    document.getElementById('stockOutItem_BUCCost').value = 0;
                                } else {
                                    document.getElementById('stockOutItem_BUCCost').value = Math.round( stockOut_Cost * 100 ) / 100;
                                }
                            }
                        });

                        if(articleInventories == 0) {
                            document.getElementById('stockOutItem_ItemId_data').value = "";
                            document.getElementById('stockOutItem_ItemCode_selectedValue').value = "";
                            document.getElementById('stockOutItem_ItemDescription_selectedValue').value = "";
                            document.getElementById('stockOutItem_Unit_data').value = "";
                            document.getElementById('stockOutItem_Unit_selectedValue').value = "";
                            //document.getElementById('stockOutItem_BUCUnit_data').value = "";
                            //document.getElementById('stockOutItem_BUCUnit_selectedValue').value = "";
                            //document.getElementById('stockOutItem_Particulars').value = "";
                            document.getElementById('stockOutItem_ItemInventoryCode_data').value = "";
                            document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = "";
                            //document.getElementById('stockOutItem_Cost').value = "";
                        } else {
                            document.getElementById('stockOutItem_ItemId_data').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].ItemId;
                            document.getElementById('stockOutItem_ItemCode_selectedValue').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].ItemCode;
                            document.getElementById('stockOutItem_ItemDescription_selectedValue').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].ItemDescription;
                            //document.getElementById('stockOutItem_Unit_data').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].UnitId;
                            //document.getElementById('stockOutItem_Unit_selectedValue').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Unit;
                            //document.getElementById('stockOutItem_BUCUnit_data').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].UnitId;
                            //document.getElementById('stockOutItem_BUCUnit_selectedValue').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Unit;
                            //document.getElementById('stockOutItem_Particulars').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Particulars;
                            document.getElementById('stockOutItem_ItemInventoryCode_data').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Id;
                            document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].InventoryCode;
                            //document.getElementById('stockOutItem_Cost').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Cost;

                            $("#stockOutItem_Cost").val( Math.round( InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Cost * 100 ) / 100);
                        }

                    } else {

                    }
                }
            });
        }

        // =============
        // Get Item Unit
        // =============
        function getStockOutItemUnitForComboBox(itemId) {
            stockOutUnits = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleUnitByArticleId/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            stockOutUnits.push({
                                UnitId: results[i]["UnitId"],
                                Unit: results[i]["Unit"],
                                Multiplier: results[i]["Multiplier"]
                            });
                        }
                        createCboForStockOutUnit(stockOutUnits);
                    } else {
                        createCboForStockOutUnit(stockOutUnits);
                    }
                }
            });
        }

        // ======================
        // CBO for Stock Out Unit
        // ======================
        function createCboForStockOutUnit(stockOutUnits) {
            var StockOutUnitCollection = new wijmo.collections.CollectionView(stockOutUnits);
            var StockOutUnitList = new Array();
            for (var i = 0; i < StockOutUnitCollection.items.length; i++) {
                StockOutUnitList.push(StockOutUnitCollection.items[i].Unit);
            }

            var disabled;
            if(stockOutUnits == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboStockOutUnit.dispose();
            cboStockOutUnit = new wijmo.input.ComboBox('#stockOutItem_Unit', {
                disabled: disabled,
                placeholder: "Select Unit",
                itemsSource: StockOutUnitList,
                isEditable: false,
                selectedValue: document.getElementById('stockOutItem_Unit_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_Unit_data").val(StockOutUnitCollection.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_Unit_selectedValue").val(StockOutUnitCollection.items[this.selectedIndex].Unit);
                    //$("#stockOutItem_BUCUnit_data").val(StockOutUnitCollection.items[this.selectedIndex].UnitId);
                    //$("#stockOutItem_BUCUnit_selectedValue").val(StockOutUnitCollection.items[this.selectedIndex].Unit);
                    getArticleItemForManualCodeAndComponent();
                    var quantity = document.getElementById("stockOutItem_Quantity").value.replace(/\,/g, '');;
                    var cost = document.getElementById("stockOutItem_Cost").value.replace(/\,/g, '');;

                    document.getElementById("stockOutItem_Cost").value = Math.round((cost / StockOutUnitCollection.items[this.selectedIndex].Multiplier) * 100) / 100;
                    document.getElementById('stockOutItem_Amount').value =  Math.round((quantity * document.getElementById("stockOutItem_Cost").value) * 100) / 100;
                }
            });

            if(stockOutUnits == 0) {
                document.getElementById('stockOutItem_Unit_data').value = "";
                document.getElementById('stockOutItem_Unit_selectedValue').value = "";
                //document.getElementById('stockOutItem_BUCUnit_data').value = "";
                //document.getElementById('stockOutItem_BUCUnit_selectedValue').value = "";
            } else {
                document.getElementById('stockOutItem_Unit_data').value = StockOutUnitCollection.items[cboStockOutUnit.selectedIndex].UnitId;
                document.getElementById('stockOutItem_Unit_selectedValue').value = StockOutUnitCollection.items[cboStockOutUnit.selectedIndex].Unit;
                //document.getElementById('stockOutItem_BUCUnit_data').value = StockOutUnitCollection.items[cboStockOutUnit.selectedIndex].UnitId;
                //document.getElementById('stockOutItem_BUCUnit_selectedValue').value = StockOutUnitCollection.items[cboStockOutUnit.selectedIndex].Unit;
            }

            var quantity = document.getElementById("stockOutItem_Quantity").value.replace(/\,/g, '');;
            var cost = document.getElementById("stockOutItem_Cost").value.replace(/\,/g, '');;

            document.getElementById("stockOutItem_Cost").value = Math.round((cost / StockOutUnitCollection.items[cboStockOutUnit.selectedIndex].Multiplier) * 100) / 100;
            document.getElementById('stockOutItem_Amount').value =  Math.round((quantity * document.getElementById("stockOutItem_Cost").value) * 100) / 100;
        }

        // =======================================
        // Get Item Unit for Basic Unit Conversion
        // =======================================
        function getBUCUnitForComboBox(itemId) {
            BUCUnits = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUnit',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            BUCUnits.push({
                                UnitId: results[i]["Id"],
                                Unit: results[i]["Unit"]
                            });
                        }
                        createCboForStockOutBaseUnit(BUCUnits, itemId);
                    } else {
                        createCboForStockOutBaseUnit(BUCUnits, itemId);
                    }
                }
            });
        }

        // ===========================
        // CBO for STock Out Base Unit
        // ===========================
        function createCboForStockOutBaseUnit(BUCUnits, itemId) {
            var StockOutBaseUnitCollection = new wijmo.collections.CollectionView(BUCUnits);
            var StockOutBaseUnitList = new Array();
            for (var i = 0; i < StockOutBaseUnitCollection.items.length; i++) {
                StockOutBaseUnitList.push(StockOutBaseUnitCollection.items[i].Unit);
            }

            var disabled;
            if(stockOutUnits == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            var Unit = "";
            var UnitId;
            $.ajax({
                url: '/api/article/' + itemId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    UnitId = results.UnitId;
                    Unit = results.Unit;

                    cboBaseUnit.dispose();
                    cboBaseUnit = new wijmo.input.ComboBox('#stockOutItem_BUCUnit', {
                        disabled: true,
                        placeholder: "Select Base Unit",
                        itemsSource: StockOutBaseUnitList,
                        isEditable: false,
                        required: false,
                        selectedValue: Unit.toString(),
                        onSelectedIndexChanged: function () {
                            $("#stockOutItem_BUCUnit_data").val(StockOutBaseUnitCollection.items[this.selectedIndex].UnitId);
                            //$("#stockOutItem_BUCUnit_selectedValue").val(StockOutBaseUnitCollection.items[this.selectedIndex].Unit);
                            //$("#stockOutItem_Unit_data").val(StockOutBaseUnitCollection.items[this.selectedIndex].UnitId);
                            //$("#stockOutItem_Unit_selectedValue").val(StockOutBaseUnitCollection.items[this.selectedIndex].Unit);
                        }
                    });

                    if (stockOutUnits == 0) {
                        document.getElementById('stockOutItem_BUCUnit_data').value =  "";
                    } else {
                        document.getElementById('stockOutItem_BUCUnit_data').value = StockOutBaseUnitCollection.items[cboBaseUnit.selectedIndex].UnitId;
                    }
                }
            });
        }

        // =====================
        // Get Stock Out Account
        // =====================
        function getStockOutItemAccountForComboBox() {
            stockOutItemAccounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            stockOutItemAccounts.push({
                                AccountId: results[i]["Id"],
                                AccountCode: results[i]["AccountCode"],
                                AccountAccount: results[i]["Account"]
                            });
                        }
                        createStockOutCboForAccountCode(stockOutItemAccounts);
                        createStockOutCboForAccount(stockOutItemAccounts);
                    } else {
                        createStockOutCboForAccountCode(stockOutItemAccounts);
                        createStockOutCboForAccount(stockOutItemAccounts);
                    }

                    var stockOutAccountCollection = new wijmo.collections.CollectionView(stockOutItemAccounts);
                    if(stockOutItemAccounts == 0) {
                        document.getElementById('stockOutItem_ExpenseAccount_data').value = "";
                    } else {
                        document.getElementById('stockOutItem_ExpenseAccount_data').value = stockOutAccountCollection.items[cboStockOutAccount.selectedIndex].AccountId;
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
        }

        // ====================
        // CBO for Account Code
        // ====================
        function  createStockOutCboForAccountCode(stockOutItemAccounts) {
            var stockOutAccountCollection = new wijmo.collections.CollectionView(stockOutItemAccounts);
            var stockOutAccountList = new Array();
            for (var i = 0; i < stockOutAccountCollection.items.length; i++) {
                stockOutAccountList.push(stockOutAccountCollection.items[i].AccountCode);
            }

            var disabled;
            if(stockOutItemAccounts == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboStockOutAccountCode.dispose();
            cboStockOutAccountCode = new wijmo.input.ComboBox('#stockOutItem_ExpenseAccountCode', {
                disabled: disabled,
                placeholder: "Select Expense Account Code",
                itemsSource: stockOutAccountList,
                isEditable: false,
                selectedValue: document.getElementById('stockOutItem_ExpenseAccountCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_ExpenseAccount_data").val(stockOutAccountCollection.items[this.selectedIndex].AccountId);
                    $("#stockOutItem_ExpenseAccount_selectedValue").val(stockOutAccountCollection.items[this.selectedIndex].AccountAccount);
                    createStockOutCboForAccount(stockOutItemAccounts);
                }
            });
        }

        // ===============
        // CBO for Account
        // ===============
        function  createStockOutCboForAccount(stockOutItemAccounts) {
            var stockOutAccountCollection = new wijmo.collections.CollectionView(stockOutItemAccounts);
            var stockOutAccountList = new Array();
            for (var i = 0; i < stockOutAccountCollection.items.length; i++) {
                stockOutAccountList.push(stockOutAccountCollection.items[i].AccountAccount);
            }

            var disabled;
            if(stockOutItemAccounts == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboStockOutAccount.dispose();
            cboStockOutAccount = new wijmo.input.ComboBox('#stockOutItem_ExpenseAccount', {
                disabled: disabled,
                placeholder: "Select Expense Account",
                itemsSource: stockOutAccountList,
                isEditable: false,
                selectedValue: document.getElementById('stockOutItem_ExpenseAccount_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_ExpenseAccount_data").val(stockOutAccountCollection.items[this.selectedIndex].AccountId);
                    $("#stockOutItem_ExpenseAccountCode_selectedValue").val(stockOutAccountCollection.items[this.selectedIndex].AccountCode);
                    createStockOutCboForAccountCode(stockOutItemAccounts);
                }
            });
        }

        // ==================
        // ADD Stock Out Item
        // ==================
        function cmdStockOutItem_OnClick() {
            $('#stockOutItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredStockOutItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById('cmdSaveStockOutItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveStockOutItemButton").prop("disabled", false);
            $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);

            getArticleItemForManualCodeAndComponent();

            //inventories = new wijmo.collections.ObservableArray();
            //setTimeout(function() {
            //    var articleId = document.getElementById('stockOutItem_ItemId_data').value;
            //    var branchId = document.getElementById('StockOut_Branch_data').value;
            //    $.ajax({
            //        url: '/api/listArticleInventoryByBranchIdAndArticleId/' + branchId + '/' + 0,
            //        cache: false,
            //        type: 'GET',
            //        contentType: 'application/json; charset=utf-8',
            //        data: {},
            //        success: function (results) {
            //            if (results.length > 0) {
            //                for (i = 0; i < results.length; i++) {
            //                    inventories.push({
            //                        Id: results[i]["Id"],
            //                        BranchId: results[i]["BranchId"],
            //                        ArticleId: results[i]["ArticleId"],
            //                        InventoryCode: results[i]["InventoryCode"],
            //                        Quantity: results[i]["Quantity"],
            //                        Cost: results[i]["Cost"],
            //                        Amount: results[i]["Amount"],
            //                        Particulars: results[i]["Particulars"]
            //                    });
            //                    createCboForInventoryCode(inventories);
            //                }
            //            } else {
            //                createCboForInventoryCode(inventories);
            //            }
            //        }
            //    });
            //},100);

            //getStockOutItemUnitForComboBox();
            getStockOutItemAccountForComboBox();

            document.getElementById('stockOutItem_Id').value = 0;
            document.getElementById('stockOutItem_ItemId_data').value = '';
            document.getElementById('stockOutItem_ItemCode_selectedValue').value = '';
            document.getElementById('stockOutItem_ItemDescription_selectedValue').value = '';
            document.getElementById('stockOutItem_Particulars').value = 'NA';
            document.getElementById('stockOutItem_ItemInventoryCode_data').value = '';
            document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = '';
            document.getElementById('stockOutItem_Quantity').value = 0;
            document.getElementById('stockOutItem_Unit_data').value = '';
            document.getElementById('stockOutItem_Unit_selectedValue').value = '';
            document.getElementById('stockOutItem_Cost').value = 0;
            document.getElementById('stockOutItem_Amount').value = 0;
            document.getElementById('stockOutItem_BUCUnit_data').value = '';
            document.getElementById('stockOutItem_BUCUnit_selectedValue').value = '';
            document.getElementById('stockOutItem_BUCQuantity').value = 0;
            document.getElementById('stockOutItem_BUCCost').value = 0;

            var stockOutAccountId = document.getElementById('StockOut_Account_data').value;
            var stockOutAccount = document.getElementById('StockOut_Account_selectedValue').value;

            document.getElementById('stockOutItem_ExpenseAccount_data').value = stockOutAccountId;
            document.getElementById('stockOutItem_ExpenseAccount_selectedValue').value = stockOutAccount;
        }

        // ===================
        // Edit Stock Out Item
        // ===================
        function btnEditStockOutItem_OnClick() {
            items.editItem(items.currentItem);
            $('#stockOutItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredStockOutItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            document.getElementById('cmdSaveStockOutItemButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $("#cmdSaveStockOutItemButton").prop("disabled", false);
            $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);

            getArticleItemForManualCodeAndComponent();
            //getStockOutItemUnitForComboBox();
            getStockOutItemAccountForComboBox();

            var item = items.currentEditItem;
            document.getElementById('stockOutItem_Id').value = item.Id;
            document.getElementById('stockOutItem_ItemId_data').value = item.ItemId;
            document.getElementById('stockOutItem_ItemCode_selectedValue').value = item.ItemCode;
            document.getElementById('stockOutItem_ItemDescription_selectedValue').value = item.Item;
            document.getElementById('stockOutItem_Particulars').value = item.Particulars;
            document.getElementById('stockOutItem_ItemInventoryCode_data').value = item.ItemInventoryId;
            document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = item.ItemInventory;
            document.getElementById('stockOutItem_Quantity').value = item.Quantity;
            document.getElementById('stockOutItem_Unit_data').value = item.UnitId;
            document.getElementById('stockOutItem_Unit_selectedValue').value = item.Unit;
            document.getElementById('stockOutItem_Cost').value = item.Cost;
            document.getElementById('stockOutItem_Amount').value = item.Amount;
            document.getElementById('stockOutItem_BUCUnit_data').value = item.BaseUnitId;
            document.getElementById('stockOutItem_BUCUnit_selectedValue').value = item.BaseUnit;
            document.getElementById('stockOutItem_BUCQuantity').value = item.BaseQuantity;
            document.getElementById('stockOutItem_BUCCost').value = item.BaseCost;
            document.getElementById('stockOutItem_ExpenseAccount_data').value = item.ExpenseAccountId;
            document.getElementById('stockOutItem_ExpenseAccount_selectedValue').value = item.ExpenseAccount;
        }

        // =====================
        // Delete Stock Out Item
        // =====================
        function btnDeleteStockOutItem_OnClick() {
            $('#deletStockOutItemsConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdConfirmDeleteStockOutItems').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $("#cmdConfirmDeleteStockOutItems").prop("disabled", false);
            $("#cmdConfirmDeleteStockOutItemsCloseButton").prop("disabled", false);
        }
        // Confirm Delete Stock Out Item
        function cmdStockOutItemsConfirmDeleteButton_OnClick() {
            document.getElementById('cmdConfirmDeleteStockOutItems').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $("#cmdConfirmDeleteStockOutItems").prop("disabled", true);
            $("#cmdConfirmDeleteStockOutItemsCloseButton").prop("disabled", true);

            items.editItem(items.currentItem);
            var item = items.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteStockOutItem/' + item,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteStockOutItems").prop("disabled", true);
                        $("#cmdConfirmDeleteStockOutItemsCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");

                        $('#deletStockOutItemsConfirm').modal('hide');

                        items = new wijmo.collections.CollectionView(getItem());

                        // Flex Grid for Items
                        itemGrid.itemsSource = items;
                        itemGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deletStockOutItemsConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockOutItems").prop("disabled", false);
                        $("#cmdConfirmDeleteStockOutItemsCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deletStockOutItemsConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockOutItems").prop("disabled", false);
                        $("#cmdConfirmDeleteStockOutItemsCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ===================
        // Save Stock Out Item
        // ===================
        function cmdStockOutItemSaveButton_OnClick() {
            var stockOutItemObject = new Object();
            var stockOutId = getParam("StockOutId");

            var stockOutItemId = document.getElementById('stockOutItem_Id').value;
            stockOutItemObject.OTId = stockOutId;
            stockOutItemObject.ExpenseAccountId = document.getElementById('stockOutItem_ExpenseAccount_data').value;
            stockOutItemObject.ItemId = document.getElementById('stockOutItem_ItemId_data').value;
            stockOutItemObject.ItemInventoryId = document.getElementById('stockOutItem_ItemInventoryCode_data').value;
            stockOutItemObject.Particulars = document.getElementById('stockOutItem_Particulars').value;
            stockOutItemObject.UnitId = document.getElementById('stockOutItem_Unit_data').value;
            stockOutItemObject.Quantity = document.getElementById('stockOutItem_Quantity').value;
            stockOutItemObject.Cost = document.getElementById('stockOutItem_Cost').value;
            stockOutItemObject.Amount = document.getElementById('stockOutItem_Amount').value;
            //stockOutItemObject.BaseUnitId = document.getElementById('stockOutItem_BUCUnit_data').value;
            //stockOutItemObject.BaseQuantity = document.getElementById('stockOutItem_BUCQuantity').value;
            //stockOutItemObject.BaseCost = document.getElementById('stockOutItem_BUCCost').value;
            var stockOutItemData = JSON.stringify(stockOutItemObject);

            if( document.getElementById('stockOutItem_ExpenseAccount_data').value == '') {
                document.getElementById("stockOutItem_ExpenseAccount").style.border = "1px solid red";
            } else {
                document.getElementById("stockOutItem_ExpenseAccount").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('stockOutItem_ItemId_data').value == '') {
                document.getElementById("stockOutItem_ItemCode").style.border = "1px solid red";
                document.getElementById("stockOutItem_ItemDescription").style.border = "1px solid red";
            } else {
                document.getElementById("stockOutItem_ItemCode").style.border = "1px solid #C8C8C8";
                document.getElementById("stockOutItem_ItemDescription").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('stockOutItem_Unit_data').value == '') {
                document.getElementById("stockOutItem_Unit").style.border = "1px solid red";
            } else {
                document.getElementById("stockOutItem_Unit").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('stockOutItem_BUCUnit_data').value == '') {
                document.getElementById("stockOutItem_BUCUnit").style.border = "1px solid red";
            } else {
                document.getElementById("stockOutItem_BUCUnit").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredStockOutItem').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
            } else {
                document.getElementById('cmdSaveStockOutItemButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $("#cmdSaveStockOutItemButton").prop("disabled", true);
                $("#cmdStockOutItemDetailCloseButton").prop("disabled", true);
                if (stockOutItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addStockOutItem',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockOutItemData,
                        success: function(id) {
                            if(id > 0) {
                                $("#cmdSaveStockOutItemButton").prop("disabled", true);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", true);
                                toastr.success("Save Successful");

                                $('#stockOutItemsEdit').modal('hide');

                                items = new wijmo.collections.CollectionView(getItem());

                                // Flex Grid for Items
                                itemGrid.itemsSource = items;
                                itemGrid.trackChanges = true;
                            } else {
                                $("#cmdSaveStockOutItemButton").prop("disabled", false);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);
                                toastr.error("Internal Server Error");
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateStockOutItem/' + stockOutItemId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockOutItemData,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveStockOutItemButton").prop("disabled", true);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", true);
                                toastr.success("Update Successful");

                                $('#stockOutItemsEdit').modal('hide');

                                items = new wijmo.collections.CollectionView(getItem());

                                // Flex Grid for Items
                                itemGrid.itemsSource = items;
                                itemGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Not Found");
                                $('#stockOutItemsEdit').modal('hide');
                                $("#cmdSaveStockOutItemButton").prop("disabled", false);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#stockOutItemsEdit').modal('hide');
                                $("#cmdSaveStockOutItemButton").prop("disabled", false);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ======
        //  Items
        // ======
        function itemTab() {
            $('#stockOutItem_Quantity').keyup(function() {
                document.getElementById('stockOutItem_BUCQuantity').value = this.value;

                var stockOut_Quantity = document.getElementById('stockOutItem_Quantity').value;
                var stockOut_Cost = document.getElementById('stockOutItem_Cost').value;

                document.getElementById('stockOutItem_Amount').value = Math.round(( stockOut_Quantity * stockOut_Cost ) * 100 ) / 100;
                if(this.value == 0) {
                    document.getElementById('stockOutItem_BUCCost').value = 0;
                } else {
                    document.getElementById('stockOutItem_BUCCost').value = stockOut_Cost;
                }
            });

            document.getElementById('stockOutItem_Cost').disabled = true;
            document.getElementById('stockOutItem_Amount').disabled = true;
            document.getElementById('stockOutItem_BUCQuantity').disabled = true;
            document.getElementById('stockOutItem_BUCCost').disabled = true;

            cboManualCodeArticleItems = new wijmo.input.ComboBox('#stockOutItem_ItemCode');
            cboItemDescriptionArticleItems = new wijmo.input.ComboBox('#stockOutItem_ItemDescription');
            cboInventoryCode = new wijmo.input.ComboBox('#stockOutItem_ItemInventoryCode');
            cboStockOutUnit = new wijmo.input.ComboBox('#stockOutItem_Unit');
            cboBaseUnit = new wijmo.input.ComboBox('#stockOutItem_BUCUnit');
            cboStockOutAccountCode = new wijmo.input.ComboBox('#stockOutItem_ExpenseAccountCode');
            cboStockOutAccount = new wijmo.input.ComboBox('#stockOutItem_ExpenseAccount');

            items = new wijmo.collections.CollectionView(getItem());

            // Flex Grid for Items
            itemGrid = new wijmo.grid.FlexGrid('#ItemGrid');
            itemGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Code",
                                "binding": "ItemCode",
                                "allowSorting": true,
                                "width": 110,
                            },
                            {
                                "header": "Item",
                                "binding": "Item",
                                "allowSorting": true,
                                "width": 200,
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": 250
                            },
                            {
                                "header": "Inventory Code",
                                "binding": "ItemInventory",
                                "allowSorting": true,
                                "width": 200
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": 150
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": 120
                            },
                            {
                                "header": "Cost",
                                "binding": "Cost",
                                "allowSorting": true,
                                "width": 150
                            },
                             {
                                 "header": "Amount",
                                 "binding": "Amount",
                                 "allowSorting": true,
                                 "width": 150
                             },
                             {
                                 "header": "Unit",
                                 "binding": "BaseUnit",
                                 "allowSorting": true,
                                 "width": 150
                             },
                            {
                                "header": "Quantity",
                                "binding": "BaseQuantity",
                                "allowSorting": true,
                                "width": 150
                            },
                           {
                               "header": "Cost",
                               "binding": "BaseCost",
                               "allowSorting": true,
                               "width": 150
                           },
                           {
                               "header": "Expense Account",
                               "binding": "ExpenseAccount",
                               "allowSorting": true,
                               "width": 300
                           },
                ],
                autoGenerateColumns: false,
                itemsSource: items,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            itemGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            itemGrid.columnHeaders.rows.push(hr);
            itemGrid.columnHeaders.rows[0].allowMerging = true;

            itemGrid.columnHeaders.columns[0].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 0, 'Edit');

            itemGrid.columnHeaders.columns[1].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 1, 'Delete');

            itemGrid.columnHeaders.columns[2].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 2, 'Code');

            itemGrid.columnHeaders.columns[3].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 3, 'Item');

            itemGrid.columnHeaders.columns[4].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 4, 'Particulars');

            itemGrid.columnHeaders.columns[5].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 5, 'Inventory Code');

            itemGrid.columnHeaders.columns[6].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 6, 'Quantity');

            itemGrid.columnHeaders.columns[7].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 7, 'Unit');

            itemGrid.columnHeaders.columns[8].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 8, 'Cost');

            itemGrid.columnHeaders.columns[9].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 9, 'Amount');

            for (var columnBasicUnitConversion = 10; columnBasicUnitConversion <= 12; columnBasicUnitConversion++) {
                itemGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Basic Unit Conversion');
            }

            itemGrid.columnHeaders.columns[13].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 13, 'Expense Account');
        }
    </script>

    <!-- ========================= -->
    <!-- Inventory Entries Scripts -->
    <!-- ========================= -->
    <script type="text/javascript">
        // ======================================
        // Global Variables for Inventory Entries
        // ======================================
        var inventoryEntries;
        var inventoryEntryGrid;

        var btnFirstPageGridInventoryEntry;
        var btnPreviousPageGridInventoryEntry;
        var btnNextPageGridInventoryEntry;
        var btnLastPageGridInventoryEntry;
        var btnCurrentPageGridInventoryEntry;

        // ==================
        // GET Inventory List
        // ==================
        function getInventoryEntries() {
            var inventoryEntries = new wijmo.collections.ObservableArray;
            var stockOutId = getParam("StockOutId");
            NProgress.start();
            if (document.location.search.length == 0) {
                NProgress.done();
            } else {
                $.ajax({
                    url: '/api/listInventoryByOTId/' + stockOutId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            for (i = 0; i < Results.length; i++) {
                                inventoryEntries.push({
                                    EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                    DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                    Id: Results[i]["Id"],
                                    BranchId: Results[i]["BranchId"],
                                    Branch: Results[i]["Branch"],
                                    InventoryDate: Results[i]["InventoryDate"],
                                    ArticleId: Results[i]["ArticleId"],
                                    Article: Results[i]["Article"],
                                    ArticleInventoryId: Results[i]["ArticleInventoryId"],
                                    RRId: Results[i]["RRId"],
                                    SIId: Results[i]["SIId"],
                                    INId: Results[i]["INId"],
                                    OTId: Results[i]["OTId"],
                                    STId: Results[i]["STId"],
                                    QuantityIn: Results[i]["QuantityIn"],
                                    Quantity: Results[i]["Quantity"],
                                    QuantityOut: Results[i]["QuantityOut"],
                                    Amount: Results[i]["Amount"],
                                    Particulars: Results[i]["Particulars"],
                                    Code: Results[i]["Code"],
                                    Unit: Results[i]["Unit"]
                                });
                            }
                        }
                        NProgress.done();
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            }
            return inventoryEntries;
        }

        // ========================================
        // FlexGrid Selection for Inventory Entries
        // ========================================
        function updateDetailsInventoryEntry() {
            var item = inventoryEntries.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ==================================
        // On Page Load for Inventory Entries
        // ==================================
        function inventoryEntryTab() {
            inventoryEntries = new wijmo.collections.CollectionView(getInventoryEntries());

            // Flex Grid for Inventory Entries
            inventoryEntryGrid = new wijmo.grid.FlexGrid('#InventoryEntryGrid');
            inventoryEntryGrid.initialize({
                columns: [
                    {
                        "header": "Date",
                        "binding": "InventoryDate",
                        "allowSorting": true,
                        "width": 100,
                    },
                    {
                        "header": "Branch",
                        "binding": "Branch",
                        "allowSorting": true,
                        "width": 200,
                    },
                    {
                        "header": "Item",
                        "binding": "Article",
                        "align": "left",
                        "allowSorting": true,
                        "width": 250,
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "align": "left",
                        "allowSorting": true,
                        "width": 300,
                    },
                    {
                        "header": "Inventory Code",
                        "binding": "Code",
                        "allowSorting": true,
                        "width": 200,
                    },
                    {
                        "header": "Quantity",
                        "binding": "Quantity",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Unit",
                        "binding": "Unit",
                        "allowSorting": true,
                        "width": 150,
                    },
                    {
                        "header": "Amount",
                        "binding": "Amount",
                        "allowSorting": true,
                        "width": 150,
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryEntries,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntryGrid.trackChanges = true;
        }
    </script>

    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        var journals;
        var journalListGrid;

        var btnFirstPageGridJournal;
        var btnPreviousPageGridJournal;
        var btnNextPageGridJournal;
        var btnLastPageGridJournal;
        var btnCurrentPageGridJournal;

        // ===========
        // Get Journal
        // ===========
        function getJournalListForStockOut() {
            var journals = new wijmo.collections.ObservableArray;
            var stockOutId = getParam("StockOutId");
            //$('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listJournalByOTId/' + stockOutId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    //$('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            journals.push({
                                //EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdJournalVoucherLineEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                //DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdJournalVoucherLineDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: Results[i]["Id"],
                                JournalDate: Results[i]["JournalDate"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                AccountId: Results[i]["AccountId"],
                                AccountCode: Results[i]["AccountCode"],
                                Account: Results[i]["Account"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                Particulars: Results[i]["Particulars"],
                                DebitAmount: Results[i]["DebitAmount"],
                                CreditAmount: Results[i]["CreditAmount"],
                                ORId: Results[i]["ORId"],
                                CVId: Results[i]["CVId"],
                                JVId: Results[i]["JVId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"],
                                DocumentReference: Results[i]["DocumentReference"],
                                APRRId: Results[i]["APRRId"],
                                ARSIId: Results[i]["ARSIId"]
                            });

                            var debitAmountTotal = 0;
                            var creditAmountTotal = 0;

                            var a = 0;
                            while (a < Results.length) {
                                debitAmountTotal += Results[a]["DebitAmount"];
                                creditAmountTotal += Results[a]["CreditAmount"];
                                a++;
                            }
                        }

                        document.getElementById('totalDebitInJournal').innerHTML = debitAmountTotal.toLocaleString();
                        document.getElementById('totalCreditInJournal').innerHTML = creditAmountTotal.toLocaleString();
                        var variance = debitAmountTotal - creditAmountTotal;
                        document.getElementById('variance').innerHTML = variance.toLocaleString();
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return journals;
        }

        // ============
        // Journal List
        // ============
        function stockOutJournal_OnClick() {
            journals = new wijmo.collections.CollectionView(getJournalListForStockOut());

            document.getElementById("loadingJournalGridList").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';

            $("#loadingJournalGridList").show();
            $("#journal_Content").hide();
            setTimeout(function () {
                $("#loadingJournalGridList").hide();
                $("#journal_Content").show();
                // Flex Grid
                journalListGrid = new wijmo.grid.FlexGrid('#journalGrid');
                journalListGrid.initialize({
                    columns: [
                        {
                            "header": "Code",
                            "binding": "AccountCode",
                            "allowSorting": true,
                            "width": 100
                        },
                        {
                            "header": "Account",
                            "binding": "Account",
                            "allowSorting": true,
                            "width": 220
                        },
                        {
                            "header": "Article",
                            "binding": "Article",
                            "allowSorting": true,
                            "width": 212
                        },
                        {
                            "header": "Debit",
                            "binding": "DebitAmount",
                            "allowSorting": true,
                            "width": 150
                        }
                        ,
                        {
                            "header": "Credit",
                            "binding": "CreditAmount",
                            "allowSorting": true,
                            "width": 150
                        },
                        {
                            "header": "Branch",
                            "binding": "Branch",
                            "allowSorting": true,
                            "width": 200
                        },
                        {
                            "header": "Date",
                            "binding": "JournalDate",
                            "allowSorting": true,
                            "width": 100,
                        }
                    ],
                    autoGenerateColumns: false,
                    itemsSource: journals,
                    isReadOnly: true,
                    autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                    allowDragging: wijmo.grid.AllowDragging.None,
                    selectionMode: wijmo.grid.SelectionMode.Row
                });

                journalListGrid.trackChanges = true;
            }, 1000);
        }

        // journal detail
        $('#cmdStockOutJournal').click(function () {
            $('#journalDetail').modal({
                show: true,
                backdrop: 'static'
            });

            window.stockOutJournal_OnClick = function () {
                return true;
            };
        });

        // ====
        // TABS
        // ====
        $('#itemTabId').click(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            window.itemTab = function () {
                return true;
            };
        });

        $('#inventoryEntryTabId').click(function () {
            $('#Items').hide();
            $('#InventoryEntries').show();
            inventoryEntryTab();
            window.inventoryEntryTab = function () {
                return true;
            };
        });

        $(document).ready(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            itemTab();

            $(document).on('show.bs.modal', '.modal', function (event) {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () {
                    $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack');
                }, 0);
            });

            $(document).on('hidden.bs.modal', '.modal', function () {
                $('.modal:visible').length && $(document.body).addClass('modal-open');
            });
        });
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
</body>
</html>