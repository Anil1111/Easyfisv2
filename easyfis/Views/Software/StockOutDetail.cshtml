@{
    var branchId = Request.QueryString["BranchId"];
    var stockOutId = Request.QueryString["StockOutId"];
    var userId = ViewData["UserId"];
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <meta name="description" content="Some slide and push menu demos using CSS3 transitions.">

    <!-- Title of the Page -->
    <title>Stock Out Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="wrapper" class="wrapper">
        <!-- Header -->
        @Html.Partial("_SoftwareHeader")

        <!-- Section -->
        <section>
            <div class="sub-nav">
                <div class="container">
                    <h4><i class="fa fa-dropbox fa-2x"></i>  Stock Out Detail</h4>
                </div>
                <div class="div_Current_Page">
                    <div class="container">
                        <span id="currentPage"></span>
                    </div>
                </div>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <h4 id="stockOutDetailLabel"></h4>
                    </div>
                    <div class="col-md-6" align="right">
                        <button class="btn btn-primary btn-sm" id="cmdStockOutJournal" onclick="stockOutJournal_OnClick()"><i class="fa fa-book"></i> Journal</button>
                        <button class="btn btn-primary btn-sm" id="cmdStockOutSaveLock" onclick="btnStockOutSaveLock_OnClick()"><i class="fa fa-save"></i> Save (Lock)</button>
                        <button class="btn btn-primary btn-sm" id="cmdStockOutSave" onclick="btnStockOutSave_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button class="btn btn-primary btn-sm" id="cmdStockOutEdit" onclick="btnStockOutEdit_OnClick()"><i class="fa fa-edit"></i> Edit (Unlock)</button>
                        <button class="btn btn-primary btn-sm" id="cmdStockOutPrint" onclick="window.location.href ='@Url.Action("StockOutPDF", "Software", new { StockOutId = stockOutId })'"><i class="fa fa-print"></i> Print</button>
                        <button onclick="window.location.href = '@Url.Action("StockOut", "Software", new { BranchId = branchId })'" class="btn btn-danger btn-sm" id="cmdStockOutClose"><i class="fa fa-times"></i> Close</button>
                    </div>
                </div>
                @*<hr />*@
                <div class="well">
                    <form class="form-horizontal" role="form">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Branch</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockOut_Branch"></div>

                                        <input type="hidden" id="StockOut_Branch_data" class="requiredStockOut" />
                                        <input type="hidden" id="StockOut_Branch_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">OT Number</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredStockOut" id="StockOut_OTNumber_Display" />
                                        <input type="hidden" id="StockOut_OTNumber" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">OT Date</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockOut_OTDate"></div>
                                        <input type="hidden" id="StockOut_OTDate_data" class="requiredStockOut" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Account</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockOut_Account"></div>

                                        <input type="hidden" id="StockOut_Account_data" class="requiredStockOut" />
                                        <input type="hidden" id="StockOut_Account_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Article</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockOut_Article"></div>

                                        <input type="hidden" id="StockOut_Article_data" class="requiredStockOut" />
                                        <input type="hidden" id="StockOut_Article_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Particulars</label>
                                    <div class="col-sm-8">
                                        <textarea class="form-control textarea-custom requiredStockOut" id="StockOut_Particulars"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Manual OT Number</label>
                                    <div class="col-sm-8">
                                        <input type="text" class="form-control input-sm requiredStockOut" id="StockOUt_ManualOTNumber">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Prepared by</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockOut_PreparedBy"></div>

                                        <input type="hidden" id="StockOut_PreparedBy_data" class="requiredStockOut" />
                                        <input type="hidden" id="StockOut_PreparedBy_selectedValue" />
                                        <input type="hidden" id="userId_data" value="@userId" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Checked by</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockOut_CheckedBy"></div>

                                        <input type="hidden" id="StockOut_CheckedBy_data" class="requiredStockOut" />
                                        <input type="hidden" id="StockOut_CheckedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Approved by</label>
                                    <div class="col-sm-8">
                                        <div class="comboBox-wide" id="StockOut_ApprovedBy"></div>

                                        <input type="hidden" id="StockOut_ApprovedBy_data" class="requiredStockOut" />
                                        <input type="hidden" id="StockOut_ApprovedBy_selectedValue" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-sm-4">Lock</label>
                                    <div class="col-sm-8">
                                        <input type="checkbox" id="StockOut_Lock">
                                    </div>
                                </div>
                                @*<div class="form-group">
                                        <div class="col-sm-4"></div>
                                        <div class="col-sm-8">
                                            <button type="button" class="btn btn-primary btn-sm">FA Disposal</button>
                                        </div>
                                    </div>*@
                                <div class="form-group">
                                    <div class="col-sm-4"></div>
                                    <div class="col-sm-8">
                                        <input type="hidden" id="StockOut_IsLocked">
                                        <input type="hidden" id="StockOut_IsLocked_defaultTrue">
                                        <input type="hidden" id="StockOut_IsLocked_defaultFalse">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <h4>Stock Out Line</h4>
                    </div>
                </div>
                <!-- Stock Out line -->
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#Items" id="itemTabId">Items</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#InventoryEntries" id="inventoryEntryTabId">Inventory Entries</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="Items" class="tab-pane fade in active">
                        <!-- Item  List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Items</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterItem" placeholder="Search">
                                </div>
                            </div>
                            <div class="col-lg-8" align="right">
                                <button class="btn btn-primary btn-sm" id="btnStockOutAddItem" onclick="cmdStockOutItem_OnClick()"><i class="fa fa-plus"></i> Add</button>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="ItemGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="navigationPageGridItem">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridItem">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridItem">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridItem"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridItem">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridItem">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>

                    <div id="InventoryEntries" class="tab-pane fade in active">
                        <!-- Inventory Entries List -->
                        <div class="row">
                            <div class="col-lg-12">
                                <h4>Inventory Entries</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="input-group input-group-sm">
                                    <span class="input-group-addon"><i class="fa fa-search"></i></span>
                                    <input type="text" class="form-control input-sm" id="InputFilterInventoryEntry" placeholder="Search">
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row" align="left">
                            <div class="col-lg-12">
                                <div id="InventoryEntryGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="btn-group col-md-7" id="navigationPageGridInventoryEntry">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridInventoryEntry"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridInventoryEntry">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- ===================== -->
        <!-- Stock Out Item Detail -->
        <!-- ===================== -->
        <div class="modal fade" id="stockOutItemsEdit" role="dialog">
            <div class="modal-dialog modal-lg">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="stockOutItemsModalLabel">Stock-Out Line Item Detail</h4>
                    </div>
                    <div class="modal-body">
                        <form id="stockOutItemsDetailForm">
                            <input type="hidden" id="stockOutItem_Id" />
                            <div class="row">
                                <div class="col-md-6">
                                    <dl class="dl-horizontal">
                                        <dt>Item Code</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="stockOutItem_ItemCode"></div>

                                            <input type="hidden" id="stockOutItem_ItemId_data" class="requiredStockOutItem">
                                            <input type="hidden" id="stockOutItem_ItemCode_selectedValue" />
                                        </dd>
                                        <dt>Item Description</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="stockOutItem_ItemDescription"></div>

                                            <input type="hidden" id="stockOutItem_ItemDescription_selectedValue" />
                                        </dd>
                                        <dt>Particulars</dt>
                                        <dd><textarea class="form-control textarea-custom requiredStockOutItem" id="stockOutItem_Particulars"></textarea></dd>
                                        <dt>Item Inventory Code</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="stockOutItem_ItemInventoryCode"></div>

                                            <input type="hidden" id="stockOutItem_ItemInventoryCode_data" class="requiredStockOutItem">
                                            <input type="hidden" id="stockOutItem_ItemInventoryCode_selectedValue" />
                                        </dd>
                                        <dt>Quantity</dt>
                                        <dd><input type="text" class="form-control input-sm requiredStockOutItem" id="stockOutItem_Quantity" /></dd>
                                        <dt>Unit</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="stockOutItem_Unit"></div>

                                            <input type="hidden" id="stockOutItem_Unit_data" class="requiredStockOutItem">
                                            <input type="hidden" id="stockOutItem_Unit_selectedValue" />
                                        </dd>
                                        <dt>Cost</dt>
                                        <dd><input type="text" class="form-control input-sm requiredStockOutItem" id="stockOutItem_Cost" /></dd>
                                        <dt>Amount</dt>
                                        <dd><input type="text" class="form-control input-sm requiredStockOutItem" id="stockOutItem_Amount" /></dd>
                                    </dl>
                                </div>
                                <div class="col-md-6">
                                    <dl class="dl-horizontal">
                                        <dt></dt>
                                        <dd>
                                            <center><label>Basic Unit Conversion</label></center>
                                            <br />
                                        </dd>
                                        <dt>Unit</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="stockOutItem_BUCUnit"></div>

                                            <input type="hidden" id="stockOutItem_BUCUnit_data" class="requiredStockOutItem">
                                            <input type="hidden" id="stockOutItem_BUCUnit_selectedValue" />
                                        </dd>
                                        <dt>Quantity</dt>
                                        <dd><input type="text" class="form-control input-sm requiredStockOutItem" id="stockOutItem_BUCQuantity" /></dd>
                                        <dt>Cost</dt>
                                        <dd><input type="text" class="form-control input-sm requiredStockOutItem" id="stockOutItem_BUCCost" /></dd>
                                        <dt></dt>
                                        <dd>
                                            <br />
                                            <br />
                                        </dd>
                                        <dt>Expense Account</dt>
                                        <dd>
                                            <div class="comboBox-wide" id="stockOutItem_ExpenseAccount"></div>

                                            <input type="hidden" id="stockOutItem_ExpenseAccount_data" class="requiredStockOutItem">
                                            <input type="hidden" id="stockOutItem_ExpenseAccount_selectedValue" />
                                        </dd>
                                    </dl>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-primary btn-sm" id="cmdSaveStockOutItemButton" onclick="cmdStockOutItemSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                        <button id="cmdStockOutItemDetailCloseButton" class="btn btn-danger btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Journal Detail -->
        <div class="modal fade" id="journalDetail" role="dialog">
            <div class="modal-dialog modal-lg">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title" id="journalModalLabel"> Journal</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row" align="left">
                            <center>
                                <h4>
                                    <span id="loadingJournalGridList"></span>
                                </h4>
                            </center>
                            <div class="col-lg-12">
                                <div id="journalGrid" class="grid" align="left"></div>
                            </div>
                        </div>
                        <br /><br />
                        <div class="row" id="footerModalJournalNavigationButtons">
                            <div class="btn-group col-md-9" id="navigationPageGridJournal">
                                <button type="button" class="btn btn-default" id="btnMoveToFirstPageGridJournal">
                                    <span class="glyphicon glyphicon-fast-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToPreviousPageGridJournal">
                                    <span class="glyphicon glyphicon-step-backward"></span>
                                </button>
                                <button type="button" class="btn btn-default" disabled style="width: 100px" id="btnCurrentPageGridJournal"></button>
                                <button type="button" class="btn btn-default" id="btnMoveToNextPageGridJournal">
                                    <span class="glyphicon glyphicon-step-forward"></span>
                                </button>
                                <button type="button" class="btn btn-default" id="btnMoveToLastPageGridJournal">
                                    <span class="glyphicon glyphicon-fast-forward"></span>
                                </button>
                            </div>
                            <div class="col-md-3">
                                <table>
                                    <tr>
                                        <td align="right"> <b>Total Debit:</b> </td>
                                        <td style="padding-left: 15px"></td>
                                        <td> <span id="totalDebitInJournal"></span></td>
                                    </tr>
                                    <tr>
                                        <td align="right"> <b>Total Credit:</b> </td>
                                        <td style="padding-left: 15px"></td>
                                        <td> <span id="totalCreditInJournal"></span></td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        @*<button class="btn btn-primary btn-sm" id="cmdSaveJournalButton" onclick="cmdJournalSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>*@
                        <button id="cmdJournalDetailCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"> Okay</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- ========================================= -->
        <!-- Stock Out Items Delete Modal Confirmation -->
        <!-- ========================================= -->
        <div class="modal fade" id="deletStockOutItemsConfirm" role="dialog">
            <div class="modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Delete Stock-Out Item <i class="fa fa-trash"></i></h4>
                    </div>
                    <div class="modal-body">
                        Are you sure you want to delete this?
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-danger btn-sm" id="cmdConfirmDeleteStockOutItems" onclick="cmdStockOutItemsConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                        <button id="cmdConfirmDeleteStockOutItemsCloseButton" class="btn btn-primary btn-sm" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Loading Modal -->
        <div class="modal fade" id="loadingModal" tabindex="-1" role="dialog" aria-labelledby="Loading..." aria-hidden="true" data-backdrop="static" data-keyboard="false">
            <div class=" modal-dialog modal-sm">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-body">
                        <h4>Loading ...</h4>
                    </div>
                    <div class="modal-footer">
                        <img class="img-thumbnail img-responsive center-block img-custom" src='~/images/loading/progress_bar.gif'>
                    </div>
                </div>
            </div>
        </div>

        <!-- Footer -->
        @Html.Partial("_SoftwareFooter")
    </div>

    <!-- SideBar Menu -->
    @Html.Partial("_SoftwareSideBarMenu")

    <div id="c-mask" class="c-mask"></div><!-- /c-mask -->
    <!-- Scripts JavaScripts -->
    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var stockOuts;
        var branches;
        var accounts;
        var articles;
        var users;
        var OTDate;
        var cboBranch;
        var cboForAccount;
        var cboArticle;
        var cboPreparedBy;
        var cboCheckedBy;
        var cboApprovedBy;

        // ==================
        // GET Stock out List
        // ==================
        function getStockOutById() {
            stockOuts = new wijmo.collections.ObservableArray;
            var stockOutId = @stockOutId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/stockOut/' + stockOutId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    //if (Results.length > 0) {
                    //    stockOuts.push({
                    //        Id: Results.Id,
                    //        BranchId: Results.BranchId,
                    //        Branch: Results.Branch,
                    //        OTNumber: Results.OTNumber,
                    //        OTDate: Results.OTDate,
                    //        AccountId: Results.AccountId,
                    //        Account: Results.Account,
                    //        ArticleId: Results.ArticleId,
                    //        Article: Results.Article,
                    //        Particulars: Results.Particulars,
                    //        ManualOTNumber: Results.ManualOTNumber,
                    //        PreparedById: Results.PreparedById,
                    //        PreparedBy: Results.PreparedBy,
                    //        CheckedById: Results.CheckedById,
                    //        CheckedBy: Results.CheckedBy,
                    //        ApprovedById: Results.ApprovedById,
                    //        ApprovedBy: Results.ApprovedBy,
                    //        IsLocked: Results.IsLocked,
                    //        CreatedById: Results.CreatedById,
                    //        CreatedBy: Results.CreatedBy,
                    //        CreatedDateTime: Results.CreatedDateTime,
                    //        UpdatedById: Results.UpdatedById,
                    //        UpdatedBy: Results.UpdatedBy,
                    //        UpdatedDateTime: Results.UpdatedDateTime
                    //    });
                    //}

                    if(Results != null) {
                        document.getElementById('StockOut_Branch_data').value = Results.BranchId;
                        document.getElementById('StockOut_Branch_selectedValue').value = Results.Branch;
                        document.getElementById('StockOut_OTNumber').value = Results.OTNumber;
                        document.getElementById('StockOut_OTNumber_Display').value = Results.OTNumber;
                        document.getElementById('StockOut_OTDate_data').value = Results.OTDate;

                        var OTDate_date = Results.OTDate;
                        OTDate.dispose();
                        OTDate = new wijmo.input.InputDate('#StockOut_OTDate', {
                            format: 'MM/dd/yyyy',
                            value: new Date(OTDate_date),
                            mask: '99/99/9999',
                            onValueChanged: function () {
                                document.getElementById('StockOut_OTDate_data').value = this.value.toLocaleDateString();
                            }
                        });

                        document.getElementById('StockOut_Account_data').value = Results.AccountId;
                        document.getElementById('StockOut_Account_selectedValue').value = Results.Account;
                        document.getElementById('StockOut_Article_data').value = Results.ArticleId;
                        document.getElementById('StockOut_Article_selectedValue').value = Results.Article;
                        document.getElementById('StockOut_Particulars').value = Results.Particulars;
                        document.getElementById('StockOUt_ManualOTNumber').value = Results.ManualOTNumber;
                        document.getElementById('StockOut_PreparedBy_data').value = Results.PreparedById;
                        document.getElementById('StockOut_PreparedBy_selectedValue').value = Results.PreparedBy;
                        document.getElementById('StockOut_CheckedBy_data').value = Results.CheckedById;
                        document.getElementById('StockOut_CheckedBy_selectedValue').value = Results.CheckedBy;
                        document.getElementById('StockOut_ApprovedBy_data').value = Results.ApprovedById;
                        document.getElementById('StockOut_ApprovedBy_selectedValue').value = Results.ApprovedBy;
                        document.getElementById('StockOut_Lock').checked = Results.IsLocked;

                        document.getElementById('createdBy').innerHTML = Results.CreatedBy;
                        document.getElementById('createdDate').innerHTML = Results.CreatedDateTime;
                        document.getElementById('updatedBy').innerHTML = Results.UpdatedBy;
                        document.getElementById('updatedDate').innerHTML = Results.UpdatedDateTime;

                        document.getElementById('StockOut_IsLocked').value = Results.IsLocked;

                        if(document.getElementById('StockOut_IsLocked').value  == 'true') {
                            document.getElementById('StockOut_Particulars').disabled = true;
                            document.getElementById('StockOUt_ManualOTNumber').disabled = true;

                            var OTDate_date = Results.OTDate;
                            OTDate.dispose();
                            OTDate = new wijmo.input.InputDate('#StockOut_OTDate', {
                                disabled: true,
                                format: 'MM/dd/yyyy',
                                value: new Date(OTDate_date),
                                mask: '99/99/9999',
                                onValueChanged: function () {
                                    document.getElementById('StockOut_OTDate_data').value = this.value.toLocaleDateString();
                                }
                            });

                            $("#cmdStockOutJournal").prop("disabled", false);
                            $("#cmdStockOutSaveLock").prop("disabled", true);
                            $("#cmdStockOutSave").prop("disabled", true);
                            $("#cmdStockOutEdit").prop("disabled", false);
                            $("#cmdStockOutPrint").prop("disabled", false);
                            $('#btnStockOutAddItem').prop("disabled", true);

                        } else if(document.getElementById('StockOut_IsLocked').value  == 'false') {
                            document.getElementById('StockOut_Particulars').disabled = false;
                            document.getElementById('StockOUt_ManualOTNumber').disabled = false;

                            var OTDate_date = Results.OTDate;
                            OTDate.dispose();
                            OTDate = new wijmo.input.InputDate('#StockOut_OTDate', {
                                disabled: false,
                                format: 'MM/dd/yyyy',
                                value: new Date(OTDate_date),
                                mask: '99/99/9999',
                                onValueChanged: function () {
                                    document.getElementById('StockOut_OTDate_data').value = this.value.toLocaleDateString();
                                }
                            });

                            $("#cmdStockOutJournal").prop("disabled", true);
                            $("#cmdStockOutSaveLock").prop("disabled", false);
                            $("#cmdStockOutSave").prop("disabled", true);
                            $("#cmdStockOutEdit").prop("disabled", true);
                            $("#cmdStockOutPrint").prop("disabled", true);
                            $('#btnStockOutAddItem').prop("disabled", false);
                        } else {
                            console.log("Invalid IsLocked");
                        }

                        getBranchesForComboBox();
                        getAccountForComboBox();
                        getArticlesForComboBox();
                        getUsersForComboBox();
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return stockOuts;
        }

        // =====================
        // GET Stock Out Last Id
        // =====================
        function getStockOutLastId() {
            stockOuts = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/stockOutLastId',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    if (Results.length > 0) {
                        stockOuts.push({
                            Id: Results.Id,
                            OTNumber: Results.OTNumber
                        });
                    }
                    window.location = '/Software/StockOutDetail?StockOutId=' + Results.Id + '&BranchId=' + @branchId;
                    window.setTimeout(function () { location.reload() }, 1000);
                }
            });
            return stockOuts;
        }

        // ========================
        // GET Branch for Combo Box
        // ========================
        function getBranchesForComboBox() {
            branches = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listBranch',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            branches.push({
                                BranchId: results[i]["Id"],
                                BranchBranch: results[i]["Branch"]
                            });
                        }

                        var stockOutId = @stockOutId;
                        if(stockOutId == 0) {
                            $.ajax({
                                url: '/api/listBranchById/' + @branchId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (branchResults) {
                                    //if (branchResults.length > 0) {
                                    //    branches.push({
                                    //        BranchId: results.Id,
                                    //        Branch: results.Branch
                                    //    });
                                    //}

                                    if(branchResults != null) {
                                        document.getElementById('StockOut_Branch_data').value = branchResults.Id;
                                        document.getElementById('StockOut_Branch_selectedValue').value = branchResults.Branch;

                                        createCboBranch(branches);
                                    }
                                }
                            });
                        } else {
                            createCboBranch(branches);
                        }
                    } else {
                        createCboBranch(branches);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
                    );
            return branches;
        }

        // ======================
        // Combo Box for Branches
        // ======================
        function createCboBranch(branches) {
            var branchCollections = new wijmo.collections.CollectionView(branches);
            var branchList = new Array();
            for (var i = 0; i < branchCollections.items.length; i++) {
                branchList.push(branchCollections.items[i].BranchBranch);
            }

            var disabled;
            if(branches == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboBranch.dispose();
            cboBranch = new wijmo.input.ComboBox('#StockOut_Branch', {
                disabled: true,
                placeholder: "Select Branch",
                itemsSource: branchList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('StockOut_Branch_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_Branch_data").val(branchCollections.items[this.selectedIndex].BranchId);
                }
            });

            if(branches == 0) {
                document.getElementById('StockOut_Branch_data').value = "";
            } else {
                document.getElementById('StockOut_Branch_data').value = branchCollections.items[cboBranch.selectedIndex].BranchId;
            }
        }

        // =====================
        // Get Stock Out Account
        // =====================
        function getAccountForComboBox() {
            accounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            accounts.push({
                                AccountId: results[i]["Id"],
                                AccountAccount: results[i]["Account"]
                            });
                        }
                        createCboForAccount(accounts);
                    } else {
                        createCboForAccount(accounts);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            }
            );
        }

        // ===============
        // CBO for Account
        // ===============
        function  createCboForAccount(accounts) {
            var accountCollection = new wijmo.collections.CollectionView(accounts);
            var accountList = new Array();
            for (var i = 0; i < accountCollection.items.length; i++) {
                accountList.push(accountCollection.items[i].AccountAccount);
            }

            var disabled;
            if(accounts == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboForAccount.dispose();
            cboForAccount = new wijmo.input.ComboBox('#StockOut_Account', {
                disabled: disabled,
                placeholder: "Select Account",
                itemsSource: accountList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_Account_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_Account_data").val(accountCollection.items[this.selectedIndex].AccountId);
                    $("#StockOut_Account_selectedValue").val(accountCollection.items[this.selectedIndex].AccountAccount);
                    getArticlesForComboBox();
                }
            });

            if(accounts == 0) {
                document.getElementById('StockOut_Account_data').value = "";
                document.getElementById('StockOut_Account_selectedValue').value = "";
            } else {
                document.getElementById('StockOut_Account_data').value = accountCollection.items[cboForAccount.selectedIndex].AccountId;
                document.getElementById('StockOut_Account_selectedValue').value = accountCollection.items[cboForAccount.selectedIndex].AccountAccount;
                getArticlesForComboBox();
            }
        }

        // ==========================
        // GET Articles for Combo Box
        // ==========================
        function getArticlesForComboBox() {
            articles = new wijmo.collections.ObservableArray();

            var accountId;
            if(document.getElementById('StockOut_Account_data').value == "") {
                accountId = 0;
            } else {
                accountId = document.getElementById('StockOut_Account_data').value;
            }

            articlesArticleTypes = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccountArticleTypeByAccountId/' + accountId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (articlesResults) {
                    if (articlesResults.length > 0) {
                        for (i = 0; i < articlesResults.length; i++) {
                            articlesArticleTypes.push({
                                Id: articlesResults[i]["Id"],
                                ArticleTypeId: articlesResults[i]["ArticleTypeId"]
                            });

                            $.ajax({
                                url: '/api/listArticleByArticleTypeId/' + articlesResults[i]["ArticleTypeId"],
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        for (i = 0; i < results.length; i++) {
                                            articles.push({
                                                ArticleId: results[i]["Id"],
                                                ArticleArticle: results[i]["Article"]
                                            });
                                        }
                                        createCboArticles(articles);
                                    } else {
                                        createCboArticles(articles);
                                    }
                                }
                            }).fail(function (xhr, textStatus, err) {
                                alert(err);
                            });

                        }
                    } else {
                        $.ajax({
                            url: '/api/listArticleByArticleTypeId/' + 0,
                            cache: false,
                            type: 'GET',
                            contentType: 'application/json; charset=utf-8',
                            data: {},
                            success: function (results) {
                                if (results.length > 0) {
                                    for (i = 0; i < results.length; i++) {
                                        articles.push({
                                            ArticleId: results[i]["Id"],
                                            ArticleArticle: results[i]["Article"]
                                        });
                                    }
                                    createCboArticles(articles);
                                } else {
                                    createCboArticles(articles);
                                }
                            }
                        }).fail(function (xhr, textStatus, err) {
                            alert(err);
                        });
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
        }

        // ======================
        // Combo Box for Articles
        // ======================
        function createCboArticles(articles) {
            var articleCollections = new wijmo.collections.CollectionView(articles);
            var articleList = new Array();
            for (var i = 0; i < articleCollections.items.length; i++) {
                articleList.push(articleCollections.items[i].ArticleArticle);
            }


            var disabled;
            if(articles == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                    if(document.getElementById('StockOut_Article_data').value == "") {
                        disabled = true;
                    }
                } else {
                    disabled = false;
                }
            }

            cboArticle.dispose();
            cboArticle = new wijmo.input.ComboBox('#StockOut_Article', {
                disabled: disabled,
                placeholder: "Select Article",
                itemsSource: articleList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_Article_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_Article_data").val(articleCollections.items[this.selectedIndex].ArticleId);
                }
            });

            if(articles == 0) {
                document.getElementById('StockOut_Article_data').value = "";
            } else {
                document.getElementById('StockOut_Article_data').value = articleCollections.items[cboArticle.selectedIndex].ArticleId;
            }
        }

        // =======================
        // GET Users for Combo Box
        // =======================
        function getUsersForComboBox() {
            users = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUser',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            users.push({
                                UserId: results[i]["Id"],
                                UserFullName: results[i]["FullName"]
                            });
                        }

                        var stockOutId = @stockOutId;
                        if(stockOutId == 0) {
                            var userId = document.getElementById('userId_data').value;
                            $.ajax({
                                url: '/api/listByMstUserId/' + userId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (results) {
                                    if (results.length > 0) {
                                        users.push({
                                            UserId: results.Id,
                                            UserFullName: results.FullName
                                        });
                                    }

                                    document.getElementById('StockOut_PreparedBy_data').value = results.Id;
                                    document.getElementById('StockOut_PreparedBy_selectedValue').value =  results.FullName;

                                    createCboUserPreparedBy(users);
                                    createCboUserCheckedBy(users);
                                    createCboUserApprovedBy(users);
                                }
                            });
                        } else {
                            createCboUserPreparedBy(users);
                            createCboUserCheckedBy(users);
                            createCboUserApprovedBy(users);

                        }
                    } else {
                        createCboUserPreparedBy(users);
                        createCboUserCheckedBy(users);
                        createCboUserApprovedBy(users);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return users;
        }

        // ==================================
        // Combo Box for Users - Prepared By
        // ==================================
        function createCboUserPreparedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if(users == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboPreparedBy.dispose();
            cboPreparedBy = new wijmo.input.ComboBox('#StockOut_PreparedBy', {
                disabled: true,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_PreparedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_PreparedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if(users == 0) {
                document.getElementById('StockOut_PreparedBy_data').value = "";
            } else {
                document.getElementById('StockOut_PreparedBy_data').value = usersCollection.items[cboPreparedBy.selectedIndex].UserId;
            }
        }

        // ==================================
        // Combo Box for Users - Checked By
        // ==================================
        function createCboUserCheckedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if(users == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboCheckedBy.dispose();
            cboCheckedBy = new wijmo.input.ComboBox('#StockOut_CheckedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_CheckedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_CheckedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if(users == 0) {
                document.getElementById('StockOut_CheckedBy_data').value = "";
            } else {
                document.getElementById('StockOut_CheckedBy_data').value = usersCollection.items[cboCheckedBy.selectedIndex].UserId;
            }
        }

        // ==================================
        // Combo Box for Users - Approved By
        // ==================================
        function createCboUserApprovedBy(users) {
            var usersCollection = new wijmo.collections.CollectionView(users);
            var userList = new Array();
            for (var i = 0; i < usersCollection.items.length; i++) {
                userList.push(usersCollection.items[i].UserFullName);
            }

            var disabled;
            if(users == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboApprovedBy.dispose();
            cboApprovedBy = new wijmo.input.ComboBox('#StockOut_ApprovedBy', {
                disabled: disabled,
                placeholder: "Select User",
                itemsSource: userList,
                isEditable: false,
                selectedValue: document.getElementById('StockOut_ApprovedBy_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#StockOut_ApprovedBy_data").val(usersCollection.items[this.selectedIndex].UserId);
                }
            });

            if(users == 0) {
                document.getElementById('StockOut_ApprovedBy_data').value = "";
            } else {
                document.getElementById('StockOut_ApprovedBy_data').value = usersCollection.items[cboApprovedBy.selectedIndex].UserId;
            }
        }

        // =====================================================
        // Function with leading zeroes to display the OT Number
        // =====================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while(pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // =============
        // Add Stock Out
        // =============
        function btnStockOutSave_OnClick() {
            var stockOutObject = new Object();
            var stockOutId = @stockOutId;
            stockOutObject.BranchId = document.getElementById('StockOut_Branch_data').value;
            stockOutObject.OTNumber = document.getElementById('StockOut_OTNumber_Display').value;
            stockOutObject.OTDate = document.getElementById('StockOut_OTDate_data').value;
            stockOutObject.AccountId = document.getElementById('StockOut_Account_data').value;
            stockOutObject.ArticleId = document.getElementById('StockOut_Article_data').value;
            stockOutObject.Particulars = document.getElementById('StockOut_Particulars').value;
            stockOutObject.ManualOTNumber = document.getElementById('StockOUt_ManualOTNumber').value;
            stockOutObject.PreparedById = document.getElementById('StockOut_PreparedBy_data').value;
            stockOutObject.CheckedById = document.getElementById('StockOut_CheckedBy_data').value;
            stockOutObject.ApprovedById = document.getElementById('StockOut_ApprovedBy_data').value;
            var data = JSON.stringify(stockOutObject);

            if( document.getElementById('StockOut_Branch_data').value == '') {
                document.getElementById("StockOut_Branch").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_Branch").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_Account_data').value == '') {
                document.getElementById("StockOut_Account").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_Account").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_Article_data').value == '') {
                document.getElementById("StockOut_Article").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_Article").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_PreparedBy_data').value == '') {
                document.getElementById("StockOut_PreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_PreparedBy").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_CheckedBy_data').value == '') {
                document.getElementById("StockOut_CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_CheckedBy").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_ApprovedBy_data').value == '') {
                document.getElementById("StockOut_ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_ApprovedBy").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredStockOut').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                if (stockOutId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addStockOut',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdStockOutJournal").prop("disabled", true);
                                $("#cmdStockOutSaveLock").prop("disabled", true);
                                $("#cmdStockOutSave").prop("disabled", true);
                                $("#cmdStockOutEdit").prop("disabled", true);
                                $("#cmdStockOutPrint").prop("disabled", true);
                                $("#cmdStockOutClose").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getStockOutLastId, 1000)
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdStockOutJournal").prop("disabled", false);
                                $("#cmdStockOutSaveLock").prop("disabled", false);
                                $("#cmdStockOutSave").prop("disabled", false);
                                $("#cmdStockOutEdit").prop("disabled", false);
                                $("#cmdStockOutPrint").prop("disabled", false);
                                $("#cmdStockOutClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdStockOutJournal").prop("disabled", false);
                                $("#cmdStockOutSaveLock").prop("disabled", false);
                                $("#cmdStockOutSave").prop("disabled", false);
                                $("#cmdStockOutEdit").prop("disabled", false);
                                $("#cmdStockOutPrint").prop("disabled", false);
                                $("#cmdStockOutClose").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateStockOut/' + stockOutId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdStockOutJournal").prop("disabled", true);
                                $("#cmdStockOutSaveLock").prop("disabled", true);
                                $("#cmdStockOutSave").prop("disabled", true);
                                $("#cmdStockOutEdit").prop("disabled", true);
                                $("#cmdStockOutPrint").prop("disabled", true);
                                $("#cmdStockOutClose").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdStockOutJournal").prop("disabled", false);
                                $("#cmdStockOutSaveLock").prop("disabled", false);
                                $("#cmdStockOutSave").prop("disabled", false);
                                $("#cmdStockOutEdit").prop("disabled", false);
                                $("#cmdStockOutPrint").prop("disabled", false);
                                $("#cmdStockOutClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdStockOutJournal").prop("disabled", false);
                                $("#cmdStockOutSaveLock").prop("disabled", false);
                                $("#cmdStockOutSave").prop("disabled", false);
                                $("#cmdStockOutEdit").prop("disabled", false);
                                $("#cmdStockOutPrint").prop("disabled", false);
                                $("#cmdStockOutClose").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ======================
        // Save Stock Out - Lock
        // =====================
        function btnStockOutSaveLock_OnClick() {
            var stockOutObject = new Object();
            var stockOutId = @stockOutId;
            stockOutObject.BranchId = document.getElementById('StockOut_Branch_data').value;
            stockOutObject.OTNumber = document.getElementById('StockOut_OTNumber_Display').value;
            stockOutObject.OTDate = document.getElementById('StockOut_OTDate_data').value;
            stockOutObject.AccountId = document.getElementById('StockOut_Account_data').value;
            stockOutObject.ArticleId = document.getElementById('StockOut_Article_data').value;
            stockOutObject.Particulars = document.getElementById('StockOut_Particulars').value;
            stockOutObject.ManualOTNumber = document.getElementById('StockOUt_ManualOTNumber').value;
            stockOutObject.PreparedById = document.getElementById('StockOut_PreparedBy_data').value;
            stockOutObject.CheckedById = document.getElementById('StockOut_CheckedBy_data').value;
            stockOutObject.ApprovedById = document.getElementById('StockOut_ApprovedBy_data').value;
            stockOutObject.IsLocked = true;
            var data = JSON.stringify(stockOutObject);

            if( document.getElementById('StockOut_Branch_data').value == '') {
                document.getElementById("StockOut_Branch").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_Branch").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_Account_data').value == '') {
                document.getElementById("StockOut_Account").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_Account").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_Article_data').value == '') {
                document.getElementById("StockOut_Article").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_Article").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_PreparedBy_data').value == '') {
                document.getElementById("StockOut_PreparedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_PreparedBy").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_CheckedBy_data').value == '') {
                document.getElementById("StockOut_CheckedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_CheckedBy").style.border = "1px solid #C8C8C8   ";
            }

            if( document.getElementById('StockOut_ApprovedBy_data').value == '') {
                document.getElementById("StockOut_ApprovedBy").style.border = "1px solid red";
            } else {
                document.getElementById("StockOut_ApprovedBy").style.border = "1px solid #C8C8C8   ";
            }

            var isValid = true;
            $('.requiredStockOut').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            if (isValid == false) {
                toastr.error("Invalid Entry");
                e.preventDefault();
            }
            else {
                if (stockOutId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addStockOut',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdStockOutJournal").prop("disabled", true);
                                $("#cmdStockOutSaveLock").prop("disabled", true);
                                $("#cmdStockOutSave").prop("disabled", true);
                                $("#cmdStockOutEdit").prop("disabled", true);
                                $("#cmdStockOutPrint").prop("disabled", true);
                                $("#cmdStockOutClose").prop("disabled", true);
                                toastr.success("Successfully Saved");
                                setTimeout(getStockOutLastId, 1000)
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdStockOutJournal").prop("disabled", false);
                                $("#cmdStockOutSaveLock").prop("disabled", false);
                                $("#cmdStockOutSave").prop("disabled", false);
                                $("#cmdStockOutEdit").prop("disabled", false);
                                $("#cmdStockOutPrint").prop("disabled", false);
                                $("#cmdStockOutClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdStockOutJournal").prop("disabled", false);
                                $("#cmdStockOutSaveLock").prop("disabled", false);
                                $("#cmdStockOutSave").prop("disabled", false);
                                $("#cmdStockOutEdit").prop("disabled", false);
                                $("#cmdStockOutPrint").prop("disabled", false);
                                $("#cmdStockOutClose").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateStockOut/' + stockOutId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: data,
                        statusCode: {
                            200: function () {
                                $("#cmdStockOutJournal").prop("disabled", true);
                                $("#cmdStockOutSaveLock").prop("disabled", true);
                                $("#cmdStockOutSave").prop("disabled", true);
                                $("#cmdStockOutEdit").prop("disabled", true);
                                $("#cmdStockOutPrint").prop("disabled", true);
                                $("#cmdStockOutClose").prop("disabled", true);
                                toastr.success("Successfully Updated");
                                window.setTimeout(function () {
                                    location.reload()
                                }, 1000);
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $("#cmdStockOutJournal").prop("disabled", false);
                                $("#cmdStockOutSaveLock").prop("disabled", false);
                                $("#cmdStockOutSave").prop("disabled", false);
                                $("#cmdStockOutEdit").prop("disabled", false);
                                $("#cmdStockOutPrint").prop("disabled", false);
                                $("#cmdStockOutClose").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $("#cmdStockOutJournal").prop("disabled", false);
                                $("#cmdStockOutSaveLock").prop("disabled", false);
                                $("#cmdStockOutSave").prop("disabled", false);
                                $("#cmdStockOutEdit").prop("disabled", false);
                                $("#cmdStockOutPrint").prop("disabled", false);
                                $("#cmdStockOutClose").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // =========================
        // Save Stock Out - UnLocked
        // =========================
        function btnStockOutEdit_OnClick() {
            var stockOutObject = new Object();
            var stockOutId = @stockOutId;
            stockOutObject.IsLocked = false;
            var data = JSON.stringify(stockOutObject);
            $.ajax({
                type: "PUT",
                url: '/api/updateStockOutIsLocked/' + stockOutId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: data,
                statusCode: {
                    200: function () {
                        $("#cmdStockOutJournal").prop("disabled", true);
                        $("#cmdStockOutSaveLock").prop("disabled", true);
                        $("#cmdStockOutSave").prop("disabled", true);
                        $("#cmdStockOutEdit").prop("disabled", true);
                        $("#cmdStockOutPrint").prop("disabled", true);
                        $("#cmdStockOutClose").prop("disabled", true);
                        toastr.success("Successfully Updated");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Can't Save");
                        $("#cmdStockOutJournal").prop("disabled", false);
                        $("#cmdStockOutSaveLock").prop("disabled", false);
                        $("#cmdStockOutSave").prop("disabled", false);
                        $("#cmdStockOutEdit").prop("disabled", false);
                        $("#cmdStockOutPrint").prop("disabled", false);
                        $("#cmdStockOutClose").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $("#cmdStockOutJournal").prop("disabled", false);
                        $("#cmdStockOutSaveLock").prop("disabled", false);
                        $("#cmdStockOutSave").prop("disabled", false);
                        $("#cmdStockOutEdit").prop("disabled", false);
                        $("#cmdStockOutPrint").prop("disabled", false);
                        $("#cmdStockOutClose").prop("disabled", false);
                    }
                }
            });
        }


        // ===========
        // OnLoad Page
        // ===========
        $(document).ready(function () {
            var StockOutId = @stockOutId;
            if(StockOutId == 0) {
                $('#cmdStockOutJournal').hide();
                $('#cmdStockOutSaveLock').hide();
                $('#cmdStockOutSave').show();
                $('#cmdStockOutEdit').hide();

                $("#cmdStockOutPrint").prop("disabled", true);
                $('#btnStockOutAddItem').prop("disabled", true);
            } else {
                $('#cmdStockOutJournal').show();
                $('#cmdStockOutSave').hide();
                $('#cmdStockOutEdit').show();
            }

            document.getElementById('currentPage').innerHTML = '<a href="@Url.Action("Index", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Main Menu</a> > ' + ' <a href="@Url.Action("StockOut", "Software", new { BranchId = branchId })" class="currentPageLinkCustom">Sock Out</a> ' + ' > Stock Out Detail';
            document.getElementById('StockOut_OTNumber_Display').disabled = true;
            document.getElementById('StockOut_Lock').disabled = true;

            cboBranch = new wijmo.input.ComboBox('#StockOut_Branch');

            var d = new Date();
            document.getElementById("StockOut_OTDate_data").value = [ d.getMonth()+1, d.getDate(), d.getFullYear()].join('/');
            OTDate = new wijmo.input.InputDate('#StockOut_OTDate', {
                format: 'MM/dd/yyyy',
                value: new Date(),
                mask: '99/99/9999',
                onValueChanged: function () {
                    document.getElementById('StockOut_OTDate_data').value = this.value.toLocaleDateString();
                }
            });

            cboForAccount = new wijmo.input.ComboBox('#StockOut_Account');
            cboArticle = new wijmo.input.ComboBox('#StockOut_Article');
            cboPreparedBy = new wijmo.input.ComboBox('#StockOut_PreparedBy');
            cboCheckedBy = new wijmo.input.ComboBox('#StockOut_CheckedBy');
            cboApprovedBy = new wijmo.input.ComboBox('#StockOut_ApprovedBy');

            getStockOutById();

            var stockOutId = @stockOutId;
            if(stockOutId == 0) {
                getBranchesForComboBox();
                getAccountForComboBox();
                getArticlesForComboBox();
                getUsersForComboBox();

                if(document.getElementById('StockOut_OTNumber').value == 0) {
                    document.getElementById('StockOut_OTNumber_Display').value = "0000000001";
                }

                document.getElementById('StockOut_OTNumber').value = 0;
                //document.getElementById('journalVoucher_No_Display').value = "000-000000";
                var stockOuts = new wijmo.collections.ObservableArray;
                $.ajax({
                    url: '/api/stockOutLastOTNumber',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            stockOuts.push({
                                Id: Results.Id,
                                OTNumber: Results.OTNumber
                            });
                        }
                        var OT_Number = parseInt(Results.OTNumber);
                        var OT_Number_PlusOne = 0000000001;
                        var OT_Num_Results = OT_Number + OT_Number_PlusOne;
                        //var JV_Number_Display = JV_Num_Results.toString().replace(/(\d{3})(\d+)/, '$1-$2');

                        document.getElementById('StockOut_OTNumber').value = zerofill(OT_Num_Results, 10);
                        document.getElementById('StockOut_OTNumber_Display').value = zerofill(OT_Num_Results, 10);
                    }
                });
            }
        });
    </script>

    <!-- ============= -->
    <!-- Items Scripts -->
    <!-- ============= -->
    <script type="text/javascript">
        // ==========================
        // Global Variables for Items
        // ==========================
        var items;
        var itemGrid;

        var btnFirstPageGridItem;
        var btnPreviousPageGridItem;
        var btnNextPageGridItem;
        var btnLastPageGridItem;
        var btnCurrentPageGridItem;

        var articleItems;
        var cboManualCodeArticleItems;
        var cboItemDescriptionArticleItems;

        var inventories;
        var cboInventoryCode;

        var stockOutUnits;
        var cboStockOutUnit;
        var cboBaseUnit;

        var stockOutItemAccounts;
        var cboStockOutAccount;

        // =======================
        // GET Stock OUT Item List
        // =======================
        function getItem() {
            var items = new wijmo.collections.ObservableArray;
            var OTId = @stockOutId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listStockOutItemByOTId/' + OTId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        stockOuts = new wijmo.collections.ObservableArray;
                        var stockOutId = @stockOutId;
                        $.ajax({
                            url: '/api/stockOut/' + stockOutId,
                            cache: false,
                            type: 'GET',
                            contentType: 'application/json; charset=utf-8',
                            data: {},
                            success: function (StockOutResults) {
                                if (StockOutResults.length > 0) {
                                    stockOuts.push({
                                        Id: StockOutResults.Id,
                                        IsLocked: StockOutResults.IsLocked
                                    });
                                }

                                if(StockOutResults.IsLocked == true) {
                                    for (i = 0; i < Results.length; i++) {
                                        items.push({
                                            EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditStockOutItem_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>",
                                            DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteStockOutItem_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>",
                                            Id: Results[i]["Id"],
                                            OTId: Results[i]["OTId"],
                                            OT: Results[i]["OT"],
                                            ExpenseAccountId: Results[i]["ExpenseAccountId"],
                                            ExpenseAccount: Results[i]["ExpenseAccount"],
                                            ItemId: Results[i]["ItemId"],
                                            ItemCode: Results[i]["ItemCode"],
                                            Item: Results[i]["Item"],
                                            ItemInventoryId: Results[i]["ItemInventoryId"],
                                            ItemInventory: Results[i]["ItemInventory"],
                                            Particulars: Results[i]["Particulars"],
                                            UnitId: Results[i]["UnitId"],
                                            Unit: Results[i]["Unit"],
                                            Quantity: Results[i]["Quantity"],
                                            Cost: Results[i]["Cost"],
                                            Amount: Results[i]["Amount"],
                                            BaseUnitId: Results[i]["BaseUnitId"],
                                            BaseUnit: Results[i]["BaseUnit"],
                                            BaseQuantity: Results[i]["BaseQuantity"],
                                            BaseCost: Results[i]["BaseCost"]
                                        });
                                    }
                                } else {
                                    for (i = 0; i < Results.length; i++) {
                                        items.push({
                                            EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditStockOutItem_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                            DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteStockOutItem_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                            Id: Results[i]["Id"],
                                            OTId: Results[i]["OTId"],
                                            OT: Results[i]["OT"],
                                            ExpenseAccountId: Results[i]["ExpenseAccountId"],
                                            ExpenseAccount: Results[i]["ExpenseAccount"],
                                            ItemId: Results[i]["ItemId"],
                                            ItemCode: Results[i]["ItemCode"],
                                            Item: Results[i]["Item"],
                                            ItemInventoryId: Results[i]["ItemInventoryId"],
                                            ItemInventory: Results[i]["ItemInventory"],
                                            Particulars: Results[i]["Particulars"],
                                            UnitId: Results[i]["UnitId"],
                                            Unit: Results[i]["Unit"],
                                            Quantity: Results[i]["Quantity"],
                                            Cost: Results[i]["Cost"],
                                            Amount: Results[i]["Amount"],
                                            BaseUnitId: Results[i]["BaseUnitId"],
                                            BaseUnit: Results[i]["BaseUnit"],
                                            BaseQuantity: Results[i]["BaseQuantity"],
                                            BaseCost: Results[i]["BaseCost"]
                                        });
                                    }
                                }
                            }
                        });
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return items;
        }

        // ======================================
        // GET Item Id, Manual Code and Component
        // ======================================
        function getArticleItemForManualCodeAndComponent() {
            var articleInventories = new wijmo.collections.ObservableArray();
            var branchId =  document.getElementById('StockOut_Branch_data').value;

            $.ajax({
                url: '/api/listArticleInventoryBybranchId/' + branchId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (articleInventoryResults) {
                    if (articleInventoryResults.length > 0) {
                        for (i = 0; i < articleInventoryResults.length; i++) {
                            articleInventories.push({
                                Id: articleInventoryResults[i]["Id"],
                                BranchId: articleInventoryResults[i]["BranchId"],
                                ItemId: articleInventoryResults[i]["ArticleId"],
                                ItemDescription: articleInventoryResults[i]["Article"],
                                InventoryCode: articleInventoryResults[i]["InventoryCode"],
                                Quantity: articleInventoryResults[i]["Quantity"],
                                Cost: articleInventoryResults[i]["Cost"],
                                Amount: articleInventoryResults[i]["Amount"],
                                Particulars: articleInventoryResults[i]["Particulars"],
                                ItemCode: articleInventoryResults[i]["ManualArticleCode"],
                                Unit: articleInventoryResults[i]["Unit"],
                                UnitId: articleInventoryResults[i]["UnitId"]

                            });

                            //articleItems = new wijmo.collections.ObservableArray();
                            //$.ajax({
                            //    url: '/api/article/' + articleInventoryResults[i]["ArticleId"],
                            //    cache: false,
                            //    type: 'GET',
                            //    contentType: 'application/json; charset=utf-8',
                            //    data: {},
                            //    success: function (results) {
                            //        if (results.length > 0) {
                            //            for (i = 0; i < results.length; i++) {
                            //                articleItems.push({
                            //                    ItemId: results[i]["Id"],
                            //                    ItemCode: results[i]["ManualArticleCode"],
                            //                    ItemDescription: results[i]["Article"],
                            //                    UnitId: results[i]["UnitId"],
                            //                    Unit: results[i]["Unit"],
                            //                    Particulars: results[i]["Particulars"]
                            //                });
                            //            }
                            //            createCboForManualCode(articleItems);
                            //            createCboForItemDescription(articleItems);
                            //        }
                            //    }
                            //});

                        }

                        createCboForManualCode(articleInventories);
                        createCboForItemDescription(articleInventories);
                        createCboForInventoryCode(articleInventories);
                    } else {
                        createCboForManualCode(articleInventories);
                        createCboForItemDescription(articleInventories);
                        createCboForInventoryCode(articleInventories);
                    }
                }
            });
        }

        // ===============
        // CBO Manual Code
        // ===============
        function createCboForManualCode(articleItems) {
            var ManualCodeCollections = new wijmo.collections.CollectionView(articleItems);
            var ManualCodeList = new Array();
            for (var i = 0; i < ManualCodeCollections.items.length; i++) {
                ManualCodeList.push(ManualCodeCollections.items[i].ItemCode);
            }

            var disabled;
            if(articleItems == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboManualCodeArticleItems.dispose();
            cboManualCodeArticleItems = new wijmo.input.ComboBox('#stockOutItem_ItemCode', {
                disabled: disabled,
                placeholder: "Select Manual Code",
                itemsSource: ManualCodeList,
                isEditable: false,
                selectedValue: document.getElementById('stockOutItem_ItemCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_ItemId_data").val(ManualCodeCollections.items[this.selectedIndex].ItemId);
                    $("#stockOutItem_ItemCode_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemCode);
                    $("#stockOutItem_ItemDescription_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].ItemDescription);
                    $("#stockOutItem_Unit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_Unit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
                    $("#stockOutItem_BUCUnit_data").val(ManualCodeCollections.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_BUCUnit_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].Unit);
                    $("#stockOutItem_Particulars").val(ManualCodeCollections.items[this.selectedIndex].Particulars);
                    $("#stockOutItem_ItemInventoryCode_data").val(ManualCodeCollections.items[this.selectedIndex].Id);
                    $("#stockOutItem_ItemInventoryCode_selectedValue").val(ManualCodeCollections.items[this.selectedIndex].InventoryCode);
                    $("#stockOutItem_Cost").val(ManualCodeCollections.items[this.selectedIndex].Cost);

                    createCboForItemDescription(articleItems);
                    createCboForInventoryCode(articleItems);

                    getStockOutItemUnitForComboBox();

                    var stockOut_Quantity = document.getElementById('stockOutItem_Quantity').value;
                    var stockOut_Cost = document.getElementById('stockOutItem_Cost').value;

                    document.getElementById('stockOutItem_Amount').value = Math.round(( stockOut_Quantity * stockOut_Cost ) * 100 ) / 100;
                    if(document.getElementById('stockOutItem_BUCQuantity').value == 0) {
                        document.getElementById('stockOutItem_BUCCost').value = 0;
                    } else {
                        document.getElementById('stockOutItem_BUCCost').value = stockOut_Cost;
                    }
                }
            });

            if(articleItems == 0) {
                document.getElementById('stockOutItem_ItemId_data').value = "";
                document.getElementById('stockOutItem_ItemCode_selectedValue').value = "";
                document.getElementById('stockOutItem_ItemDescription_selectedValue').value = "";
                document.getElementById('stockOutItem_Unit_data').value = "";
                document.getElementById('stockOutItem_Unit_selectedValue').value = "";
                document.getElementById('stockOutItem_BUCUnit_data').value = "";
                document.getElementById('stockOutItem_BUCUnit_selectedValue').value = "";
                document.getElementById('stockOutItem_Particulars').value = "";
                document.getElementById('stockOutItem_ItemInventoryCode_data').value = "";
                document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = "";
                document.getElementById('stockOutItem_Cost').value = "";
            } else {
                document.getElementById('stockOutItem_ItemId_data').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemId;
                document.getElementById('stockOutItem_ItemCode_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemCode;
                document.getElementById('stockOutItem_ItemDescription_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].ItemDescription;
                document.getElementById('stockOutItem_Unit_data').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].UnitId;
                document.getElementById('stockOutItem_Unit_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Unit;
                document.getElementById('stockOutItem_BUCUnit_data').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].UnitId;
                document.getElementById('stockOutItem_BUCUnit_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Unit;
                document.getElementById('stockOutItem_Particulars').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Particulars;
                document.getElementById('stockOutItem_ItemInventoryCode_data').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Id;
                document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].InventoryCode;
                document.getElementById('stockOutItem_Cost').value = ManualCodeCollections.items[cboManualCodeArticleItems.selectedIndex].Cost;

                getStockOutItemUnitForComboBox();
            }
        }

        // ====================
        // CBO Item Description
        // ====================
        function createCboForItemDescription(articleItems) {
            var ItemDescriptionCollections = new wijmo.collections.CollectionView(articleItems);
            var ItemDescriptionList = new Array();
            for (var i = 0; i < ItemDescriptionCollections.items.length; i++) {
                ItemDescriptionList.push(ItemDescriptionCollections.items[i].ItemDescription);
            }
            
            var disabled;
            if(articleItems == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboItemDescriptionArticleItems.dispose();
            cboItemDescriptionArticleItems = new wijmo.input.ComboBox('#stockOutItem_ItemDescription', {
                disabled: disabled,
                placeholder: "Select Item Description",
                itemsSource: ItemDescriptionList,
                isEditable: false,
                selectedValue: document.getElementById('stockOutItem_ItemDescription_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_ItemId_data").val(ItemDescriptionCollections.items[this.selectedIndex].ItemId);
                    $("#stockOutItem_ItemCode_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].ItemCode);
                    $("#stockOutItem_ItemDescription_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].ItemDescription);
                    $("#stockOutItem_Unit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_Unit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
                    $("#stockOutItem_BUCUnit_data").val(ItemDescriptionCollections.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_BUCUnit_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].Unit);
                    $("#stockOutItem_Particulars").val(ItemDescriptionCollections.items[this.selectedIndex].Particulars);
                    $("#stockOutItem_ItemInventoryCode_data").val(ItemDescriptionCollections.items[this.selectedIndex].Id);
                    $("#stockOutItem_ItemInventoryCode_selectedValue").val(ItemDescriptionCollections.items[this.selectedIndex].InventoryCode);
                    $("#stockOutItem_Cost").val(ItemDescriptionCollections.items[this.selectedIndex].Cost);

                    createCboForManualCode(articleItems);
                    createCboForInventoryCode(articleItems);

                    getStockOutItemUnitForComboBox();

                    var stockOut_Quantity = document.getElementById('stockOutItem_Quantity').value;
                    var stockOut_Cost = document.getElementById('stockOutItem_Cost').value;

                    document.getElementById('stockOutItem_Amount').value = Math.round(( stockOut_Quantity * stockOut_Cost ) * 100 ) / 100;
                    if(document.getElementById('stockOutItem_BUCQuantity').value == 0) {
                        document.getElementById('stockOutItem_BUCCost').value = 0;
                    } else {
                        document.getElementById('stockOutItem_BUCCost').value = stockOut_Cost;
                    }
                }
            });

            if(articleItems == 0) {
                document.getElementById('stockOutItem_ItemId_data').value = "";
                document.getElementById('stockOutItem_ItemCode_selectedValue').value = "";
                document.getElementById('stockOutItem_ItemDescription_selectedValue').value = "";
                document.getElementById('stockOutItem_Unit_data').value = "";
                document.getElementById('stockOutItem_Unit_selectedValue').value = "";
                document.getElementById('stockOutItem_BUCUnit_data').value = "";
                document.getElementById('stockOutItem_BUCUnit_selectedValue').value = "";
                document.getElementById('stockOutItem_Particulars').value = "";
                document.getElementById('stockOutItem_ItemInventoryCode_data').value = "";
                document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = "";
                document.getElementById('stockOutItem_Cost').value = "";
            } else {
                document.getElementById('stockOutItem_ItemId_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemId;
                document.getElementById('stockOutItem_ItemCode_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemCode;
                document.getElementById('stockOutItem_ItemDescription_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].ItemDescription;
                document.getElementById('stockOutItem_Unit_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].UnitId;
                document.getElementById('stockOutItem_Unit_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Unit;
                document.getElementById('stockOutItem_BUCUnit_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].UnitId;
                document.getElementById('stockOutItem_BUCUnit_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Unit;
                document.getElementById('stockOutItem_Particulars').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Particulars;
                document.getElementById('stockOutItem_ItemInventoryCode_data').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Id;
                document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].InventoryCode;
                document.getElementById('stockOutItem_Cost').value = ItemDescriptionCollections.items[cboItemDescriptionArticleItems.selectedIndex].Cost;
            }
        }

        // ===========================
        // CBO for Item Inventory Code
        // ===========================
        function createCboForInventoryCode(articleInventories) {
            var InventoryCodeCollection = new wijmo.collections.CollectionView(articleInventories);
            var InventoryCodeList = new Array();
            for (var i = 0; i < InventoryCodeCollection.items.length; i++) {
                InventoryCodeList.push(InventoryCodeCollection.items[i].InventoryCode);
            }
            
            var disabled;
            if(articleInventories == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboInventoryCode.dispose();
            cboInventoryCode = new wijmo.input.ComboBox('#stockOutItem_ItemInventoryCode', {
                disabled: disabled,
                placeholder: "Select Inventory Code",
                itemsSource: InventoryCodeList,
                isEditable: false,
                selectedValue: document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_ItemId_data").val(InventoryCodeCollection.items[this.selectedIndex].ItemId);
                    $("#stockOutItem_ItemCode_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].ItemCode);
                    $("#stockOutItem_ItemDescription_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].ItemDescription);
                    $("#stockOutItem_Unit_data").val(InventoryCodeCollection.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_Unit_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].Unit);
                    $("#stockOutItem_BUCUnit_data").val(InventoryCodeCollection.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_BUCUnit_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].Unit);
                    $("#stockOutItem_Particulars").val(InventoryCodeCollection.items[this.selectedIndex].Particulars);
                    $("#stockOutItem_ItemInventoryCode_data").val(InventoryCodeCollection.items[this.selectedIndex].Id);
                    $("#stockOutItem_ItemInventoryCode_selectedValue").val(InventoryCodeCollection.items[this.selectedIndex].InventoryCode);
                    $("#stockOutItem_Cost").val(InventoryCodeCollection.items[this.selectedIndex].Cost);

                    createCboForManualCode(articleInventories);
                    createCboForItemDescription(articleInventories);

                    getStockOutItemUnitForComboBox();

                    var stockOut_Quantity = document.getElementById('stockOutItem_Quantity').value;
                    var stockOut_Cost = document.getElementById('stockOutItem_Cost').value;

                    document.getElementById('stockOutItem_Amount').value = Math.round(( stockOut_Quantity * stockOut_Cost ) * 100 ) / 100;
                    if(document.getElementById('stockOutItem_BUCQuantity').value == 0) {
                        document.getElementById('stockOutItem_BUCCost').value = 0;
                    } else {
                        document.getElementById('stockOutItem_BUCCost').value = stockOut_Cost;
                    }
                }
            });

            if(articleInventories == 0) {
                document.getElementById('stockOutItem_ItemId_data').value = "";
                document.getElementById('stockOutItem_ItemCode_selectedValue').value = "";
                document.getElementById('stockOutItem_ItemDescription_selectedValue').value = "";
                document.getElementById('stockOutItem_Unit_data').value = "";
                document.getElementById('stockOutItem_Unit_selectedValue').value = "";
                document.getElementById('stockOutItem_BUCUnit_data').value = "";
                document.getElementById('stockOutItem_BUCUnit_selectedValue').value = "";
                document.getElementById('stockOutItem_Particulars').value = "";
                document.getElementById('stockOutItem_ItemInventoryCode_data').value = "";
                document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = "";
                document.getElementById('stockOutItem_Cost').value = "";
            } else {
                document.getElementById('stockOutItem_ItemId_data').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].ItemId;
                document.getElementById('stockOutItem_ItemCode_selectedValue').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].ItemCode;
                document.getElementById('stockOutItem_ItemDescription_selectedValue').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].ItemDescription;
                document.getElementById('stockOutItem_Unit_data').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].UnitId;
                document.getElementById('stockOutItem_Unit_selectedValue').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Unit;
                document.getElementById('stockOutItem_BUCUnit_data').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].UnitId;
                document.getElementById('stockOutItem_BUCUnit_selectedValue').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Unit;
                document.getElementById('stockOutItem_Particulars').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Particulars;
                document.getElementById('stockOutItem_ItemInventoryCode_data').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Id;
                document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].InventoryCode;
                document.getElementById('stockOutItem_Cost').value = InventoryCodeCollection.items[cboInventoryCode.selectedIndex].Cost;
            }
        }

        // =============
        // Get Item Unit
        // =============
        function getStockOutItemUnitForComboBox() {
            stockOutUnits = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listUnit',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            stockOutUnits.push({
                                UnitId: results[i]["Id"],
                                Unit: results[i]["Unit"]
                            });
                        }
                        createCboForStockOutUnit(stockOutUnits);
                        createCboForStockOutBaseUnit(stockOutUnits);
                    } else {
                        createCboForStockOutUnit(stockOutUnits);
                        createCboForStockOutBaseUnit(stockOutUnits);
                    }
                }
            });
        }

        // ======================
        // CBO for Stock Out Unit
        // ======================
        function createCboForStockOutUnit(stockOutUnits) {
            var StockOutUnitCollection = new wijmo.collections.CollectionView(stockOutUnits);
            var StockOutUnitList = new Array();
            for (var i = 0; i < StockOutUnitCollection.items.length; i++) {
                StockOutUnitList.push(StockOutUnitCollection.items[i].Unit);
            }
            
            var disabled;
            if(stockOutUnits == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboStockOutUnit.dispose();
            cboStockOutUnit = new wijmo.input.ComboBox('#stockOutItem_Unit', {
                disabled: disabled,
                placeholder: "Select Unit",
                itemsSource: StockOutUnitList,
                isEditable: false,
                selectedValue: document.getElementById('stockOutItem_Unit_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_Unit_data").val(StockOutUnitCollection.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_Unit_selectedValue").val(StockOutUnitCollection.items[this.selectedIndex].Unit);
                    $("#stockOutItem_BUCUnit_data").val(StockOutUnitCollection.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_BUCUnit_selectedValue").val(StockOutUnitCollection.items[this.selectedIndex].Unit);

                    createCboForStockOutBaseUnit(stockOutUnits);
                }
            });

            if(stockOutUnits == 0) {
                document.getElementById('stockOutItem_Unit_data').value = "";
                document.getElementById('stockOutItem_Unit_selectedValue').value = "";
                document.getElementById('stockOutItem_BUCUnit_data').value = "";
                document.getElementById('stockOutItem_BUCUnit_selectedValue').value = "";
            } else {
                document.getElementById('stockOutItem_Unit_data').value = StockOutUnitCollection.items[cboStockOutUnit.selectedIndex].UnitId;
                document.getElementById('stockOutItem_Unit_selectedValue').value = StockOutUnitCollection.items[cboStockOutUnit.selectedIndex].Unit;
                document.getElementById('stockOutItem_BUCUnit_data').value = StockOutUnitCollection.items[cboStockOutUnit.selectedIndex].UnitId;
                document.getElementById('stockOutItem_BUCUnit_selectedValue').value = StockOutUnitCollection.items[cboStockOutUnit.selectedIndex].Unit;
            }
        }

        // ===========================
        // CBO for STock Out Base Unit
        // ===========================
        function createCboForStockOutBaseUnit(stockOutUnits) {
            var StockOutBaseUnitCollection = new wijmo.collections.CollectionView(stockOutUnits);
            var StockOutBaseUnitList = new Array();
            for (var i = 0; i < StockOutBaseUnitCollection.items.length; i++) {
                StockOutBaseUnitList.push(StockOutBaseUnitCollection.items[i].Unit);
            }
            
            var disabled;
            if(stockOutUnits == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboBaseUnit.dispose();
            cboBaseUnit = new wijmo.input.ComboBox('#stockOutItem_BUCUnit', {
                disabled: true,
                placeholder: "Select Unit",
                itemsSource: StockOutBaseUnitList,
                isEditable: false,
                required: false,
                selectedValue: document.getElementById('stockOutItem_BUCUnit_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_BUCUnit_data").val(StockOutBaseUnitCollection.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_BUCUnit_selectedValue").val(StockOutBaseUnitCollection.items[this.selectedIndex].Unit);
                    $("#stockOutItem_Unit_data").val(StockOutBaseUnitCollection.items[this.selectedIndex].UnitId);
                    $("#stockOutItem_Unit_selectedValue").val(StockOutBaseUnitCollection.items[this.selectedIndex].Unit);

                    createCboForStockOutUnit(stockOutUnits);
                }
            });
            
            if(stockOutUnits == 0) {
                document.getElementById('stockOutItem_BUCUnit_data').value = "";
                document.getElementById('stockOutItem_BUCUnit_selectedValue').value = "";
                document.getElementById('stockOutItem_Unit_data').value = "";
                document.getElementById('stockOutItem_Unit_selectedValue').value = "";
            } else {
                document.getElementById('stockOutItem_BUCUnit_data').value = StockOutBaseUnitCollection.items[cboStockOutUnit.selectedIndex].UnitId;
                document.getElementById('stockOutItem_BUCUnit_selectedValue').value = StockOutBaseUnitCollection.items[cboStockOutUnit.selectedIndex].Unit;
                document.getElementById('stockOutItem_Unit_data').value = StockOutBaseUnitCollection.items[cboStockOutUnit.selectedIndex].UnitId;
                document.getElementById('stockOutItem_Unit_selectedValue').value = StockOutBaseUnitCollection.items[cboStockOutUnit.selectedIndex].Unit;
            }
        }

        // =====================
        // Get Stock Out Account
        // =====================
        function getStockOutItemAccountForComboBox() {
            stockOutItemAccounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            stockOutItemAccounts.push({
                                AccountId: results[i]["Id"],
                                AccountAccount: results[i]["Account"]
                            });
                        }
                        createStockOutCboForAccount(stockOutItemAccounts);
                    } else {
                        createStockOutCboForAccount(stockOutItemAccounts);
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
        }

        // ===============
        // CBO for Account
        // ===============
        function  createStockOutCboForAccount(stockOutItemAccounts) {
            var stockOutAccountCollection = new wijmo.collections.CollectionView(stockOutItemAccounts);
            var stockOutAccountList = new Array();
            for (var i = 0; i < stockOutAccountCollection.items.length; i++) {
                stockOutAccountList.push(stockOutAccountCollection.items[i].AccountAccount);
            }
            
            var disabled;
            if(stockOutItemAccounts == 0) {
                disabled = true;
            } else {
                if(document.getElementById('StockOut_IsLocked').value == 'true') {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }

            cboStockOutAccount.dispose();
            cboStockOutAccount = new wijmo.input.ComboBox('#stockOutItem_ExpenseAccount', {
                disabled: disabled,
                placeholder: "Select Expense Account",
                itemsSource: stockOutAccountList,
                isEditable: false,
                selectedValue: document.getElementById('stockOutItem_ExpenseAccount_selectedValue').value.toString(),
                onSelectedIndexChanged: function () {
                    $("#stockOutItem_ExpenseAccount_data").val(stockOutAccountCollection.items[this.selectedIndex].AccountId);
                }
            });

            if(stockOutItemAccounts == 0) {
                document.getElementById('stockOutItem_ExpenseAccount_data').value = "";
            } else {
                document.getElementById('stockOutItem_ExpenseAccount_data').value = stockOutAccountCollection.items[cboStockOutAccount.selectedIndex].AccountId;
            }
        }

        // ==================
        // ADD Stock Out Item
        // ==================
        function cmdStockOutItem_OnClick() {
            $('#stockOutItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredStockOutItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#cmdSaveStockOutItemButton").prop("disabled", false);
            $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);

            getArticleItemForManualCodeAndComponent();

            //inventories = new wijmo.collections.ObservableArray();
            //setTimeout(function() {
            //    var articleId = document.getElementById('stockOutItem_ItemId_data').value;
            //    var branchId = document.getElementById('StockOut_Branch_data').value;
            //    $.ajax({
            //        url: '/api/listArticleInventoryByBranchIdAndArticleId/' + branchId + '/' + 0,
            //        cache: false,
            //        type: 'GET',
            //        contentType: 'application/json; charset=utf-8',
            //        data: {},
            //        success: function (results) {
            //            if (results.length > 0) {
            //                for (i = 0; i < results.length; i++) {
            //                    inventories.push({
            //                        Id: results[i]["Id"],
            //                        BranchId: results[i]["BranchId"],
            //                        ArticleId: results[i]["ArticleId"],
            //                        InventoryCode: results[i]["InventoryCode"],
            //                        Quantity: results[i]["Quantity"],
            //                        Cost: results[i]["Cost"],
            //                        Amount: results[i]["Amount"],
            //                        Particulars: results[i]["Particulars"]
            //                    });
            //                    createCboForInventoryCode(inventories);
            //                }
            //            } else {
            //                createCboForInventoryCode(inventories);
            //            }
            //        }
            //    });
            //},100);

            //getStockOutItemUnitForComboBox();
            getStockOutItemAccountForComboBox();

            document.getElementById('stockOutItem_Id').value = 0;
            document.getElementById('stockOutItem_ItemId_data').value = '';
            document.getElementById('stockOutItem_ItemCode_selectedValue').value = '';
            document.getElementById('stockOutItem_ItemDescription_selectedValue').value = '';
            document.getElementById('stockOutItem_Particulars').value = '';
            document.getElementById('stockOutItem_ItemInventoryCode_data').value = '';
            document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = '';
            document.getElementById('stockOutItem_Quantity').value = 0;
            document.getElementById('stockOutItem_Unit_data').value = '';
            document.getElementById('stockOutItem_Unit_selectedValue').value = '';
            document.getElementById('stockOutItem_Cost').value = 0;
            document.getElementById('stockOutItem_Amount').value = 0;
            document.getElementById('stockOutItem_BUCUnit_data').value = '';
            document.getElementById('stockOutItem_BUCUnit_selectedValue').value = '';
            document.getElementById('stockOutItem_BUCQuantity').value = 0;
            document.getElementById('stockOutItem_BUCCost').value = 0;

            var stockOutAccountId = document.getElementById('StockOut_Account_data').value;
            var stockOutAccount = document.getElementById('StockOut_Account_selectedValue').value;

            document.getElementById('stockOutItem_ExpenseAccount_data').value = stockOutAccountId;
            document.getElementById('stockOutItem_ExpenseAccount_selectedValue').value = stockOutAccount;
        }

        // ===================
        // Edit Stock Out Item
        // ===================
        function btnEditStockOutItem_OnClick() {
            items.editItem(items.currentItem);
            $('#stockOutItemsEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredStockOutItem').each(function () {
                $(this).css({
                    "border": "",
                });
            });

            $("#cmdSaveStockOutItemButton").prop("disabled", false);
            $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);

            getArticleItemForManualCodeAndComponent();
            //getStockOutItemUnitForComboBox();
            getStockOutItemAccountForComboBox();

            var item = items.currentEditItem;
            document.getElementById('stockOutItem_Id').value = item.Id;
            document.getElementById('stockOutItem_ItemId_data').value = item.ItemId;
            document.getElementById('stockOutItem_ItemCode_selectedValue').value = item.ItemCode;
            document.getElementById('stockOutItem_ItemDescription_selectedValue').value = item.Item;
            document.getElementById('stockOutItem_Particulars').value = item.Particulars;
            document.getElementById('stockOutItem_ItemInventoryCode_data').value = item.ItemInventoryId;
            document.getElementById('stockOutItem_ItemInventoryCode_selectedValue').value = item.ItemInventory;
            document.getElementById('stockOutItem_Quantity').value = item.Quantity;
            document.getElementById('stockOutItem_Unit_data').value = item.UnitId;
            document.getElementById('stockOutItem_Unit_selectedValue').value = item.Unit;
            document.getElementById('stockOutItem_Cost').value = item.Cost;
            document.getElementById('stockOutItem_Amount').value = item.Amount;
            document.getElementById('stockOutItem_BUCUnit_data').value = item.BaseUnitId;
            document.getElementById('stockOutItem_BUCUnit_selectedValue').value = item.BaseUnit;
            document.getElementById('stockOutItem_BUCQuantity').value = item.BaseQuantity;
            document.getElementById('stockOutItem_BUCCost').value = item.BaseCost;
            document.getElementById('stockOutItem_ExpenseAccount_data').value = item.ExpenseAccountId;
            document.getElementById('stockOutItem_ExpenseAccount_selectedValue').value = item.ExpenseAccount;
        }

        // =====================
        // Delete Stock Out Item
        // =====================
        function btnDeleteStockOutItem_OnClick() {
            $('#deletStockOutItemsConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            $("#cmdConfirmDeleteStockOutItems").prop("disabled", false);
            $("#cmdConfirmDeleteStockOutItemsCloseButton").prop("disabled", false);
        }
        // Confirm Delete Stock Out Item
        function cmdStockOutItemsConfirmDeleteButton_OnClick() {
            $("#cmdConfirmDeleteStockOutItems").prop("disabled", true);
            $("#cmdConfirmDeleteStockOutItemsCloseButton").prop("disabled", true);

            items.editItem(items.currentItem);
            var item = items.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteStockOutItem/' + item,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        $("#cmdConfirmDeleteStockOutItems").prop("disabled", true);
                        $("#cmdConfirmDeleteStockOutItemsCloseButton").prop("disabled", true);
                        toastr.success("Successfully Deleted");

                        $('#deletStockOutItemsConfirm').modal('hide');

                        items = new wijmo.collections.CollectionView(getItem());
                        items.canFilter = true;
                        items.pageSize = 15;

                        var filterTextItem = '';
                        $('#InputFilterItem').keyup(function () {
                            filterTextItem = this.value.toLowerCase();
                            items.refresh();
                        });
                        items.filter = function (item) {
                            return !filterTextItem || (item.ItemCode.toLowerCase().indexOf(filterTextItem) > -1);
                        }
                        items.collectionChanged.addHandler(function (sender, args) {
                            updateNavigateButtonsItem();
                        });

                        // Flex Grid for Items
                        itemGrid.itemsSource = items;
                        itemGrid.trackChanges = true;
                    },
                    404: function () {
                        toastr.error("Request Not Found");
                        $('#deletStockOutItemsConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockOutItems").prop("disabled", false);
                        $("#cmdConfirmDeleteStockOutItemsCloseButton").prop("disabled", false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deletStockOutItemsConfirm').modal('hide');
                        $("#cmdConfirmDeleteStockOutItems").prop("disabled", false);
                        $("#cmdConfirmDeleteStockOutItemsCloseButton").prop("disabled", false);
                    }
                }
            });
        }

        // ===================
        // Save Stock Out Item
        // ===================
        function cmdStockOutItemSaveButton_OnClick() {
            var stockOutItemObject = new Object();
            var OTId = @stockOutId;

            var stockOutItemId = document.getElementById('stockOutItem_Id').value;
            stockOutItemObject.OTId = OTId;
            stockOutItemObject.ExpenseAccountId = document.getElementById('stockOutItem_ExpenseAccount_data').value;
            stockOutItemObject.ItemId = document.getElementById('stockOutItem_ItemId_data').value;
            stockOutItemObject.ItemInventoryId = document.getElementById('stockOutItem_ItemInventoryCode_data').value;
            stockOutItemObject.Particulars = document.getElementById('stockOutItem_Particulars').value;
            stockOutItemObject.UnitId = document.getElementById('stockOutItem_Unit_data').value;
            stockOutItemObject.Quantity = document.getElementById('stockOutItem_Quantity').value;
            stockOutItemObject.Cost = document.getElementById('stockOutItem_Cost').value;
            stockOutItemObject.Amount = document.getElementById('stockOutItem_Amount').value;
            stockOutItemObject.BaseUnitId = document.getElementById('stockOutItem_BUCUnit_data').value;
            stockOutItemObject.BaseQuantity = document.getElementById('stockOutItem_BUCQuantity').value;
            stockOutItemObject.BaseCost = document.getElementById('stockOutItem_BUCCost').value;
            var stockOutItemData = JSON.stringify(stockOutItemObject);

            if( document.getElementById('stockOutItem_ExpenseAccount_data').value == '') {
                document.getElementById("stockOutItem_ExpenseAccount").style.border = "1px solid red";
            } else {
                document.getElementById("stockOutItem_ExpenseAccount").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('stockOutItem_ItemId_data').value == '') {
                document.getElementById("stockOutItem_ItemCode").style.border = "1px solid red";
                document.getElementById("stockOutItem_ItemDescription").style.border = "1px solid red";
            } else {
                document.getElementById("stockOutItem_ItemCode").style.border = "1px solid #C8C8C8";
                document.getElementById("stockOutItem_ItemDescription").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('stockOutItem_Unit_data').value == '') {
                document.getElementById("stockOutItem_Unit").style.border = "1px solid red";
            } else {
                document.getElementById("stockOutItem_Unit").style.border = "1px solid #C8C8C8";
            }

            if( document.getElementById('stockOutItem_BUCUnit_data').value == '') {
                document.getElementById("stockOutItem_BUCUnit").style.border = "1px solid red";
            } else {
                document.getElementById("stockOutItem_BUCUnit").style.border = "1px solid #C8C8C8";
            }

            var isValid = true;
            $('.requiredStockOutItem').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                }
                else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            if (isValid == false) {
                toastr.error("Invalid Entry");
            }
            else {
                $("#cmdSaveStockOutItemButton").prop("disabled", true);
                $("#cmdStockOutItemDetailCloseButton").prop("disabled", true);
                if (stockOutItemId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addStockOutItem',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockOutItemData,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveStockOutItemButton").prop("disabled", true);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", true);
                                toastr.success("Successfully Saved");

                                $('#stockOutItemsEdit').modal('hide');

                                items = new wijmo.collections.CollectionView(getItem());
                                items.canFilter = true;
                                items.pageSize = 15;

                                var filterTextItem = '';
                                $('#InputFilterItem').keyup(function () {
                                    filterTextItem = this.value.toLowerCase();
                                    items.refresh();
                                });
                                items.filter = function (item) {
                                    return !filterTextItem || (item.item.toLowerCase().indexOf(filterTextItem) > -1);
                                }
                                items.collectionChanged.addHandler(function (sender, args) {
                                    updateNavigateButtonsItem();
                                });

                                // Flex Grid for Items
                                itemGrid.itemsSource = items;
                                itemGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Can't Save");
                                $('#stockOutItemsEdit').modal('hide');
                                $("#cmdSaveStockOutItemButton").prop("disabled", false);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#stockOutItemsEdit').modal('hide');
                                $("#cmdSaveStockOutItemButton").prop("disabled", false);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateStockOutItem/' + stockOutItemId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: stockOutItemData,
                        statusCode: {
                            200: function () {
                                $("#cmdSaveStockOutItemButton").prop("disabled", true);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", true);
                                toastr.success("Successfully Updated");

                                $('#stockOutItemsEdit').modal('hide');

                                items = new wijmo.collections.CollectionView(getItem());
                                items.canFilter = true;
                                items.pageSize = 15;

                                var filterTextItem = '';
                                $('#InputFilterItem').keyup(function () {
                                    filterTextItem = this.value.toLowerCase();
                                    items.refresh();
                                });
                                items.filter = function (item) {
                                    return !filterTextItem || (item.item.toLowerCase().indexOf(filterTextItem) > -1);
                                }
                                items.collectionChanged.addHandler(function (sender, args) {
                                    updateNavigateButtonsItem();
                                });

                                // Flex Grid for Items
                                itemGrid.itemsSource = items;
                                itemGrid.trackChanges = true;
                            },
                            404: function () {
                                toastr.error("Can't Update");
                                $('#stockOutItemsEdit').modal('hide');
                                $("#cmdSaveStockOutItemButton").prop("disabled", false);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#stockOutItemsEdit').modal('hide');
                                $("#cmdSaveStockOutItemButton").prop("disabled", false);
                                $("#cmdStockOutItemDetailCloseButton").prop("disabled", false);
                            }
                        }
                    });
                }
            }
        }

        // ============================
        // Navigation Buttons for Items
        // ============================
        function updateNavigateButtonsItem() {
            if (items.pageSize <= 0) {
                document.getElementById('navigationPageGridItem').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridItem').style.display = 'block';
            if (items.pageIndex === 0) {
                btnFirstPageGridItem.setAttribute('disabled', 'disabled');
                btnPreviousPageGridItem.setAttribute('disabled', 'disabled');
                btnNextPageGridItem.removeAttribute('disabled');
                btnLastPageGridItem.removeAttribute('disabled');
            } else if (items.pageIndex === (items.pageCount - 1)) {
                btnFirstPageGridItem.removeAttribute('disabled');
                btnPreviousPageGridItem.removeAttribute('disabled');
                btnLastPageGridItem.setAttribute('disabled', 'disabled');
                btnNextPageGridItem.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridItem.removeAttribute('disabled');
                btnPreviousPageGridItem.removeAttribute('disabled');
                btnNextPageGridItem.removeAttribute('disabled');
                btnLastPageGridItem.removeAttribute('disabled');
            }
            btnCurrentPageGridItem.innerHTML = (items.pageIndex + 1) + ' / ' + items.pageCount;
        }

        // ======
        //  Items
        // ======
        function itemTab() {
            $("#stockOutItem_Quantity").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#stockOutItem_Cost").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#stockOutItem_Amount").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#stockOutItem_BUCQuantity").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $("#stockOutItem_BUCCost").keydown(function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) ||
                    // Allow: Ctrl+C
                    (e.keyCode == 67 && e.ctrlKey === true) ||
                    // Allow: Ctrl+X
                    (e.keyCode == 88 && e.ctrlKey === true) ||
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
            });

            $('#stockOutItem_Quantity').keyup(function() {
                document.getElementById('stockOutItem_BUCQuantity').value = this.value;

                var stockOut_Quantity = document.getElementById('stockOutItem_Quantity').value;
                var stockOut_Cost = document.getElementById('stockOutItem_Cost').value;

                document.getElementById('stockOutItem_Amount').value = Math.round(( stockOut_Quantity * stockOut_Cost ) * 100 ) / 100;
                if(this.value == 0) {
                    document.getElementById('stockOutItem_BUCCost').value = 0;
                } else {
                    document.getElementById('stockOutItem_BUCCost').value = stockOut_Cost;
                }
            });

            document.getElementById('stockOutItem_Cost').disabled = true;
            document.getElementById('stockOutItem_Amount').disabled = true;
            document.getElementById('stockOutItem_BUCQuantity').disabled = true;
            document.getElementById('stockOutItem_BUCCost').disabled = true;

            cboManualCodeArticleItems = new wijmo.input.ComboBox('#stockOutItem_ItemCode');
            cboItemDescriptionArticleItems = new wijmo.input.ComboBox('#stockOutItem_ItemDescription');
            cboInventoryCode = new wijmo.input.ComboBox('#stockOutItem_ItemInventoryCode');
            cboStockOutUnit = new wijmo.input.ComboBox('#stockOutItem_Unit');
            cboBaseUnit = new wijmo.input.ComboBox('#stockOutItem_BUCUnit');
            cboStockOutAccount = new wijmo.input.ComboBox('#stockOutItem_ExpenseAccount');

            items = new wijmo.collections.CollectionView(getItem());
            items.canFilter = true;
            items.pageSize = 15;

            var filterTextItem = '';
            $('#InputFilterItem').keyup(function () {
                filterTextItem = this.value.toLowerCase();
                items.refresh();
            });
            items.filter = function (item) {
                return !filterTextItem || (item.item.toLowerCase().indexOf(filterTextItem) > -1);
            }
            items.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsItem();
            });

            // Flex Grid for Items
            itemGrid = new wijmo.grid.FlexGrid('#ItemGrid');
            itemGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 60,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Item Code",
                                "binding": "ItemCode",
                                "allowSorting": true,
                                "width": 150,
                            },
                            {
                                "header": "Item Description",
                                "binding": "Item",
                                "allowSorting": true,
                                "width": 350,
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "allowSorting": true,
                                "width": 300
                            },
                            {
                                "header": "Item Inventory Code",
                                "binding": "ItemInventory",
                                "allowSorting": true,
                                "width": 200
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": 130
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": 200
                            },
                            {
                                "header": "Cost",
                                "binding": "Cost",
                                "allowSorting": true,
                                "width": 130
                            },
                             {
                                 "header": "Amount",
                                 "binding": "Amount",
                                 "allowSorting": true,
                                 "width": 130
                             },
                             {
                                 "header": "Unit",
                                 "binding": "BaseUnit",
                                 "allowSorting": true,
                                 "width": 200
                             },
                            {
                                "header": "Quantity",
                                "binding": "BaseQuantity",
                                "allowSorting": true,
                                "width": 130
                            },
                           {
                               "header": "Cost",
                               "binding": "BaseCost",
                               "allowSorting": true,
                               "width": 130
                           },
                           {
                               "header": "Expense Account",
                               "binding": "ExpenseAccount",
                               "allowSorting": true,
                               "width": 250
                           },
                ],
                autoGenerateColumns: false,
                itemsSource: items,
                isReadOnly: true,
                frozenColumns: 2,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            itemGrid.trackChanges = true;

            var hr = new wijmo.grid.Row();
            itemGrid.allowMerging = wijmo.grid.AllowMerging.AllHeaders;
            itemGrid.columnHeaders.rows.push(hr);
            itemGrid.columnHeaders.rows[0].allowMerging = true;

            itemGrid.columnHeaders.columns[0].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 0, 'Edit');

            itemGrid.columnHeaders.columns[1].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 1, 'Delete');

            itemGrid.columnHeaders.columns[2].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 2, 'Item Code');

            itemGrid.columnHeaders.columns[3].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 3, 'Item Description');

            itemGrid.columnHeaders.columns[4].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 4, 'Particulars');

            itemGrid.columnHeaders.columns[5].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 5, 'Item Inventory Code');

            itemGrid.columnHeaders.columns[6].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 6, 'Quantity');

            itemGrid.columnHeaders.columns[7].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 7, 'Unit');

            itemGrid.columnHeaders.columns[8].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 8, 'Cost');

            itemGrid.columnHeaders.columns[9].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 9, 'Amount');

            for (var columnBasicUnitConversion = 10; columnBasicUnitConversion <= 12; columnBasicUnitConversion++) {
                itemGrid.columnHeaders.setCellData(0, columnBasicUnitConversion, 'Basic Unit Conversion');
            }

            itemGrid.columnHeaders.columns[13].allowMerging = true;
            itemGrid.columnHeaders.setCellData(0, 13, 'Expense Account');

            //Navigation button for Items
            btnFirstPageGridItem = document.getElementById('btnMoveToFirstPageGridItem');
            btnPreviousPageGridItem = document.getElementById('btnMoveToPreviousPageGridItem');
            btnNextPageGridItem = document.getElementById('btnMoveToNextPageGridItem');
            btnLastPageGridItem = document.getElementById('btnMoveToLastPageGridItem');
            btnCurrentPageGridItem = document.getElementById('btnCurrentPageGridItem');

            updateNavigateButtonsItem();

            btnFirstPageGridItem.addEventListener('click', function () {
                items.moveToFirstPage();
                updateNavigateButtonsItem();
            });
            btnPreviousPageGridItem.addEventListener('click', function () {
                items.moveToPreviousPage();
                updateNavigateButtonsItem();
            });
            btnNextPageGridItem.addEventListener('click', function () {
                items.moveToNextPage();
                updateNavigateButtonsItem();
            });
            btnLastPageGridItem.addEventListener('click', function () {
                items.moveToLastPage();
                updateNavigateButtonsItem();
            });
        }
    </script>

    <!-- ========================= -->
    <!-- Inventory Entries Scripts -->
    <!-- ========================= -->
    <script type="text/javascript">
        // ======================================
        // Global Variables for Inventory Entries
        // ======================================
        var inventoryEntries;
        var inventoryEntryGrid;

        var btnFirstPageGridInventoryEntry;
        var btnPreviousPageGridInventoryEntry;
        var btnNextPageGridInventoryEntry;
        var btnLastPageGridInventoryEntry;
        var btnCurrentPageGridInventoryEntry;

        // ============================
        // GET Contact Information List
        // ============================
        function getInventoryEntries() {
            var inventoryEntries = new wijmo.collections.ObservableArray;
            var OTId = @stockOutId;
            $('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listInventoryByOTId/' + OTId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    $('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            inventoryEntries.push({
                                EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdAccountEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdAccountDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: Results[i]["Id"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                InventoryDate: Results[i]["InventoryDate"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                ArticleInventoryId: Results[i]["ArticleInventoryId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"],
                                QuantityIn: Results[i]["QuantityIn"],
                                Quantity: Results[i]["Quantity"],
                                QuantityOut: Results[i]["QuantityOut"],
                                Amount: Results[i]["Amount"],
                                Particulars: Results[i]["Particulars"],
                                Code: Results[i]["Code"],
                                Unit: Results[i]["Unit"]
                            });
                        }
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return inventoryEntries;
        }

        // ========================================
        // FlexGrid Selection for Inventory Entries
        // ========================================
        function updateDetailsInventoryEntry() {
            var item = inventoryEntries.currentItem;
            document.getElementById('createdBy').innerHTML = item.CreatedBy;
            document.getElementById('createdDate').innerHTML = item.CreatedDateTime;
            document.getElementById('updatedBy').innerHTML = item.UpdatedBy;
            document.getElementById('updatedDate').innerHTML = item.UpdatedDateTime;
        }

        // ========================================
        // Navigation Buttons for Inventory Entries
        // ========================================
        function updateNavigateButtonsInventoryEntry() {
            if (inventoryEntries.pageSize <= 0) {
                document.getElementById('navigationPageGridInventoryEntry').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridInventoryEntry').style.display = 'block';
            if (inventoryEntries.pageIndex === 0) {
                btnFirstPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnPreviousPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnNextPageGridInventoryEntry.removeAttribute('disabled');
                btnLastPageGridInventoryEntry.removeAttribute('disabled');
            } else if (inventoryEntries.pageIndex === (inventoryEntries.pageCount - 1)) {
                btnFirstPageGridInventoryEntry.removeAttribute('disabled');
                btnPreviousPageGridInventoryEntry.removeAttribute('disabled');
                btnLastPageGridInventoryEntry.setAttribute('disabled', 'disabled');
                btnNextPageGridInventoryEntry.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridInventoryEntry.removeAttribute('disabled');
                btnPreviousPageGridInventoryEntry.removeAttribute('disabled');
                btnNextPageGridInventoryEntry.removeAttribute('disabled');
                btnLastPageGridInventoryEntry.removeAttribute('disabled');
            }
            btnCurrentPageGridInventoryEntry.innerHTML = (inventoryEntries.pageIndex + 1) + ' / ' + inventoryEntries.pageCount;
        }

        // ==================================
        // On Page Load for Inventory Entries
        // ==================================
        function inventoryEntryTab() {
            inventoryEntries = new wijmo.collections.CollectionView(getInventoryEntries());
            inventoryEntries.canFilter = true;
            inventoryEntries.pageSize = 15;

            var filterTextInventoryEntry = '';
            $('#InputFilterInventoryEntry').keyup(function () {
                filterTextInventoryEntry = this.value.toLowerCase();
                inventoryEntries.refresh();
            });
            inventoryEntries.filter = function (item) {
                return !filterTextInventoryEntry || (item.inventoryEntry.toLowerCase().indexOf(filterTextInventoryEntry) > -1);
            }
            inventoryEntries.collectionChanged.addHandler(function (sender, args) {
                updateNavigateButtonsInventoryEntry();
            });
            inventoryEntries.currentChanged.addHandler(function (sender, args) {
                updateDetailsInventoryEntry();
            });

            // Flex Grid for Inventory Entries
            inventoryEntryGrid = new wijmo.grid.FlexGrid('#InventoryEntryGrid');
            inventoryEntryGrid.initialize({
                columns: [
                            {
                                "header": "Date",
                                "binding": "InventoryDate",
                                "allowSorting": true,
                                "width": 100,
                            },
                            {
                                "header": "Branch",
                                "binding": "Branch",
                                "allowSorting": true,
                                "width": 250,
                            },
                            {
                                "header": "Item",
                                "binding": "Article",
                                "align": "left",
                                "allowSorting": true,
                                "width": 300,
                            },
                            {
                                "header": "Particulars",
                                "binding": "Particulars",
                                "align": "left",
                                "allowSorting": true,
                                "width": 400,
                            },
                            {
                                "header": "Code",
                                "binding": "Code",
                                "allowSorting": true,
                                "width": 200,
                            },
                            {
                                "header": "Quantity",
                                "binding": "Quantity",
                                "allowSorting": true,
                                "width": 150,
                            },
                            {
                                "header": "Unit",
                                "binding": "Unit",
                                "allowSorting": true,
                                "width": 100,
                            },
                            {
                                "header": "Amount",
                                "binding": "Amount",
                                "allowSorting": true,
                                "width": 150,
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: inventoryEntries,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            inventoryEntryGrid.trackChanges = true;

            //Navigation button for Inventory Entries
            btnFirstPageGridInventoryEntry = document.getElementById('btnMoveToFirstPageGridInventoryEntry');
            btnPreviousPageGridInventoryEntry = document.getElementById('btnMoveToPreviousPageGridInventoryEntry');
            btnNextPageGridInventoryEntry = document.getElementById('btnMoveToNextPageGridInventoryEntry');
            btnLastPageGridInventoryEntry = document.getElementById('btnMoveToLastPageGridInventoryEntry');
            btnCurrentPageGridInventoryEntry = document.getElementById('btnCurrentPageGridInventoryEntry');

            updateNavigateButtonsInventoryEntry();

            btnFirstPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToFirstPage();
                updateNavigateButtonsInventoryEntry();
            });
            btnPreviousPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToPreviousPage();
                updateNavigateButtonsInventoryEntry();
            });
            btnNextPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToNextPage();
                updateNavigateButtonsInventoryEntry();
            });
            btnLastPageGridInventoryEntry.addEventListener('click', function () {
                inventoryEntries.moveToLastPage();
                updateNavigateButtonsInventoryEntry();
            });
        }
    </script>

    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        var journals;
        var journalListGrid;

        var btnFirstPageGridJournal;
        var btnPreviousPageGridJournal;
        var btnNextPageGridJournal;
        var btnLastPageGridJournal;
        var btnCurrentPageGridJournal;

        // ===========
        // Get Journal
        // ===========
        function getJournalListForStockOut() {
            var journals = new wijmo.collections.ObservableArray;
            var OTId = @stockOutId;
            //$('#loadingModal').modal('show');
            $.ajax({
                url: '/api/listJournalByOTId/' + OTId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (Results) {
                    //$('#loadingModal').modal('hide');
                    if (Results.length > 0) {
                        for (i = 0; i < Results.length; i++) {
                            journals.push({
                                //EditId: "<button class='btn btn-primary btn-xs btn-block' onclick='cmdJournalVoucherLineEditButton_OnClick()'><i class='fa fa-edit'></i> Edit</button>",
                                //DeleteId: "<button class='btn btn-danger btn-xs btn-block' onclick='cmdJournalVoucherLineDeleteButton_OnClick()'><i class='fa fa-trash'></i> Delete</button>",
                                Id: Results[i]["Id"],
                                JournalDate: Results[i]["JournalDate"],
                                BranchId: Results[i]["BranchId"],
                                Branch: Results[i]["Branch"],
                                AccountId: Results[i]["AccountId"],
                                AccountCode: Results[i]["AccountCode"],
                                Account: Results[i]["Account"],
                                ArticleId: Results[i]["ArticleId"],
                                Article: Results[i]["Article"],
                                Particulars: Results[i]["Particulars"],
                                DebitAmount: Results[i]["DebitAmount"],
                                CreditAmount: Results[i]["CreditAmount"],
                                ORId: Results[i]["ORId"],
                                CVId: Results[i]["CVId"],
                                JVId: Results[i]["JVId"],
                                RRId: Results[i]["RRId"],
                                SIId: Results[i]["SIId"],
                                INId: Results[i]["INId"],
                                OTId: Results[i]["OTId"],
                                STId: Results[i]["STId"],
                                DocumentReference: Results[i]["DocumentReference"],
                                APRRId: Results[i]["APRRId"],
                                ARSIId: Results[i]["ARSIId"]
                            });

                            var debitAmountTotal = 0;
                            var creditAmountTotal = 0;

                            var a = 0;
                            while (a < Results.length) {
                                debitAmountTotal += Results[a]["DebitAmount"];
                                creditAmountTotal += Results[a]["CreditAmount"];
                                a++;
                            }
                        }

                        document.getElementById('totalDebitInJournal').innerHTML = debitAmountTotal.toLocaleString();
                        document.getElementById('totalCreditInJournal').innerHTML = creditAmountTotal.toLocaleString();
                    }
                }
            }).fail(function (xhr, textStatus, err) {
                alert(err);
            });
            return journals;
        }

        // ==============================
        // Navigation Buttons for Journal
        // ==============================
        function updateNavigateButtonsJournal() {
            if (journals.pageSize <= 0) {
                document.getElementById('navigationPageGridJournal').style.display = 'none';
                return;
            }
            document.getElementById('navigationPageGridJournal').style.display = 'block';
            if (journals.pageIndex === 0) {
                btnFirstPageGridJournal.setAttribute('disabled', 'disabled');
                btnPreviousPageGridJournal.setAttribute('disabled', 'disabled');
                btnNextPageGridJournal.removeAttribute('disabled');
                btnLastPageGridJournal.removeAttribute('disabled');
            } else if (journals.pageIndex === (journals.pageCount - 1)) {
                btnFirstPageGridJournal.removeAttribute('disabled');
                btnPreviousPageGridJournal.removeAttribute('disabled');
                btnLastPageGridJournal.setAttribute('disabled', 'disabled');
                btnNextPageGridJournal.setAttribute('disabled', 'disabled');
            } else {
                btnFirstPageGridJournal.removeAttribute('disabled');
                btnPreviousPageGridJournal.removeAttribute('disabled');
                btnNextPageGridJournal.removeAttribute('disabled');
                btnLastPageGridJournal.removeAttribute('disabled');
            }
            btnCurrentPageGridJournal.innerHTML = (journals.pageIndex + 1) + ' / ' + journals.pageCount;
        }

        // ============
        // Journal List
        // ============
        function stockOutJournal_OnClick() {
            journals = new wijmo.collections.CollectionView(getJournalListForStockOut());
            journals.pageSize = 10;

            document.getElementById("loadingJournalGridList").innerHTML = '<i class="fa fa-spinner fa-spin"></i> Loading Journal...';

            $("#loadingJournalGridList").show();
            $("#footerModalJournalNavigationButtons").hide();
            setTimeout(function() {
                $("#loadingJournalGridList").hide();
                $("#footerModalJournalNavigationButtons").show();
                // Flex Grid
                journalListGrid = new wijmo.grid.FlexGrid('#journalGrid');
                journalListGrid.initialize({
                    columns: [
                                //{
                                //    "header": "Edit",
                                //    "binding": "EditId",
                                //    "width": 60,
                                //    "align": "center",
                                //    "allowResizing": false,
                                //    "allowSorting": false,
                                //    "isContentHtml": true
                                //},
                                //{
                                //    "header": "Delete",
                                //    "binding": "DeleteId",
                                //    "width": 70,
                                //    "align": "center",
                                //    "allowResizing": false,
                                //    "allowSorting": false,
                                //    "isContentHtml": true
                                //},
                                {
                                    "header": "Date",
                                    "binding": "JournalDate",
                                    "allowSorting": true,
                                    "width": 150,
                                },
                                {
                                    "header": "Branch",
                                    "binding": "Branch",
                                    "allowSorting": true,
                                    "width": 220
                                },
                                {
                                    "header": "Code",
                                    "binding": "AccountCode",
                                    "allowSorting": true,
                                    "width": 100
                                },
                                {
                                    "header": "Account",
                                    "binding": "Account",
                                    "allowSorting": true,
                                    "width": 250
                                },
                                {
                                    "header": "Article",
                                    "binding": "Article",
                                    "allowSorting": true,
                                    "width": 350
                                },
                                {
                                    "header": "Debit Amount",
                                    "binding": "DebitAmount",
                                    "allowSorting": true,
                                    "width": 130
                                }
                                ,
                                {
                                    "header": "Credit Amount",
                                    "binding": "CreditAmount",
                                    "allowSorting": true,
                                    "width": 130
                                }

                    ],
                    autoGenerateColumns: false,
                    itemsSource: journals,
                    isReadOnly: true,
                    autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                    allowDragging: wijmo.grid.AllowDragging.None,
                    selectionMode: wijmo.grid.SelectionMode.Row
                });

                journalListGrid.trackChanges = true;

                //Navigation button
                btnFirstPageGridJournal = document.getElementById('btnMoveToFirstPageGridJournal');
                btnPreviousPageGridJournal = document.getElementById('btnMoveToPreviousPageGridJournal');
                btnNextPageGridJournal = document.getElementById('btnMoveToNextPageGridJournal');
                btnLastPageGridJournal = document.getElementById('btnMoveToLastPageGridJournal');
                btnCurrentPageGridJournal = document.getElementById('btnCurrentPageGridJournal');

                updateNavigateButtonsJournal();

                btnFirstPageGridJournal.addEventListener('click', function () {
                    journals.moveToFirstPage();
                    updateNavigateButtonsJournal();
                });
                btnPreviousPageGridJournal.addEventListener('click', function () {
                    journals.moveToPreviousPage();
                    updateNavigateButtonsJournal();
                });
                btnNextPageGridJournal.addEventListener('click', function () {
                    journals.moveToNextPage();
                    updateNavigateButtonsJournal();
                });
                btnLastPageGridJournal.addEventListener('click', function () {
                    journals.moveToLastPage();
                    updateNavigateButtonsJournal();
                });

            }, 1000);
        }

        // journal detail
        $('#cmdStockOutJournal').click(function () {
            $('#journalDetail').modal({
                show: true,
                backdrop: 'static'
            });

            window.stockOutJournal_OnClick = function () {
                return true;
            };
        });

        // ====
        // TABS
        // ====
        $('#itemTabId').click(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            window.itemTab = function () {
                return true;
            };
        });

        $('#inventoryEntryTabId').click(function () {
            $('#Items').hide();
            $('#InventoryEntries').show();
            inventoryEntryTab();
            window.inventoryEntryTab = function () {
                return true;
            };
        });

        $(document).ready(function () {
            $('#Items').show();
            $('#InventoryEntries').hide();
            itemTab();
        });
    </script>
</body>
</html>