<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Supplier Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Supplier Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-12" align="right">
                                <button class="btn btn-primary" id="supplier_LockButton" onclick="supplierLockButton_OnClick()"><i class="fa fa-lock"></i> Lock</button>
                                <button class="btn btn-primary" id="supplier_UnlockButton" onclick="supplierUnlockButton_OnClick()"><i class="fa fa-unlock"></i> Unlock</button>
                                <button class="btn btn-danger" id="supplier_CloseButton" onclick="supplierCloseButton_OnClick()"><i class=" fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Code</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSupplier" id="artcileSupplier_code" placeholder="Code" disabled />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Manual Code</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSupplier" id="artcileSupplier_manual_code" placeholder="Manual Code" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Supplier</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control  requiredSupplier" id="artcileSupplier_Supplier" placeholder="Supplier" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Supplier Group</label>
                                        <div class="col-sm-8">
                                            <div class="" id="cboSupplierGroup"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Account</label>
                                        <div class="col-sm-8">
                                            <table style="width: 100%" border="0">
                                                <tr>
                                                    <td style="width: 30%">
                                                        <div class="comboBox-wide" id="cboAccountCode"></div>
                                                    </td>
                                                    <td style="width: 1%"></td>
                                                    <td style="width: 69%">
                                                        <div class="comboBox-wide" id="cboAccount"></div>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Term</label>
                                        <div class="col-sm-8">
                                            <div class="" id="cboTerm"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Address</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredSupplier" id="artcileSupplier_Address" placeholder="Address"></textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Contact Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSupplier" id="artcileSupplier_ContactNo" placeholder="Contact No." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Contact Person</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control  requiredSupplier" id="artcileSupplier_ContactPerson" placeholder="Contact Person" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">TIN</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSupplier" id="artcileSupplier_TIN" placeholder="TIN Number" />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Particulars</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredsupplier" id="artcileSupplier_Particulars" placeholder="Particulars"></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">E-mail</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSupplier" id="artcileSupplier_Email" placeholder="E-mail here.." />

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#JournalLedger" id="journalLedgerTabId">Journal Ledger</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#ContactInformation" id="contactInformationTabId">More Contact Information</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="JournalLedger" class="tab-pane fade in active" style="margin-bottom: 15px;">
                        <div id="JournalLedgerGrid"></div>
                    </div>
                    <div id="ContactInformation" class="tab-pane fade in">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <div class="row">
                                    <div class="col-lg-12" align="right">
                                        <button class="btn btn-primary" id="btnAddMoreContactInformation" onclick="cmdAddContact_OnClick()"><i class="fa fa-plus"></i> Add</button>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-body">
                                <div id="ContactInformationGrid" class="grid"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!-- Contact Edit Detail -->
    <div class="modal fade" id="contactEdit" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="contactModalLabel">Contact Information</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingModalItem"></span>
                    </center>
                    <div id="contactDetailForm">
                        <dl class="dl-horizontal">
                            <dt>Contact Person</dt>
                            <dd><input type="text" class="form-control  requiredContact" id="contact_contactPerson" placeholder="Contact Person" /></dd>
                            <dt>Contact Number</dt>
                            <dd><input type="text" class="form-control requiredContact" id="contact_contactNumber" placeholder="Contact Number" /></dd>
                            <dt>Remarks</dt>
                            <dd><textarea rows="5" class="form-control textarea-custom requiredContact" id="contact_Remarks" placeholder="Remarks"></textarea></dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdSaveContactButton" class="btn btn-primary" onclick="cmdContactSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdContactDetailCloseButton" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Contact Delete Modal Confirmation -->
    <div class="modal fade" id="deleteContactConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete Contact</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this contact information?
                </div>
                <div class="modal-footer">
                    <button id="cmdConfirmDeleteContact" class="btn btn-danger" onclick="cmdContactConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteContactCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var cboSupplierGroup = new wijmo.input.ComboBox('#cboSupplierGroup');
        var supplierId = getParam('id');
        var Islocked = false;
        var cboAccountCode = new wijmo.input.ComboBox('#cboAccountCode');
        var cboAccount = new wijmo.input.ComboBox('#cboAccount');
        var cboTerm = new wijmo.input.ComboBox('#cboTerm');
        var journalLedgerCollectionView;
        var journalLedgerGrid;
        var contactInformations;
        var contactInformationGrid;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // =========================
        // Get Artile Supplier Group
        // =========================
        function getArticleSupplierGroupForComboBox() {
            var articleSupplierGroupsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleGroupByArticleTypeId/3',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (articleSupplierGroupResults) {
                    if (articleSupplierGroupResults.length > 0) {
                        for (i = 0; i < articleSupplierGroupResults.length; i++) {
                            articleSupplierGroupsObservableArray.push({
                                Id: articleSupplierGroupResults[i]["Id"],
                                ArticleGroup: articleSupplierGroupResults[i]["ArticleGroup"],
                                AccountId: articleSupplierGroupResults[i]["AccountId"],
                                AccountCode: articleSupplierGroupResults[i]["AccountCode"],
                                Account: articleSupplierGroupResults[i]["Account"],
                                SalesAccountId: articleSupplierGroupResults[i]["SalesAccountId"],
                                SalesAccount: articleSupplierGroupResults[i]["SalesAccount"],
                                CostAccountId: articleSupplierGroupResults[i]["CostAccountId"],
                                CostAccount: articleSupplierGroupResults[i]["CostAccount"],
                                AssetAccountId: articleSupplierGroupResults[i]["AssetAccountId"],
                                AssetAccount: articleSupplierGroupResults[i]["AssetAccount"],
                                ExpenseAccountId: articleSupplierGroupResults[i]["ExpenseAccountId"],
                                ExpenseAccount: articleSupplierGroupResults[i]["ExpenseAccount"]
                            });
                        }
                    }

                    cboSupplierGroup.dispose();
                    cboSupplierGroup = new wijmo.input.ComboBox('#cboSupplierGroup', {
                        isEditable: false,
                        itemsSource: articleSupplierGroupsObservableArray,
                        displayMemberPath: "ArticleGroup",
                        selectedValuePath: "Id",
                        onSelectedIndexChanged: function () {
                            cboAccountCode.selectedValue = this.selectedItem["AccountId"];
                            cboAccount.selectedValue = this.selectedItem["AccountId"];
                        }
                    });

                    getArticleAccountForComboBox();
                }
            });
        }

        // ==================
        // Get Artile Account
        // ==================
        function getArticleAccountForComboBox() {
            var accountsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (accountResults) {
                    if (accountResults.length > 0) {
                        for (i = 0; i < accountResults.length; i++) {
                            accountsObservableArray.push({
                                Id: accountResults[i]["Id"],
                                AccountCode: accountResults[i]["AccountCode"],
                                Account: accountResults[i]["Account"]
                            });
                        }
                    }

                    var accountSelectedValueFromArticleGroup = cboSupplierGroup.selectedItem["AccountId"];

                    cboAccountCode.dispose();
                    cboAccountCode = new wijmo.input.ComboBox('#cboAccountCode', {
                        disabled: true,
                        isEditable: false,
                        itemsSource: accountsObservableArray,
                        displayMemberPath: "AccountCode",
                        selectedValuePath: "Id",
                        selectedValue: accountSelectedValueFromArticleGroup,
                        onSelectedIndexChanged: function () {
                            cboAccount.selectedValue = this.selectedValue;
                        }
                    });

                    cboAccount.dispose();
                    cboAccount = new wijmo.input.ComboBox('#cboAccount', {
                        disabled: true,
                        isEditable: false,
                        itemsSource: accountsObservableArray,
                        displayMemberPath: "Account",
                        selectedValuePath: "Id",
                        selectedValue: accountSelectedValueFromArticleGroup,
                        onSelectedIndexChanged: function () {
                            cboAccountCode.selectedValue = this.selectedValue;
                        }
                    });

                    getArticleTermForComboBox();
                }
            });
        }

        // ===============
        // Get Artile Term
        // ===============
        function getArticleTermForComboBox() {
            var termsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTerm',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (termResults) {
                    if (termResults.length > 0) {
                        for (i = 0; i < termResults.length; i++) {
                            termsObservableArray.push({
                                Id: termResults[i]["Id"],
                                Term: termResults[i]["Term"]
                            });
                        }
                    }

                    cboTerm.dispose();
                    cboTerm = new wijmo.input.ComboBox('#cboTerm', {
                        isEditable: false,
                        itemsSource: termsObservableArray,
                        displayMemberPath: "Term",
                        selectedValuePath: "Id"
                    });

                    getArticleSupplierById();
                }
            });
        }

        // ==================================
        // Get Article for supplier by its ID
        // ==================================
        function getArticleSupplierById() {
            NProgress.start();
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/article/' + supplierId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (supplierResults) {
                        if (supplierResults != null) {
                            document.getElementById('artcileSupplier_code').value = supplierResults.ArticleCode;
                            document.getElementById('artcileSupplier_manual_code').value = supplierResults.ManualArticleCode;
                            document.getElementById('artcileSupplier_Supplier').value = supplierResults.Article;
                            cboSupplierGroup.selectedValue = supplierResults.ArticleGroupId;
                            cboAccountCode.selectedValue = supplierResults.AccountId;
                            cboAccount.selectedValue = supplierResults.AccountId;
                            cboTerm.selectedValue = supplierResults.TermId;
                            document.getElementById('artcileSupplier_Address').value = supplierResults.Address;
                            document.getElementById('artcileSupplier_Particulars').value = supplierResults.Particulars;
                            document.getElementById('artcileSupplier_Email').value = supplierResults.EmailAddress;
                            document.getElementById('artcileSupplier_TIN').value = supplierResults.TaxNumber;
                            document.getElementById('artcileSupplier_ContactNo').value = supplierResults.ContactNumber;
                            document.getElementById('artcileSupplier_ContactPerson').value = supplierResults.ContactPerson;

                            document.getElementById('createdBy').innerHTML = supplierResults.CreatedBy;
                            document.getElementById('createdDate').innerHTML = supplierResults.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = supplierResults.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = supplierResults.UpdatedDateTime;

                            if (supplierResults.IsLocked) {
                                document.getElementById('artcileSupplier_Supplier').disabled = true;
                                document.getElementById('artcileSupplier_manual_code').disabled = true;
                                cboSupplierGroup.disabled = true;
                                cboAccountCode.disabled = true;
                                cboAccount.disabled = true;
                                cboTerm.disabled = true;
                                document.getElementById('artcileSupplier_Address').disabled = true;
                                document.getElementById('artcileSupplier_Particulars').disabled = true;
                                document.getElementById('artcileSupplier_TIN').disabled = true;
                                document.getElementById('artcileSupplier_ContactNo').disabled = true;
                                document.getElementById('artcileSupplier_ContactPerson').disabled = true;
                                document.getElementById('artcileSupplier_Email').disabled = true;

                                $('#supplier_LockButton').prop('disabled', true);
                                $('#btnAddMoreContactInformation').prop('disabled', true);

                                var canUnLock = "@ViewData["CanUnlock"]";
                                if (canUnLock == "False") {
                                    $("#supplier_UnlockButton").prop("disabled", true);
                                }

                                Islocked = true;
                            } else {
                                $('#supplier_UnlockButton').prop('disabled', true);

                                var canLock = "@ViewData["CanLock"]";
                                if (canLock == "False") {
                                    $("#supplier_LockButton").prop("disabled", true);
                                }

                                var canAdd = "@ViewData["CanAdd"]";
                                if (canAdd == "False") {
                                    $("#btnAddMoreContactInformation").prop("disabled", true);
                                }
                            }
                        }

                        createJournalLedgerFlexGrid();
                        createContactInformationFlexGrid();
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/Supplier";
            }
        }

        // =========================
        // Supplier Entry Validation
        // =========================
        function supplierEntryValidation() {
            var isValid = true;
            $('.requiredSupplier').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // ====================
        // Data Supplier Object
        // ====================
        function dataSupplierObject() {
            var supplierObject = new Object();
            supplierObject.ArticleCode = document.getElementById('artcileSupplier_code').value;
            supplierObject.ManualArticleCode = document.getElementById('artcileSupplier_manual_code').value;
            supplierObject.Article = document.getElementById('artcileSupplier_Supplier').value;
            supplierObject.ArticleGroupId = cboSupplierGroup.selectedValue;
            supplierObject.AccountId = cboAccount.selectedValue;
            supplierObject.SalesAccountId = cboSupplierGroup.selectedItem["SalesAccountId"];
            supplierObject.CostAccountId = cboSupplierGroup.selectedItem["CostAccountId"];
            supplierObject.AssetAccountId = cboSupplierGroup.selectedItem["AssetAccountId"];
            supplierObject.ExpenseAccountId = cboSupplierGroup.selectedItem["ExpenseAccountId"];
            supplierObject.TermId = cboTerm.selectedValue;
            supplierObject.Address = document.getElementById('artcileSupplier_Address').value;
            supplierObject.ContactNumber = document.getElementById('artcileSupplier_ContactNo').value;
            supplierObject.ContactPerson = document.getElementById('artcileSupplier_ContactPerson').value;
            supplierObject.TaxNumber = document.getElementById('artcileSupplier_TIN').value;
            supplierObject.Particulars = document.getElementById('artcileSupplier_Particulars').value;
            supplierObject.EmailAddress = document.getElementById('artcileSupplier_Email').value;
            var supplierData = JSON.stringify(supplierObject);
            return supplierData;
        }

        // ====================
        // Lock Supplier Button
        // ====================
        function supplierLockButton_OnClick() {
            if (supplierEntryValidation()) {
                document.getElementById('supplier_LockButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $('#supplier_LockButton').prop('disabled', true);
                $('#supplier_UnlockButton').prop('disabled', true);
                $('#supplier_CloseButton').prop('disabled', true);

                $.ajax({
                    type: "PUT",
                    url: '/api/updateArticle/' + supplierId + '/3',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataSupplierObject(),
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function () {
                            toastr.error("Not Found");
                            document.getElementById('supplier_LockButton').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#supplier_LockButton').prop('disabled', false);
                            $('#supplier_CloseButton').prop('disabled', false);
                        },
                        400: function () {
                            toastr.error("Bad Request");
                            document.getElementById('supplier_LockButton').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#supplier_LockButton').prop('disabled', false);
                            $('#supplier_CloseButton').prop('disabled', false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ======================
        // Unlock Supplier Button
        // ======================
        function supplierUnlockButton_OnClick() {
            document.getElementById('supplier_UnlockButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $('#supplier_LockButton').prop('disabled', true);
            $('#supplier_UnlockButton').prop('disabled', true);
            $('#supplier_CloseButton').prop('disabled', true);

            $.ajax({
                type: "PUT",
                url: '/api/unlockArticle/' + supplierId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('supplier_UnlockButton').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#supplier_UnlockButton').prop('disabled', false);
                        $('#supplier_CloseButton').prop('disabled', false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        document.getElementById('supplier_UnlockButton').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#supplier_UnlockButton').prop('disabled', false);
                        $('#supplier_CloseButton').prop('disabled', false);
                    }
                }
            });
        }

        // =====================
        // Close Supplier Button
        // =====================
        function supplierCloseButton_OnClick() {
            window.location = '/Software/Supplier';
        }

        // =======================
        // GET Journal Ledger List
        // =======================
        function getJournalLedger() {
            var journalLedgersObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/journal/list/journalLedger/byAccountId/' + cboAccount.selectedValue + '/byArticleId/' + supplierId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (Results) {
                        if (Results.length > 0) {
                            for (i = 0; i < Results.length; i++) {

                                var JournalDateResult = new Date(Results[i]["JournalDate"])
                                var JournalDate = ('0' + (JournalDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + JournalDateResult.getDate()).slice(-2) + '-' + JournalDateResult.getFullYear();

                                journalLedgersObservableArray.push({
                                    Id: Results[i]["Id"],
                                    JournalDate: JournalDate,
                                    BranchId: Results[i]["BranchId"],
                                    Branch: Results[i]["Branch"],
                                    AccountId: Results[i]["AccountId"],
                                    AccountCode: Results[i]["AccountCode"],
                                    Account: Results[i]["Account"],
                                    ArticleId: Results[i]["ArticleId"],
                                    Article: Results[i]["Article"],
                                    Particulars: Results[i]["Particulars"],
                                    DebitAmount: Results[i]["DebitAmount"],
                                    CreditAmount: Results[i]["CreditAmount"],
                                    ORId: Results[i]["ORId"],
                                    CVId: Results[i]["CVId"],
                                    JVId: Results[i]["JVId"],
                                    RRId: Results[i]["RRId"],
                                    SIId: Results[i]["SIId"],
                                    INId: Results[i]["INId"],
                                    OTId: Results[i]["OTId"],
                                    STId: Results[i]["STId"],
                                    DocumentReference: Results[i]["DocumentReference"],
                                    APRRId: Results[i]["APRRId"],
                                    ARSIId: Results[i]["ARSIId"]
                                });
                            }
                        }

                        NProgress.done();
                    }
                });
            }
            return journalLedgersObservableArray;
        }

        // ======================
        // Refresh Journal Ledger
        // ======================
        function refreshJournalLedgerFlexGrid() {
            journalLedgerCollectionView = new wijmo.collections.CollectionView(getJournalLedger());
            journalLedgerGrid.itemsSource = journalLedgerCollectionView;
            journalLedgerGrid.trackChanges = true;
        }

        // ===============
        //  Journal Ledger
        // ===============
        function createJournalLedgerFlexGrid() {
            journalLedgerCollectionView = new wijmo.collections.CollectionView(getJournalLedger());

            // Flex Grid for Journal Ledger
            journalLedgerGrid = new wijmo.grid.FlexGrid('#JournalLedgerGrid');
            journalLedgerGrid.initialize({
                columns: [
                    {
                        "header": "Document Reference",
                        "binding": "DocumentReference",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmount",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmount",
                        "allowSorting": true,
                        "width": "2*"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalLedgerCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalLedgerGrid.trackChanges = true;
        }

        // ============================
        // GET Contact Information List
        // ============================
        function getContactInformation() {
            var contactInformationsObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/listArticleContactByArticleId/' + supplierId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (contactInformationResults) {
                        if (contactInformationResults.length > 0) {
                            for (i = 0; i < contactInformationResults.length; i++) {
                                var canEdit = "@ViewData["CanEdit"]";
                                var editDisabled = "";
                                if (canEdit == "False") {
                                    editDisabled = "disabled";
                                }

                                var canDelete = "@ViewData["CanDelete"]";
                                var deleteDisabled = "";
                                if (canDelete == "False") {
                                    deleteDisabled = "disabled";
                                }

                                var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditContact_OnClick()' " + editDisabled + "><i class='fa fa-edit'></i> Edit</button>";
                                var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteContact_OnClick()'" + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                                if (Islocked) {
                                    btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditContact_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                    btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteContact_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                                }

                                contactInformationsObservableArray.push({
                                    EditId: btnEditId,
                                    DeleteId: btnDeleteId,
                                    Id: contactInformationResults[i]["Id"],
                                    ArticleId: contactInformationResults[i]["ArticleId"],
                                    Article: contactInformationResults[i]["Article"],
                                    ContactPerson: contactInformationResults[i]["ContactPerson"],
                                    ContactNumber: contactInformationResults[i]["ContactNumber"],
                                    Remarks: contactInformationResults[i]["Remarks"]
                                });
                            }
                        }

                        NProgress.done();
                    }
                });
            }

            return contactInformationsObservableArray;
        }

        // =====================================
        // Refresh Contact Information Flex Grid
        // =====================================
        function refreshContactInformationFlexGrid() {
            contactInformations = new wijmo.collections.CollectionView(getContactInformation());
            contactInformationGrid.itemsSource = contactInformations;
            contactInformationGrid.trackChanges = true;
        }

        // =============================
        // Contact Information Flex Grid
        // =============================
        function createContactInformationFlexGrid() {
            contactInformations = new wijmo.collections.CollectionView(getContactInformation());

            contactInformationGrid = new wijmo.grid.FlexGrid('#ContactInformationGrid');
            contactInformationGrid.initialize({
                columns: [
                    {
                        "header": "Edit",
                        "binding": "EditId",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Delete",
                        "binding": "DeleteId",
                        "width": 70,
                        "align": "center",
                        "allowResizing": false,
                        "allowSorting": false,
                        "isContentHtml": true
                    },
                    {
                        "header": "Contact",
                        "binding": "ContactPerson",
                        "width": "2*",
                    },
                    {
                        "header": "Contact Number(s)",
                        "binding": "ContactNumber",
                        "width": "2*",
                    },
                    {
                        "header": "Remarks",
                        "binding": "Remarks",
                        "width": "3*"
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: contactInformations,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });
            contactInformationGrid.trackChanges = true;
        }

        var contactInformationId = 0;

        // ===========
        // ADD Contact
        // ===========
        function cmdAddContact_OnClick() {
            $('#contactEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#contactDetailForm").hide();

            document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#cmdSaveContactButton').prop('disabled', true);
            $('#cmdContactDetailCloseButton').prop('disabled', false);

            contactInformationId = 0;
            document.getElementById('contact_contactPerson').value = "NA";
            document.getElementById('contact_contactNumber').value = "NA";
            document.getElementById('contact_Remarks').value = "NA";

            setTimeout(function () {
                $("#loadingModalItem").hide();
                $("#contactDetailForm").show();
                $('#cmdSaveContactButton').prop('disabled', false);
            }, 500);
        }

        // ===========
        // Edit Button
        // ===========
        function btnEditContact_OnClick() {
            $('#contactEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#contactDetailForm").hide();

            document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#cmdSaveContactButton').prop('disabled', true);
            $('#cmdContactDetailCloseButton').prop('disabled', false);

            contactInformations.editItem(contactInformations.currentItem);
            var contactInformation = contactInformations.currentEditItem;
            contactInformationId = contactInformation.Id;
            document.getElementById('contact_contactPerson').value = contactInformation.ContactPerson;
            document.getElementById('contact_contactNumber').value = contactInformation.ContactNumber;
            document.getElementById('contact_Remarks').value = contactInformation.Remarks;

            setTimeout(function () {
                $("#loadingModalItem").hide();
                $("#contactDetailForm").show();
                $('#cmdSaveContactButton').prop('disabled', false);
            }, 500);
        }

        // ====================================
        // Contact Information Entry Validation
        // ====================================
        function contactInformationEntryValidation() {
            var isValid = true;
            $('.requiredContact').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": ""
                    });
                }
            });

            return isValid;
        }

        // ============
        // SAVE Contact
        // ============
        function cmdContactSaveButton_OnClick() {
            var contactObject = new Object();
            contactObject.ContactPerson = document.getElementById('contact_contactPerson').value;
            contactObject.ContactNumber = document.getElementById('contact_contactNumber').value;
            contactObject.Remarks = document.getElementById('contact_Remarks').value;
            var contactData = JSON.stringify(contactObject);

            if (contactInformationEntryValidation()) {
                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $('#cmdSaveContactButton').prop('disabled', true);
                $('#cmdContactDetailCloseButton').prop('disabled', true);

                if (contactInformationId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addArticleContact/' + supplierId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        success: function (id) {
                            if (id > 0) {
                                toastr.success("Save Successful");
                                $('#contactEdit').modal('hide');
                                refreshContactInformationFlexGrid();
                            } else {
                                toastr.error("Internal Server Error");
                                $('#contactEdit').modal('hide');
                                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateArticleContact/' + contactInformationId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#contactEdit').modal('hide');
                                refreshContactInformationFlexGrid();
                            },
                            404: function () {
                                toastr.error("Not Found");
                                $('#contactEdit').modal('hide');
                                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#contactEdit').modal('hide');
                                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ==============
        // DELETE Contact
        // ==============
        function btnDeleteContact_OnClick() {
            $('#deleteContactConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $('#cmdConfirmDeleteContact').prop('disabled', false);
            $('#cmdConfirmDeleteContactCloseButton').prop('disabled', false);
        }

        // Contact Confirm Delete
        function cmdContactConfirmDeleteButton_OnClick() {
            document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $('#cmdConfirmDeleteContact').prop('disabled', true);
            $('#cmdConfirmDeleteContactCloseButton').prop('disabled', true);

            contactInformations.editItem(contactInformations.currentItem);
            var contactId = contactInformations.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteArticleContact/' + contactId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#deleteContactConfirm').modal('hide');
                        refreshContactInformationFlexGrid();
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $('#deleteContactConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#cmdConfirmDeleteContact').prop('disabled', false);
                        $('#cmdConfirmDeleteContactCloseButton').prop('disabled', false);
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deleteContactConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#cmdConfirmDeleteContact').prop('disabled', false);
                        $('#cmdConfirmDeleteContactCloseButton').prop('disabled', false);
                    }
                }
            });
        }

        // ============
        // On Page Load
        // ============
        $(document).ready(function () {
            getArticleSupplierGroupForComboBox();
        });

        // ====
        // TABS
        // ====
        $('#journalLedgerTabId').click(function () {
            $('#JournalLedger').show();
            $('#ContactInformation').hide();
            NProgress.start();
            refreshJournalLedgerFlexGrid();
        });

        $('#contactInformationTabId').click(function () {
            $('#JournalLedger').hide();
            $('#ContactInformation').show();
            NProgress.start();
            refreshContactInformationFlexGrid();
        });
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
</body>
</html>