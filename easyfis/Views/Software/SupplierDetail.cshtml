@model easyfis.Entities.MstUserForm
@{
    // =====================
    // User Rights Variables
    // =====================
    var canAdd = Model.CanAdd;
    var canEdit = Model.CanEdit;
    var canDelete = Model.CanDelete;
    var canLock = Model.CanLock;
    var canUnlock = Model.CanUnlock;
    var canPrint = Model.CanPrint;
}
<!DOCTYPE html>
<html>
<head>
    <!-- Meta -->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">

    <!-- Title of the Page -->
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <title>Supplier Detail</title>

    <!-- CSS StyleSheets-->
    @Styles.Render("~/Content/Software-css")
</head>
<body>
    <div id="o-wrapper" class="o-wrapper">
        <main class="o-content">
            @Html.Partial("_SoftwareHeader")
            <section class="content-header">
                <div class="container">
                    <h3>
                        Supplier Detail
                    </h3>
                    <p>
                        <i class="fa fa-building-o fa-fw"></i> &nbsp; @ViewData["Company"] <br />
                        <i class="fa fa-home fa-fw"></i> &nbsp; <a href="#" onclick="getUserBranches()" style="color: white;">@ViewData["Branch"]</a>
                    </p>
                </div>
            </section>
            <section class="container">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-md-12" align="right">
                                @{
                                    if (canLock)
                                    {
                                        <button class="btn btn-primary" id="btnLockSupplier" onclick="btnLockSupplierOnclick()"><i class="fa fa-lock"></i> Lock</button>
                                    }
                                    if (canUnlock)
                                    {
                                        <button class="btn btn-primary" id="btnUnlockSupplier" onclick="btnUnlockSupplierOnclick()"><i class="fa fa-unlock"></i> Unlock</button>
                                    }
                                }
                                <button class="btn btn-danger" id="btnCloseSupplier" onclick="btnCloseSupplierOnclick()"><i class=" fa fa-times"></i> Close</button>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body">
                        <form class="form-horizontal" role="form">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Code</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSupplier" id="inpSupplierCode" placeholder="Code..." disabled />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Manual Code</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSupplier" id="inpSupplierManualCode" placeholder="Manual Code..." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Supplier</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control  requiredSupplier" id="inpSupplierName" placeholder="Supplier..." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Supplier Group</label>
                                        <div class="col-sm-8">
                                            <div class="" id="cboSupplierGroup"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Account</label>
                                        <div class="col-sm-8">
                                            <table style="width: 100%" border="0">
                                                <tr>
                                                    <td style="width: 30%">
                                                        <div class="comboBox-wide" id="cboAccountCode"></div>
                                                    </td>
                                                    <td style="width: 1%"></td>
                                                    <td style="width: 69%">
                                                        <div class="comboBox-wide" id="cboAccount"></div>
                                                    </td>
                                                </tr>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Term</label>
                                        <div class="col-sm-8">
                                            <div class="" id="cboTerm"></div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Address</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredSupplier" id="inpSupplierAddress" placeholder="Address..."></textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Contact Number</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSupplier" id="inpSupplierContactNo" placeholder="Contact No...." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Contact Person</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control  requiredSupplier" id="inpSupplierContactPerson" placeholder="Contact Person..." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">TIN</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSupplier" id="inpSupplierTIN" placeholder="TIN Number..." />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">Particulars</label>
                                        <div class="col-sm-8">
                                            <textarea rows="5" class="form-control textarea-custom requiredsupplier" id="inpSupplierParticulars" placeholder="Particulars..."></textarea>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label col-sm-4">E-mail</label>
                                        <div class="col-sm-8">
                                            <input type="text" class="form-control requiredSupplier" id="inpSupplierEmail" placeholder="E-mail..." />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <ul class="nav nav-tabs" role="tablist" id="myTab">
                    <li role="presentation" class="active"><a data-toggle="tab" href="#JournalLedger" id="journalLedgerTab">Journal Ledger</a></li>
                    <li role="presentation"><a data-toggle="tab" href="#ContactInformation" id="contactInformationTab">More Contact Information</a></li>
                </ul>
                <br />
                <div class="tab-content">
                    <div id="JournalLedger" class="tab-pane fade in active" style="margin-bottom: 15px;">
                        <div id="JournalLedgerGrid"></div>
                    </div>
                    <div id="ContactInformation" class="tab-pane fade in">
                        @{
                            if (canAdd)
                            {
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <div class="row">
                                            <div class="col-lg-12" align="right">

                                                <button class="btn btn-primary" id="btnAddMoreContactInformation" onclick="cmdAddContact_OnClick()"><i class="fa fa-plus"></i> Add</button>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel-body">
                                        <div id="ContactInformationGrid" class="grid"></div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div id="ContactInformationGrid" class="grid"></div>
                                <br /><br />
                            }
                        }
                    </div>
                </div>
            </section>
            @Html.Partial("_SoftwareFooter")
        </main>
    </div>
    <div id="c-mask" class="c-mask"></div>

    <!-- Contact Edit Detail -->
    <div class="modal fade" id="contactEdit" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="contactModalLabel">Contact Information</h4>
                </div>
                <div class="modal-body">
                    <center>
                        <span id="loadingModalItem"></span>
                    </center>
                    <div id="contactDetailForm">
                        <dl class="dl-horizontal">
                            <dt>Contact Person</dt>
                            <dd><input type="text" class="form-control  requiredContact" id="contact_contactPerson" placeholder="Contact Person" /></dd>
                            <dt>Contact Number</dt>
                            <dd><input type="text" class="form-control requiredContact" id="contact_contactNumber" placeholder="Contact Number" /></dd>
                            <dt>Remarks</dt>
                            <dd><textarea rows="5" class="form-control textarea-custom requiredContact" id="contact_Remarks" placeholder="Remarks"></textarea></dd>
                        </dl>
                    </div>
                </div>
                <div class="modal-footer">
                    <button id="cmdSaveContactButton" class="btn btn-primary" onclick="cmdContactSaveButton_OnClick()"><i class="fa fa-save"></i> Save</button>
                    <button id="cmdContactDetailCloseButton" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Contact Delete Modal Confirmation -->
    <div class="modal fade" id="deleteContactConfirm" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Delete Contact</h4>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this contact information?
                </div>
                <div class="modal-footer">
                    <button id="cmdConfirmDeleteContact" class="btn btn-danger" onclick="cmdContactConfirmDeleteButton_OnClick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="cmdConfirmDeleteContactCloseButton" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // ================
        // Global Variables
        // ================
        var cboSupplierGroup = new wijmo.input.ComboBox('#cboSupplierGroup');
        var supplierId = getParam('id');
        var Islocked = false;
        var cboAccountCode = new wijmo.input.ComboBox('#cboAccountCode');
        var cboAccount = new wijmo.input.ComboBox('#cboAccount');
        var cboTerm = new wijmo.input.ComboBox('#cboTerm');
        var journalLedgerCollectionView;
        var journalLedgerGrid;
        var contactInformations;
        var contactInformationGrid;
        var isSupplierGroupSelected = false;
        var supplierAccountId = 0;

        // =======================
        // Get URL Parameter Value
        // =======================
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");

            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);

            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // ==================
        // Get Supplier Group
        // ==================
        function getSupplierGroup() {
            var articleSupplierGroupsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/supplier/dropdown/list/supplierGroup',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            articleSupplierGroupsObservableArray.push({
                                Id: results[i]["Id"],
                                ArticleGroup: results[i]["ArticleGroup"],
                                AccountId: results[i]["AccountId"],
                                SalesAccountId: results[i]["SalesAccountId"],
                                CostAccountId: results[i]["CostAccountId"],
                                AssetAccountId: results[i]["AssetAccountId"],
                                ExpenseAccountId: results[i]["ExpenseAccountId"]
                            });
                        }
                    }

                    var disabled = true;
                    if (results.length > 0) {
                        disabled = false;
                    }

                    cboSupplierGroup.dispose();
                    cboSupplierGroup = new wijmo.input.ComboBox('#cboSupplierGroup', {
                        disabled: disabled,
                        isEditable: false,
                        itemsSource: articleSupplierGroupsObservableArray,
                        displayMemberPath: "ArticleGroup",
                        selectedValuePath: "Id",
                        onSelectedIndexChanged: function () {
                            if (this.selectedValue != null) {
                                isSupplierGroupSelected = true;
                                getSupplierGroupAccount();
                            }
                        }
                    });

                    if (cboSupplierGroup.selectedValue != null) {
                        getSupplierGroupAccount();
                    }
                }
            });
        }

        // ==========================
        // Get Supplier Group Account
        // ==========================
        function getSupplierGroupAccount() {
            var accountsObservableArray = new wijmo.collections.ObservableArray();
            if (cboSupplierGroup.selectedValue != null) {
                var accountSelectedValueFromArticleGroup = cboSupplierGroup.selectedItem["AccountId"];

                $.ajax({
                    url: '/api/supplier/dropdown/list/supplierGroup/account/' + accountSelectedValueFromArticleGroup,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                accountsObservableArray.push({
                                    Id: results[i]["Id"],
                                    AccountCode: results[i]["AccountCode"],
                                    Account: results[i]["Account"]
                                });
                            }
                        }

                        cboAccountCode.dispose();
                        cboAccountCode = new wijmo.input.ComboBox('#cboAccountCode', {
                            disabled: true,
                            isEditable: false,
                            itemsSource: accountsObservableArray,
                            displayMemberPath: "AccountCode",
                            selectedValuePath: "Id",
                            selectedValue: accountSelectedValueFromArticleGroup,
                            onSelectedIndexChanged: function () {
                                cboAccount.selectedValue = this.selectedValue;
                            }
                        });

                        cboAccount.dispose();
                        cboAccount = new wijmo.input.ComboBox('#cboAccount', {
                            disabled: true,
                            isEditable: false,
                            itemsSource: accountsObservableArray,
                            displayMemberPath: "Account",
                            selectedValuePath: "Id",
                            selectedValue: accountSelectedValueFromArticleGroup,
                            onSelectedIndexChanged: function () {
                                cboAccountCode.selectedValue = this.selectedValue;
                            }
                        });

                        if (!isSupplierGroupSelected) {
                            getSupplierTerm();
                        }
                    }
                });
            } else {
                cboAccountCode.dispose();
                cboAccountCode = new wijmo.input.ComboBox('#cboAccountCode', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: accountsObservableArray
                });

                cboAccount.dispose();
                cboAccount = new wijmo.input.ComboBox('#cboAccount', {
                    disabled: true,
                    isEditable: false,
                    itemsSource: accountsObservableArray
                });

                if (!isSupplierGroupSelected) {
                    getSupplierTerm();
                }
            }
        }

        // =================
        // Get Supplier Term
        // =================
        function getSupplierTerm() {
            var termsObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/supplier/dropdown/list/term',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {
                            termsObservableArray.push({
                                Id: results[i]["Id"],
                                Term: results[i]["Term"]
                            });
                        }
                    }

                    cboTerm.dispose();
                    cboTerm = new wijmo.input.ComboBox('#cboTerm', {
                        isEditable: false,
                        itemsSource: termsObservableArray,
                        displayMemberPath: "Term",
                        selectedValuePath: "Id"
                    });

                    getSupplierDetail();
                }
            });
        }

        // ===================
        // Get Supplier Detail
        // ===================
        function getSupplierDetail() {
            NProgress.start();
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/supplier/detail/' + supplierId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results != null) {
                            document.getElementById('inpSupplierCode').value = results.ArticleCode;
                            document.getElementById('inpSupplierManualCode').value = results.ManualArticleCode;
                            document.getElementById('inpSupplierName').value = results.Article;
                            cboSupplierGroup.selectedValue = results.ArticleGroupId;
                            cboAccountCode.selectedValue = results.AccountId;
                            supplierAccountId = results.AccountId;
                            cboAccount.selectedValue = results.AccountId;
                            cboTerm.selectedValue = results.TermId;
                            document.getElementById('inpSupplierAddress').value = results.Address;
                            document.getElementById('inpSupplierParticulars').value = results.Particulars;
                            document.getElementById('inpSupplierEmail').value = results.EmailAddress;
                            document.getElementById('inpSupplierTIN').value = results.TaxNumber;
                            document.getElementById('inpSupplierContactNo').value = results.ContactNumber;
                            document.getElementById('inpSupplierContactPerson').value = results.ContactPerson;

                            document.getElementById('createdBy').innerHTML = results.CreatedBy;
                            document.getElementById('createdDate').innerHTML = results.CreatedDateTime;
                            document.getElementById('updatedBy').innerHTML = results.UpdatedBy;
                            document.getElementById('updatedDate').innerHTML = results.UpdatedDateTime;

                            if (results.IsLocked) {
                                document.getElementById('inpSupplierName').disabled = true;
                                document.getElementById('inpSupplierManualCode').disabled = true;
                                cboSupplierGroup.disabled = true;
                                cboAccountCode.disabled = true;
                                cboAccount.disabled = true;
                                cboTerm.disabled = true;
                                document.getElementById('inpSupplierAddress').disabled = true;
                                document.getElementById('inpSupplierParticulars').disabled = true;
                                document.getElementById('inpSupplierTIN').disabled = true;
                                document.getElementById('inpSupplierContactNo').disabled = true;
                                document.getElementById('inpSupplierContactPerson').disabled = true;
                                document.getElementById('inpSupplierEmail').disabled = true;

                                $('#btnLockSupplier').prop('disabled', true);
                                $('#btnAddMoreContactInformation').prop('disabled', true);

                                Islocked = true;
                            } else {
                                $('#btnUnlockSupplier').prop('disabled', true);
                            }
                        } else {
                            alert("No Data");
                            window.location = "/Software/Supplier";
                        }

                        createJournalLedgerFlexGrid();
                        createContactInformationFlexGrid();
                    }
                });
            } else {
                alert("No Id Parameter Value");
                window.location = "/Software/Supplier";
            }
        }

        // =========================
        // Supplier Entry Validation
        // =========================
        function supplierEntryValidation() {
            var isValid = true;
            $('.requiredSupplier').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });

            return isValid;
        }

        // ========================
        // Get Supplier Data Object
        // ========================
        function getSupplierDataObject() {
            var supplierObject = new Object();
            supplierObject.ManualArticleCode = document.getElementById('inpSupplierManualCode').value;
            supplierObject.Article = document.getElementById('inpSupplierName').value;
            supplierObject.ArticleGroupId = cboSupplierGroup.selectedValue;
            supplierObject.AccountId = cboAccount.selectedValue;
            supplierObject.SalesAccountId = cboSupplierGroup.selectedItem["SalesAccountId"];
            supplierObject.CostAccountId = cboSupplierGroup.selectedItem["CostAccountId"];
            supplierObject.AssetAccountId = cboSupplierGroup.selectedItem["AssetAccountId"];
            supplierObject.ExpenseAccountId = cboSupplierGroup.selectedItem["ExpenseAccountId"];
            supplierObject.TermId = cboTerm.selectedValue;
            supplierObject.Address = document.getElementById('inpSupplierAddress').value;
            supplierObject.ContactNumber = document.getElementById('inpSupplierContactNo').value;
            supplierObject.ContactPerson = document.getElementById('inpSupplierContactPerson').value;
            supplierObject.TaxNumber = document.getElementById('inpSupplierTIN').value;
            supplierObject.Particulars = document.getElementById('inpSupplierParticulars').value;
            supplierObject.EmailAddress = document.getElementById('inpSupplierEmail').value;
            var supplierData = JSON.stringify(supplierObject);
            return supplierData;
        }

        // =============
        // Lock Supplier
        // =============
        function btnLockSupplierOnclick() {
            if (supplierEntryValidation()) {
                document.getElementById('btnLockSupplier').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $('#btnLockSupplier').prop('disabled', true);
                $('#btnUnlockSupplier').prop('disabled', true);
                $('#btnCloseSupplier').prop('disabled', true);

                $.ajax({
                    type: "PUT",
                    url: '/api/supplier/lock/' + supplierId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: getSupplierDataObject(),
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                            document.getElementById('btnLockSupplier').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnLockSupplier').prop('disabled', false);
                            $('#btnCloseSupplier').prop('disabled', false);
                        },
                        400: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                            document.getElementById('btnLockSupplier').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnLockSupplier').prop('disabled', false);
                            $('#btnCloseSupplier').prop('disabled', false);
                        },
                        500: function (message) {
                            toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                            document.getElementById('btnLockSupplier').innerHTML = "<i class='fa fa-lock'></i> Lock";
                            $('#btnLockSupplier').prop('disabled', false);
                            $('#btnCloseSupplier').prop('disabled', false);
                        }
                    }
                });
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ===============
        // Unlock Supplier
        // ===============
        function btnUnlockSupplierOnclick() {
            document.getElementById('btnUnlockSupplier').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $('#btnLockSupplier').prop('disabled', true);
            $('#btnUnlockSupplier').prop('disabled', true);
            $('#btnCloseSupplier').prop('disabled', true);

            $.ajax({
                type: "PUT",
                url: '/api/supplier/unlock/' + supplierId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        document.getElementById('btnUnlockSupplier').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#btnUnlockSupplier').prop('disabled', false);
                        $('#btnCloseSupplier').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        document.getElementById('btnUnlockSupplier').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#btnUnlockSupplier').prop('disabled', false);
                        $('#btnCloseSupplier').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        document.getElementById('btnUnlockSupplier').innerHTML = "<i class='fa fa-unlock'></i> Unlock";
                        $('#btnUnlockSupplier').prop('disabled', false);
                        $('#btnCloseSupplier').prop('disabled', false);
                    }
                }
            });
        }

        // ==============
        // Close Supplier
        // ==============
        function btnCloseSupplierOnclick() {
            window.history.back();
        }

        // =======================
        // GET Journal Ledger List
        // =======================
        function getJournalLedger() {
            var journalLedgersObservableArray = new wijmo.collections.ObservableArray;
            $.ajax({
                url: '/api/journalLedger/list/supplier/' + supplierId + '/' + supplierAccountId,
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (results) {
                    if (results.length > 0) {
                        for (i = 0; i < results.length; i++) {

                            var JournalDateResult = new Date(results[i]["JournalDate"])
                            var JournalDate = ('0' + (JournalDateResult.getMonth() + 1)).slice(-2) + '-' + ('0' + JournalDateResult.getDate()).slice(-2) + '-' + JournalDateResult.getFullYear();

                            journalLedgersObservableArray.push({
                                DocumentReference: results[i]["DocumentReference"],
                                JournalDate: JournalDate,
                                Particulars: results[i]["Particulars"],
                                DebitAmount: parseFloat(results[i]["DebitAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ","),
                                CreditAmount: parseFloat(results[i]["CreditAmount"]).toFixed(2).toLocaleString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
                            });
                        }
                    }

                    NProgress.done();
                }
            });

            return journalLedgersObservableArray;
        }

        // ======================
        // Refresh Journal Ledger
        // ======================
        function refreshJournalLedgerFlexGrid() {
            journalLedgerCollectionView = new wijmo.collections.CollectionView(getJournalLedger());
            journalLedgerGrid.itemsSource = journalLedgerCollectionView;
            journalLedgerGrid.trackChanges = true;
        }

        // ===============
        //  Journal Ledger
        // ===============
        function createJournalLedgerFlexGrid() {
            journalLedgerCollectionView = new wijmo.collections.CollectionView(getJournalLedger());

            // Flex Grid for Journal Ledger
            journalLedgerGrid = new wijmo.grid.FlexGrid('#JournalLedgerGrid');
            journalLedgerGrid.initialize({
                columns: [
                    {
                        "header": "Document Reference",
                        "binding": "DocumentReference",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": "2*"
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": "4*"
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmount",
                        "allowSorting": true,
                        "width": "2*",
                        "align": "right"
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmount",
                        "allowSorting": true,
                        "width": "2*",
                        "align": "right"
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalLedgerCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalLedgerGrid.trackChanges = true;
        }

        // ============================
        // GET Contact Information List
        // ============================
        function getContactInformation() {
            var contactInformationsObservableArray = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/moreContactInformation/list/' + supplierId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (results) {
                        if (results.length > 0) {
                            for (i = 0; i < results.length; i++) {
                                var btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditContactOnClick()'><i class='fa fa-edit'></i> Edit</button>";
                                var btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteContactOnClick()'><i class='fa fa-trash'></i> Delete</button>";
                                if (Islocked) {
                                    btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditContactOnClick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                    btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteContactOnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                                }

                                contactInformationsObservableArray.push({
                                    EditId: btnEditId,
                                    DeleteId: btnDeleteId,
                                    Id: results[i]["Id"],
                                    ContactPerson: results[i]["ContactPerson"],
                                    ContactNumber: results[i]["ContactNumber"],
                                    Remarks: results[i]["Remarks"]
                                });
                            }
                        }

                        NProgress.done();
                    }
                });
            }

            return contactInformationsObservableArray;
        }

        // =====================================
        // Refresh Contact Information Flex Grid
        // =====================================
        function refreshContactInformationFlexGrid() {
            contactInformations = new wijmo.collections.CollectionView(getContactInformation());
            contactInformationGrid.itemsSource = contactInformations;
            contactInformationGrid.trackChanges = true;
        }

        // =============================
        // Contact Information Flex Grid
        // =============================
        function createContactInformationFlexGrid() {
            contactInformations = new wijmo.collections.CollectionView(getContactInformation());

            contactInformationGrid = new wijmo.grid.FlexGrid('#ContactInformationGrid');
            contactInformationGrid.initialize({
                columns: [
                    @{
                        if (canEdit)
                        {
                            <text>
                                {
                                    "header": "Edit",
                                    "binding": "EditId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                        if (canDelete)
                        {
                            <text>
                                {
                                    "header": "Delete",
                                    "binding": "DeleteId",
                                    "width": 70,
                                    "align": "center",
                                    "allowResizing": false,
                                    "allowSorting": false,
                                    "isContentHtml": true
                                },
                            </text>
                        }
                    }
                    {
                        "header": "Contact",
                        "binding": "ContactPerson",
                        "width": "2*",
                    },
                    {
                        "header": "Contact Number(s)",
                        "binding": "ContactNumber",
                        "width": "2*",
                    },
                    {
                        "header": "Remarks",
                        "binding": "Remarks",
                        "width": "3*"
                    },
                ],
                autoGenerateColumns: false,
                itemsSource: contactInformations,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            contactInformationGrid.trackChanges = true;
        }

        var contactInformationId = 0;

        // ===========
        // ADD Contact
        // ===========
        function cmdAddContact_OnClick() {
            $('#contactEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#contactDetailForm").hide();

            document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#cmdSaveContactButton').prop('disabled', true);
            $('#cmdContactDetailCloseButton').prop('disabled', false);

            contactInformationId = 0;
            document.getElementById('contact_contactPerson').value = "NA";
            document.getElementById('contact_contactNumber').value = "NA";
            document.getElementById('contact_Remarks').value = "NA";

            setTimeout(function () {
                $("#loadingModalItem").hide();
                $("#contactDetailForm").show();
                $('#cmdSaveContactButton').prop('disabled', false);
            }, 500);
        }

        // ===========
        // Edit Button
        // ===========
        function btnEditContactOnClick() {
            $('#contactEdit').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            $("#loadingModalItem").show();
            document.getElementById("loadingModalItem").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#contactDetailForm").hide();

            document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#cmdSaveContactButton').prop('disabled', true);
            $('#cmdContactDetailCloseButton').prop('disabled', false);

            contactInformations.editItem(contactInformations.currentItem);
            var contactInformation = contactInformations.currentEditItem;
            contactInformationId = contactInformation.Id;
            document.getElementById('contact_contactPerson').value = contactInformation.ContactPerson;
            document.getElementById('contact_contactNumber').value = contactInformation.ContactNumber;
            document.getElementById('contact_Remarks').value = contactInformation.Remarks;

            setTimeout(function () {
                $("#loadingModalItem").hide();
                $("#contactDetailForm").show();
                $('#cmdSaveContactButton').prop('disabled', false);
            }, 500);
        }

        // ====================================
        // Contact Information Entry Validation
        // ====================================
        function contactInformationEntryValidation() {
            var isValid = true;
            $('.requiredContact').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": ""
                    });
                }
            });

            return isValid;
        }

        // ============
        // SAVE Contact
        // ============
        function cmdContactSaveButton_OnClick() {
            var contactObject = new Object();
            contactObject.ContactPerson = document.getElementById('contact_contactPerson').value;
            contactObject.ContactNumber = document.getElementById('contact_contactNumber').value;
            contactObject.Remarks = document.getElementById('contact_Remarks').value;
            var contactData = JSON.stringify(contactObject);

            if (contactInformationEntryValidation()) {
                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $('#cmdSaveContactButton').prop('disabled', true);
                $('#cmdContactDetailCloseButton').prop('disabled', true);

                if (contactInformationId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/moreContactInformation/add/' + supplierId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        statusCode: {
                            200: function () {
                                toastr.success("Save Successful");
                                $('#contactEdit').modal('hide');
                                refreshContactInformationFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                $('#contactEdit').modal('hide');
                                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                $('#contactEdit').modal('hide');
                                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                $('#contactEdit').modal('hide');
                                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/moreContactInformation/update/' + contactInformationId + '/' + supplierId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#contactEdit').modal('hide');
                                refreshContactInformationFlexGrid();
                            },
                            404: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                                $('#contactEdit').modal('hide');
                                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                            },
                            400: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                                $('#contactEdit').modal('hide');
                                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                            },
                            500: function (message) {
                                toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                                $('#contactEdit').modal('hide');
                                document.getElementById('cmdSaveContactButton').innerHTML = "<i class='fa fa-save'></i> Save";
                                $('#cmdSaveContactButton').prop('disabled', false);
                                $('#cmdContactDetailCloseButton').prop('disabled', false);
                            }
                        }
                    });
                }
            } else {
                toastr.error("Invalid Entry");
            }
        }

        // ==============
        // DELETE Contact
        // ==============
        function btnDeleteContactOnClick() {
            $('#deleteContactConfirm').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $('#cmdConfirmDeleteContact').prop('disabled', false);
            $('#cmdConfirmDeleteContactCloseButton').prop('disabled', false);
        }

        // ======================
        // Contact Confirm Delete
        // ======================
        function cmdContactConfirmDeleteButton_OnClick() {
            document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $('#cmdConfirmDeleteContact').prop('disabled', true);
            $('#cmdConfirmDeleteContactCloseButton').prop('disabled', true);

            contactInformations.editItem(contactInformations.currentItem);
            var contactId = contactInformations.currentEditItem.Id;

            $.ajax({
                url: '/api/moreContactInformation/delete/' + contactId + '/' + supplierId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#deleteContactConfirm').modal('hide');
                        refreshContactInformationFlexGrid();
                    },
                    404: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 404");
                        $('#deleteContactConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#cmdConfirmDeleteContact').prop('disabled', false);
                        $('#cmdConfirmDeleteContactCloseButton').prop('disabled', false);
                    },
                    400: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 400");
                        $('#deleteContactConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#cmdConfirmDeleteContact').prop('disabled', false);
                        $('#cmdConfirmDeleteContactCloseButton').prop('disabled', false);
                    },
                    500: function (message) {
                        toastr.error(message.responseText.replace(/^"(.*)"$/, '$1'), "Error 500");
                        $('#deleteContactConfirm').modal('hide');
                        document.getElementById('cmdConfirmDeleteContact').innerHTML = "<i class='fa fa-trash'></i> Delete";
                        $('#cmdConfirmDeleteContact').prop('disabled', false);
                        $('#cmdConfirmDeleteContactCloseButton').prop('disabled', false);
                    }
                }
            });
        }

        // ============
        // On Page Load
        // ============
        $(document).ready(function () {
            getSupplierGroup();
        });

        // ====
        // TABS
        // ====
        $('#journalLedgerTab').click(function () {
            $('#JournalLedger').show();
            $('#ContactInformation').hide();
            NProgress.start();
            refreshJournalLedgerFlexGrid();
        });

        $('#contactInformationTab').click(function () {
            $('#JournalLedger').hide();
            $('#ContactInformation').show();
            NProgress.start();
            refreshContactInformationFlexGrid();
        });
    </script>
    <script type="text/javascript">
        var slideLeft = new Menu({
            wrapper: '#o-wrapper',
            type: 'slide-left',
            menuOpenerClass: '.c-button',
            maskId: '#c-mask'
        });

        var slideLeftBtn = document.querySelector('#c-button--slide-left');

        slideLeftBtn.addEventListener('click', function (e) {
            e.preventDefault;
            slideLeft.open();
        });
    </script>
    <script type="text/javascript">
        var cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches');
        function getUserBranches() {
            $("#loadingUserBranches").show();
            document.getElementById("loadingUserBranches").innerHTML = '<i class="fa fa-spinner fa-spin"></i>';
            $("#userBranchContent").hide();

            $('#userBranchesModal').modal({ show: true, backdrop: 'static' });

            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
            $("#updateUserBranch").prop("disabled", false);
            $("#closeUserBranch").prop("disabled", false);

            var userBranchesObservableArray = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/userBranch/list',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                success: function (userBranchesResults) {
                    if (userBranchesResults.length > 0) {
                        for (i = 0; i < userBranchesResults.length; i++) {
                            userBranchesObservableArray.push({
                                BranchId: userBranchesResults[i]["BranchId"],
                                Branch: userBranchesResults[i]["Branch"]
                            });
                        }
                    }

                    var currentBranch = "@ViewData["BranchId"]";
                    cboUserBranches.dispose();
                    cboUserBranches = new wijmo.input.ComboBox('#cboUserBranches', {
                        isEditable: false,
                        placeholder: "Select Branches",
                        itemsSource: userBranchesObservableArray,
                        displayMemberPath: "Branch",
                        selectedValuePath: "BranchId",
                        selectedValue: currentBranch
                    });

                    setTimeout(function () {
                        $("#loadingUserBranches").hide();
                        $("#userBranchContent").show();
                    }, 500)
                }
            });
        }

        function updateUserBranchOnclick() {
            document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Updating";
            $("#updateUserBranch").prop("disabled", true);
            $("#closeUserBranch").prop("disabled", true);

            var userBranchObject = new Object();
            userBranchObject.BranchId = cboUserBranches.selectedValue;
            var userBranchData = JSON.stringify(userBranchObject);

            $.ajax({
                type: "PUT",
                url: '/api/userBranch/update',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: userBranchData,
                statusCode: {
                    200: function () {
                        toastr.success("Update Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        toastr.error("Not Found");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    },
                    500: function () {
                        toastr.error("Bad Request");
                        document.getElementById('updateUserBranch').innerHTML = "<i class='fa fa-save fa-fw'></i> Update";
                        $("#updateUserBranch").prop("disabled", false);
                        $("#closeUserBranch").prop("disabled", false);
                    }
                }
            });
        }
    </script>
</body>
</html>