<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <link rel="shortcut icon" href="~/Images/icon/easyfislogomini.ico">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Lato:300,400,700,300italic,400italic,700italic" type="text/css">
    <title>Supplier Detail</title>
    @Styles.Render("~/Content/System-css")
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-3 col-lg-2">
                <!-- side navbar menu -->
                <nav class="navbar navbar-default navbar-fixed-side">
                    <div class="container">
                        <div class="navbar-header">
                            <button class="navbar-toggle" data-target=".navbar-collapse" data-toggle="collapse">
                                <span class="sr-only">Toggle navigation</span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            <a class="navbar-brand" href="/Home">
                                <center>
                                    <img src="~/Images/logo/easyfislogo.png" class="img-responsive" />
                                </center>
                            </a>
                        </div>
                        <div class="collapse navbar-collapse">
                            <ul class="nav navbar-nav">
                                <li>
                                    <a href="/Software/">
                                        <img src="~/Images/svgIcons/key.svg" class="svg-icon-style-top" /> Administrator
                                    </a>
                                </li>
                                <li>
                                    <a href="/Software/Company" class="profile-nowrap-text">
                                        <img src="~/Images/svgIcons/organization.svg" class="svg-icon-style-top" /> Cebu Innosoft Solutions Services Incorporated
                                    </a>
                                </li>
                                <li>
                                    <a href="/Software/Company" class="profile-nowrap-text">
                                        <img src="~/Images/svgIcons/shop.svg" class="svg-icon-style-top" /> Main Branch
                                    </a>
                                </li>
                                <li>
                                    <a href="/Software/">
                                        <img src="~/Images/svgIcons/import.svg" class="svg-icon-style-top" /> Logout
                                    </a>
                                </li>
                                <li class="dropdown">
                                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                        Manage <b class="caret pull-right" style="margin-top: 7px;"></b>
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li><a href="/Software/"><img src="~/Images/svgIcons/medium_priority.svg" class="svg-icon-style" /> Change Password</a></li>
                                        <li><a href="/Software/"><img src="~/Images/svgIcons/settings.svg" class="svg-icon-style" /> Settings</a></li>
                                    </ul>
                                </li>
                                <li class="dropdown">
                                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                        Setup <b class="caret pull-right" style="margin-top: 7px;"></b>
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li class="active"><a href="/Software/Supplier"><img src="~/Images/svgIcons/businessman.svg" class="svg-icon-style" /> Supplier</a></li>
                                        <li><a href="/Software/Customer"><img src="~/Images/svgIcons/conference_call.svg" class="svg-icon-style" /> Customer</a></li>
                                        <li><a href="/Software/Items"><img src="~/Images/svgIcons/paid.svg" class="svg-icon-style" /> Item</a></li>
                                        <li><a href="/Software/Bank"><img src="~/Images/svgIcons/library.svg" class="svg-icon-style" /> Bank</a></li>
                                        <li><a href="/Software/ChartOfAccounts"><img src="~/Images/svgIcons/todo_list.svg" class="svg-icon-style" /> Chart of Accounts</a></li>
                                    </ul>
                                </li>
                                <li class="dropdown">
                                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                        Activity <b class="caret pull-right" style="margin-top: 7px;"></b>
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li><a href="/Software/PurchaseOrder"><img src="~/Images/svgIcons/inspection.svg" class="svg-icon-style" /> Purchase Order</a></li>
                                        <li><a href="/Software/ReceivingReceipt"><img src="~/Images/svgIcons/shipped.svg" class="svg-icon-style" /> Receiving Receipt</a></li>
                                        <li><a href="/Software/Sales"><img src="~/Images/svgIcons/approval.svg" class="svg-icon-style" /> Sales</a></li>
                                        <li><a href="/Software/Disbursement"><img src="~/Images/svgIcons/money_transfer.svg" class="svg-icon-style" /> Disbursement</a></li>
                                        <li><a href="/Software/Collection"><img src="~/Images/svgIcons/sales_performance.svg" class="svg-icon-style" /> Collection</a></li>
                                        <li><a href="/Software/StockIn"><img src="~/Images/svgIcons/internal.svg" class="svg-icon-style" /> Stock-In</a></li>
                                        <li><a href="/Software/StockOut"><img src="~/Images/svgIcons/external.svg" class="svg-icon-style" /> Stock-Out</a></li>
                                        <li><a href="/Software/StockTransfer"><img src="~/Images/svgIcons/refresh.svg" class="svg-icon-style" /> Stock Transfer</a></li>
                                        <li><a href="/Software/StockCount"><img src="~/Images/svgIcons/kindle.svg" class="svg-icon-style" /> Stock Count</a></li>
                                        <li><a href="/Software/JournalVoucher"><img src="~/Images/svgIcons/rules.svg" class="svg-icon-style" /> Journal Voucher</a></li>
                                    </ul>
                                </li>
                                <li class="dropdown">
                                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                        System <b class="caret pull-right" style="margin-top: 7px;"></b>
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li><a href="/Software/Company"><img src="~/Images/svgIcons/organization.svg" class="svg-icon-style" /> Company</a></li>
                                        <li><a href="/Software/Users"><img src="~/Images/svgIcons/key.svg" class="svg-icon-style" /> User</a></li>
                                        <li><a href="/Software/SystemTables"><img src="~/Images/svgIcons/grid.svg" class="svg-icon-style" /> System Tables</a></li>
                                    </ul>
                                </li>
                                <li class="dropdown">
                                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                                        Report <b class="caret pull-right" style="margin-top: 7px;"></b>
                                    </a>
                                    <ul class="dropdown-menu">
                                        <li><a href="/Software/AccountsPayable"><img src="~/Images/svgIcons/print.svg" class="svg-icon-style" /> Accounts Payable</a></li>
                                        <li><a href="/Software/AccountsReceivable"><img src="~/Images/svgIcons/print.svg" class="svg-icon-style" /> Accounts Receivable</a></li>
                                        <li><a href="/Software/InventoryReport"><img src="~/Images/svgIcons/print.svg" class="svg-icon-style" /> Inventory Report</a></li>
                                        <li><a href="/Software/FinancialStatements"><img src="~/Images/svgIcons/print.svg" class="svg-icon-style" /> Financial Statements</a></li>
                                        <li><a href="/Software/BankReconciliation"><img src="~/Images/svgIcons/print.svg" class="svg-icon-style" /> Bank Reconciliation</a></li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </div>
                </nav>
            </div>
            <div class="col-sm-9 col-lg-10 no-padding">
                <div class="header-content">
                    <img src="~/Images/svgIcons/businessman.svg" class="svg-icon-style-header" />
                    <h4>
                        Supplier Detail <small>Edit Detail Page</small>
                    </h4>
                </div>
                <div id="content">
                    <!-- web content -->
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <table style="width: 100%" border="0">
                                <tr>
                                    <td style="width: 100%" align="right">
                                        <button class="btn btn-primary" id="btnSupplierLock" onclick="btnSupplierLockOnclick()"><i class="fa fa-lock"></i> Lock</button>
                                        <button class="btn btn-primary" id="btnSupplierUnlock" onclick="btnSupplierUnlockOnclick()"><i class="fa fa-unlock"></i> Unlock</button>
                                        <button class="btn btn-danger" id="btnSupplierClose" onclick="btnSupplierCloseOnclick()"><i class=" fa fa-times"></i> Close</button>
                                    </td>
                                </tr>
                            </table>
                        </div>
                        <div class="panel-body">
                            <div class="">
                                <form class="form-horizontal" role="form">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Code</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control requiredSupplier" id="inpSupplierCode" placeholder="Code" disabled />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Supplier</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control  requiredSupplier" id="inpSupplier" placeholder="Supplier" />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Supplier Group</label>
                                                <div class="col-sm-8">
                                                    <div class="" id="cboSupplierGroup"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Account</label>
                                                <div class="col-sm-8">
                                                    <table style="width: 100%" border="0">
                                                        <tr>
                                                            <td style="width: 30%">
                                                                <div class="" id="cboSupplierAccountCode"></div>
                                                            </td>
                                                            <td style="width: 1%"></td>
                                                            <td style="width: 69%">
                                                                <div class="" id="cboSupplierAccount"></div>
                                                            </td>
                                                        </tr>
                                                    </table>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Term</label>
                                                <div class="col-sm-8">
                                                    <div class="" id="cboSupplierTerm"></div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Address</label>
                                                <div class="col-sm-8">
                                                    <textarea rows="5" class="form-control textarea-custom requiredSupplier" id="inpSupplierAddress" placeholder="Address"></textarea>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Contact Number</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control requiredSupplier" id="inpSupplierContactNo" placeholder="Contact No." />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Contact Person</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control  requiredSupplier" id="inpSupplierContactPerson" placeholder="Contact Person" />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">TIN</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control requiredSupplier" id="inpSupplierTIN" placeholder="TIN Number" />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">Particulars</label>
                                                <div class="col-sm-8">
                                                    <textarea rows="5" class="form-control textarea-custom requiredsupplier" id="inpSupplierParticulars" placeholder="Particulars"></textarea>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label class="control-label col-sm-4">E-mail</label>
                                                <div class="col-sm-8">
                                                    <input type="text" class="form-control requiredSupplier" id="inpSupplierEmail" placeholder="E-mail Address" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <!-- supplier lines -->
                    <ul class="nav nav-tabs" role="tablist" id="myTab">
                        <li role="presentation" class="active"><a data-toggle="tab" href="#journalLedger" id="journalLedgerTab">Journal Ledger</a></li>
                        <li role="presentation"><a data-toggle="tab" href="#contactInformation" id="contactInformationTab">More Contact Information</a></li>
                    </ul>
                    <br />
                    <div class="tab-content">
                        <div id="journalLedger" class="tab-pane fade in active">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    Journal Ledger
                                </div>
                                <div class="panel-body">
                                    <div id="journalLedgerFlexGrid"></div>
                                </div>
                            </div>
                        </div>
                        <div id="contactInformation" class="tab-pane fade in">
                            <div class="panel panel-default">
                                <div class="panel-heading" align="right">
                                    <button class="btn btn-primary" id="btnAddMorecontactInformation" onclick="btnAddMorecontactInformationOnclick()"><i class="fa fa-plus"></i> Add</button>
                                </div>
                                <div class="panel-body">
                                    <div id="contactInformationFlexGrid"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- security stamp -->
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <i class="fa fa-key fa-fw"></i> User security stamp
                        </div>
                        <div class="panel-body user-stamp-styles">
                            <div class="row">
                                <div class="col-md-6">
                                    <p>Created by:</p>
                                    <div style="padding-left: 10px;">
                                        <i class="fa fa-key fa-fw"></i> &nbsp; <label id="supplierCreatedBy"> Please select a record.</label>
                                        <br />
                                        <small><i class="fa fa-calendar fa-fw"></i> &nbsp; &nbsp; <span id="supplierCreatedDate">Please select a record.</span></small>
                                    </div>
                                    <br />
                                </div>
                                <div class="col-md-6">
                                    <p>Updated by:</p>
                                    <div style="padding-left: 10px;">
                                        <i class="fa fa-key fa-fw"></i> &nbsp; <label id="supplierUpdatedBy">Please select a record.</label>
                                        <br />
                                        <small><i class="fa fa-calendar fa-fw"></i> &nbsp; &nbsp; <span id="supplierUpdatedDate">Please select a record.</span></small>
                                    </div>
                                    <br />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- contact information modal -->
    <div class="modal fade" id="contactInformationModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Contact Information</h4>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="contact_Id" />
                    <form class="form-horizontal" role="form">
                        <div class="form-group">
                            <label class="control-label col-sm-4">Contact Person</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control  requiredContact" id="contact_contactPerson" placeholder="Contact Person" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Contact Number</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control  requiredContact" id="contact_contactNumber" placeholder="Contact Number" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="control-label col-sm-4">Remarks</label>
                            <div class="col-sm-8">
                                <input type="text" class="form-control  requiredContact" id="contact_Remarks" placeholder="Remarks" />
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button id="btnSaveContactInformation" class="btn btn-primary" onclick="btnSaveContactInformationOnclick()"><i class="fa fa-save"></i> Save</button>
                    <button id="btnCloseContactInformationModal" class="btn btn-danger" data-dismiss="modal"><i class="fa fa-close"></i> Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- contact information confirmation delete -->
    <div class="modal fade" id="deleteContactInformationConfirmModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Delete<i class="fa fa-trash"></i></h4>
                </div>
                <div class="modal-body">
                    Delete Contact?
                </div>
                <div class="modal-footer">
                    <button id="btnConfirmDeleteContactInformation" class="btn btn-danger" onclick="btnDeleteContactInformationOnclick()"><i class="fa fa-trash"></i> Delete</button>
                    <button id="btnCloseDeleteContactInformationModal" class="btn btn-primary" data-dismiss="modal"><i class="fa fa-close"></i> Cancel</button>
                </div>
            </div>
        </div>
    </div>

    @Scripts.Render("~/Scripts/Software-js")
    <script type="text/javascript">
        // global variables
        var supplierId = getParam('id');
        var islocked = false;

        // combo box wijmo
        var cboSupplierGroup = new wijmo.input.ComboBox('#cboSupplierGroup');
        var cboSupplierAccountCode = new wijmo.input.ComboBox('#cboSupplierAccountCode');
        var cboSupplierAccount = new wijmo.input.ComboBox('#cboSupplierAccount');
        var cboSupplierTerm = new wijmo.input.ComboBox('#cboSupplierTerm');

        var suppliers;
        var articleSupplierGroups;
        var accounts;
        var terms;

        // get url parameter value
        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);
            if (results == null) {
                return "";
            } else {
                return results[1];
            }
        }

        // get supplier detail
        function getSupplierDetail() {
            if (document.location.search.length > 0) {
                NProgress.start();

                // get user rights for enabling and disabling buttons
                $.ajax({
                    url: '/api/user/rights/SupplierDetail',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    success: function (userRightsResults) {
                        if (userRightsResults != null) {
                            var canAdd = userRightsResults.CanAdd;
                            var canEdit = userRightsResults.CanEdit;
                            var canDelete = userRightsResults.CanDelete;
                            var canLock = userRightsResults.CanLock;
                            var canUnlock = userRightsResults.CanUnlock;
                            var canPrint = userRightsResults.CanPrint;

                            // supplier detail data
                            $.ajax({
                                url: '/api/supplier/detail/' + supplierId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (supplierResults) {
                                    if (supplierResults != null) {
                                        document.getElementById('inpSupplierCode').value = supplierResults.ArticleCode;
                                        document.getElementById('inpSupplier').value = supplierResults.Article;
                                        document.getElementById('inpSupplierAddress').value = supplierResults.Address;
                                        document.getElementById('inpSupplierParticulars').value = supplierResults.Particulars;
                                        document.getElementById('inpSupplierTIN').value = supplierResults.TaxNumber;
                                        document.getElementById('inpSupplierContactNo').value = supplierResults.ContactNumber;
                                        document.getElementById('inpSupplierContactPerson').value = supplierResults.ContactPerson;
                                        document.getElementById('inpSupplierEmail').value = supplierResults.EmailAddress;
                                        document.getElementById('supplierCreatedBy').innerHTML = supplierResults.CreatedBy;
                                        document.getElementById('supplierCreatedDate').innerHTML = supplierResults.CreatedDateTime;
                                        document.getElementById('supplierUpdatedBy').innerHTML = supplierResults.UpdatedBy;
                                        document.getElementById('supplierUpdatedDate').innerHTML = supplierResults.UpdatedDateTime;

                                        cboSupplierGroup.dispose();
                                        cboSupplierGroup = new wijmo.input.ComboBox('#cboSupplierGroup', {
                                            isEditable: false,
                                            placeholder: "Supplier Group",
                                            itemsSource: supplierResults.ArticleGroupList,
                                            displayMemberPath: "ArticleGroup",
                                            selectedValuePath: "Id",
                                            selectedValue: supplierResults.ArticleGroupId.toString(),
                                            onSelectedIndexChanged: function () {
                                                cboSupplierAccountCode.selectedValue = this.selectedItem["AccountId"];
                                                cboSupplierAccount.selectedValue = this.selectedItem["AccountId"];
                                            }
                                        });

                                        cboSupplierAccountCode.dispose();
                                        cboSupplierAccountCode = new wijmo.input.ComboBox('#cboSupplierAccountCode', {
                                            disabled: true,
                                            isEditable: false,
                                            placeholder: "Account Code",
                                            itemsSource: supplierResults.AccountList,
                                            displayMemberPath: "AccountCode",
                                            selectedValuePath: "Id",
                                            selectedValue: supplierResults.AccountId.toString(),
                                            onSelectedIndexChanged: function () {
                                                cboSupplierAccount.selectedValue = this.selectedItem["Id"];
                                            }
                                        });

                                        cboSupplierAccount.dispose();
                                        cboSupplierAccount = new wijmo.input.ComboBox('#cboSupplierAccount', {
                                            disabled: true,
                                            isEditable: false,
                                            placeholder: "Account",
                                            itemsSource: supplierResults.AccountList,
                                            displayMemberPath: "Account",
                                            selectedValuePath: "Id",
                                            selectedValue: supplierResults.AccountId.toString(),
                                            onSelectedIndexChanged: function () {
                                                cboSupplierAccountCode.selectedValue = this.selectedItem["Id"];
                                            }
                                        });

                                        cboSupplierTerm.dispose();
                                        cboSupplierTerm = new wijmo.input.ComboBox('#cboSupplierTerm', {
                                            isEditable: false,
                                            placeholder: "Term",
                                            itemsSource: supplierResults.TermList,
                                            displayMemberPath: "Term",
                                            selectedValuePath: "Id",
                                            selectedValue: supplierResults.TermId.toString()
                                        });

                                        if (supplierResults.IsLocked) {
                                            document.getElementById('inpSupplier').disabled = true;
                                            document.getElementById('inpSupplierAddress').disabled = true;
                                            document.getElementById('inpSupplierParticulars').disabled = true;
                                            document.getElementById('inpSupplierTIN').disabled = true;
                                            document.getElementById('inpSupplierContactNo').disabled = true;
                                            document.getElementById('inpSupplierContactPerson').disabled = true;
                                            document.getElementById('inpSupplierEmail').disabled = true;
                                            $('#btnSupplierLock').prop('disabled', true);
                                            $('#btnAddMorecontactInformation').prop('disabled', true);

                                            cboSupplierGroup.disabled = true;
                                            cboSupplierTerm.disabled = true;

                                            if (!canUnlock) {
                                                $('#btnSupplierUnlock').prop('disabled', true);
                                            }
                                        } else {
                                            $('#btnSupplierUnlock').prop('disabled', true);

                                            if (!canLock) {
                                                $('#btnSupplierLock').prop('disabled', true);
                                            }

                                            if (!canAdd) {
                                                $('#btnAddMorecontactInformation').prop('disabled', true);
                                            }
                                        }

                                        journalLedgerTab();

                                        NProgress.done();
                                    } else {
                                        confirm("No Data");
                                        window.location = '/Software/Supplier';
                                    }
                                }
                            });
                        }
                    }
                });
            } else {
                confirm("Invalid URL");
                window.location = '/Software/Supplier';
            }
        }

        // =================
        // IsLocked Disabled
        // =================
        function isLockedDisabledDropdown(items) {
            var disabled;
            if (items == 0) {
                disabled = true;
            } else {
                if (islocked == true) {
                    disabled = true;
                } else {
                    disabled = false;
                }
            }
            return disabled;
        }

        // =========================
        // Get Artile Supplier Group
        // =========================
        function getArticleSupplierGroupForComboBox() {
            articleSupplierGroups = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listArticleGroupByArticleTypeId/3',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (articleSupplierGroupResults) {
                    if (articleSupplierGroupResults.length > 0) {
                        for (i = 0; i < articleSupplierGroupResults.length; i++) {
                            articleSupplierGroups.push({
                                ArticleGroupId: articleSupplierGroupResults[i]["Id"],
                                ArticleGroup: articleSupplierGroupResults[i]["ArticleGroup"],
                                AccountId: articleSupplierGroupResults[i]["AccountId"],
                                AccountCode: articleSupplierGroupResults[i]["AccountCode"],
                                Account: articleSupplierGroupResults[i]["Account"],
                                SalesAccountId: articleSupplierGroupResults[i]["SalesAccountId"],
                                SalesAccount: articleSupplierGroupResults[i]["SalesAccount"],
                                CostAccountId: articleSupplierGroupResults[i]["CostAccountId"],
                                CostAccount: articleSupplierGroupResults[i]["CostAccount"],
                                AssetAccountId: articleSupplierGroupResults[i]["AssetAccountId"],
                                AssetAccount: articleSupplierGroupResults[i]["AssetAccount"],
                                ExpenseAccountId: articleSupplierGroupResults[i]["ExpenseAccountId"],
                                ExpenseAccount: articleSupplierGroupResults[i]["ExpenseAccount"]
                            });
                        }
                        createCboForArticleSupplierGroup(articleSupplierGroups);
                        getArticleAccountForComboBox();
                    } else {
                        createCboForArticleSupplierGroup(articleSupplierGroups);
                        getArticleAccountForComboBox();
                    }
                }
            });
        }

        // ======================
        // CBO for Supplier Group
        // ======================
        function createCboForArticleSupplierGroup(articleSupplierGroups) {
            cboSupplierGroup.dispose();
            cboSupplierGroup = new wijmo.input.ComboBox('#cboSupplierGroup', {
                placeholder: "Supplier Group",
                itemsSource: articleSupplierGroups,
                displayMemberPath: "ArticleGroup",
                isEditable: false,
                selectedValuePath: "ArticleGroup",
                selectedValue: supplierGroupSelectedValue.toString(),
                onSelectedIndexChanged: function () {
                    getArticleAccountForComboBox();
                }
            });
        }

        // ==================
        // Get Artile Account
        // ==================
        function getArticleAccountForComboBox() {
            accounts = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listAccount',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (accountResults) {
                    if (accountResults.length > 0) {
                        for (i = 0; i < accountResults.length; i++) {
                            accounts.push({
                                AccountId: accountResults[i]["Id"],
                                AccountCode: accountResults[i]["AccountCode"],
                                Account: accountResults[i]["Account"]
                            });
                        }
                        createCboForAccountCode(accounts);
                        createCboForAccount(accounts);

                        $('#journalLedger').show();
                        $('#contactInformation').hide();
                        journalLedgerTab();


                    } else {
                        createCboForAccountCode(accounts);
                        createCboForAccount(accounts);
                    }
                }
            });
        }

        // ====================
        // CBO for Account Code
        // ====================
        function createCboForAccountCode(accounts) {
            cboSupplierAccountCode.dispose();
            cboSupplierAccountCode = new wijmo.input.ComboBox('#cboSupplierAccountCode', {
                disabled: true,
                placeholder: "Account Code",
                itemsSource: accounts,
                displayMemberPath: "AccountCode",
                isEditable: false,
                selectedValuePath: "AccountCode",
                selectedValue: cboSupplierGroup.selectedItem["AccountCode"].toString(),
            });
        }

        // ===============
        // CBO for Account
        // ===============
        function createCboForAccount(accounts) {
            cboSupplierAccount.dispose();
            cboSupplierAccount = new wijmo.input.ComboBox('#cboSupplierAccount', {
                disabled: true,
                placeholder: "Account",
                itemsSource: accounts,
                displayMemberPath: "Account",
                isEditable: false,
                selectedValuePath: "Account",
                selectedValue: cboSupplierGroup.selectedItem["Account"].toString(),
            });
        }

        // ===============
        // Get Artile Term
        // ===============
        function getArticleTermForComboBox() {
            terms = new wijmo.collections.ObservableArray();
            $.ajax({
                url: '/api/listTerm',
                cache: false,
                type: 'GET',
                contentType: 'application/json; charset=utf-8',
                data: {},
                success: function (termResults) {
                    if (termResults.length > 0) {
                        for (i = 0; i < termResults.length; i++) {
                            terms.push({
                                TermId: termResults[i]["Id"],
                                Term: termResults[i]["Term"]
                            });
                        }
                        createCboForTerm(terms);
                    } else {
                        createCboForTerm(terms);
                    }
                }
            });
        }

        // ============
        // CBO for Term
        // ============
        function createCboForTerm(terms) {
            cboSupplierTerm.dispose();
            cboSupplierTerm = new wijmo.input.ComboBox('#cboSupplierTerm', {
                placeholder: "Term",
                itemsSource: terms,
                displayMemberPath: "Term",
                isEditable: false,
                selectedValuePath: "Term",
                selectedValue: termSelectedValue.toString()
            });
        }

        // =========================
        // Supplier Entry Validation
        // =========================
        function supplierEntryValidation() {
            var isValid = true;
            $('.requiredSupplier').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": "",
                    });
                }
            });
            return isValid;
        }

        // ===================================
        // Supplier drop down field validation
        // ===================================
        function dropdownValidation() {
            if (cboSupplierGroup.selectedItem["ArticleGroup"].toString() == '') {
                document.getElementById("cboSupplierGroup").style.border = "1px solid red";
            } else {
                document.getElementById("cboSupplierGroup").style.border = "1px solid #C8C8C8   ";
            }

            if (cboSupplierGroup.selectedItem["Account"].toString() == '') {
                document.getElementById("cboSupplierAccount").style.border = "1px solid red";
            } else {
                document.getElementById("cboSupplierAccount").style.border = "1px solid #C8C8C8   ";
            }

            if (cboSupplierTerm.selectedItem["Term"].toString() == '') {
                document.getElementById("cboSupplierTerm").style.border = "1px solid red";
            } else {
                document.getElementById("cboSupplierTerm").style.border = "1px solid #C8C8C8   ";
            }
        }

        // ====================
        // Data Supplier Object
        // ====================
        function dataSupplierObject() {
            var supplierObject = new Object();
            supplierObject.ArticleCode = document.getElementById('inpSupplierCode').value;
            supplierObject.Article = document.getElementById('inpSupplier').value;
            supplierObject.ArticleGroupId = cboSupplierGroup.selectedItem["ArticleGroupId"];
            supplierObject.AccountId = cboSupplierAccount.selectedItem["AccountId"];
            supplierObject.SalesAccountId = cboSupplierGroup.selectedItem["SalesAccountId"];
            supplierObject.CostAccountId = cboSupplierGroup.selectedItem["CostAccountId"];
            supplierObject.AssetAccountId = cboSupplierGroup.selectedItem["AssetAccountId"];
            supplierObject.ExpenseAccountId = cboSupplierGroup.selectedItem["ExpenseAccountId"];
            supplierObject.TermId = cboSupplierTerm.selectedItem["TermId"];
            supplierObject.Address = document.getElementById('inpSupplierAddress').value;
            supplierObject.ContactNumber = document.getElementById('inpSupplierContactNo').value;
            supplierObject.ContactPerson = document.getElementById('inpSupplierContactPerson').value;
            supplierObject.TaxNumber = document.getElementById('inpSupplierTIN').value;
            supplierObject.Particulars = document.getElementById('inpSupplierParticulars').value;
            supplierObject.EmailAddress = document.getElementById('inpSupplierEmail').value;
            var supplierData = JSON.stringify(supplierObject);
            return supplierData;
        }
        
        function btnSupplierLockOnclick() {
            dropdownValidation();
            if (supplierEntryValidation() == false) {
                toastr.error("Invalid Entry");
            } else {
                document.getElementById('btnSupplierLock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Locking";
                $('#btnSupplierLock').prop('disabled', true);
                $('#btnSupplierUnlock').prop('disabled', true);
                $('#btnSupplierClose').prop('disabled', true);

                $.ajax({
                    type: "PUT",
                    url: '/api/updateArticle/' + supplierId + '/3',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: dataSupplierObject(),
                    statusCode: {
                        200: function () {
                            toastr.success("Lock Successful");
                            window.setTimeout(function () {
                                location.reload()
                            }, 1000);
                        },
                        404: function () {
                            toastr.error("Not Found");
                            $('#btnSupplierClose').prop('disabled', false);
                        },
                        400: function () {
                            toastr.error("Bad Request");
                            $('#btnSupplierClose').prop('disabled', false);
                        }
                    }
                });
            }
        }

        // ======================
        // Unlock Supplier Button
        // ======================
        function btnSupplierUnlockOnclick() {
            document.getElementById('btnSupplierUnlock').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Unlocking";
            $('#btnSupplierLock').prop('disabled', true);
            $('#btnSupplierUnlock').prop('disabled', true);
            $('#btnSupplierClose').prop('disabled', true);

            $.ajax({
                type: "PUT",
                url: '/api/unlockArticle/' + supplierId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: {},
                statusCode: {
                    200: function () {
                        toastr.success("Unlock Successful");
                        window.setTimeout(function () {
                            location.reload()
                        }, 1000);
                    },
                    404: function () {
                        $('#btnSupplierClose').prop('disabled', false);
                        toastr.error("Not Found");
                    },
                    400: function () {
                        $('#btnSupplierClose').prop('disabled', false);
                        toastr.error("Bad Request");
                    }
                }
            });
        }

        // =====================
        // Close Supplier Button
        // =====================
        function btnSupplierCloseOnclick() {
            window.location = '/Software/Supplier';
        }

        // ========================================================
        // Function with leading zeroes to display the article code
        // ========================================================
        function zerofill(number, length) {
            var result = number.toString();
            var pad = length - result.length;
            while (pad > 0) {
                result = '0' + result;
                pad--;
            }
            return result;
        }

        // =========================
        // Get the last Article Code
        // =========================
        function getLastArticleCode() {
            document.getElementById('inpSupplierCode').disabled = true;
            if (document.location.search.length == 0) {
                $.ajax({
                    url: '/api/articleLastArticleCodeByArticleTypeId/3',
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (lastArticleCodeResults) {
                        if (lastArticleCodeResults != null) {
                            var articleCode = parseInt(lastArticleCodeResults.ArticleCode);
                            var articleCodeResults = articleCode + 0000000001;
                            document.getElementById('inpSupplierCode').value = zerofill(articleCodeResults, 10);
                        } else {
                            document.getElementById('inpSupplierCode').value = "0000000001";
                        }
                    }
                });

                //$('#supplier_SaveButton').prop('disabled', false);
                $('#btnSupplierLock').prop('disabled', true);
                $('#btnSupplierUnlock').prop('disabled', true);
                $('#btnSupplierClose').prop('disabled', false);
            }
        }

        // ============
        // On Page Load
        // ============
        $(document).ready(function () {

            // function
            getSupplierDetail();

            if (document.location.search.length == 0) {
                //$('#supplier_SaveButton').show();
                $('#btnSupplierLock').hide();
                $('#btnSupplierUnlock').hide();
                $('#btnAddMorecontactInformation').prop('disabled', true);


            } else {
                //$('#supplier_SaveButton').hide();
                $('#btnSupplierLock').show();
                $('#btnSupplierUnlock').show();
            }
        });
    </script>

    <!-- ====================== -->
    <!-- Journal Ledger Scripts -->
    <!-- ====================== -->
    <script type="text/javascript">
        // ===================================
        // Global Variables for Journal Ledger
        // ===================================
        var journalLedgerCollectionView;
        var journalLedgerFlexGrid;

        // =======================
        // GET Journal Ledger List
        // =======================
        function getjournalLedger() {
            var journalLedgers = new wijmo.collections.ObservableArray;
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/journal/list/journalLedger/byAccountId/' + cboSupplierAccount.selectedValue + '/byArticleId/' + supplierId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (Results) {
                        if (Results.length > 0) {
                            for (i = 0; i < Results.length; i++) {
                                journalLedgers.push({
                                    Id: Results[i]["Id"],
                                    JournalDate: Results[i]["JournalDate"],
                                    BranchId: Results[i]["BranchId"],
                                    Branch: Results[i]["Branch"],
                                    AccountId: Results[i]["AccountId"],
                                    AccountCode: Results[i]["AccountCode"],
                                    Account: Results[i]["Account"],
                                    ArticleId: Results[i]["ArticleId"],
                                    Article: Results[i]["Article"],
                                    Particulars: Results[i]["Particulars"],
                                    DebitAmount: Results[i]["DebitAmount"],
                                    CreditAmount: Results[i]["CreditAmount"],
                                    ORId: Results[i]["ORId"],
                                    CVId: Results[i]["CVId"],
                                    JVId: Results[i]["JVId"],
                                    RRId: Results[i]["RRId"],
                                    SIId: Results[i]["SIId"],
                                    INId: Results[i]["INId"],
                                    OTId: Results[i]["OTId"],
                                    STId: Results[i]["STId"],
                                    DocumentReference: Results[i]["DocumentReference"],
                                    APRRId: Results[i]["APRRId"],
                                    ARSIId: Results[i]["ARSIId"]
                                });
                            }
                        }

                        NProgress.done();
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            }
            return journalLedgers;
        }

        // ===============
        //  Journal Ledger
        // ===============
        function journalLedgerTab() {
            journalLedgerCollectionView = new wijmo.collections.CollectionView(getjournalLedger());

            // Flex Grid for Journal Ledger
            journalLedgerFlexGrid = new wijmo.grid.FlexGrid('#journalLedgerFlexGrid');
            journalLedgerFlexGrid.initialize({
                columns: [
                    {
                        "header": "Document Reference",
                        "binding": "DocumentReference",
                        "allowSorting": true,
                        "width": 300,
                    },
                    {
                        "header": "Date",
                        "binding": "JournalDate",
                        "allowSorting": true,
                        "width": 120,
                    },
                    {
                        "header": "Particulars",
                        "binding": "Particulars",
                        "allowSorting": true,
                        "width": 320,
                    },
                    {
                        "header": "Debit",
                        "binding": "DebitAmount",
                        "allowSorting": true,
                        "width": 170,
                    },
                    {
                        "header": "Credit",
                        "binding": "CreditAmount",
                        "allowSorting": true,
                        "width": 170,
                    }
                ],
                autoGenerateColumns: false,
                itemsSource: journalLedgerCollectionView,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });

            journalLedgerFlexGrid.trackChanges = true;
        }
    </script>

    <!-- =========================== -->
    <!-- Contact Information Scripts -->
    <!-- =========================== -->
    <script type="text/javascript">
        // ========================================
        // Global Variables for Contact Information
        // ========================================
        var contactInformations;
        var contactInformationFlexGrid;

        // ============================
        // GET Contact Information List
        // ============================
        function getcontactInformation() {
            var contactInformations = new wijmo.collections.ObservableArray;
            NProgress.start();
            if (document.location.search.length > 0) {
                $.ajax({
                    url: '/api/listArticleContactByArticleId/' + supplierId,
                    cache: false,
                    type: 'GET',
                    contentType: 'application/json; charset=utf-8',
                    data: {},
                    success: function (contactInformationResults) {
                        if (contactInformationResults.length > 0) {
                            $.ajax({
                                url: '/api/article/' + supplierId,
                                cache: false,
                                type: 'GET',
                                contentType: 'application/json; charset=utf-8',
                                data: {},
                                success: function (supplierResults) {

                                    var canEdit = "@ViewData["CanEdit"]";
                                    var editDisabled = "disabled";

                                    if (canEdit == "True") {
                                        editDisabled = "";
                                    } else if (canEdit == "False") {
                                        editDisabled = "disabled";
                                    } else {
                                        editDisabled = "disabled";
                                    }

                                    var canDelete = "@ViewData["CanDelete"]";
                                    var deleteDisabled = "disabled";

                                    if (canDelete == "True") {
                                        deleteDisabled = "";
                                    } else if (canDelete == "False") {
                                        deleteDisabled = "disabled";
                                    } else {
                                        deleteDisabled = "disabled";
                                    }

                                    var btnEditId;
                                    var btnDeleteId;
                                    if (supplierResults.IsLocked == true) {
                                        btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditContact_OnClick()' disabled><i class='fa fa-edit'></i> Edit</button>";
                                        btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteContact_OnClick()' disabled><i class='fa fa-trash'></i> Delete</button>";
                                    } else {
                                        btnEditId = "<button class='btn btn-primary btn-xs btn-block' onclick='btnEditContact_OnClick()' " + editDisabled + "><i class='fa fa-edit'></i> Edit</button>";
                                        btnDeleteId = "<button class='btn btn-danger btn-xs btn-block' onclick='btnDeleteContact_OnClick()'" + deleteDisabled + "><i class='fa fa-trash'></i> Delete</button>";
                                    }

                                    for (i = 0; i < contactInformationResults.length; i++) {
                                        contactInformations.push({
                                            EditId: btnEditId,
                                            DeleteId: btnDeleteId,
                                            Id: contactInformationResults[i]["Id"],
                                            ArticleId: contactInformationResults[i]["ArticleId"],
                                            Article: contactInformationResults[i]["Article"],
                                            ContactPerson: contactInformationResults[i]["ContactPerson"],
                                            ContactNumber: contactInformationResults[i]["ContactNumber"],
                                            Remarks: contactInformationResults[i]["Remarks"]
                                        });
                                    }
                                }
                            });
                        }
                        NProgress.done();
                    }
                }).fail(function (xhr, textStatus, err) {
                    alert(err);
                });
            } else {
                NProgress.done();
            }
            return contactInformations;
        }

        // ===========
        // ADD Contact
        // ===========
        function btnAddMorecontactInformationOnclick() {
            $('#contactInformationModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            document.getElementById('btnSaveContactInformation').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#btnSaveContactInformation').prop('disabled', false);
            $('#btnCloseContactInformationModal').prop('disabled', false);

            document.getElementById('contact_Id').value = 0;
            document.getElementById('contact_contactPerson').value = "NA";
            document.getElementById('contact_contactNumber').value = "NA";
            document.getElementById('contact_Remarks').value = "NA";
        }

        // ===========
        // Edit Button
        // ===========
        function btnEditContact_OnClick() {
            $('#contactInformationModal').modal({
                show: true,
                backdrop: 'static'
            });

            $('.requiredContact').each(function () {
                $(this).css({
                    "border": ""
                });
            });

            document.getElementById('btnSaveContactInformation').innerHTML = "<i class='fa fa-save'></i> Save";
            $('#btnSaveContactInformation').prop('disabled', false);
            $('#btnCloseContactInformationModal').prop('disabled', false);

            contactInformations.editItem(contactInformations.currentItem);
            var contactInformation = contactInformations.currentEditItem;
            document.getElementById('contact_Id').value = contactInformation.Id;
            document.getElementById('contact_contactPerson').value = contactInformation.ContactPerson;
            document.getElementById('contact_contactNumber').value = contactInformation.ContactNumber;
            document.getElementById('contact_Remarks').value = contactInformation.Remarks;
        }

        // =========================================
        // Refresh more contact information flexgrid
        // =========================================
        function refreshMorecontactInformation() {
            contactInformations = new wijmo.collections.CollectionView(getcontactInformation());

            // Flex Grid for Contact Information
            contactInformationFlexGrid.trackChanges = true;
            contactInformationFlexGrid.itemsSource = contactInformations;
        }

        // ====================================
        // Contact Information Entry Validation
        // ====================================
        function contactInformationEntryValidation() {
            var isValid = true;
            $('.requiredContact').each(function () {
                if ($.trim($(this).val()) == '') {
                    isValid = false;
                    $(this).css({
                        "border": "1px solid red"
                    });
                } else {
                    $(this).css({
                        "border": ""
                    });
                }
            });
            return isValid;
        }

        // ============
        // SAVE Contact
        // ============
        function btnSaveContactInformationOnclick() {
            var contactObject = new Object();
            var contactId = document.getElementById('contact_Id').value;
            contactObject.ContactPerson = document.getElementById('contact_contactPerson').value;
            contactObject.ContactNumber = document.getElementById('contact_contactNumber').value;
            contactObject.Remarks = document.getElementById('contact_Remarks').value;
            var contactData = JSON.stringify(contactObject);

            if (contactInformationEntryValidation() == false) {
                toastr.error("Invalid Entry");
            } else {
                document.getElementById('btnSaveContactInformation').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Saving";
                $('#btnSaveContactInformation').prop('disabled', true);
                $('#btnCloseContactInformationModal').prop('disabled', true);

                if (contactId == 0) {
                    $.ajax({
                        type: "POST",
                        url: '/api/addArticleContact/' + supplierId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        success: function (id) {
                            if (id > 0) {
                                toastr.success("Save Successful");
                                $('#contactInformationModal').modal('hide');
                                refreshMorecontactInformation();
                            } else {
                                toastr.error("Internal Server Error");
                                $('#contactInformationModal').modal('hide');
                            }
                        }
                    });
                } else {
                    $.ajax({
                        type: "PUT",
                        url: '/api/updateArticleContact/' + contactId,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: contactData,
                        statusCode: {
                            200: function () {
                                toastr.success("Update Successful");
                                $('#contactInformationModal').modal('hide');
                                refreshMorecontactInformation();
                            },
                            404: function () {
                                toastr.error("Not Found");
                                $('#contactInformationModal').modal('hide');
                            },
                            400: function () {
                                toastr.error("Bad Request");
                                $('#contactInformationModal').modal('hide');
                            }
                        }
                    });
                }
            }
        }

        // ==============
        // DELETE Contact
        // ==============
        function btnDeleteContact_OnClick() {
            $('#deleteContactInformationConfirmModal').modal({
                show: true,
                backdrop: 'static'
            });

            document.getElementById('btnConfirmDeleteContactInformation').innerHTML = "<i class='fa fa-trash'></i> Delete";
            $('#btnConfirmDeleteContactInformation').prop('disabled', false);
            $('#btnCloseDeleteContactInformationModal').prop('disabled', false);
        }
        // Contact Confirm Delete
        function btnDeleteContactInformationOnclick() {
            document.getElementById('btnConfirmDeleteContactInformation').innerHTML = "<i class='fa fa-spinner fa-spin'></i> Deleting";
            $('#btnConfirmDeleteContactInformation').prop('disabled', true);
            $('#btnCloseDeleteContactInformationModal').prop('disabled', true);

            contactInformations.editItem(contactInformations.currentItem);
            var contactId = contactInformations.currentEditItem.Id;
            $.ajax({
                url: '/api/deleteArticleContact/' + contactId,
                type: "DELETE",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                statusCode: {
                    200: function () {
                        toastr.success("Delete Successful");
                        $('#deleteContactInformationConfirmModal').modal('hide');
                        refreshMorecontactInformation();
                    },
                    404: function () {
                        toastr.error("Not Found");
                        $('#deleteContactInformationConfirmModal').modal('hide');
                    },
                    400: function () {
                        toastr.error("Bad Request");
                        $('#deleteContactInformationConfirmModal').modal('hide');
                    }
                }
            });
        }

        // ====================================
        // On Page Load for Contact Information
        // ====================================
        function contactInformationTab() {
            contactInformations = new wijmo.collections.CollectionView(getcontactInformation());

            // Flex Grid for Contact Information
            contactInformationFlexGrid = new wijmo.grid.FlexGrid('#contactInformationFlexGrid');
            contactInformationFlexGrid.initialize({
                columns: [
                            {
                                "header": "Edit",
                                "binding": "EditId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Delete",
                                "binding": "DeleteId",
                                "width": 70,
                                "align": "center",
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Contact",
                                "binding": "ContactPerson",
                                "width": 320,
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Contact Number(s)",
                                "binding": "ContactNumber",
                                "width": 280,
                                "allowResizing": false,
                                "allowSorting": false,
                                "isContentHtml": true
                            },
                            {
                                "header": "Remarks",
                                "binding": "Remarks",
                                "allowSorting": true,
                                "width": 350,
                            },
                ],
                autoGenerateColumns: false,
                itemsSource: contactInformations,
                isReadOnly: true,
                autoSizeMode: wijmo.grid.AutoSizeMode.Both,
                allowDragging: wijmo.grid.AllowDragging.None,
                selectionMode: wijmo.grid.SelectionMode.Row
            });
            contactInformationFlexGrid.trackChanges = true;
        }
    </script>

    <!-- ================================ -->
    <!-- Tab Current Page on Load Scripts -->
    <!-- ================================ -->
    <script type="text/javascript">
        // ====
        // TABS
        // ====
        $('#journalLedgerTab').click(function () {
            $('#journalLedger').show();
            $('#contactInformation').hide();
            window.journalLedgerTab = function () {
                return true;
            };

            NProgress.start();

            journalLedgerCollectionView = new wijmo.collections.CollectionView(getjournalLedger());

            journalLedgerFlexGrid.itemsSource = journalLedgerCollectionView;
            journalLedgerFlexGrid.trackChanges = true;
        });

        $('#contactInformationTab').click(function () {
            $('#journalLedger').hide();
            $('#contactInformation').show();
            contactInformationTab();
            window.contactInformationTab = function () {
                return true;
            };

            contactInformations = new wijmo.collections.CollectionView(getcontactInformation());

            contactInformationFlexGrid.itemsSource = contactInformations;
            contactInformationFlexGrid.trackChanges = true;
        });

        function refreshGrids() {
            setTimeout(function () {
                journalLedgerCollectionView.refresh();
                //contactInformations.refresh();
            }, 500)
        }
    </script>
</body>
</html>